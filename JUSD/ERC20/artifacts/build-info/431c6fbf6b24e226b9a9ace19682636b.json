{
	"id": "431c6fbf6b24e226b9a9ace19682636b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.11;\n\nimport \"../Common/Context.sol\";\nimport \"./IERC20.sol\";\nimport \"../Math/SafeMath.sol\";\nimport \"../Utils/Address.sol\";\n\n// Due to compiling issues, _name, _symbol, and _decimals were removed\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20Mintable}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20Custom is Context, IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) internal _balances;\n\n    mapping (address => mapping (address => uint256)) internal _allowances;\n\n    uint256 private _totalSupply;\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.approve(address spender, uint256 amount)\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20};\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for `sender`'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for `accounts`'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        uint256 decreasedAllowance = allowance(account, _msgSender()).sub(amount, \"ERC20: burn amount exceeds allowance\");\n\n        _approve(account, _msgSender(), decreasedAllowance);\n        _burn(account, amount);\n    }\n\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n     * from the caller's allowance.\n     *\n     * See {_burn} and {_approve}.\n     */\n    function _burnFrom(address account, uint256 amount) internal virtual {\n        _burn(account, amount);\n        _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"ERC20: burn amount exceeds allowance\"));\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of `from`'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of `from`'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:using-hooks.adoc[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}"
			},
			"NewFraxProtocol/contracts/Utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.11;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}"
			},
			"NewFraxProtocol/contracts/Math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.11;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     *\n     * _Available since v2.4.0._\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}"
			},
			"NewFraxProtocol/contracts/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.11;\n\nimport \"../Common/Context.sol\";\nimport \"../Math/SafeMath.sol\";\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\n * the optional functions; to access them see {ERC20Detailed}.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n"
			},
			"NewFraxProtocol/contracts/Common/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.11;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return payable(msg.sender);\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"NewFraxProtocol/contracts/Common/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NewFraxProtocol/contracts/Common/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NewFraxProtocol/contracts/Common/Context.sol\":{\"keccak256\":\"0x60d51a32063a4975dbf9433d38f5849173527da72f007c38053274e06698cb54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9ee6938d731aac55f6176c30ba4fc8456a63de57a7a2d659f43a053dfb381d3\",\"dweb:/ipfs/QmRyq4LneV4qz8uLdEhTU4YndjT365PJBPvK4btHKtmSSG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol": {
				"ERC20Custom": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20Mintable}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.approve(address spender, uint256 amount)"
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for `accounts`'s tokens of at least `amount`."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":1403:10042  contract ERC20Custom is Context, IERC20 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":1403:10042  contract ERC20Custom is Context, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2735:2901  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_3:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":1702:1800  function totalSupply() public view override returns (uint256) {... */\n    tag_4:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3359:3676  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4071:4286  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":6792:6881  function burn(uint256 amount) public virtual {... */\n    tag_7:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      stop\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":1858:1975  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_8:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7185:7475  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      stop\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4773:5039  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_10:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2178:2350  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_11:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2408:2557  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_12:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2735:2901  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_17:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2818:2822  bool */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2834:2873  _approve(_msgSender(), spender, amount) */\n      tag_59\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2843:2855  _msgSender() */\n      tag_60\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2843:2853  _msgSender */\n      tag_61\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2843:2855  _msgSender() */\n      jump\t// in\n    tag_60:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2857:2864  spender */\n      dup5\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2866:2872  amount */\n      dup5\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2834:2842  _approve */\n      tag_62\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2834:2873  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_59:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2890:2894  true */\n      0x01\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2883:2894  return true */\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2735:2901  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":1702:1800  function totalSupply() public view override returns (uint256) {... */\n    tag_21:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":1755:1762  uint256 */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":1781:1793  _totalSupply */\n      sload(0x02)\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":1774:1793  return _totalSupply */\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":1702:1800  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3359:3676  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_27:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3465:3469  bool */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3481:3517  _transfer(sender, recipient, amount) */\n      tag_65\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3491:3497  sender */\n      dup5\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3499:3508  recipient */\n      dup5\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3510:3516  amount */\n      dup5\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3481:3490  _transfer */\n      tag_66\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3481:3517  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_65:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3527:3648  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_67\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3536:3542  sender */\n      dup5\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3544:3556  _msgSender() */\n      tag_68\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3544:3554  _msgSender */\n      tag_61\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3544:3556  _msgSender() */\n      jump\t// in\n    tag_68:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3558:3647  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_69\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3596:3602  amount */\n      dup6\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3558:3647  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3558:3569  _allowances */\n      0x01\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3558:3577  _allowances[sender] */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3570:3576  sender */\n      dup12\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3558:3577  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3558:3591  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3578:3590  _msgSender() */\n      tag_70\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3578:3588  _msgSender */\n      tag_61\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3578:3590  _msgSender() */\n      jump\t// in\n    tag_70:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3558:3591  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3558:3595  _allowances[sender][_msgSender()].sub */\n      tag_71\n      swap1\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3558:3647  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_69:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3527:3535  _approve */\n      tag_62\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3527:3648  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_67:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3665:3669  true */\n      0x01\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3658:3669  return true */\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":3359:3676  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4071:4286  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_31:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4159:4163  bool */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4175:4258  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_73\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4184:4196  _msgSender() */\n      tag_74\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4184:4194  _msgSender */\n      tag_61\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4184:4196  _msgSender() */\n      jump\t// in\n    tag_74:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4198:4205  spender */\n      dup5\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4207:4257  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_75\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4246:4256  addedValue */\n      dup6\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4207:4218  _allowances */\n      0x01\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4207:4232  _allowances[_msgSender()] */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4219:4231  _msgSender() */\n      tag_76\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4219:4229  _msgSender */\n      tag_61\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4219:4231  _msgSender() */\n      jump\t// in\n    tag_76:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4207:4232  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4207:4241  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4233:4240  spender */\n      dup10\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4207:4241  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4207:4245  _allowances[_msgSender()][spender].add */\n      tag_77\n      swap1\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4207:4257  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_75:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4175:4183  _approve */\n      tag_62\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4175:4258  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_73:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4275:4279  true */\n      0x01\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4268:4279  return true */\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4071:4286  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":6792:6881  function burn(uint256 amount) public virtual {... */\n    tag_36:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":6847:6874  _burn(_msgSender(), amount) */\n      tag_79\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":6853:6865  _msgSender() */\n      tag_80\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":6853:6863  _msgSender */\n      tag_61\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":6853:6865  _msgSender() */\n      jump\t// in\n    tag_80:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":6867:6873  amount */\n      dup3\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":6847:6852  _burn */\n      tag_81\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":6847:6874  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_79:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":6792:6881  function burn(uint256 amount) public virtual {... */\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":1858:1975  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_40:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":1924:1931  uint256 */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":1950:1959  _balances */\n      dup1\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":1950:1968  _balances[account] */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":1960:1967  account */\n      dup4\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":1950:1968  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":1943:1968  return _balances[account] */\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":1858:1975  function balanceOf(address account) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7185:7475  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_44:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7261:7287  uint256 decreasedAllowance */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7290:7374  allowance(account, _msgSender()).sub(amount, \"ERC20: burn amount exceeds allowance\") */\n      tag_84\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7327:7333  amount */\n      dup3\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7290:7374  allowance(account, _msgSender()).sub(amount, \"ERC20: burn amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      data_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db\n      0x24\n      swap2\n      codecopy\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7290:7322  allowance(account, _msgSender()) */\n      tag_85\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7300:7307  account */\n      dup7\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7309:7321  _msgSender() */\n      tag_86\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7309:7319  _msgSender */\n      tag_61\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7309:7321  _msgSender() */\n      jump\t// in\n    tag_86:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7290:7299  allowance */\n      tag_56\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7290:7322  allowance(account, _msgSender()) */\n      jump\t// in\n    tag_85:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7290:7326  allowance(account, _msgSender()).sub */\n      tag_71\n      swap1\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7290:7374  allowance(account, _msgSender()).sub(amount, \"ERC20: burn amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_84:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7261:7374  uint256 decreasedAllowance = allowance(account, _msgSender()).sub(amount, \"ERC20: burn amount exceeds allowance\") */\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7385:7436  _approve(account, _msgSender(), decreasedAllowance) */\n      tag_87\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7394:7401  account */\n      dup4\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7403:7415  _msgSender() */\n      tag_88\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7403:7413  _msgSender */\n      tag_61\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7403:7415  _msgSender() */\n      jump\t// in\n    tag_88:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7417:7435  decreasedAllowance */\n      dup4\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7385:7393  _approve */\n      tag_62\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7385:7436  _approve(account, _msgSender(), decreasedAllowance) */\n      jump\t// in\n    tag_87:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7446:7468  _burn(account, amount) */\n      tag_89\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7452:7459  account */\n      dup4\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7461:7467  amount */\n      dup4\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7446:7451  _burn */\n      tag_81\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7446:7468  _burn(account, amount) */\n      jump\t// in\n    tag_89:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7251:7475  {... */\n      pop\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7185:7475  function burnFrom(address account, uint256 amount) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4773:5039  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_47:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4866:4870  bool */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4882:5011  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_91\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4891:4903  _msgSender() */\n      tag_92\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4891:4901  _msgSender */\n      tag_61\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4891:4903  _msgSender() */\n      jump\t// in\n    tag_92:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4905:4912  spender */\n      dup5\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4914:5010  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_93\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4953:4968  subtractedValue */\n      dup6\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4914:5010  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4914:4925  _allowances */\n      0x01\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4914:4939  _allowances[_msgSender()] */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4926:4938  _msgSender() */\n      tag_94\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4926:4936  _msgSender */\n      tag_61\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4926:4938  _msgSender() */\n      jump\t// in\n    tag_94:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4914:4939  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4914:4948  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4940:4947  spender */\n      dup11\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4914:4948  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4914:4952  _allowances[_msgSender()][spender].sub */\n      tag_71\n      swap1\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4914:5010  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_93:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4882:4890  _approve */\n      tag_62\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4882:5011  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_91:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5028:5032  true */\n      0x01\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5021:5032  return true */\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":4773:5039  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2178:2350  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_51:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2264:2268  bool */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2280:2322  _transfer(_msgSender(), recipient, amount) */\n      tag_96\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2290:2302  _msgSender() */\n      tag_97\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2290:2300  _msgSender */\n      tag_61\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2290:2302  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2304:2313  recipient */\n      dup5\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2315:2321  amount */\n      dup5\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2280:2289  _transfer */\n      tag_66\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2280:2322  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_96:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2339:2343  true */\n      0x01\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2332:2343  return true */\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2178:2350  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2408:2557  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_56:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2497:2504  uint256 */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2523:2534  _allowances */\n      0x01\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2523:2541  _allowances[owner] */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2535:2540  owner */\n      dup5\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2523:2541  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2523:2550  _allowances[owner][spender] */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2542:2549  spender */\n      dup4\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2523:2550  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2516:2550  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":2408:2557  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/Common/Context.sol\":591:704  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_61:\n        /* \"NewFraxProtocol/contracts/Common/Context.sol\":644:659  address payable */\n      0x00\n        /* \"NewFraxProtocol/contracts/Common/Context.sol\":686:696  msg.sender */\n      caller\n        /* \"NewFraxProtocol/contracts/Common/Context.sol\":671:697  return payable(msg.sender) */\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/Common/Context.sol\":591:704  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8630:8970  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_62:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8748:8749  0 */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8731:8750  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8731:8736  owner */\n      dup4\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8731:8750  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8723:8791  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8828:8829  0 */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8809:8830  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8809:8816  spender */\n      dup3\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8809:8830  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8801:8869  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8910:8916  amount */\n      dup1\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8880:8891  _allowances */\n      0x01\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8880:8898  _allowances[owner] */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8892:8897  owner */\n      dup6\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8880:8898  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8880:8907  _allowances[owner][spender] */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8899:8906  spender */\n      dup5\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8880:8907  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8880:8916  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8947:8954  spender */\n      dup2\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8931:8963  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8940:8945  owner */\n      dup4\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8931:8963  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8956:8962  amount */\n      dup4\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8931:8963  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8630:8970  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5513:6043  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_66:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5636:5637  0 */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5618:5638  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5618:5624  sender */\n      dup4\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5618:5638  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5610:5680  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5719:5720  0 */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5698:5721  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5698:5707  recipient */\n      dup3\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5698:5721  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5690:5761  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5772:5819  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_115\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5793:5799  sender */\n      dup4\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5801:5810  recipient */\n      dup4\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5812:5818  amount */\n      dup4\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5772:5792  _beforeTokenTransfer */\n      tag_116\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5772:5819  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_115:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5850:5921  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_117\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5872:5878  amount */\n      dup2\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5850:5921  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5850:5859  _balances */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5850:5867  _balances[sender] */\n      dup1\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5860:5866  sender */\n      dup8\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5850:5867  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5850:5871  _balances[sender].sub */\n      tag_71\n      swap1\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5850:5921  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_117:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5830:5839  _balances */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5830:5847  _balances[sender] */\n      dup1\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5840:5846  sender */\n      dup6\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5830:5847  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5830:5921  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5954:5986  _balances[recipient].add(amount) */\n      tag_118\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5979:5985  amount */\n      dup2\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5954:5963  _balances */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5954:5974  _balances[recipient] */\n      dup1\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5964:5973  recipient */\n      dup6\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5954:5974  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5954:5978  _balances[recipient].add */\n      tag_77\n      swap1\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5954:5986  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_118:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5931:5940  _balances */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5931:5951  _balances[recipient] */\n      dup1\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5941:5950  recipient */\n      dup5\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5931:5951  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5931:5986  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":6018:6027  recipient */\n      dup2\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":6001:6036  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":6010:6016  sender */\n      dup4\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":6001:6036  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":6029:6035  amount */\n      dup4\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":6001:6036  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":5513:6043  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1766:1953  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_71:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1852:1859  uint256 */\n      0x00\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1884:1885  a */\n      dup4\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1879:1880  b */\n      dup4\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1879:1885  b <= a */\n      gt\n      iszero\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1887:1899  errorMessage */\n      dup3\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1871:1900  require(b <= a, errorMessage) */\n      swap1\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n      pop\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1910:1919  uint256 c */\n      0x00\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1926:1927  b */\n      dup4\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1922:1923  a */\n      dup6\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1922:1927  a - b */\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1910:1927  uint256 c = a - b */\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1945:1946  c */\n      dup1\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1938:1946  return c */\n      swap2\n      pop\n      pop\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1766:1953  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":868:1044  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_77:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":926:933  uint256 */\n      0x00\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":945:954  uint256 c */\n      dup1\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":961:962  b */\n      dup3\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":957:958  a */\n      dup5\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":957:962  a + b */\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":945:962  uint256 c = a + b */\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":985:986  a */\n      dup4\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":980:981  c */\n      dup2\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":980:986  c >= a */\n      lt\n      iszero\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":972:1018  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1036:1037  c */\n      dup1\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1029:1037  return c */\n      swap2\n      pop\n      pop\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":868:1044  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7795:8205  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_81:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7897:7898  0 */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7878:7899  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7878:7885  account */\n      dup3\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7878:7899  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7870:7937  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7948:7997  _beforeTokenTransfer(account, address(0), amount) */\n      tag_136\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7969:7976  account */\n      dup3\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7986:7987  0 */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7990:7996  amount */\n      dup4\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7948:7968  _beforeTokenTransfer */\n      tag_116\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7948:7997  _beforeTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_136:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8029:8097  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      tag_137\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8052:8058  amount */\n      dup2\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8029:8097  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd\n      0x22\n      swap2\n      codecopy\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8029:8038  _balances */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8029:8047  _balances[account] */\n      dup1\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8039:8046  account */\n      dup7\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8029:8047  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8029:8051  _balances[account].sub */\n      tag_71\n      swap1\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8029:8097  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_137:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8008:8017  _balances */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8008:8026  _balances[account] */\n      dup1\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8018:8025  account */\n      dup5\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8008:8026  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8008:8097  _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8122:8146  _totalSupply.sub(amount) */\n      tag_138\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8139:8145  amount */\n      dup2\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8122:8134  _totalSupply */\n      sload(0x02)\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8122:8138  _totalSupply.sub */\n      tag_139\n      swap1\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8122:8146  _totalSupply.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_138:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8107:8119  _totalSupply */\n      0x02\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8107:8146  _totalSupply = _totalSupply.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8187:8188  0 */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8161:8198  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8170:8177  account */\n      dup3\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8161:8198  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8191:8197  amount */\n      dup4\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":8161:8198  Transfer(account, address(0), amount) */\n      mload(0x40)\n      tag_140\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":7795:8205  function _burn(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":9948:10040  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_116:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1308:1442  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_139:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1366:1373  uint256 */\n      0x00\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1392:1435  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_143\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1396:1397  a */\n      dup4\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1399:1400  b */\n      dup4\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1392:1435  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1392:1395  sub */\n      tag_71\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1392:1435  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_143:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1385:1435  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1308:1442  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_145:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_147:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_148:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_181\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_147\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_149:\n        /* \"#utility.yul\":641:665   */\n      tag_183\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_148\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_184\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_184:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_150:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_186\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_149\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_151:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_152:\n        /* \"#utility.yul\":997:1021   */\n      tag_189\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_151\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_190\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_190:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_153:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_192\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_152\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_16:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_194\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_195\n      tag_145\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":1290:1409   */\n    tag_194:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_196\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_150\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_197\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_153\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1767   */\n    tag_154:\n        /* \"#utility.yul\":1711:1718   */\n      0x00\n        /* \"#utility.yul\":1754:1759   */\n      dup2\n        /* \"#utility.yul\":1747:1760   */\n      iszero\n        /* \"#utility.yul\":1740:1761   */\n      iszero\n        /* \"#utility.yul\":1729:1761   */\n      swap1\n      pop\n        /* \"#utility.yul\":1677:1767   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1773:1882   */\n    tag_155:\n        /* \"#utility.yul\":1854:1875   */\n      tag_200\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1854:1875   */\n      tag_154\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":1849:1852   */\n      dup3\n        /* \"#utility.yul\":1842:1876   */\n      mstore\n        /* \"#utility.yul\":1773:1882   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1888:2098   */\n    tag_19:\n        /* \"#utility.yul\":1975:1979   */\n      0x00\n        /* \"#utility.yul\":2013:2015   */\n      0x20\n        /* \"#utility.yul\":2002:2011   */\n      dup3\n        /* \"#utility.yul\":1998:2016   */\n      add\n        /* \"#utility.yul\":1990:2016   */\n      swap1\n      pop\n        /* \"#utility.yul\":2026:2091   */\n      tag_202\n        /* \"#utility.yul\":2088:2089   */\n      0x00\n        /* \"#utility.yul\":2077:2086   */\n      dup4\n        /* \"#utility.yul\":2073:2090   */\n      add\n        /* \"#utility.yul\":2064:2070   */\n      dup5\n        /* \"#utility.yul\":2026:2091   */\n      tag_155\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":1888:2098   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2104:2222   */\n    tag_156:\n        /* \"#utility.yul\":2191:2215   */\n      tag_204\n        /* \"#utility.yul\":2209:2214   */\n      dup2\n        /* \"#utility.yul\":2191:2215   */\n      tag_151\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":2186:2189   */\n      dup3\n        /* \"#utility.yul\":2179:2216   */\n      mstore\n        /* \"#utility.yul\":2104:2222   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2228:2450   */\n    tag_23:\n        /* \"#utility.yul\":2321:2325   */\n      0x00\n        /* \"#utility.yul\":2359:2361   */\n      0x20\n        /* \"#utility.yul\":2348:2357   */\n      dup3\n        /* \"#utility.yul\":2344:2362   */\n      add\n        /* \"#utility.yul\":2336:2362   */\n      swap1\n      pop\n        /* \"#utility.yul\":2372:2443   */\n      tag_206\n        /* \"#utility.yul\":2440:2441   */\n      0x00\n        /* \"#utility.yul\":2429:2438   */\n      dup4\n        /* \"#utility.yul\":2425:2442   */\n      add\n        /* \"#utility.yul\":2416:2422   */\n      dup5\n        /* \"#utility.yul\":2372:2443   */\n      tag_156\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":2228:2450   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2456:3075   */\n    tag_26:\n        /* \"#utility.yul\":2533:2539   */\n      0x00\n        /* \"#utility.yul\":2541:2547   */\n      dup1\n        /* \"#utility.yul\":2549:2555   */\n      0x00\n        /* \"#utility.yul\":2598:2600   */\n      0x60\n        /* \"#utility.yul\":2586:2595   */\n      dup5\n        /* \"#utility.yul\":2577:2584   */\n      dup7\n        /* \"#utility.yul\":2573:2596   */\n      sub\n        /* \"#utility.yul\":2569:2601   */\n      slt\n        /* \"#utility.yul\":2566:2685   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":2604:2683   */\n      tag_209\n      tag_145\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2566:2685   */\n    tag_208:\n        /* \"#utility.yul\":2724:2725   */\n      0x00\n        /* \"#utility.yul\":2749:2802   */\n      tag_210\n        /* \"#utility.yul\":2794:2801   */\n      dup7\n        /* \"#utility.yul\":2785:2791   */\n      dup3\n        /* \"#utility.yul\":2774:2783   */\n      dup8\n        /* \"#utility.yul\":2770:2792   */\n      add\n        /* \"#utility.yul\":2749:2802   */\n      tag_150\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":2739:2802   */\n      swap4\n      pop\n        /* \"#utility.yul\":2695:2812   */\n      pop\n        /* \"#utility.yul\":2851:2853   */\n      0x20\n        /* \"#utility.yul\":2877:2930   */\n      tag_211\n        /* \"#utility.yul\":2922:2929   */\n      dup7\n        /* \"#utility.yul\":2913:2919   */\n      dup3\n        /* \"#utility.yul\":2902:2911   */\n      dup8\n        /* \"#utility.yul\":2898:2920   */\n      add\n        /* \"#utility.yul\":2877:2930   */\n      tag_150\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":2867:2930   */\n      swap3\n      pop\n        /* \"#utility.yul\":2822:2940   */\n      pop\n        /* \"#utility.yul\":2979:2981   */\n      0x40\n        /* \"#utility.yul\":3005:3058   */\n      tag_212\n        /* \"#utility.yul\":3050:3057   */\n      dup7\n        /* \"#utility.yul\":3041:3047   */\n      dup3\n        /* \"#utility.yul\":3030:3039   */\n      dup8\n        /* \"#utility.yul\":3026:3048   */\n      add\n        /* \"#utility.yul\":3005:3058   */\n      tag_153\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2995:3058   */\n      swap2\n      pop\n        /* \"#utility.yul\":2950:3068   */\n      pop\n        /* \"#utility.yul\":2456:3075   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3081:3410   */\n    tag_35:\n        /* \"#utility.yul\":3140:3146   */\n      0x00\n        /* \"#utility.yul\":3189:3191   */\n      0x20\n        /* \"#utility.yul\":3177:3186   */\n      dup3\n        /* \"#utility.yul\":3168:3175   */\n      dup5\n        /* \"#utility.yul\":3164:3187   */\n      sub\n        /* \"#utility.yul\":3160:3192   */\n      slt\n        /* \"#utility.yul\":3157:3276   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":3195:3274   */\n      tag_215\n      tag_145\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":3157:3276   */\n    tag_214:\n        /* \"#utility.yul\":3315:3316   */\n      0x00\n        /* \"#utility.yul\":3340:3393   */\n      tag_216\n        /* \"#utility.yul\":3385:3392   */\n      dup5\n        /* \"#utility.yul\":3376:3382   */\n      dup3\n        /* \"#utility.yul\":3365:3374   */\n      dup6\n        /* \"#utility.yul\":3361:3383   */\n      add\n        /* \"#utility.yul\":3340:3393   */\n      tag_153\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":3330:3393   */\n      swap2\n      pop\n        /* \"#utility.yul\":3286:3403   */\n      pop\n        /* \"#utility.yul\":3081:3410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3416:3745   */\n    tag_39:\n        /* \"#utility.yul\":3475:3481   */\n      0x00\n        /* \"#utility.yul\":3524:3526   */\n      0x20\n        /* \"#utility.yul\":3512:3521   */\n      dup3\n        /* \"#utility.yul\":3503:3510   */\n      dup5\n        /* \"#utility.yul\":3499:3522   */\n      sub\n        /* \"#utility.yul\":3495:3527   */\n      slt\n        /* \"#utility.yul\":3492:3611   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":3530:3609   */\n      tag_219\n      tag_145\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":3492:3611   */\n    tag_218:\n        /* \"#utility.yul\":3650:3651   */\n      0x00\n        /* \"#utility.yul\":3675:3728   */\n      tag_220\n        /* \"#utility.yul\":3720:3727   */\n      dup5\n        /* \"#utility.yul\":3711:3717   */\n      dup3\n        /* \"#utility.yul\":3700:3709   */\n      dup6\n        /* \"#utility.yul\":3696:3718   */\n      add\n        /* \"#utility.yul\":3675:3728   */\n      tag_150\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":3665:3728   */\n      swap2\n      pop\n        /* \"#utility.yul\":3621:3738   */\n      pop\n        /* \"#utility.yul\":3416:3745   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3751:4225   */\n    tag_55:\n        /* \"#utility.yul\":3819:3825   */\n      0x00\n        /* \"#utility.yul\":3827:3833   */\n      dup1\n        /* \"#utility.yul\":3876:3878   */\n      0x40\n        /* \"#utility.yul\":3864:3873   */\n      dup4\n        /* \"#utility.yul\":3855:3862   */\n      dup6\n        /* \"#utility.yul\":3851:3874   */\n      sub\n        /* \"#utility.yul\":3847:3879   */\n      slt\n        /* \"#utility.yul\":3844:3963   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":3882:3961   */\n      tag_223\n      tag_145\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":3844:3963   */\n    tag_222:\n        /* \"#utility.yul\":4002:4003   */\n      0x00\n        /* \"#utility.yul\":4027:4080   */\n      tag_224\n        /* \"#utility.yul\":4072:4079   */\n      dup6\n        /* \"#utility.yul\":4063:4069   */\n      dup3\n        /* \"#utility.yul\":4052:4061   */\n      dup7\n        /* \"#utility.yul\":4048:4070   */\n      add\n        /* \"#utility.yul\":4027:4080   */\n      tag_150\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":4017:4080   */\n      swap3\n      pop\n        /* \"#utility.yul\":3973:4090   */\n      pop\n        /* \"#utility.yul\":4129:4131   */\n      0x20\n        /* \"#utility.yul\":4155:4208   */\n      tag_225\n        /* \"#utility.yul\":4200:4207   */\n      dup6\n        /* \"#utility.yul\":4191:4197   */\n      dup3\n        /* \"#utility.yul\":4180:4189   */\n      dup7\n        /* \"#utility.yul\":4176:4198   */\n      add\n        /* \"#utility.yul\":4155:4208   */\n      tag_150\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":4145:4208   */\n      swap2\n      pop\n        /* \"#utility.yul\":4100:4218   */\n      pop\n        /* \"#utility.yul\":3751:4225   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4231:4400   */\n    tag_157:\n        /* \"#utility.yul\":4315:4326   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup3\n        /* \"#utility.yul\":4344:4347   */\n      dup3\n        /* \"#utility.yul\":4337:4356   */\n      mstore\n        /* \"#utility.yul\":4389:4393   */\n      0x20\n        /* \"#utility.yul\":4384:4387   */\n      dup3\n        /* \"#utility.yul\":4380:4394   */\n      add\n        /* \"#utility.yul\":4365:4394   */\n      swap1\n      pop\n        /* \"#utility.yul\":4231:4400   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4406:4629   */\n    tag_158:\n        /* \"#utility.yul\":4546:4580   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4542:4543   */\n      0x00\n        /* \"#utility.yul\":4534:4540   */\n      dup3\n        /* \"#utility.yul\":4530:4544   */\n      add\n        /* \"#utility.yul\":4523:4581   */\n      mstore\n        /* \"#utility.yul\":4615:4621   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4610:4612   */\n      0x20\n        /* \"#utility.yul\":4602:4608   */\n      dup3\n        /* \"#utility.yul\":4598:4613   */\n      add\n        /* \"#utility.yul\":4591:4622   */\n      mstore\n        /* \"#utility.yul\":4406:4629   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4635:5001   */\n    tag_159:\n        /* \"#utility.yul\":4777:4780   */\n      0x00\n        /* \"#utility.yul\":4798:4865   */\n      tag_229\n        /* \"#utility.yul\":4862:4864   */\n      0x24\n        /* \"#utility.yul\":4857:4860   */\n      dup4\n        /* \"#utility.yul\":4798:4865   */\n      tag_157\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":4791:4865   */\n      swap2\n      pop\n        /* \"#utility.yul\":4874:4967   */\n      tag_230\n        /* \"#utility.yul\":4963:4966   */\n      dup3\n        /* \"#utility.yul\":4874:4967   */\n      tag_158\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":4992:4994   */\n      0x40\n        /* \"#utility.yul\":4987:4990   */\n      dup3\n        /* \"#utility.yul\":4983:4995   */\n      add\n        /* \"#utility.yul\":4976:4995   */\n      swap1\n      pop\n        /* \"#utility.yul\":4635:5001   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5007:5426   */\n    tag_103:\n        /* \"#utility.yul\":5173:5177   */\n      0x00\n        /* \"#utility.yul\":5211:5213   */\n      0x20\n        /* \"#utility.yul\":5200:5209   */\n      dup3\n        /* \"#utility.yul\":5196:5214   */\n      add\n        /* \"#utility.yul\":5188:5214   */\n      swap1\n      pop\n        /* \"#utility.yul\":5260:5269   */\n      dup2\n        /* \"#utility.yul\":5254:5258   */\n      dup2\n        /* \"#utility.yul\":5250:5270   */\n      sub\n        /* \"#utility.yul\":5246:5247   */\n      0x00\n        /* \"#utility.yul\":5235:5244   */\n      dup4\n        /* \"#utility.yul\":5231:5248   */\n      add\n        /* \"#utility.yul\":5224:5271   */\n      mstore\n        /* \"#utility.yul\":5288:5419   */\n      tag_232\n        /* \"#utility.yul\":5414:5418   */\n      dup2\n        /* \"#utility.yul\":5288:5419   */\n      tag_159\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":5280:5419   */\n      swap1\n      pop\n        /* \"#utility.yul\":5007:5426   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5432:5653   */\n    tag_160:\n        /* \"#utility.yul\":5572:5606   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":5568:5569   */\n      0x00\n        /* \"#utility.yul\":5560:5566   */\n      dup3\n        /* \"#utility.yul\":5556:5570   */\n      add\n        /* \"#utility.yul\":5549:5607   */\n      mstore\n        /* \"#utility.yul\":5641:5645   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5636:5638   */\n      0x20\n        /* \"#utility.yul\":5628:5634   */\n      dup3\n        /* \"#utility.yul\":5624:5639   */\n      add\n        /* \"#utility.yul\":5617:5646   */\n      mstore\n        /* \"#utility.yul\":5432:5653   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5659:6025   */\n    tag_161:\n        /* \"#utility.yul\":5801:5804   */\n      0x00\n        /* \"#utility.yul\":5822:5889   */\n      tag_235\n        /* \"#utility.yul\":5886:5888   */\n      0x22\n        /* \"#utility.yul\":5881:5884   */\n      dup4\n        /* \"#utility.yul\":5822:5889   */\n      tag_157\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":5815:5889   */\n      swap2\n      pop\n        /* \"#utility.yul\":5898:5991   */\n      tag_236\n        /* \"#utility.yul\":5987:5990   */\n      dup3\n        /* \"#utility.yul\":5898:5991   */\n      tag_160\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":6016:6018   */\n      0x40\n        /* \"#utility.yul\":6011:6014   */\n      dup3\n        /* \"#utility.yul\":6007:6019   */\n      add\n        /* \"#utility.yul\":6000:6019   */\n      swap1\n      pop\n        /* \"#utility.yul\":5659:6025   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6031:6450   */\n    tag_106:\n        /* \"#utility.yul\":6197:6201   */\n      0x00\n        /* \"#utility.yul\":6235:6237   */\n      0x20\n        /* \"#utility.yul\":6224:6233   */\n      dup3\n        /* \"#utility.yul\":6220:6238   */\n      add\n        /* \"#utility.yul\":6212:6238   */\n      swap1\n      pop\n        /* \"#utility.yul\":6284:6293   */\n      dup2\n        /* \"#utility.yul\":6278:6282   */\n      dup2\n        /* \"#utility.yul\":6274:6294   */\n      sub\n        /* \"#utility.yul\":6270:6271   */\n      0x00\n        /* \"#utility.yul\":6259:6268   */\n      dup4\n        /* \"#utility.yul\":6255:6272   */\n      add\n        /* \"#utility.yul\":6248:6295   */\n      mstore\n        /* \"#utility.yul\":6312:6443   */\n      tag_238\n        /* \"#utility.yul\":6438:6442   */\n      dup2\n        /* \"#utility.yul\":6312:6443   */\n      tag_161\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":6304:6443   */\n      swap1\n      pop\n        /* \"#utility.yul\":6031:6450   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6456:6680   */\n    tag_162:\n        /* \"#utility.yul\":6596:6630   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":6592:6593   */\n      0x00\n        /* \"#utility.yul\":6584:6590   */\n      dup3\n        /* \"#utility.yul\":6580:6594   */\n      add\n        /* \"#utility.yul\":6573:6631   */\n      mstore\n        /* \"#utility.yul\":6665:6672   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6660:6662   */\n      0x20\n        /* \"#utility.yul\":6652:6658   */\n      dup3\n        /* \"#utility.yul\":6648:6663   */\n      add\n        /* \"#utility.yul\":6641:6673   */\n      mstore\n        /* \"#utility.yul\":6456:6680   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6686:7052   */\n    tag_163:\n        /* \"#utility.yul\":6828:6831   */\n      0x00\n        /* \"#utility.yul\":6849:6916   */\n      tag_241\n        /* \"#utility.yul\":6913:6915   */\n      0x25\n        /* \"#utility.yul\":6908:6911   */\n      dup4\n        /* \"#utility.yul\":6849:6916   */\n      tag_157\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":6842:6916   */\n      swap2\n      pop\n        /* \"#utility.yul\":6925:7018   */\n      tag_242\n        /* \"#utility.yul\":7014:7017   */\n      dup3\n        /* \"#utility.yul\":6925:7018   */\n      tag_162\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":7043:7045   */\n      0x40\n        /* \"#utility.yul\":7038:7041   */\n      dup3\n        /* \"#utility.yul\":7034:7046   */\n      add\n        /* \"#utility.yul\":7027:7046   */\n      swap1\n      pop\n        /* \"#utility.yul\":6686:7052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7058:7477   */\n    tag_111:\n        /* \"#utility.yul\":7224:7228   */\n      0x00\n        /* \"#utility.yul\":7262:7264   */\n      0x20\n        /* \"#utility.yul\":7251:7260   */\n      dup3\n        /* \"#utility.yul\":7247:7265   */\n      add\n        /* \"#utility.yul\":7239:7265   */\n      swap1\n      pop\n        /* \"#utility.yul\":7311:7320   */\n      dup2\n        /* \"#utility.yul\":7305:7309   */\n      dup2\n        /* \"#utility.yul\":7301:7321   */\n      sub\n        /* \"#utility.yul\":7297:7298   */\n      0x00\n        /* \"#utility.yul\":7286:7295   */\n      dup4\n        /* \"#utility.yul\":7282:7299   */\n      add\n        /* \"#utility.yul\":7275:7322   */\n      mstore\n        /* \"#utility.yul\":7339:7470   */\n      tag_244\n        /* \"#utility.yul\":7465:7469   */\n      dup2\n        /* \"#utility.yul\":7339:7470   */\n      tag_163\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":7331:7470   */\n      swap1\n      pop\n        /* \"#utility.yul\":7058:7477   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7483:7705   */\n    tag_164:\n        /* \"#utility.yul\":7623:7657   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":7619:7620   */\n      0x00\n        /* \"#utility.yul\":7611:7617   */\n      dup3\n        /* \"#utility.yul\":7607:7621   */\n      add\n        /* \"#utility.yul\":7600:7658   */\n      mstore\n        /* \"#utility.yul\":7692:7697   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7687:7689   */\n      0x20\n        /* \"#utility.yul\":7679:7685   */\n      dup3\n        /* \"#utility.yul\":7675:7690   */\n      add\n        /* \"#utility.yul\":7668:7698   */\n      mstore\n        /* \"#utility.yul\":7483:7705   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7711:8077   */\n    tag_165:\n        /* \"#utility.yul\":7853:7856   */\n      0x00\n        /* \"#utility.yul\":7874:7941   */\n      tag_247\n        /* \"#utility.yul\":7938:7940   */\n      0x23\n        /* \"#utility.yul\":7933:7936   */\n      dup4\n        /* \"#utility.yul\":7874:7941   */\n      tag_157\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":7867:7941   */\n      swap2\n      pop\n        /* \"#utility.yul\":7950:8043   */\n      tag_248\n        /* \"#utility.yul\":8039:8042   */\n      dup3\n        /* \"#utility.yul\":7950:8043   */\n      tag_164\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":8068:8070   */\n      0x40\n        /* \"#utility.yul\":8063:8066   */\n      dup3\n        /* \"#utility.yul\":8059:8071   */\n      add\n        /* \"#utility.yul\":8052:8071   */\n      swap1\n      pop\n        /* \"#utility.yul\":7711:8077   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8083:8502   */\n    tag_114:\n        /* \"#utility.yul\":8249:8253   */\n      0x00\n        /* \"#utility.yul\":8287:8289   */\n      0x20\n        /* \"#utility.yul\":8276:8285   */\n      dup3\n        /* \"#utility.yul\":8272:8290   */\n      add\n        /* \"#utility.yul\":8264:8290   */\n      swap1\n      pop\n        /* \"#utility.yul\":8336:8345   */\n      dup2\n        /* \"#utility.yul\":8330:8334   */\n      dup2\n        /* \"#utility.yul\":8326:8346   */\n      sub\n        /* \"#utility.yul\":8322:8323   */\n      0x00\n        /* \"#utility.yul\":8311:8320   */\n      dup4\n        /* \"#utility.yul\":8307:8324   */\n      add\n        /* \"#utility.yul\":8300:8347   */\n      mstore\n        /* \"#utility.yul\":8364:8495   */\n      tag_250\n        /* \"#utility.yul\":8490:8494   */\n      dup2\n        /* \"#utility.yul\":8364:8495   */\n      tag_165\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":8356:8495   */\n      swap1\n      pop\n        /* \"#utility.yul\":8083:8502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8508:8607   */\n    tag_166:\n        /* \"#utility.yul\":8560:8566   */\n      0x00\n        /* \"#utility.yul\":8594:8599   */\n      dup2\n        /* \"#utility.yul\":8588:8600   */\n      mload\n        /* \"#utility.yul\":8578:8600   */\n      swap1\n      pop\n        /* \"#utility.yul\":8508:8607   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8613:8859   */\n    tag_167:\n        /* \"#utility.yul\":8694:8695   */\n      0x00\n        /* \"#utility.yul\":8704:8817   */\n    tag_253:\n        /* \"#utility.yul\":8718:8724   */\n      dup4\n        /* \"#utility.yul\":8715:8716   */\n      dup2\n        /* \"#utility.yul\":8712:8725   */\n      lt\n        /* \"#utility.yul\":8704:8817   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":8803:8804   */\n      dup1\n        /* \"#utility.yul\":8798:8801   */\n      dup3\n        /* \"#utility.yul\":8794:8805   */\n      add\n        /* \"#utility.yul\":8788:8806   */\n      mload\n        /* \"#utility.yul\":8784:8785   */\n      dup2\n        /* \"#utility.yul\":8779:8782   */\n      dup5\n        /* \"#utility.yul\":8775:8786   */\n      add\n        /* \"#utility.yul\":8768:8807   */\n      mstore\n        /* \"#utility.yul\":8740:8742   */\n      0x20\n        /* \"#utility.yul\":8737:8738   */\n      dup2\n        /* \"#utility.yul\":8733:8743   */\n      add\n        /* \"#utility.yul\":8728:8743   */\n      swap1\n      pop\n        /* \"#utility.yul\":8704:8817   */\n      jump(tag_253)\n    tag_255:\n        /* \"#utility.yul\":8851:8852   */\n      0x00\n        /* \"#utility.yul\":8842:8848   */\n      dup5\n        /* \"#utility.yul\":8837:8840   */\n      dup5\n        /* \"#utility.yul\":8833:8849   */\n      add\n        /* \"#utility.yul\":8826:8853   */\n      mstore\n        /* \"#utility.yul\":8675:8859   */\n      pop\n        /* \"#utility.yul\":8613:8859   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8865:8967   */\n    tag_168:\n        /* \"#utility.yul\":8906:8912   */\n      0x00\n        /* \"#utility.yul\":8957:8959   */\n      0x1f\n        /* \"#utility.yul\":8953:8960   */\n      not\n        /* \"#utility.yul\":8948:8950   */\n      0x1f\n        /* \"#utility.yul\":8941:8946   */\n      dup4\n        /* \"#utility.yul\":8937:8951   */\n      add\n        /* \"#utility.yul\":8933:8961   */\n      and\n        /* \"#utility.yul\":8923:8961   */\n      swap1\n      pop\n        /* \"#utility.yul\":8865:8967   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8973:9350   */\n    tag_169:\n        /* \"#utility.yul\":9061:9064   */\n      0x00\n        /* \"#utility.yul\":9089:9128   */\n      tag_258\n        /* \"#utility.yul\":9122:9127   */\n      dup3\n        /* \"#utility.yul\":9089:9128   */\n      tag_166\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":9144:9215   */\n      tag_259\n        /* \"#utility.yul\":9208:9214   */\n      dup2\n        /* \"#utility.yul\":9203:9206   */\n      dup6\n        /* \"#utility.yul\":9144:9215   */\n      tag_157\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":9137:9215   */\n      swap4\n      pop\n        /* \"#utility.yul\":9224:9289   */\n      tag_260\n        /* \"#utility.yul\":9282:9288   */\n      dup2\n        /* \"#utility.yul\":9277:9280   */\n      dup6\n        /* \"#utility.yul\":9270:9274   */\n      0x20\n        /* \"#utility.yul\":9263:9268   */\n      dup7\n        /* \"#utility.yul\":9259:9275   */\n      add\n        /* \"#utility.yul\":9224:9289   */\n      tag_167\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":9314:9343   */\n      tag_261\n        /* \"#utility.yul\":9336:9342   */\n      dup2\n        /* \"#utility.yul\":9314:9343   */\n      tag_168\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":9309:9312   */\n      dup5\n        /* \"#utility.yul\":9305:9344   */\n      add\n        /* \"#utility.yul\":9298:9344   */\n      swap2\n      pop\n        /* \"#utility.yul\":9065:9350   */\n      pop\n        /* \"#utility.yul\":8973:9350   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9356:9669   */\n    tag_123:\n        /* \"#utility.yul\":9469:9473   */\n      0x00\n        /* \"#utility.yul\":9507:9509   */\n      0x20\n        /* \"#utility.yul\":9496:9505   */\n      dup3\n        /* \"#utility.yul\":9492:9510   */\n      add\n        /* \"#utility.yul\":9484:9510   */\n      swap1\n      pop\n        /* \"#utility.yul\":9556:9565   */\n      dup2\n        /* \"#utility.yul\":9550:9554   */\n      dup2\n        /* \"#utility.yul\":9546:9566   */\n      sub\n        /* \"#utility.yul\":9542:9543   */\n      0x00\n        /* \"#utility.yul\":9531:9540   */\n      dup4\n        /* \"#utility.yul\":9527:9544   */\n      add\n        /* \"#utility.yul\":9520:9567   */\n      mstore\n        /* \"#utility.yul\":9584:9662   */\n      tag_263\n        /* \"#utility.yul\":9657:9661   */\n      dup2\n        /* \"#utility.yul\":9648:9654   */\n      dup5\n        /* \"#utility.yul\":9584:9662   */\n      tag_169\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":9576:9662   */\n      swap1\n      pop\n        /* \"#utility.yul\":9356:9669   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9675:9855   */\n    tag_170:\n        /* \"#utility.yul\":9723:9800   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9720:9721   */\n      0x00\n        /* \"#utility.yul\":9713:9801   */\n      mstore\n        /* \"#utility.yul\":9820:9824   */\n      0x11\n        /* \"#utility.yul\":9817:9818   */\n      0x04\n        /* \"#utility.yul\":9810:9825   */\n      mstore\n        /* \"#utility.yul\":9844:9848   */\n      0x24\n        /* \"#utility.yul\":9841:9842   */\n      0x00\n        /* \"#utility.yul\":9834:9849   */\n      revert\n        /* \"#utility.yul\":9861:10055   */\n    tag_125:\n        /* \"#utility.yul\":9901:9905   */\n      0x00\n        /* \"#utility.yul\":9921:9941   */\n      tag_266\n        /* \"#utility.yul\":9939:9940   */\n      dup3\n        /* \"#utility.yul\":9921:9941   */\n      tag_151\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":9916:9941   */\n      swap2\n      pop\n        /* \"#utility.yul\":9955:9975   */\n      tag_267\n        /* \"#utility.yul\":9973:9974   */\n      dup4\n        /* \"#utility.yul\":9955:9975   */\n      tag_151\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":9950:9975   */\n      swap3\n      pop\n        /* \"#utility.yul\":9999:10000   */\n      dup3\n        /* \"#utility.yul\":9996:9997   */\n      dup3\n        /* \"#utility.yul\":9992:10001   */\n      sub\n        /* \"#utility.yul\":9984:10001   */\n      swap1\n      pop\n        /* \"#utility.yul\":10023:10024   */\n      dup2\n        /* \"#utility.yul\":10017:10021   */\n      dup2\n        /* \"#utility.yul\":10014:10025   */\n      gt\n        /* \"#utility.yul\":10011:10048   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":10028:10046   */\n      tag_269\n      tag_170\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":10011:10048   */\n    tag_268:\n        /* \"#utility.yul\":9861:10055   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10061:10252   */\n    tag_128:\n        /* \"#utility.yul\":10101:10104   */\n      0x00\n        /* \"#utility.yul\":10120:10140   */\n      tag_271\n        /* \"#utility.yul\":10138:10139   */\n      dup3\n        /* \"#utility.yul\":10120:10140   */\n      tag_151\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":10115:10140   */\n      swap2\n      pop\n        /* \"#utility.yul\":10154:10174   */\n      tag_272\n        /* \"#utility.yul\":10172:10173   */\n      dup4\n        /* \"#utility.yul\":10154:10174   */\n      tag_151\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":10149:10174   */\n      swap3\n      pop\n        /* \"#utility.yul\":10197:10198   */\n      dup3\n        /* \"#utility.yul\":10194:10195   */\n      dup3\n        /* \"#utility.yul\":10190:10199   */\n      add\n        /* \"#utility.yul\":10183:10199   */\n      swap1\n      pop\n        /* \"#utility.yul\":10218:10221   */\n      dup1\n        /* \"#utility.yul\":10215:10216   */\n      dup3\n        /* \"#utility.yul\":10212:10222   */\n      gt\n        /* \"#utility.yul\":10209:10245   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":10225:10243   */\n      tag_274\n      tag_170\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":10209:10245   */\n    tag_273:\n        /* \"#utility.yul\":10061:10252   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10258:10435   */\n    tag_171:\n        /* \"#utility.yul\":10398:10427   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":10394:10395   */\n      0x00\n        /* \"#utility.yul\":10386:10392   */\n      dup3\n        /* \"#utility.yul\":10382:10396   */\n      add\n        /* \"#utility.yul\":10375:10428   */\n      mstore\n        /* \"#utility.yul\":10258:10435   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10441:10807   */\n    tag_172:\n        /* \"#utility.yul\":10583:10586   */\n      0x00\n        /* \"#utility.yul\":10604:10671   */\n      tag_277\n        /* \"#utility.yul\":10668:10670   */\n      0x1b\n        /* \"#utility.yul\":10663:10666   */\n      dup4\n        /* \"#utility.yul\":10604:10671   */\n      tag_157\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":10597:10671   */\n      swap2\n      pop\n        /* \"#utility.yul\":10680:10773   */\n      tag_278\n        /* \"#utility.yul\":10769:10772   */\n      dup3\n        /* \"#utility.yul\":10680:10773   */\n      tag_171\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":10798:10800   */\n      0x20\n        /* \"#utility.yul\":10793:10796   */\n      dup3\n        /* \"#utility.yul\":10789:10801   */\n      add\n        /* \"#utility.yul\":10782:10801   */\n      swap1\n      pop\n        /* \"#utility.yul\":10441:10807   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10813:11232   */\n    tag_131:\n        /* \"#utility.yul\":10979:10983   */\n      0x00\n        /* \"#utility.yul\":11017:11019   */\n      0x20\n        /* \"#utility.yul\":11006:11015   */\n      dup3\n        /* \"#utility.yul\":11002:11020   */\n      add\n        /* \"#utility.yul\":10994:11020   */\n      swap1\n      pop\n        /* \"#utility.yul\":11066:11075   */\n      dup2\n        /* \"#utility.yul\":11060:11064   */\n      dup2\n        /* \"#utility.yul\":11056:11076   */\n      sub\n        /* \"#utility.yul\":11052:11053   */\n      0x00\n        /* \"#utility.yul\":11041:11050   */\n      dup4\n        /* \"#utility.yul\":11037:11054   */\n      add\n        /* \"#utility.yul\":11030:11077   */\n      mstore\n        /* \"#utility.yul\":11094:11225   */\n      tag_280\n        /* \"#utility.yul\":11220:11224   */\n      dup2\n        /* \"#utility.yul\":11094:11225   */\n      tag_172\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":11086:11225   */\n      swap1\n      pop\n        /* \"#utility.yul\":10813:11232   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11238:11458   */\n    tag_173:\n        /* \"#utility.yul\":11378:11412   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":11374:11375   */\n      0x00\n        /* \"#utility.yul\":11366:11372   */\n      dup3\n        /* \"#utility.yul\":11362:11376   */\n      add\n        /* \"#utility.yul\":11355:11413   */\n      mstore\n        /* \"#utility.yul\":11447:11450   */\n      0x7300000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11442:11444   */\n      0x20\n        /* \"#utility.yul\":11434:11440   */\n      dup3\n        /* \"#utility.yul\":11430:11445   */\n      add\n        /* \"#utility.yul\":11423:11451   */\n      mstore\n        /* \"#utility.yul\":11238:11458   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11464:11830   */\n    tag_174:\n        /* \"#utility.yul\":11606:11609   */\n      0x00\n        /* \"#utility.yul\":11627:11694   */\n      tag_283\n        /* \"#utility.yul\":11691:11693   */\n      0x21\n        /* \"#utility.yul\":11686:11689   */\n      dup4\n        /* \"#utility.yul\":11627:11694   */\n      tag_157\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":11620:11694   */\n      swap2\n      pop\n        /* \"#utility.yul\":11703:11796   */\n      tag_284\n        /* \"#utility.yul\":11792:11795   */\n      dup3\n        /* \"#utility.yul\":11703:11796   */\n      tag_173\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":11821:11823   */\n      0x40\n        /* \"#utility.yul\":11816:11819   */\n      dup3\n        /* \"#utility.yul\":11812:11824   */\n      add\n        /* \"#utility.yul\":11805:11824   */\n      swap1\n      pop\n        /* \"#utility.yul\":11464:11830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11836:12255   */\n    tag_135:\n        /* \"#utility.yul\":12002:12006   */\n      0x00\n        /* \"#utility.yul\":12040:12042   */\n      0x20\n        /* \"#utility.yul\":12029:12038   */\n      dup3\n        /* \"#utility.yul\":12025:12043   */\n      add\n        /* \"#utility.yul\":12017:12043   */\n      swap1\n      pop\n        /* \"#utility.yul\":12089:12098   */\n      dup2\n        /* \"#utility.yul\":12083:12087   */\n      dup2\n        /* \"#utility.yul\":12079:12099   */\n      sub\n        /* \"#utility.yul\":12075:12076   */\n      0x00\n        /* \"#utility.yul\":12064:12073   */\n      dup4\n        /* \"#utility.yul\":12060:12077   */\n      add\n        /* \"#utility.yul\":12053:12100   */\n      mstore\n        /* \"#utility.yul\":12117:12248   */\n      tag_286\n        /* \"#utility.yul\":12243:12247   */\n      dup2\n        /* \"#utility.yul\":12117:12248   */\n      tag_174\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":12109:12248   */\n      swap1\n      pop\n        /* \"#utility.yul\":11836:12255   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd 45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db 45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa264697066735822122089e87c42cbd84cd2c68fcc90731284b9bd1c7052664e7eebe2bd11a48c7ac9ec64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5061147d8061001d5f395ff3fe608060405234801561000f575f80fd5b506004361061009c575f3560e01c806370a082311161006457806370a082311461016a57806379cc67901461019a578063a457c2d7146101b6578063a9059cbb146101e6578063dd62ed3e146102165761009c565b8063095ea7b3146100a057806318160ddd146100d057806323b872dd146100ee578063395093511461011e57806342966c681461014e575b5f80fd5b6100ba60048036038101906100b59190610da6565b610246565b6040516100c79190610dfe565b60405180910390f35b6100d8610263565b6040516100e59190610e26565b60405180910390f35b61010860048036038101906101039190610e3f565b61026c565b6040516101159190610dfe565b60405180910390f35b61013860048036038101906101339190610da6565b610340565b6040516101459190610dfe565b60405180910390f35b61016860048036038101906101639190610e8f565b6103ee565b005b610184600480360381019061017f9190610eba565b610402565b6040516101919190610e26565b60405180910390f35b6101b460048036038101906101af9190610da6565b610447565b005b6101d060048036038101906101cb9190610da6565b6104a8565b6040516101dd9190610dfe565b60405180910390f35b61020060048036038101906101fb9190610da6565b610570565b60405161020d9190610dfe565b60405180910390f35b610230600480360381019061022b9190610ee5565b61058d565b60405161023d9190610e26565b60405180910390f35b5f61025961025261060f565b8484610616565b6001905092915050565b5f600254905090565b5f6102788484846107d9565b6103358461028461060f565b610330856040518060600160405280602881526020016113d76028913960015f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6102e761060f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610a629092919063ffffffff16565b610616565b600190509392505050565b5f6103e461034c61060f565b846103df8560015f61035c61060f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610ac490919063ffffffff16565b610616565b6001905092915050565b6103ff6103f961060f565b82610b21565b50565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f610485826040518060600160405280602481526020016113ff602491396104768661047161060f565b61058d565b610a629092919063ffffffff16565b90506104998361049361060f565b83610616565b6104a38383610b21565b505050565b5f6105666104b461060f565b84610561856040518060600160405280602581526020016114236025913960015f6104dd61060f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610a629092919063ffffffff16565b610616565b6001905092915050565b5f61058361057c61060f565b84846107d9565b6001905092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610684576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067b90610fa3565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e990611031565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107cc9190610e26565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610847576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083e906110bf565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ac9061114d565b60405180910390fd5b6108c0838383610cc7565b610929816040518060600160405280602681526020016113b1602691395f808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610a629092919063ffffffff16565b5f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506109b8815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610ac490919063ffffffff16565b5f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a559190610e26565b60405180910390a3505050565b5f838311158290610aa9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa091906111e5565b60405180910390fd5b505f8385610ab79190611232565b9050809150509392505050565b5f808284610ad29190611265565b905083811015610b17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0e906112e2565b60405180910390fd5b8091505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8690611370565b60405180910390fd5b610b9a825f83610cc7565b610c038160405180606001604052806022815260200161138f602291395f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610a629092919063ffffffff16565b5f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610c5881600254610ccc90919063ffffffff16565b6002819055505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610cbb9190610e26565b60405180910390a35050565b505050565b5f610d0d83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610a62565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610d4282610d19565b9050919050565b610d5281610d38565b8114610d5c575f80fd5b50565b5f81359050610d6d81610d49565b92915050565b5f819050919050565b610d8581610d73565b8114610d8f575f80fd5b50565b5f81359050610da081610d7c565b92915050565b5f8060408385031215610dbc57610dbb610d15565b5b5f610dc985828601610d5f565b9250506020610dda85828601610d92565b9150509250929050565b5f8115159050919050565b610df881610de4565b82525050565b5f602082019050610e115f830184610def565b92915050565b610e2081610d73565b82525050565b5f602082019050610e395f830184610e17565b92915050565b5f805f60608486031215610e5657610e55610d15565b5b5f610e6386828701610d5f565b9350506020610e7486828701610d5f565b9250506040610e8586828701610d92565b9150509250925092565b5f60208284031215610ea457610ea3610d15565b5b5f610eb184828501610d92565b91505092915050565b5f60208284031215610ecf57610ece610d15565b5b5f610edc84828501610d5f565b91505092915050565b5f8060408385031215610efb57610efa610d15565b5b5f610f0885828601610d5f565b9250506020610f1985828601610d5f565b9150509250929050565b5f82825260208201905092915050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f610f8d602483610f23565b9150610f9882610f33565b604082019050919050565b5f6020820190508181035f830152610fba81610f81565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f61101b602283610f23565b915061102682610fc1565b604082019050919050565b5f6020820190508181035f8301526110488161100f565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f6110a9602583610f23565b91506110b48261104f565b604082019050919050565b5f6020820190508181035f8301526110d68161109d565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f611137602383610f23565b9150611142826110dd565b604082019050919050565b5f6020820190508181035f8301526111648161112b565b9050919050565b5f81519050919050565b5f5b83811015611192578082015181840152602081019050611177565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6111b78261116b565b6111c18185610f23565b93506111d1818560208601611175565b6111da8161119d565b840191505092915050565b5f6020820190508181035f8301526111fd81846111ad565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61123c82610d73565b915061124783610d73565b925082820390508181111561125f5761125e611205565b5b92915050565b5f61126f82610d73565b915061127a83610d73565b925082820190508082111561129257611291611205565b5b92915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f7700000000005f82015250565b5f6112cc601b83610f23565b91506112d782611298565b602082019050919050565b5f6020820190508181035f8301526112f9816112c0565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f206164647265735f8201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b5f61135a602183610f23565b915061136582611300565b604082019050919050565b5f6020820190508181035f8301526113878161134e565b905091905056fe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122089e87c42cbd84cd2c68fcc90731284b9bd1c7052664e7eebe2bd11a48c7ac9ec64736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x147D DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x216 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x14E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xDA6 JUMP JUMPDEST PUSH2 0x246 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH2 0x263 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0xE26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x108 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xE3F JUMP JUMPDEST PUSH2 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xDA6 JUMP JUMPDEST PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x145 SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x168 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x163 SWAP2 SWAP1 PUSH2 0xE8F JUMP JUMPDEST PUSH2 0x3EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17F SWAP2 SWAP1 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x402 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0xE26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0xDA6 JUMP JUMPDEST PUSH2 0x447 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0xDA6 JUMP JUMPDEST PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xDA6 JUMP JUMPDEST PUSH2 0x570 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xEE5 JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xE26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH2 0x259 PUSH2 0x252 PUSH2 0x60F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x616 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x278 DUP5 DUP5 DUP5 PUSH2 0x7D9 JUMP JUMPDEST PUSH2 0x335 DUP5 PUSH2 0x284 PUSH2 0x60F JUMP JUMPDEST PUSH2 0x330 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13D7 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x2E7 PUSH2 0x60F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xA62 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x616 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3E4 PUSH2 0x34C PUSH2 0x60F JUMP JUMPDEST DUP5 PUSH2 0x3DF DUP6 PUSH1 0x1 PUSH0 PUSH2 0x35C PUSH2 0x60F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xAC4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x616 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3FF PUSH2 0x3F9 PUSH2 0x60F JUMP JUMPDEST DUP3 PUSH2 0xB21 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x485 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13FF PUSH1 0x24 SWAP2 CODECOPY PUSH2 0x476 DUP7 PUSH2 0x471 PUSH2 0x60F JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST PUSH2 0xA62 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x499 DUP4 PUSH2 0x493 PUSH2 0x60F JUMP JUMPDEST DUP4 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x4A3 DUP4 DUP4 PUSH2 0xB21 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x566 PUSH2 0x4B4 PUSH2 0x60F JUMP JUMPDEST DUP5 PUSH2 0x561 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1423 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH0 PUSH2 0x4DD PUSH2 0x60F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xA62 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x616 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x583 PUSH2 0x57C PUSH2 0x60F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x7D9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x684 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67B SWAP1 PUSH2 0xFA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E9 SWAP1 PUSH2 0x1031 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x7CC SWAP2 SWAP1 PUSH2 0xE26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x847 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83E SWAP1 PUSH2 0x10BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AC SWAP1 PUSH2 0x114D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C0 DUP4 DUP4 DUP4 PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0x929 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13B1 PUSH1 0x26 SWAP2 CODECOPY PUSH0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xA62 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x9B8 DUP2 PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xAC4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA55 SWAP2 SWAP1 PUSH2 0xE26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xAA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA0 SWAP2 SWAP1 PUSH2 0x11E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH0 DUP4 DUP6 PUSH2 0xAB7 SWAP2 SWAP1 PUSH2 0x1232 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 DUP5 PUSH2 0xAD2 SWAP2 SWAP1 PUSH2 0x1265 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xB17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0E SWAP1 PUSH2 0x12E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB86 SWAP1 PUSH2 0x1370 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB9A DUP3 PUSH0 DUP4 PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0xC03 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x138F PUSH1 0x22 SWAP2 CODECOPY PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xA62 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xC58 DUP2 PUSH1 0x2 SLOAD PUSH2 0xCCC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xCBB SWAP2 SWAP1 PUSH2 0xE26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD0D DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD42 DUP3 PUSH2 0xD19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD52 DUP2 PUSH2 0xD38 JUMP JUMPDEST DUP2 EQ PUSH2 0xD5C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD6D DUP2 PUSH2 0xD49 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD85 DUP2 PUSH2 0xD73 JUMP JUMPDEST DUP2 EQ PUSH2 0xD8F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDA0 DUP2 PUSH2 0xD7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDBC JUMPI PUSH2 0xDBB PUSH2 0xD15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDC9 DUP6 DUP3 DUP7 ADD PUSH2 0xD5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDDA DUP6 DUP3 DUP7 ADD PUSH2 0xD92 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF8 DUP2 PUSH2 0xDE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE11 PUSH0 DUP4 ADD DUP5 PUSH2 0xDEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE20 DUP2 PUSH2 0xD73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE39 PUSH0 DUP4 ADD DUP5 PUSH2 0xE17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE56 JUMPI PUSH2 0xE55 PUSH2 0xD15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE63 DUP7 DUP3 DUP8 ADD PUSH2 0xD5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE74 DUP7 DUP3 DUP8 ADD PUSH2 0xD5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xE85 DUP7 DUP3 DUP8 ADD PUSH2 0xD92 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA4 JUMPI PUSH2 0xEA3 PUSH2 0xD15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEB1 DUP5 DUP3 DUP6 ADD PUSH2 0xD92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xECF JUMPI PUSH2 0xECE PUSH2 0xD15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEDC DUP5 DUP3 DUP6 ADD PUSH2 0xD5F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEFB JUMPI PUSH2 0xEFA PUSH2 0xD15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF08 DUP6 DUP3 DUP7 ADD PUSH2 0xD5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF19 DUP6 DUP3 DUP7 ADD PUSH2 0xD5F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF8D PUSH1 0x24 DUP4 PUSH2 0xF23 JUMP JUMPDEST SWAP2 POP PUSH2 0xF98 DUP3 PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFBA DUP2 PUSH2 0xF81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x101B PUSH1 0x22 DUP4 PUSH2 0xF23 JUMP JUMPDEST SWAP2 POP PUSH2 0x1026 DUP3 PUSH2 0xFC1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1048 DUP2 PUSH2 0x100F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10A9 PUSH1 0x25 DUP4 PUSH2 0xF23 JUMP JUMPDEST SWAP2 POP PUSH2 0x10B4 DUP3 PUSH2 0x104F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10D6 DUP2 PUSH2 0x109D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1137 PUSH1 0x23 DUP4 PUSH2 0xF23 JUMP JUMPDEST SWAP2 POP PUSH2 0x1142 DUP3 PUSH2 0x10DD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1164 DUP2 PUSH2 0x112B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1192 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1177 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11B7 DUP3 PUSH2 0x116B JUMP JUMPDEST PUSH2 0x11C1 DUP2 DUP6 PUSH2 0xF23 JUMP JUMPDEST SWAP4 POP PUSH2 0x11D1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1175 JUMP JUMPDEST PUSH2 0x11DA DUP2 PUSH2 0x119D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11FD DUP2 DUP5 PUSH2 0x11AD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x123C DUP3 PUSH2 0xD73 JUMP JUMPDEST SWAP2 POP PUSH2 0x1247 DUP4 PUSH2 0xD73 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x125F JUMPI PUSH2 0x125E PUSH2 0x1205 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x126F DUP3 PUSH2 0xD73 JUMP JUMPDEST SWAP2 POP PUSH2 0x127A DUP4 PUSH2 0xD73 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1292 JUMPI PUSH2 0x1291 PUSH2 0x1205 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12CC PUSH1 0x1B DUP4 PUSH2 0xF23 JUMP JUMPDEST SWAP2 POP PUSH2 0x12D7 DUP3 PUSH2 0x1298 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12F9 DUP2 PUSH2 0x12C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x135A PUSH1 0x21 DUP4 PUSH2 0xF23 JUMP JUMPDEST SWAP2 POP PUSH2 0x1365 DUP3 PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1387 DUP2 PUSH2 0x134E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636545524332303A207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654552 NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x735822122089E8 PUSH29 0x42CBD84CD2C68FCC90731284B9BD1C7052664E7EEBE2BD11A48C7AC9EC PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "1403:8639:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_498": {
									"entryPoint": 1558,
									"id": 498,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_539": {
									"entryPoint": 3271,
									"id": 539,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_453": {
									"entryPoint": 2849,
									"id": 453,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_13": {
									"entryPoint": 1551,
									"id": 13,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_296": {
									"entryPoint": 2009,
									"id": 296,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_649": {
									"entryPoint": 2756,
									"id": 649,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_114": {
									"entryPoint": 1421,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_135": {
									"entryPoint": 582,
									"id": 135,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_75": {
									"entryPoint": 1026,
									"id": 75,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_397": {
									"entryPoint": 1095,
									"id": 397,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_364": {
									"entryPoint": 1006,
									"id": 364,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decreaseAllowance_230": {
									"entryPoint": 1192,
									"id": 230,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_201": {
									"entryPoint": 832,
									"id": 201,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_666": {
									"entryPoint": 3276,
									"id": 666,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_694": {
									"entryPoint": 2658,
									"id": 694,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@totalSupply_61": {
									"entryPoint": 611,
									"id": 61,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_173": {
									"entryPoint": 620,
									"id": 173,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_96": {
									"entryPoint": 1392,
									"id": 96,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4800,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4469,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 4613,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3349,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 4317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029": {
									"entryPoint": 4033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a": {
									"entryPoint": 4760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f": {
									"entryPoint": 4864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 4175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208": {
									"entryPoint": 3891,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12258:5",
										"nodeType": "YulBlock",
										"src": "0:12258:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "611:79:5",
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:5",
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:5",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:5",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nativeSrc": "670:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nativeSrc": "670:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nativeSrc": "641:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nativeSrc": "631:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nativeSrc": "624:43:5",
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nativeSrc": "621:63:5",
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:5",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nativeSrc": "748:87:5",
													"nodeType": "YulBlock",
													"src": "748:87:5",
													"statements": [
														{
															"nativeSrc": "758:29:5",
															"nodeType": "YulAssignment",
															"src": "758:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:5"
																},
																"nativeSrc": "767:20:5",
																"nodeType": "YulFunctionCall",
																"src": "767:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:5"
																},
																"nativeSrc": "796:33:5",
																"nodeType": "YulFunctionCall",
																"src": "796:33:5"
															},
															"nativeSrc": "796:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:5",
														"nodeType": "YulTypedName",
														"src": "726:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:5",
														"nodeType": "YulTypedName",
														"src": "734:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:5",
														"nodeType": "YulTypedName",
														"src": "742:5:5",
														"type": ""
													}
												],
												"src": "696:139:5"
											},
											{
												"body": {
													"nativeSrc": "886:32:5",
													"nodeType": "YulBlock",
													"src": "886:32:5",
													"statements": [
														{
															"nativeSrc": "896:16:5",
															"nodeType": "YulAssignment",
															"src": "896:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:5",
																"nodeType": "YulIdentifier",
																"src": "907:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:5",
														"nodeType": "YulTypedName",
														"src": "868:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:5",
														"nodeType": "YulTypedName",
														"src": "878:7:5",
														"type": ""
													}
												],
												"src": "841:77:5"
											},
											{
												"body": {
													"nativeSrc": "967:79:5",
													"nodeType": "YulBlock",
													"src": "967:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:5",
																"nodeType": "YulBlock",
																"src": "1024:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:5"
																			},
																			"nativeSrc": "1026:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:5"
																		},
																		"nativeSrc": "1026:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:5"
																				},
																				"nativeSrc": "997:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:5"
																		},
																		"nativeSrc": "987:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:5"
																},
																"nativeSrc": "980:43:5",
																"nodeType": "YulFunctionCall",
																"src": "980:43:5"
															},
															"nativeSrc": "977:63:5",
															"nodeType": "YulIf",
															"src": "977:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:5",
														"nodeType": "YulTypedName",
														"src": "960:5:5",
														"type": ""
													}
												],
												"src": "924:122:5"
											},
											{
												"body": {
													"nativeSrc": "1104:87:5",
													"nodeType": "YulBlock",
													"src": "1104:87:5",
													"statements": [
														{
															"nativeSrc": "1114:29:5",
															"nodeType": "YulAssignment",
															"src": "1114:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:5"
																},
																"nativeSrc": "1123:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:5"
																},
																"nativeSrc": "1152:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:5"
															},
															"nativeSrc": "1152:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:5",
														"nodeType": "YulTypedName",
														"src": "1082:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:5",
														"nodeType": "YulTypedName",
														"src": "1090:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:5",
														"nodeType": "YulTypedName",
														"src": "1098:5:5",
														"type": ""
													}
												],
												"src": "1052:139:5"
											},
											{
												"body": {
													"nativeSrc": "1280:391:5",
													"nodeType": "YulBlock",
													"src": "1280:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:5",
																"nodeType": "YulBlock",
																"src": "1326:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:5"
																			},
																			"nativeSrc": "1328:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:5"
																		},
																		"nativeSrc": "1328:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:5"
																		},
																		"nativeSrc": "1297:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:5"
																},
																"nativeSrc": "1293:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:5"
															},
															"nativeSrc": "1290:119:5",
															"nodeType": "YulIf",
															"src": "1290:119:5"
														},
														{
															"nativeSrc": "1419:117:5",
															"nodeType": "YulBlock",
															"src": "1419:117:5",
															"statements": [
																{
																	"nativeSrc": "1434:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:5"
																				},
																				"nativeSrc": "1494:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:5"
																		},
																		"nativeSrc": "1473:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:5",
															"nodeType": "YulBlock",
															"src": "1546:118:5",
															"statements": [
																{
																	"nativeSrc": "1561:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:5"
																				},
																				"nativeSrc": "1622:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:5"
																		},
																		"nativeSrc": "1601:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:5",
														"nodeType": "YulTypedName",
														"src": "1242:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:5",
														"nodeType": "YulTypedName",
														"src": "1253:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:5",
														"nodeType": "YulTypedName",
														"src": "1265:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:5",
														"nodeType": "YulTypedName",
														"src": "1273:6:5",
														"type": ""
													}
												],
												"src": "1197:474:5"
											},
											{
												"body": {
													"nativeSrc": "1719:48:5",
													"nodeType": "YulBlock",
													"src": "1719:48:5",
													"statements": [
														{
															"nativeSrc": "1729:32:5",
															"nodeType": "YulAssignment",
															"src": "1729:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1754:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1754:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1747:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1747:6:5"
																		},
																		"nativeSrc": "1747:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1747:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1740:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:5"
																},
																"nativeSrc": "1740:21:5",
																"nodeType": "YulFunctionCall",
																"src": "1740:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1729:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1729:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1677:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1701:5:5",
														"nodeType": "YulTypedName",
														"src": "1701:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1711:7:5",
														"nodeType": "YulTypedName",
														"src": "1711:7:5",
														"type": ""
													}
												],
												"src": "1677:90:5"
											},
											{
												"body": {
													"nativeSrc": "1832:50:5",
													"nodeType": "YulBlock",
													"src": "1832:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1849:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1849:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1854:14:5",
																			"nodeType": "YulIdentifier",
																			"src": "1854:14:5"
																		},
																		"nativeSrc": "1854:21:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1854:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1842:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1842:6:5"
																},
																"nativeSrc": "1842:34:5",
																"nodeType": "YulFunctionCall",
																"src": "1842:34:5"
															},
															"nativeSrc": "1842:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "1842:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1773:109:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1820:5:5",
														"nodeType": "YulTypedName",
														"src": "1820:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1827:3:5",
														"nodeType": "YulTypedName",
														"src": "1827:3:5",
														"type": ""
													}
												],
												"src": "1773:109:5"
											},
											{
												"body": {
													"nativeSrc": "1980:118:5",
													"nodeType": "YulBlock",
													"src": "1980:118:5",
													"statements": [
														{
															"nativeSrc": "1990:26:5",
															"nodeType": "YulAssignment",
															"src": "1990:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2002:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2002:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2013:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2013:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1998:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1998:3:5"
																},
																"nativeSrc": "1998:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1998:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1990:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1990:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2064:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2064:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2077:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2077:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2088:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2088:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2073:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2073:3:5"
																		},
																		"nativeSrc": "2073:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2073:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2026:37:5",
																	"nodeType": "YulIdentifier",
																	"src": "2026:37:5"
																},
																"nativeSrc": "2026:65:5",
																"nodeType": "YulFunctionCall",
																"src": "2026:65:5"
															},
															"nativeSrc": "2026:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "2026:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1888:210:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1952:9:5",
														"nodeType": "YulTypedName",
														"src": "1952:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1964:6:5",
														"nodeType": "YulTypedName",
														"src": "1964:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1975:4:5",
														"nodeType": "YulTypedName",
														"src": "1975:4:5",
														"type": ""
													}
												],
												"src": "1888:210:5"
											},
											{
												"body": {
													"nativeSrc": "2169:53:5",
													"nodeType": "YulBlock",
													"src": "2169:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2186:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2186:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2209:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2209:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2191:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2191:17:5"
																		},
																		"nativeSrc": "2191:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2191:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2179:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2179:6:5"
																},
																"nativeSrc": "2179:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2179:37:5"
															},
															"nativeSrc": "2179:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2179:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2104:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2157:5:5",
														"nodeType": "YulTypedName",
														"src": "2157:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2164:3:5",
														"nodeType": "YulTypedName",
														"src": "2164:3:5",
														"type": ""
													}
												],
												"src": "2104:118:5"
											},
											{
												"body": {
													"nativeSrc": "2326:124:5",
													"nodeType": "YulBlock",
													"src": "2326:124:5",
													"statements": [
														{
															"nativeSrc": "2336:26:5",
															"nodeType": "YulAssignment",
															"src": "2336:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2348:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2348:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2359:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2359:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2344:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2344:3:5"
																},
																"nativeSrc": "2344:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2344:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2336:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2336:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2416:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2416:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2429:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2429:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2440:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2440:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2425:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2425:3:5"
																		},
																		"nativeSrc": "2425:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2425:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2372:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2372:43:5"
																},
																"nativeSrc": "2372:71:5",
																"nodeType": "YulFunctionCall",
																"src": "2372:71:5"
															},
															"nativeSrc": "2372:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "2372:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2228:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2298:9:5",
														"nodeType": "YulTypedName",
														"src": "2298:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2310:6:5",
														"nodeType": "YulTypedName",
														"src": "2310:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2321:4:5",
														"nodeType": "YulTypedName",
														"src": "2321:4:5",
														"type": ""
													}
												],
												"src": "2228:222:5"
											},
											{
												"body": {
													"nativeSrc": "2556:519:5",
													"nodeType": "YulBlock",
													"src": "2556:519:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2602:83:5",
																"nodeType": "YulBlock",
																"src": "2602:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2604:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2604:77:5"
																			},
																			"nativeSrc": "2604:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2604:79:5"
																		},
																		"nativeSrc": "2604:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2604:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2577:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2577:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2586:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2586:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2573:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2573:3:5"
																		},
																		"nativeSrc": "2573:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2573:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2598:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2598:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2569:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2569:3:5"
																},
																"nativeSrc": "2569:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2569:32:5"
															},
															"nativeSrc": "2566:119:5",
															"nodeType": "YulIf",
															"src": "2566:119:5"
														},
														{
															"nativeSrc": "2695:117:5",
															"nodeType": "YulBlock",
															"src": "2695:117:5",
															"statements": [
																{
																	"nativeSrc": "2710:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2710:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2724:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2724:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2714:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2714:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2739:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2739:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2774:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2774:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2785:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2785:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2770:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2770:3:5"
																				},
																				"nativeSrc": "2770:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2770:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2794:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2794:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2749:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2749:20:5"
																		},
																		"nativeSrc": "2749:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2749:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2739:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2739:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2822:118:5",
															"nodeType": "YulBlock",
															"src": "2822:118:5",
															"statements": [
																{
																	"nativeSrc": "2837:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2837:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2851:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2851:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2841:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2841:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2867:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2867:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2902:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2902:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2913:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2913:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2898:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2898:3:5"
																				},
																				"nativeSrc": "2898:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2898:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2922:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2922:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2877:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2877:20:5"
																		},
																		"nativeSrc": "2877:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2877:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2867:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2867:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2950:118:5",
															"nodeType": "YulBlock",
															"src": "2950:118:5",
															"statements": [
																{
																	"nativeSrc": "2965:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2965:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2979:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2979:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2969:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2969:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2995:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2995:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3030:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3030:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3041:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3041:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3026:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3026:3:5"
																				},
																				"nativeSrc": "3026:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3026:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3050:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3050:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3005:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3005:20:5"
																		},
																		"nativeSrc": "3005:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3005:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2995:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2995:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2456:619:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2510:9:5",
														"nodeType": "YulTypedName",
														"src": "2510:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2521:7:5",
														"nodeType": "YulTypedName",
														"src": "2521:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2533:6:5",
														"nodeType": "YulTypedName",
														"src": "2533:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2541:6:5",
														"nodeType": "YulTypedName",
														"src": "2541:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2549:6:5",
														"nodeType": "YulTypedName",
														"src": "2549:6:5",
														"type": ""
													}
												],
												"src": "2456:619:5"
											},
											{
												"body": {
													"nativeSrc": "3147:263:5",
													"nodeType": "YulBlock",
													"src": "3147:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3193:83:5",
																"nodeType": "YulBlock",
																"src": "3193:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3195:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "3195:77:5"
																			},
																			"nativeSrc": "3195:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3195:79:5"
																		},
																		"nativeSrc": "3195:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3195:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3168:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3168:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3177:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3177:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3164:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3164:3:5"
																		},
																		"nativeSrc": "3164:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3164:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3189:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3189:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3160:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3160:3:5"
																},
																"nativeSrc": "3160:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3160:32:5"
															},
															"nativeSrc": "3157:119:5",
															"nodeType": "YulIf",
															"src": "3157:119:5"
														},
														{
															"nativeSrc": "3286:117:5",
															"nodeType": "YulBlock",
															"src": "3286:117:5",
															"statements": [
																{
																	"nativeSrc": "3301:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3301:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3315:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3315:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3305:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3305:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3330:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3330:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3365:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3365:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3376:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3376:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3361:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3361:3:5"
																				},
																				"nativeSrc": "3361:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3385:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3385:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3340:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3340:20:5"
																		},
																		"nativeSrc": "3340:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3340:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3330:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3330:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3081:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3117:9:5",
														"nodeType": "YulTypedName",
														"src": "3117:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3128:7:5",
														"nodeType": "YulTypedName",
														"src": "3128:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3140:6:5",
														"nodeType": "YulTypedName",
														"src": "3140:6:5",
														"type": ""
													}
												],
												"src": "3081:329:5"
											},
											{
												"body": {
													"nativeSrc": "3482:263:5",
													"nodeType": "YulBlock",
													"src": "3482:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3528:83:5",
																"nodeType": "YulBlock",
																"src": "3528:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3530:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "3530:77:5"
																			},
																			"nativeSrc": "3530:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3530:79:5"
																		},
																		"nativeSrc": "3530:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3530:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3503:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3503:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3512:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3512:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3499:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:5"
																		},
																		"nativeSrc": "3499:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3499:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3524:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3524:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3495:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3495:3:5"
																},
																"nativeSrc": "3495:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3495:32:5"
															},
															"nativeSrc": "3492:119:5",
															"nodeType": "YulIf",
															"src": "3492:119:5"
														},
														{
															"nativeSrc": "3621:117:5",
															"nodeType": "YulBlock",
															"src": "3621:117:5",
															"statements": [
																{
																	"nativeSrc": "3636:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3636:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3650:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3650:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3640:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3640:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3665:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3665:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3700:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3700:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3711:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3711:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3696:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3696:3:5"
																				},
																				"nativeSrc": "3696:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3696:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3720:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3720:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3675:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3675:20:5"
																		},
																		"nativeSrc": "3675:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3675:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3665:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3665:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3416:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3452:9:5",
														"nodeType": "YulTypedName",
														"src": "3452:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3463:7:5",
														"nodeType": "YulTypedName",
														"src": "3463:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3475:6:5",
														"nodeType": "YulTypedName",
														"src": "3475:6:5",
														"type": ""
													}
												],
												"src": "3416:329:5"
											},
											{
												"body": {
													"nativeSrc": "3834:391:5",
													"nodeType": "YulBlock",
													"src": "3834:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3880:83:5",
																"nodeType": "YulBlock",
																"src": "3880:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3882:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "3882:77:5"
																			},
																			"nativeSrc": "3882:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3882:79:5"
																		},
																		"nativeSrc": "3882:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3882:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3855:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3855:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3864:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3864:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3851:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3851:3:5"
																		},
																		"nativeSrc": "3851:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3851:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3876:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3876:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3847:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3847:3:5"
																},
																"nativeSrc": "3847:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3847:32:5"
															},
															"nativeSrc": "3844:119:5",
															"nodeType": "YulIf",
															"src": "3844:119:5"
														},
														{
															"nativeSrc": "3973:117:5",
															"nodeType": "YulBlock",
															"src": "3973:117:5",
															"statements": [
																{
																	"nativeSrc": "3988:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3988:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4002:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4002:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3992:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3992:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4017:63:5",
																	"nodeType": "YulAssignment",
																	"src": "4017:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4052:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "4052:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4063:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4063:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4048:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4048:3:5"
																				},
																				"nativeSrc": "4048:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4048:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4072:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4072:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4027:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "4027:20:5"
																		},
																		"nativeSrc": "4027:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4027:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4017:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "4017:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4100:118:5",
															"nodeType": "YulBlock",
															"src": "4100:118:5",
															"statements": [
																{
																	"nativeSrc": "4115:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4115:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4129:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4129:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4119:6:5",
																			"nodeType": "YulTypedName",
																			"src": "4119:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4145:63:5",
																	"nodeType": "YulAssignment",
																	"src": "4145:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4180:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "4180:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4191:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4191:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4176:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4176:3:5"
																				},
																				"nativeSrc": "4176:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4176:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4200:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4200:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4155:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "4155:20:5"
																		},
																		"nativeSrc": "4155:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4155:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4145:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "4145:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3751:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3796:9:5",
														"nodeType": "YulTypedName",
														"src": "3796:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3807:7:5",
														"nodeType": "YulTypedName",
														"src": "3807:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3819:6:5",
														"nodeType": "YulTypedName",
														"src": "3819:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3827:6:5",
														"nodeType": "YulTypedName",
														"src": "3827:6:5",
														"type": ""
													}
												],
												"src": "3751:474:5"
											},
											{
												"body": {
													"nativeSrc": "4327:73:5",
													"nodeType": "YulBlock",
													"src": "4327:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4344:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4344:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4349:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4337:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4337:6:5"
																},
																"nativeSrc": "4337:19:5",
																"nodeType": "YulFunctionCall",
																"src": "4337:19:5"
															},
															"nativeSrc": "4337:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "4337:19:5"
														},
														{
															"nativeSrc": "4365:29:5",
															"nodeType": "YulAssignment",
															"src": "4365:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4384:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4384:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4389:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4389:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4380:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:5"
																},
																"nativeSrc": "4380:14:5",
																"nodeType": "YulFunctionCall",
																"src": "4380:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4365:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "4365:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4231:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4299:3:5",
														"nodeType": "YulTypedName",
														"src": "4299:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4304:6:5",
														"nodeType": "YulTypedName",
														"src": "4304:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4315:11:5",
														"nodeType": "YulTypedName",
														"src": "4315:11:5",
														"type": ""
													}
												],
												"src": "4231:169:5"
											},
											{
												"body": {
													"nativeSrc": "4512:117:5",
													"nodeType": "YulBlock",
													"src": "4512:117:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4534:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4534:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4542:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4542:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4530:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4530:3:5"
																		},
																		"nativeSrc": "4530:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4530:14:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "4546:34:5",
																		"nodeType": "YulLiteral",
																		"src": "4546:34:5",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4523:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4523:6:5"
																},
																"nativeSrc": "4523:58:5",
																"nodeType": "YulFunctionCall",
																"src": "4523:58:5"
															},
															"nativeSrc": "4523:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "4523:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4602:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4602:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4610:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4610:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4598:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4598:3:5"
																		},
																		"nativeSrc": "4598:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4598:15:5"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "4615:6:5",
																		"nodeType": "YulLiteral",
																		"src": "4615:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4591:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4591:6:5"
																},
																"nativeSrc": "4591:31:5",
																"nodeType": "YulFunctionCall",
																"src": "4591:31:5"
															},
															"nativeSrc": "4591:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "4591:31:5"
														}
													]
												},
												"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
												"nativeSrc": "4406:223:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4504:6:5",
														"nodeType": "YulTypedName",
														"src": "4504:6:5",
														"type": ""
													}
												],
												"src": "4406:223:5"
											},
											{
												"body": {
													"nativeSrc": "4781:220:5",
													"nodeType": "YulBlock",
													"src": "4781:220:5",
													"statements": [
														{
															"nativeSrc": "4791:74:5",
															"nodeType": "YulAssignment",
															"src": "4791:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4857:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4857:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4862:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4862:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4798:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "4798:58:5"
																},
																"nativeSrc": "4798:67:5",
																"nodeType": "YulFunctionCall",
																"src": "4798:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4791:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4791:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4963:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4963:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																	"nativeSrc": "4874:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "4874:88:5"
																},
																"nativeSrc": "4874:93:5",
																"nodeType": "YulFunctionCall",
																"src": "4874:93:5"
															},
															"nativeSrc": "4874:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "4874:93:5"
														},
														{
															"nativeSrc": "4976:19:5",
															"nodeType": "YulAssignment",
															"src": "4976:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4987:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4987:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4992:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4992:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4983:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4983:3:5"
																},
																"nativeSrc": "4983:12:5",
																"nodeType": "YulFunctionCall",
																"src": "4983:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4976:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4976:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4635:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4769:3:5",
														"nodeType": "YulTypedName",
														"src": "4769:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4777:3:5",
														"nodeType": "YulTypedName",
														"src": "4777:3:5",
														"type": ""
													}
												],
												"src": "4635:366:5"
											},
											{
												"body": {
													"nativeSrc": "5178:248:5",
													"nodeType": "YulBlock",
													"src": "5178:248:5",
													"statements": [
														{
															"nativeSrc": "5188:26:5",
															"nodeType": "YulAssignment",
															"src": "5188:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5200:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5200:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5211:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5211:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5196:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5196:3:5"
																},
																"nativeSrc": "5196:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5196:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5188:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5188:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5235:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5235:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5246:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5246:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5231:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5231:3:5"
																		},
																		"nativeSrc": "5231:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5231:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5254:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "5254:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5260:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5260:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5250:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5250:3:5"
																		},
																		"nativeSrc": "5250:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5250:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5224:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5224:6:5"
																},
																"nativeSrc": "5224:47:5",
																"nodeType": "YulFunctionCall",
																"src": "5224:47:5"
															},
															"nativeSrc": "5224:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "5224:47:5"
														},
														{
															"nativeSrc": "5280:139:5",
															"nodeType": "YulAssignment",
															"src": "5280:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5414:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "5414:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5288:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "5288:124:5"
																},
																"nativeSrc": "5288:131:5",
																"nodeType": "YulFunctionCall",
																"src": "5288:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5280:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5280:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5007:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5158:9:5",
														"nodeType": "YulTypedName",
														"src": "5158:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5173:4:5",
														"nodeType": "YulTypedName",
														"src": "5173:4:5",
														"type": ""
													}
												],
												"src": "5007:419:5"
											},
											{
												"body": {
													"nativeSrc": "5538:115:5",
													"nodeType": "YulBlock",
													"src": "5538:115:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5560:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5560:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5568:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5568:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5556:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5556:3:5"
																		},
																		"nativeSrc": "5556:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5556:14:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "5572:34:5",
																		"nodeType": "YulLiteral",
																		"src": "5572:34:5",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5549:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5549:6:5"
																},
																"nativeSrc": "5549:58:5",
																"nodeType": "YulFunctionCall",
																"src": "5549:58:5"
															},
															"nativeSrc": "5549:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "5549:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5628:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5628:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5636:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5636:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5624:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5624:3:5"
																		},
																		"nativeSrc": "5624:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5624:15:5"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "5641:4:5",
																		"nodeType": "YulLiteral",
																		"src": "5641:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5617:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5617:6:5"
																},
																"nativeSrc": "5617:29:5",
																"nodeType": "YulFunctionCall",
																"src": "5617:29:5"
															},
															"nativeSrc": "5617:29:5",
															"nodeType": "YulExpressionStatement",
															"src": "5617:29:5"
														}
													]
												},
												"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
												"nativeSrc": "5432:221:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5530:6:5",
														"nodeType": "YulTypedName",
														"src": "5530:6:5",
														"type": ""
													}
												],
												"src": "5432:221:5"
											},
											{
												"body": {
													"nativeSrc": "5805:220:5",
													"nodeType": "YulBlock",
													"src": "5805:220:5",
													"statements": [
														{
															"nativeSrc": "5815:74:5",
															"nodeType": "YulAssignment",
															"src": "5815:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5881:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5881:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5886:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5886:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5822:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "5822:58:5"
																},
																"nativeSrc": "5822:67:5",
																"nodeType": "YulFunctionCall",
																"src": "5822:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5815:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5815:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5987:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5987:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																	"nativeSrc": "5898:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "5898:88:5"
																},
																"nativeSrc": "5898:93:5",
																"nodeType": "YulFunctionCall",
																"src": "5898:93:5"
															},
															"nativeSrc": "5898:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "5898:93:5"
														},
														{
															"nativeSrc": "6000:19:5",
															"nodeType": "YulAssignment",
															"src": "6000:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6011:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6011:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6016:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6016:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6007:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6007:3:5"
																},
																"nativeSrc": "6007:12:5",
																"nodeType": "YulFunctionCall",
																"src": "6007:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6000:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6000:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5659:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5793:3:5",
														"nodeType": "YulTypedName",
														"src": "5793:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5801:3:5",
														"nodeType": "YulTypedName",
														"src": "5801:3:5",
														"type": ""
													}
												],
												"src": "5659:366:5"
											},
											{
												"body": {
													"nativeSrc": "6202:248:5",
													"nodeType": "YulBlock",
													"src": "6202:248:5",
													"statements": [
														{
															"nativeSrc": "6212:26:5",
															"nodeType": "YulAssignment",
															"src": "6212:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6224:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6224:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6235:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6235:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6220:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6220:3:5"
																},
																"nativeSrc": "6220:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6220:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6212:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6212:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6259:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6259:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6270:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6270:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6255:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6255:3:5"
																		},
																		"nativeSrc": "6255:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6255:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6278:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "6278:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6284:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6284:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6274:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6274:3:5"
																		},
																		"nativeSrc": "6274:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6274:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6248:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6248:6:5"
																},
																"nativeSrc": "6248:47:5",
																"nodeType": "YulFunctionCall",
																"src": "6248:47:5"
															},
															"nativeSrc": "6248:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "6248:47:5"
														},
														{
															"nativeSrc": "6304:139:5",
															"nodeType": "YulAssignment",
															"src": "6304:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6438:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "6438:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6312:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "6312:124:5"
																},
																"nativeSrc": "6312:131:5",
																"nodeType": "YulFunctionCall",
																"src": "6312:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6304:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6304:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6031:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6182:9:5",
														"nodeType": "YulTypedName",
														"src": "6182:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6197:4:5",
														"nodeType": "YulTypedName",
														"src": "6197:4:5",
														"type": ""
													}
												],
												"src": "6031:419:5"
											},
											{
												"body": {
													"nativeSrc": "6562:118:5",
													"nodeType": "YulBlock",
													"src": "6562:118:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6584:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6584:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6592:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6592:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6580:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6580:3:5"
																		},
																		"nativeSrc": "6580:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6580:14:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "6596:34:5",
																		"nodeType": "YulLiteral",
																		"src": "6596:34:5",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6573:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6573:6:5"
																},
																"nativeSrc": "6573:58:5",
																"nodeType": "YulFunctionCall",
																"src": "6573:58:5"
															},
															"nativeSrc": "6573:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "6573:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6652:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6652:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6660:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6660:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6648:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6648:3:5"
																		},
																		"nativeSrc": "6648:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6648:15:5"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "6665:7:5",
																		"nodeType": "YulLiteral",
																		"src": "6665:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6641:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6641:6:5"
																},
																"nativeSrc": "6641:32:5",
																"nodeType": "YulFunctionCall",
																"src": "6641:32:5"
															},
															"nativeSrc": "6641:32:5",
															"nodeType": "YulExpressionStatement",
															"src": "6641:32:5"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nativeSrc": "6456:224:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6554:6:5",
														"nodeType": "YulTypedName",
														"src": "6554:6:5",
														"type": ""
													}
												],
												"src": "6456:224:5"
											},
											{
												"body": {
													"nativeSrc": "6832:220:5",
													"nodeType": "YulBlock",
													"src": "6832:220:5",
													"statements": [
														{
															"nativeSrc": "6842:74:5",
															"nodeType": "YulAssignment",
															"src": "6842:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6908:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6908:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6913:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6913:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6849:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "6849:58:5"
																},
																"nativeSrc": "6849:67:5",
																"nodeType": "YulFunctionCall",
																"src": "6849:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6842:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6842:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7014:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7014:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nativeSrc": "6925:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "6925:88:5"
																},
																"nativeSrc": "6925:93:5",
																"nodeType": "YulFunctionCall",
																"src": "6925:93:5"
															},
															"nativeSrc": "6925:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "6925:93:5"
														},
														{
															"nativeSrc": "7027:19:5",
															"nodeType": "YulAssignment",
															"src": "7027:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7038:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7038:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7043:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7043:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7034:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7034:3:5"
																},
																"nativeSrc": "7034:12:5",
																"nodeType": "YulFunctionCall",
																"src": "7034:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7027:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7027:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6686:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6820:3:5",
														"nodeType": "YulTypedName",
														"src": "6820:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6828:3:5",
														"nodeType": "YulTypedName",
														"src": "6828:3:5",
														"type": ""
													}
												],
												"src": "6686:366:5"
											},
											{
												"body": {
													"nativeSrc": "7229:248:5",
													"nodeType": "YulBlock",
													"src": "7229:248:5",
													"statements": [
														{
															"nativeSrc": "7239:26:5",
															"nodeType": "YulAssignment",
															"src": "7239:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7251:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7251:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7262:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7262:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7247:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7247:3:5"
																},
																"nativeSrc": "7247:18:5",
																"nodeType": "YulFunctionCall",
																"src": "7247:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7239:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7239:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7286:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7286:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7297:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7297:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7282:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7282:3:5"
																		},
																		"nativeSrc": "7282:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7282:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7305:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "7305:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7311:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7311:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7301:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7301:3:5"
																		},
																		"nativeSrc": "7301:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7301:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7275:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7275:6:5"
																},
																"nativeSrc": "7275:47:5",
																"nodeType": "YulFunctionCall",
																"src": "7275:47:5"
															},
															"nativeSrc": "7275:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "7275:47:5"
														},
														{
															"nativeSrc": "7331:139:5",
															"nodeType": "YulAssignment",
															"src": "7331:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7465:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "7465:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7339:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "7339:124:5"
																},
																"nativeSrc": "7339:131:5",
																"nodeType": "YulFunctionCall",
																"src": "7339:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7331:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7331:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7058:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7209:9:5",
														"nodeType": "YulTypedName",
														"src": "7209:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7224:4:5",
														"nodeType": "YulTypedName",
														"src": "7224:4:5",
														"type": ""
													}
												],
												"src": "7058:419:5"
											},
											{
												"body": {
													"nativeSrc": "7589:116:5",
													"nodeType": "YulBlock",
													"src": "7589:116:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7611:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7611:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7619:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7619:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7607:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7607:3:5"
																		},
																		"nativeSrc": "7607:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7607:14:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "7623:34:5",
																		"nodeType": "YulLiteral",
																		"src": "7623:34:5",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7600:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7600:6:5"
																},
																"nativeSrc": "7600:58:5",
																"nodeType": "YulFunctionCall",
																"src": "7600:58:5"
															},
															"nativeSrc": "7600:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "7600:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7679:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7679:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7687:2:5",
																				"nodeType": "YulLiteral",
																				"src": "7687:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7675:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7675:3:5"
																		},
																		"nativeSrc": "7675:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7675:15:5"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "7692:5:5",
																		"nodeType": "YulLiteral",
																		"src": "7692:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7668:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7668:6:5"
																},
																"nativeSrc": "7668:30:5",
																"nodeType": "YulFunctionCall",
																"src": "7668:30:5"
															},
															"nativeSrc": "7668:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "7668:30:5"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nativeSrc": "7483:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7581:6:5",
														"nodeType": "YulTypedName",
														"src": "7581:6:5",
														"type": ""
													}
												],
												"src": "7483:222:5"
											},
											{
												"body": {
													"nativeSrc": "7857:220:5",
													"nodeType": "YulBlock",
													"src": "7857:220:5",
													"statements": [
														{
															"nativeSrc": "7867:74:5",
															"nodeType": "YulAssignment",
															"src": "7867:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7933:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7933:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7938:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7938:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7874:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "7874:58:5"
																},
																"nativeSrc": "7874:67:5",
																"nodeType": "YulFunctionCall",
																"src": "7874:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7867:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7867:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8039:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8039:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nativeSrc": "7950:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "7950:88:5"
																},
																"nativeSrc": "7950:93:5",
																"nodeType": "YulFunctionCall",
																"src": "7950:93:5"
															},
															"nativeSrc": "7950:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "7950:93:5"
														},
														{
															"nativeSrc": "8052:19:5",
															"nodeType": "YulAssignment",
															"src": "8052:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8063:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8063:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8068:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8068:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8059:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8059:3:5"
																},
																"nativeSrc": "8059:12:5",
																"nodeType": "YulFunctionCall",
																"src": "8059:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8052:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8052:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7711:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7845:3:5",
														"nodeType": "YulTypedName",
														"src": "7845:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7853:3:5",
														"nodeType": "YulTypedName",
														"src": "7853:3:5",
														"type": ""
													}
												],
												"src": "7711:366:5"
											},
											{
												"body": {
													"nativeSrc": "8254:248:5",
													"nodeType": "YulBlock",
													"src": "8254:248:5",
													"statements": [
														{
															"nativeSrc": "8264:26:5",
															"nodeType": "YulAssignment",
															"src": "8264:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8276:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8276:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8287:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8287:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8272:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8272:3:5"
																},
																"nativeSrc": "8272:18:5",
																"nodeType": "YulFunctionCall",
																"src": "8272:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8264:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8264:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8311:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8311:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8322:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8322:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8307:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8307:3:5"
																		},
																		"nativeSrc": "8307:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8307:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8330:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8330:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8336:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8336:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8326:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8326:3:5"
																		},
																		"nativeSrc": "8326:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8326:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8300:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8300:6:5"
																},
																"nativeSrc": "8300:47:5",
																"nodeType": "YulFunctionCall",
																"src": "8300:47:5"
															},
															"nativeSrc": "8300:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "8300:47:5"
														},
														{
															"nativeSrc": "8356:139:5",
															"nodeType": "YulAssignment",
															"src": "8356:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8490:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "8490:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8364:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "8364:124:5"
																},
																"nativeSrc": "8364:131:5",
																"nodeType": "YulFunctionCall",
																"src": "8364:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8356:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8356:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8083:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8234:9:5",
														"nodeType": "YulTypedName",
														"src": "8234:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8249:4:5",
														"nodeType": "YulTypedName",
														"src": "8249:4:5",
														"type": ""
													}
												],
												"src": "8083:419:5"
											},
											{
												"body": {
													"nativeSrc": "8567:40:5",
													"nodeType": "YulBlock",
													"src": "8567:40:5",
													"statements": [
														{
															"nativeSrc": "8578:22:5",
															"nodeType": "YulAssignment",
															"src": "8578:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8594:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8594:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8588:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8588:5:5"
																},
																"nativeSrc": "8588:12:5",
																"nodeType": "YulFunctionCall",
																"src": "8588:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8578:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8578:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "8508:99:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8550:5:5",
														"nodeType": "YulTypedName",
														"src": "8550:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8560:6:5",
														"nodeType": "YulTypedName",
														"src": "8560:6:5",
														"type": ""
													}
												],
												"src": "8508:99:5"
											},
											{
												"body": {
													"nativeSrc": "8675:184:5",
													"nodeType": "YulBlock",
													"src": "8675:184:5",
													"statements": [
														{
															"nativeSrc": "8685:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "8685:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "8694:1:5",
																"nodeType": "YulLiteral",
																"src": "8694:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "8689:1:5",
																	"nodeType": "YulTypedName",
																	"src": "8689:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8754:63:5",
																"nodeType": "YulBlock",
																"src": "8754:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "8779:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "8779:3:5"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "8784:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "8784:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "8775:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "8775:3:5"
																					},
																					"nativeSrc": "8775:11:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8775:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "8798:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "8798:3:5"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "8803:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "8803:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8794:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "8794:3:5"
																							},
																							"nativeSrc": "8794:11:5",
																							"nodeType": "YulFunctionCall",
																							"src": "8794:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "8788:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "8788:5:5"
																					},
																					"nativeSrc": "8788:18:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8788:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8768:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8768:6:5"
																			},
																			"nativeSrc": "8768:39:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8768:39:5"
																		},
																		"nativeSrc": "8768:39:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8768:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "8715:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8715:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8718:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8718:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8712:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "8712:2:5"
																},
																"nativeSrc": "8712:13:5",
																"nodeType": "YulFunctionCall",
																"src": "8712:13:5"
															},
															"nativeSrc": "8704:113:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8726:19:5",
																"nodeType": "YulBlock",
																"src": "8726:19:5",
																"statements": [
																	{
																		"nativeSrc": "8728:15:5",
																		"nodeType": "YulAssignment",
																		"src": "8728:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "8737:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "8737:1:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8740:2:5",
																					"nodeType": "YulLiteral",
																					"src": "8740:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8733:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "8733:3:5"
																			},
																			"nativeSrc": "8733:10:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8733:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "8728:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "8728:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "8708:3:5",
																"nodeType": "YulBlock",
																"src": "8708:3:5",
																"statements": []
															},
															"src": "8704:113:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8837:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "8837:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8842:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8842:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8833:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8833:3:5"
																		},
																		"nativeSrc": "8833:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8833:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8851:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8851:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8826:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8826:6:5"
																},
																"nativeSrc": "8826:27:5",
																"nodeType": "YulFunctionCall",
																"src": "8826:27:5"
															},
															"nativeSrc": "8826:27:5",
															"nodeType": "YulExpressionStatement",
															"src": "8826:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "8613:246:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8657:3:5",
														"nodeType": "YulTypedName",
														"src": "8657:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8662:3:5",
														"nodeType": "YulTypedName",
														"src": "8662:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8667:6:5",
														"nodeType": "YulTypedName",
														"src": "8667:6:5",
														"type": ""
													}
												],
												"src": "8613:246:5"
											},
											{
												"body": {
													"nativeSrc": "8913:54:5",
													"nodeType": "YulBlock",
													"src": "8913:54:5",
													"statements": [
														{
															"nativeSrc": "8923:38:5",
															"nodeType": "YulAssignment",
															"src": "8923:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8941:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8941:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8948:2:5",
																				"nodeType": "YulLiteral",
																				"src": "8948:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8937:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8937:3:5"
																		},
																		"nativeSrc": "8937:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8937:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8957:2:5",
																				"nodeType": "YulLiteral",
																				"src": "8957:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "8953:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8953:3:5"
																		},
																		"nativeSrc": "8953:7:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8953:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8933:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8933:3:5"
																},
																"nativeSrc": "8933:28:5",
																"nodeType": "YulFunctionCall",
																"src": "8933:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "8923:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8923:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "8865:102:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8896:5:5",
														"nodeType": "YulTypedName",
														"src": "8896:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "8906:6:5",
														"nodeType": "YulTypedName",
														"src": "8906:6:5",
														"type": ""
													}
												],
												"src": "8865:102:5"
											},
											{
												"body": {
													"nativeSrc": "9065:285:5",
													"nodeType": "YulBlock",
													"src": "9065:285:5",
													"statements": [
														{
															"nativeSrc": "9075:53:5",
															"nodeType": "YulVariableDeclaration",
															"src": "9075:53:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9122:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9122:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "9089:32:5",
																	"nodeType": "YulIdentifier",
																	"src": "9089:32:5"
																},
																"nativeSrc": "9089:39:5",
																"nodeType": "YulFunctionCall",
																"src": "9089:39:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9079:6:5",
																	"nodeType": "YulTypedName",
																	"src": "9079:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9137:78:5",
															"nodeType": "YulAssignment",
															"src": "9137:78:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9203:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9203:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9208:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9208:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9144:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "9144:58:5"
																},
																"nativeSrc": "9144:71:5",
																"nodeType": "YulFunctionCall",
																"src": "9144:71:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9137:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9137:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9263:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "9263:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9270:4:5",
																				"nodeType": "YulLiteral",
																				"src": "9270:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9259:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9259:3:5"
																		},
																		"nativeSrc": "9259:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9259:16:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "9277:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9277:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9282:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9282:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "9224:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "9224:34:5"
																},
																"nativeSrc": "9224:65:5",
																"nodeType": "YulFunctionCall",
																"src": "9224:65:5"
															},
															"nativeSrc": "9224:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "9224:65:5"
														},
														{
															"nativeSrc": "9298:46:5",
															"nodeType": "YulAssignment",
															"src": "9298:46:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9309:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9309:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9336:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9336:6:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "9314:21:5",
																			"nodeType": "YulIdentifier",
																			"src": "9314:21:5"
																		},
																		"nativeSrc": "9314:29:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9314:29:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9305:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9305:3:5"
																},
																"nativeSrc": "9305:39:5",
																"nodeType": "YulFunctionCall",
																"src": "9305:39:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9298:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9298:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8973:377:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9046:5:5",
														"nodeType": "YulTypedName",
														"src": "9046:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9053:3:5",
														"nodeType": "YulTypedName",
														"src": "9053:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9061:3:5",
														"nodeType": "YulTypedName",
														"src": "9061:3:5",
														"type": ""
													}
												],
												"src": "8973:377:5"
											},
											{
												"body": {
													"nativeSrc": "9474:195:5",
													"nodeType": "YulBlock",
													"src": "9474:195:5",
													"statements": [
														{
															"nativeSrc": "9484:26:5",
															"nodeType": "YulAssignment",
															"src": "9484:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9496:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9496:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9507:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9507:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9492:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9492:3:5"
																},
																"nativeSrc": "9492:18:5",
																"nodeType": "YulFunctionCall",
																"src": "9492:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9484:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9484:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9531:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9531:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9542:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9542:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9527:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9527:3:5"
																		},
																		"nativeSrc": "9527:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9527:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9550:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9550:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9556:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9556:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9546:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9546:3:5"
																		},
																		"nativeSrc": "9546:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9546:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9520:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9520:6:5"
																},
																"nativeSrc": "9520:47:5",
																"nodeType": "YulFunctionCall",
																"src": "9520:47:5"
															},
															"nativeSrc": "9520:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "9520:47:5"
														},
														{
															"nativeSrc": "9576:86:5",
															"nodeType": "YulAssignment",
															"src": "9576:86:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9648:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9648:6:5"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "9657:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "9657:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9584:63:5",
																	"nodeType": "YulIdentifier",
																	"src": "9584:63:5"
																},
																"nativeSrc": "9584:78:5",
																"nodeType": "YulFunctionCall",
																"src": "9584:78:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9576:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9576:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9356:313:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9446:9:5",
														"nodeType": "YulTypedName",
														"src": "9446:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9458:6:5",
														"nodeType": "YulTypedName",
														"src": "9458:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9469:4:5",
														"nodeType": "YulTypedName",
														"src": "9469:4:5",
														"type": ""
													}
												],
												"src": "9356:313:5"
											},
											{
												"body": {
													"nativeSrc": "9703:152:5",
													"nodeType": "YulBlock",
													"src": "9703:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9720:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9720:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9723:77:5",
																		"nodeType": "YulLiteral",
																		"src": "9723:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9713:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9713:6:5"
																},
																"nativeSrc": "9713:88:5",
																"nodeType": "YulFunctionCall",
																"src": "9713:88:5"
															},
															"nativeSrc": "9713:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "9713:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9817:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9817:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9820:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9820:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9810:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9810:6:5"
																},
																"nativeSrc": "9810:15:5",
																"nodeType": "YulFunctionCall",
																"src": "9810:15:5"
															},
															"nativeSrc": "9810:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "9810:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9841:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9841:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9844:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9844:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9834:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9834:6:5"
																},
																"nativeSrc": "9834:15:5",
																"nodeType": "YulFunctionCall",
																"src": "9834:15:5"
															},
															"nativeSrc": "9834:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "9834:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9675:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "9675:180:5"
											},
											{
												"body": {
													"nativeSrc": "9906:149:5",
													"nodeType": "YulBlock",
													"src": "9906:149:5",
													"statements": [
														{
															"nativeSrc": "9916:25:5",
															"nodeType": "YulAssignment",
															"src": "9916:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9939:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9939:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9921:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "9921:17:5"
																},
																"nativeSrc": "9921:20:5",
																"nodeType": "YulFunctionCall",
																"src": "9921:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9916:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "9916:1:5"
																}
															]
														},
														{
															"nativeSrc": "9950:25:5",
															"nodeType": "YulAssignment",
															"src": "9950:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9973:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9973:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9955:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "9955:17:5"
																},
																"nativeSrc": "9955:20:5",
																"nodeType": "YulFunctionCall",
																"src": "9955:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9950:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "9950:1:5"
																}
															]
														},
														{
															"nativeSrc": "9984:17:5",
															"nodeType": "YulAssignment",
															"src": "9984:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9996:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9996:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9999:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9999:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9992:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9992:3:5"
																},
																"nativeSrc": "9992:9:5",
																"nodeType": "YulFunctionCall",
																"src": "9992:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9984:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9984:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10026:22:5",
																"nodeType": "YulBlock",
																"src": "10026:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10028:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "10028:16:5"
																			},
																			"nativeSrc": "10028:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "10028:18:5"
																		},
																		"nativeSrc": "10028:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "10028:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "10017:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "10017:4:5"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "10023:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "10023:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10014:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "10014:2:5"
																},
																"nativeSrc": "10014:11:5",
																"nodeType": "YulFunctionCall",
																"src": "10014:11:5"
															},
															"nativeSrc": "10011:37:5",
															"nodeType": "YulIf",
															"src": "10011:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "9861:194:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9892:1:5",
														"nodeType": "YulTypedName",
														"src": "9892:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9895:1:5",
														"nodeType": "YulTypedName",
														"src": "9895:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "9901:4:5",
														"nodeType": "YulTypedName",
														"src": "9901:4:5",
														"type": ""
													}
												],
												"src": "9861:194:5"
											},
											{
												"body": {
													"nativeSrc": "10105:147:5",
													"nodeType": "YulBlock",
													"src": "10105:147:5",
													"statements": [
														{
															"nativeSrc": "10115:25:5",
															"nodeType": "YulAssignment",
															"src": "10115:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10138:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "10138:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10120:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "10120:17:5"
																},
																"nativeSrc": "10120:20:5",
																"nodeType": "YulFunctionCall",
																"src": "10120:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10115:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "10115:1:5"
																}
															]
														},
														{
															"nativeSrc": "10149:25:5",
															"nodeType": "YulAssignment",
															"src": "10149:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10172:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "10172:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10154:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "10154:17:5"
																},
																"nativeSrc": "10154:20:5",
																"nodeType": "YulFunctionCall",
																"src": "10154:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10149:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "10149:1:5"
																}
															]
														},
														{
															"nativeSrc": "10183:16:5",
															"nodeType": "YulAssignment",
															"src": "10183:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10194:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "10194:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10197:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "10197:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10190:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10190:3:5"
																},
																"nativeSrc": "10190:9:5",
																"nodeType": "YulFunctionCall",
																"src": "10190:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10183:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10183:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10223:22:5",
																"nodeType": "YulBlock",
																"src": "10223:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10225:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "10225:16:5"
																			},
																			"nativeSrc": "10225:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "10225:18:5"
																		},
																		"nativeSrc": "10225:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "10225:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10215:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "10215:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10218:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10218:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10212:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "10212:2:5"
																},
																"nativeSrc": "10212:10:5",
																"nodeType": "YulFunctionCall",
																"src": "10212:10:5"
															},
															"nativeSrc": "10209:36:5",
															"nodeType": "YulIf",
															"src": "10209:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10061:191:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10092:1:5",
														"nodeType": "YulTypedName",
														"src": "10092:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10095:1:5",
														"nodeType": "YulTypedName",
														"src": "10095:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10101:3:5",
														"nodeType": "YulTypedName",
														"src": "10101:3:5",
														"type": ""
													}
												],
												"src": "10061:191:5"
											},
											{
												"body": {
													"nativeSrc": "10364:71:5",
													"nodeType": "YulBlock",
													"src": "10364:71:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10386:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "10386:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10394:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10394:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10382:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10382:3:5"
																		},
																		"nativeSrc": "10382:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10382:14:5"
																	},
																	{
																		"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
																		"kind": "string",
																		"nativeSrc": "10398:29:5",
																		"nodeType": "YulLiteral",
																		"src": "10398:29:5",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10375:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10375:6:5"
																},
																"nativeSrc": "10375:53:5",
																"nodeType": "YulFunctionCall",
																"src": "10375:53:5"
															},
															"nativeSrc": "10375:53:5",
															"nodeType": "YulExpressionStatement",
															"src": "10375:53:5"
														}
													]
												},
												"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
												"nativeSrc": "10258:177:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10356:6:5",
														"nodeType": "YulTypedName",
														"src": "10356:6:5",
														"type": ""
													}
												],
												"src": "10258:177:5"
											},
											{
												"body": {
													"nativeSrc": "10587:220:5",
													"nodeType": "YulBlock",
													"src": "10587:220:5",
													"statements": [
														{
															"nativeSrc": "10597:74:5",
															"nodeType": "YulAssignment",
															"src": "10597:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10663:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10663:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10668:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10668:2:5",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10604:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "10604:58:5"
																},
																"nativeSrc": "10604:67:5",
																"nodeType": "YulFunctionCall",
																"src": "10604:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10597:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10597:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10769:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10769:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																	"nativeSrc": "10680:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "10680:88:5"
																},
																"nativeSrc": "10680:93:5",
																"nodeType": "YulFunctionCall",
																"src": "10680:93:5"
															},
															"nativeSrc": "10680:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "10680:93:5"
														},
														{
															"nativeSrc": "10782:19:5",
															"nodeType": "YulAssignment",
															"src": "10782:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10793:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10793:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10798:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10798:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10789:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10789:3:5"
																},
																"nativeSrc": "10789:12:5",
																"nodeType": "YulFunctionCall",
																"src": "10789:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10782:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10782:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10441:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10575:3:5",
														"nodeType": "YulTypedName",
														"src": "10575:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10583:3:5",
														"nodeType": "YulTypedName",
														"src": "10583:3:5",
														"type": ""
													}
												],
												"src": "10441:366:5"
											},
											{
												"body": {
													"nativeSrc": "10984:248:5",
													"nodeType": "YulBlock",
													"src": "10984:248:5",
													"statements": [
														{
															"nativeSrc": "10994:26:5",
															"nodeType": "YulAssignment",
															"src": "10994:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11006:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "11006:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11017:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11017:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11002:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11002:3:5"
																},
																"nativeSrc": "11002:18:5",
																"nodeType": "YulFunctionCall",
																"src": "11002:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10994:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10994:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11041:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11041:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11052:1:5",
																				"nodeType": "YulLiteral",
																				"src": "11052:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11037:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11037:3:5"
																		},
																		"nativeSrc": "11037:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11037:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11060:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "11060:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11066:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11066:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11056:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11056:3:5"
																		},
																		"nativeSrc": "11056:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11056:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11030:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11030:6:5"
																},
																"nativeSrc": "11030:47:5",
																"nodeType": "YulFunctionCall",
																"src": "11030:47:5"
															},
															"nativeSrc": "11030:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "11030:47:5"
														},
														{
															"nativeSrc": "11086:139:5",
															"nodeType": "YulAssignment",
															"src": "11086:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11220:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "11220:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11094:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "11094:124:5"
																},
																"nativeSrc": "11094:131:5",
																"nodeType": "YulFunctionCall",
																"src": "11094:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11086:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "11086:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10813:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10964:9:5",
														"nodeType": "YulTypedName",
														"src": "10964:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10979:4:5",
														"nodeType": "YulTypedName",
														"src": "10979:4:5",
														"type": ""
													}
												],
												"src": "10813:419:5"
											},
											{
												"body": {
													"nativeSrc": "11344:114:5",
													"nodeType": "YulBlock",
													"src": "11344:114:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11366:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "11366:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11374:1:5",
																				"nodeType": "YulLiteral",
																				"src": "11374:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11362:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11362:3:5"
																		},
																		"nativeSrc": "11362:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11362:14:5"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nativeSrc": "11378:34:5",
																		"nodeType": "YulLiteral",
																		"src": "11378:34:5",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11355:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11355:6:5"
																},
																"nativeSrc": "11355:58:5",
																"nodeType": "YulFunctionCall",
																"src": "11355:58:5"
															},
															"nativeSrc": "11355:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "11355:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11434:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "11434:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11442:2:5",
																				"nodeType": "YulLiteral",
																				"src": "11442:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11430:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11430:3:5"
																		},
																		"nativeSrc": "11430:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11430:15:5"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nativeSrc": "11447:3:5",
																		"nodeType": "YulLiteral",
																		"src": "11447:3:5",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11423:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11423:6:5"
																},
																"nativeSrc": "11423:28:5",
																"nodeType": "YulFunctionCall",
																"src": "11423:28:5"
															},
															"nativeSrc": "11423:28:5",
															"nodeType": "YulExpressionStatement",
															"src": "11423:28:5"
														}
													]
												},
												"name": "store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
												"nativeSrc": "11238:220:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11336:6:5",
														"nodeType": "YulTypedName",
														"src": "11336:6:5",
														"type": ""
													}
												],
												"src": "11238:220:5"
											},
											{
												"body": {
													"nativeSrc": "11610:220:5",
													"nodeType": "YulBlock",
													"src": "11610:220:5",
													"statements": [
														{
															"nativeSrc": "11620:74:5",
															"nodeType": "YulAssignment",
															"src": "11620:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11686:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11686:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11691:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11691:2:5",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11627:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "11627:58:5"
																},
																"nativeSrc": "11627:67:5",
																"nodeType": "YulFunctionCall",
																"src": "11627:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11620:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11620:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11792:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11792:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																	"nativeSrc": "11703:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "11703:88:5"
																},
																"nativeSrc": "11703:93:5",
																"nodeType": "YulFunctionCall",
																"src": "11703:93:5"
															},
															"nativeSrc": "11703:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "11703:93:5"
														},
														{
															"nativeSrc": "11805:19:5",
															"nodeType": "YulAssignment",
															"src": "11805:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11816:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11816:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11821:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11821:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11812:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11812:3:5"
																},
																"nativeSrc": "11812:12:5",
																"nodeType": "YulFunctionCall",
																"src": "11812:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11805:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11805:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11464:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11598:3:5",
														"nodeType": "YulTypedName",
														"src": "11598:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11606:3:5",
														"nodeType": "YulTypedName",
														"src": "11606:3:5",
														"type": ""
													}
												],
												"src": "11464:366:5"
											},
											{
												"body": {
													"nativeSrc": "12007:248:5",
													"nodeType": "YulBlock",
													"src": "12007:248:5",
													"statements": [
														{
															"nativeSrc": "12017:26:5",
															"nodeType": "YulAssignment",
															"src": "12017:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12029:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "12029:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12040:2:5",
																		"nodeType": "YulLiteral",
																		"src": "12040:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12025:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12025:3:5"
																},
																"nativeSrc": "12025:18:5",
																"nodeType": "YulFunctionCall",
																"src": "12025:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12017:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "12017:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12064:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "12064:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12075:1:5",
																				"nodeType": "YulLiteral",
																				"src": "12075:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12060:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12060:3:5"
																		},
																		"nativeSrc": "12060:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12060:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12083:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "12083:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12089:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "12089:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12079:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12079:3:5"
																		},
																		"nativeSrc": "12079:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12079:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12053:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12053:6:5"
																},
																"nativeSrc": "12053:47:5",
																"nodeType": "YulFunctionCall",
																"src": "12053:47:5"
															},
															"nativeSrc": "12053:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "12053:47:5"
														},
														{
															"nativeSrc": "12109:139:5",
															"nodeType": "YulAssignment",
															"src": "12109:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12243:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "12243:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12117:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "12117:124:5"
																},
																"nativeSrc": "12117:131:5",
																"nodeType": "YulFunctionCall",
																"src": "12117:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12109:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "12109:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11836:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11987:9:5",
														"nodeType": "YulTypedName",
														"src": "11987:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12002:4:5",
														"nodeType": "YulTypedName",
														"src": "12002:4:5",
														"type": ""
													}
												],
												"src": "11836:419:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: addition overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn from the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061009c575f3560e01c806370a082311161006457806370a082311461016a57806379cc67901461019a578063a457c2d7146101b6578063a9059cbb146101e6578063dd62ed3e146102165761009c565b8063095ea7b3146100a057806318160ddd146100d057806323b872dd146100ee578063395093511461011e57806342966c681461014e575b5f80fd5b6100ba60048036038101906100b59190610da6565b610246565b6040516100c79190610dfe565b60405180910390f35b6100d8610263565b6040516100e59190610e26565b60405180910390f35b61010860048036038101906101039190610e3f565b61026c565b6040516101159190610dfe565b60405180910390f35b61013860048036038101906101339190610da6565b610340565b6040516101459190610dfe565b60405180910390f35b61016860048036038101906101639190610e8f565b6103ee565b005b610184600480360381019061017f9190610eba565b610402565b6040516101919190610e26565b60405180910390f35b6101b460048036038101906101af9190610da6565b610447565b005b6101d060048036038101906101cb9190610da6565b6104a8565b6040516101dd9190610dfe565b60405180910390f35b61020060048036038101906101fb9190610da6565b610570565b60405161020d9190610dfe565b60405180910390f35b610230600480360381019061022b9190610ee5565b61058d565b60405161023d9190610e26565b60405180910390f35b5f61025961025261060f565b8484610616565b6001905092915050565b5f600254905090565b5f6102788484846107d9565b6103358461028461060f565b610330856040518060600160405280602881526020016113d76028913960015f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6102e761060f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610a629092919063ffffffff16565b610616565b600190509392505050565b5f6103e461034c61060f565b846103df8560015f61035c61060f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610ac490919063ffffffff16565b610616565b6001905092915050565b6103ff6103f961060f565b82610b21565b50565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f610485826040518060600160405280602481526020016113ff602491396104768661047161060f565b61058d565b610a629092919063ffffffff16565b90506104998361049361060f565b83610616565b6104a38383610b21565b505050565b5f6105666104b461060f565b84610561856040518060600160405280602581526020016114236025913960015f6104dd61060f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610a629092919063ffffffff16565b610616565b6001905092915050565b5f61058361057c61060f565b84846107d9565b6001905092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610684576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067b90610fa3565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e990611031565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107cc9190610e26565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610847576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083e906110bf565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ac9061114d565b60405180910390fd5b6108c0838383610cc7565b610929816040518060600160405280602681526020016113b1602691395f808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610a629092919063ffffffff16565b5f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506109b8815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610ac490919063ffffffff16565b5f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a559190610e26565b60405180910390a3505050565b5f838311158290610aa9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa091906111e5565b60405180910390fd5b505f8385610ab79190611232565b9050809150509392505050565b5f808284610ad29190611265565b905083811015610b17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0e906112e2565b60405180910390fd5b8091505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8690611370565b60405180910390fd5b610b9a825f83610cc7565b610c038160405180606001604052806022815260200161138f602291395f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610a629092919063ffffffff16565b5f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610c5881600254610ccc90919063ffffffff16565b6002819055505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610cbb9190610e26565b60405180910390a35050565b505050565b5f610d0d83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610a62565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610d4282610d19565b9050919050565b610d5281610d38565b8114610d5c575f80fd5b50565b5f81359050610d6d81610d49565b92915050565b5f819050919050565b610d8581610d73565b8114610d8f575f80fd5b50565b5f81359050610da081610d7c565b92915050565b5f8060408385031215610dbc57610dbb610d15565b5b5f610dc985828601610d5f565b9250506020610dda85828601610d92565b9150509250929050565b5f8115159050919050565b610df881610de4565b82525050565b5f602082019050610e115f830184610def565b92915050565b610e2081610d73565b82525050565b5f602082019050610e395f830184610e17565b92915050565b5f805f60608486031215610e5657610e55610d15565b5b5f610e6386828701610d5f565b9350506020610e7486828701610d5f565b9250506040610e8586828701610d92565b9150509250925092565b5f60208284031215610ea457610ea3610d15565b5b5f610eb184828501610d92565b91505092915050565b5f60208284031215610ecf57610ece610d15565b5b5f610edc84828501610d5f565b91505092915050565b5f8060408385031215610efb57610efa610d15565b5b5f610f0885828601610d5f565b9250506020610f1985828601610d5f565b9150509250929050565b5f82825260208201905092915050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f610f8d602483610f23565b9150610f9882610f33565b604082019050919050565b5f6020820190508181035f830152610fba81610f81565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f61101b602283610f23565b915061102682610fc1565b604082019050919050565b5f6020820190508181035f8301526110488161100f565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f6110a9602583610f23565b91506110b48261104f565b604082019050919050565b5f6020820190508181035f8301526110d68161109d565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f611137602383610f23565b9150611142826110dd565b604082019050919050565b5f6020820190508181035f8301526111648161112b565b9050919050565b5f81519050919050565b5f5b83811015611192578082015181840152602081019050611177565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6111b78261116b565b6111c18185610f23565b93506111d1818560208601611175565b6111da8161119d565b840191505092915050565b5f6020820190508181035f8301526111fd81846111ad565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61123c82610d73565b915061124783610d73565b925082820390508181111561125f5761125e611205565b5b92915050565b5f61126f82610d73565b915061127a83610d73565b925082820190508082111561129257611291611205565b5b92915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f7700000000005f82015250565b5f6112cc601b83610f23565b91506112d782611298565b602082019050919050565b5f6020820190508181035f8301526112f9816112c0565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f206164647265735f8201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b5f61135a602183610f23565b915061136582611300565b604082019050919050565b5f6020820190508181035f8301526113878161134e565b905091905056fe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122089e87c42cbd84cd2c68fcc90731284b9bd1c7052664e7eebe2bd11a48c7ac9ec64736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x216 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x14E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xDA6 JUMP JUMPDEST PUSH2 0x246 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH2 0x263 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0xE26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x108 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xE3F JUMP JUMPDEST PUSH2 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xDA6 JUMP JUMPDEST PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x145 SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x168 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x163 SWAP2 SWAP1 PUSH2 0xE8F JUMP JUMPDEST PUSH2 0x3EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17F SWAP2 SWAP1 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x402 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0xE26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0xDA6 JUMP JUMPDEST PUSH2 0x447 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0xDA6 JUMP JUMPDEST PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xDA6 JUMP JUMPDEST PUSH2 0x570 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xEE5 JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xE26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH2 0x259 PUSH2 0x252 PUSH2 0x60F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x616 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x278 DUP5 DUP5 DUP5 PUSH2 0x7D9 JUMP JUMPDEST PUSH2 0x335 DUP5 PUSH2 0x284 PUSH2 0x60F JUMP JUMPDEST PUSH2 0x330 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13D7 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x2E7 PUSH2 0x60F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xA62 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x616 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3E4 PUSH2 0x34C PUSH2 0x60F JUMP JUMPDEST DUP5 PUSH2 0x3DF DUP6 PUSH1 0x1 PUSH0 PUSH2 0x35C PUSH2 0x60F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xAC4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x616 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3FF PUSH2 0x3F9 PUSH2 0x60F JUMP JUMPDEST DUP3 PUSH2 0xB21 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x485 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13FF PUSH1 0x24 SWAP2 CODECOPY PUSH2 0x476 DUP7 PUSH2 0x471 PUSH2 0x60F JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST PUSH2 0xA62 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x499 DUP4 PUSH2 0x493 PUSH2 0x60F JUMP JUMPDEST DUP4 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x4A3 DUP4 DUP4 PUSH2 0xB21 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x566 PUSH2 0x4B4 PUSH2 0x60F JUMP JUMPDEST DUP5 PUSH2 0x561 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1423 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH0 PUSH2 0x4DD PUSH2 0x60F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xA62 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x616 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x583 PUSH2 0x57C PUSH2 0x60F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x7D9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x684 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67B SWAP1 PUSH2 0xFA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E9 SWAP1 PUSH2 0x1031 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x7CC SWAP2 SWAP1 PUSH2 0xE26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x847 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83E SWAP1 PUSH2 0x10BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AC SWAP1 PUSH2 0x114D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C0 DUP4 DUP4 DUP4 PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0x929 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13B1 PUSH1 0x26 SWAP2 CODECOPY PUSH0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xA62 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x9B8 DUP2 PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xAC4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA55 SWAP2 SWAP1 PUSH2 0xE26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xAA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA0 SWAP2 SWAP1 PUSH2 0x11E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH0 DUP4 DUP6 PUSH2 0xAB7 SWAP2 SWAP1 PUSH2 0x1232 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 DUP5 PUSH2 0xAD2 SWAP2 SWAP1 PUSH2 0x1265 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xB17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0E SWAP1 PUSH2 0x12E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB86 SWAP1 PUSH2 0x1370 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB9A DUP3 PUSH0 DUP4 PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0xC03 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x138F PUSH1 0x22 SWAP2 CODECOPY PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xA62 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xC58 DUP2 PUSH1 0x2 SLOAD PUSH2 0xCCC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xCBB SWAP2 SWAP1 PUSH2 0xE26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD0D DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD42 DUP3 PUSH2 0xD19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD52 DUP2 PUSH2 0xD38 JUMP JUMPDEST DUP2 EQ PUSH2 0xD5C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD6D DUP2 PUSH2 0xD49 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD85 DUP2 PUSH2 0xD73 JUMP JUMPDEST DUP2 EQ PUSH2 0xD8F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDA0 DUP2 PUSH2 0xD7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDBC JUMPI PUSH2 0xDBB PUSH2 0xD15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDC9 DUP6 DUP3 DUP7 ADD PUSH2 0xD5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDDA DUP6 DUP3 DUP7 ADD PUSH2 0xD92 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF8 DUP2 PUSH2 0xDE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE11 PUSH0 DUP4 ADD DUP5 PUSH2 0xDEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE20 DUP2 PUSH2 0xD73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE39 PUSH0 DUP4 ADD DUP5 PUSH2 0xE17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE56 JUMPI PUSH2 0xE55 PUSH2 0xD15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE63 DUP7 DUP3 DUP8 ADD PUSH2 0xD5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE74 DUP7 DUP3 DUP8 ADD PUSH2 0xD5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xE85 DUP7 DUP3 DUP8 ADD PUSH2 0xD92 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA4 JUMPI PUSH2 0xEA3 PUSH2 0xD15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEB1 DUP5 DUP3 DUP6 ADD PUSH2 0xD92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xECF JUMPI PUSH2 0xECE PUSH2 0xD15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEDC DUP5 DUP3 DUP6 ADD PUSH2 0xD5F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEFB JUMPI PUSH2 0xEFA PUSH2 0xD15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF08 DUP6 DUP3 DUP7 ADD PUSH2 0xD5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF19 DUP6 DUP3 DUP7 ADD PUSH2 0xD5F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF8D PUSH1 0x24 DUP4 PUSH2 0xF23 JUMP JUMPDEST SWAP2 POP PUSH2 0xF98 DUP3 PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFBA DUP2 PUSH2 0xF81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x101B PUSH1 0x22 DUP4 PUSH2 0xF23 JUMP JUMPDEST SWAP2 POP PUSH2 0x1026 DUP3 PUSH2 0xFC1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1048 DUP2 PUSH2 0x100F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10A9 PUSH1 0x25 DUP4 PUSH2 0xF23 JUMP JUMPDEST SWAP2 POP PUSH2 0x10B4 DUP3 PUSH2 0x104F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10D6 DUP2 PUSH2 0x109D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1137 PUSH1 0x23 DUP4 PUSH2 0xF23 JUMP JUMPDEST SWAP2 POP PUSH2 0x1142 DUP3 PUSH2 0x10DD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1164 DUP2 PUSH2 0x112B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1192 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1177 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11B7 DUP3 PUSH2 0x116B JUMP JUMPDEST PUSH2 0x11C1 DUP2 DUP6 PUSH2 0xF23 JUMP JUMPDEST SWAP4 POP PUSH2 0x11D1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1175 JUMP JUMPDEST PUSH2 0x11DA DUP2 PUSH2 0x119D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11FD DUP2 DUP5 PUSH2 0x11AD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x123C DUP3 PUSH2 0xD73 JUMP JUMPDEST SWAP2 POP PUSH2 0x1247 DUP4 PUSH2 0xD73 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x125F JUMPI PUSH2 0x125E PUSH2 0x1205 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x126F DUP3 PUSH2 0xD73 JUMP JUMPDEST SWAP2 POP PUSH2 0x127A DUP4 PUSH2 0xD73 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1292 JUMPI PUSH2 0x1291 PUSH2 0x1205 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12CC PUSH1 0x1B DUP4 PUSH2 0xF23 JUMP JUMPDEST SWAP2 POP PUSH2 0x12D7 DUP3 PUSH2 0x1298 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12F9 DUP2 PUSH2 0x12C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x135A PUSH1 0x21 DUP4 PUSH2 0xF23 JUMP JUMPDEST SWAP2 POP PUSH2 0x1365 DUP3 PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1387 DUP2 PUSH2 0x134E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636545524332303A207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654552 NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x735822122089E8 PUSH29 0x42CBD84CD2C68FCC90731284B9BD1C7052664E7EEBE2BD11A48C7AC9EC PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "1403:8639:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2735:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1702:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3359:317;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4071:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6792:89;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1858:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7185:290;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4773:266;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2178:172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2408:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2735:166;2818:4;2834:39;2843:12;:10;:12::i;:::-;2857:7;2866:6;2834:8;:39::i;:::-;2890:4;2883:11;;2735:166;;;;:::o;1702:98::-;1755:7;1781:12;;1774:19;;1702:98;:::o;3359:317::-;3465:4;3481:36;3491:6;3499:9;3510:6;3481:9;:36::i;:::-;3527:121;3536:6;3544:12;:10;:12::i;:::-;3558:89;3596:6;3558:89;;;;;;;;;;;;;;;;;:11;:19;3570:6;3558:19;;;;;;;;;;;;;;;:33;3578:12;:10;:12::i;:::-;3558:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;3527:8;:121::i;:::-;3665:4;3658:11;;3359:317;;;;;:::o;4071:215::-;4159:4;4175:83;4184:12;:10;:12::i;:::-;4198:7;4207:50;4246:10;4207:11;:25;4219:12;:10;:12::i;:::-;4207:25;;;;;;;;;;;;;;;:34;4233:7;4207:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;4175:8;:83::i;:::-;4275:4;4268:11;;4071:215;;;;:::o;6792:89::-;6847:27;6853:12;:10;:12::i;:::-;6867:6;6847:5;:27::i;:::-;6792:89;:::o;1858:117::-;1924:7;1950:9;:18;1960:7;1950:18;;;;;;;;;;;;;;;;1943:25;;1858:117;;;:::o;7185:290::-;7261:26;7290:84;7327:6;7290:84;;;;;;;;;;;;;;;;;:32;7300:7;7309:12;:10;:12::i;:::-;7290:9;:32::i;:::-;:36;;:84;;;;;:::i;:::-;7261:113;;7385:51;7394:7;7403:12;:10;:12::i;:::-;7417:18;7385:8;:51::i;:::-;7446:22;7452:7;7461:6;7446:5;:22::i;:::-;7251:224;7185:290;;:::o;4773:266::-;4866:4;4882:129;4891:12;:10;:12::i;:::-;4905:7;4914:96;4953:15;4914:96;;;;;;;;;;;;;;;;;:11;:25;4926:12;:10;:12::i;:::-;4914:25;;;;;;;;;;;;;;;:34;4940:7;4914:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;4882:8;:129::i;:::-;5028:4;5021:11;;4773:266;;;;:::o;2178:172::-;2264:4;2280:42;2290:12;:10;:12::i;:::-;2304:9;2315:6;2280:9;:42::i;:::-;2339:4;2332:11;;2178:172;;;;:::o;2408:149::-;2497:7;2523:11;:18;2535:5;2523:18;;;;;;;;;;;;;;;:27;2542:7;2523:27;;;;;;;;;;;;;;;;2516:34;;2408:149;;;;:::o;591:113:0:-;644:15;686:10;671:26;;591:113;:::o;8630:340:1:-;8748:1;8731:19;;:5;:19;;;8723:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8828:1;8809:21;;:7;:21;;;8801:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8910:6;8880:11;:18;8892:5;8880:18;;;;;;;;;;;;;;;:27;8899:7;8880:27;;;;;;;;;;;;;;;:36;;;;8947:7;8931:32;;8940:5;8931:32;;;8956:6;8931:32;;;;;;:::i;:::-;;;;;;;;8630:340;;;:::o;5513:530::-;5636:1;5618:20;;:6;:20;;;5610:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;5719:1;5698:23;;:9;:23;;;5690:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;5772:47;5793:6;5801:9;5812:6;5772:20;:47::i;:::-;5850:71;5872:6;5850:71;;;;;;;;;;;;;;;;;:9;:17;5860:6;5850:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;5830:9;:17;5840:6;5830:17;;;;;;;;;;;;;;;:91;;;;5954:32;5979:6;5954:9;:20;5964:9;5954:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;5931:9;:20;5941:9;5931:20;;;;;;;;;;;;;;;:55;;;;6018:9;6001:35;;6010:6;6001:35;;;6029:6;6001:35;;;;;;:::i;:::-;;;;;;;;5513:530;;;:::o;1766:187:3:-;1852:7;1884:1;1879;:6;;1887:12;1871:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1910:9;1926:1;1922;:5;;;;:::i;:::-;1910:17;;1945:1;1938:8;;;1766:187;;;;;:::o;868:176::-;926:7;945:9;961:1;957;:5;;;;:::i;:::-;945:17;;985:1;980;:6;;972:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;1036:1;1029:8;;;868:176;;;;:::o;7795:410:1:-;7897:1;7878:21;;:7;:21;;;7870:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;7948:49;7969:7;7986:1;7990:6;7948:20;:49::i;:::-;8029:68;8052:6;8029:68;;;;;;;;;;;;;;;;;:9;:18;8039:7;8029:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;8008:9;:18;8018:7;8008:18;;;;;;;;;;;;;;;:89;;;;8122:24;8139:6;8122:12;;:16;;:24;;;;:::i;:::-;8107:12;:39;;;;8187:1;8161:37;;8170:7;8161:37;;;8191:6;8161:37;;;;;;:::i;:::-;;;;;;;;7795:410;;:::o;9948:92::-;;;;:::o;1308:134:3:-;1366:7;1392:43;1396:1;1399;1392:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1385:50;;1308:134;;;;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:90::-;1711:7;1754:5;1747:13;1740:21;1729:32;;1677:90;;;:::o;1773:109::-;1854:21;1869:5;1854:21;:::i;:::-;1849:3;1842:34;1773:109;;:::o;1888:210::-;1975:4;2013:2;2002:9;1998:18;1990:26;;2026:65;2088:1;2077:9;2073:17;2064:6;2026:65;:::i;:::-;1888:210;;;;:::o;2104:118::-;2191:24;2209:5;2191:24;:::i;:::-;2186:3;2179:37;2104:118;;:::o;2228:222::-;2321:4;2359:2;2348:9;2344:18;2336:26;;2372:71;2440:1;2429:9;2425:17;2416:6;2372:71;:::i;:::-;2228:222;;;;:::o;2456:619::-;2533:6;2541;2549;2598:2;2586:9;2577:7;2573:23;2569:32;2566:119;;;2604:79;;:::i;:::-;2566:119;2724:1;2749:53;2794:7;2785:6;2774:9;2770:22;2749:53;:::i;:::-;2739:63;;2695:117;2851:2;2877:53;2922:7;2913:6;2902:9;2898:22;2877:53;:::i;:::-;2867:63;;2822:118;2979:2;3005:53;3050:7;3041:6;3030:9;3026:22;3005:53;:::i;:::-;2995:63;;2950:118;2456:619;;;;;:::o;3081:329::-;3140:6;3189:2;3177:9;3168:7;3164:23;3160:32;3157:119;;;3195:79;;:::i;:::-;3157:119;3315:1;3340:53;3385:7;3376:6;3365:9;3361:22;3340:53;:::i;:::-;3330:63;;3286:117;3081:329;;;;:::o;3416:::-;3475:6;3524:2;3512:9;3503:7;3499:23;3495:32;3492:119;;;3530:79;;:::i;:::-;3492:119;3650:1;3675:53;3720:7;3711:6;3700:9;3696:22;3675:53;:::i;:::-;3665:63;;3621:117;3416:329;;;;:::o;3751:474::-;3819:6;3827;3876:2;3864:9;3855:7;3851:23;3847:32;3844:119;;;3882:79;;:::i;:::-;3844:119;4002:1;4027:53;4072:7;4063:6;4052:9;4048:22;4027:53;:::i;:::-;4017:63;;3973:117;4129:2;4155:53;4200:7;4191:6;4180:9;4176:22;4155:53;:::i;:::-;4145:63;;4100:118;3751:474;;;;;:::o;4231:169::-;4315:11;4349:6;4344:3;4337:19;4389:4;4384:3;4380:14;4365:29;;4231:169;;;;:::o;4406:223::-;4546:34;4542:1;4534:6;4530:14;4523:58;4615:6;4610:2;4602:6;4598:15;4591:31;4406:223;:::o;4635:366::-;4777:3;4798:67;4862:2;4857:3;4798:67;:::i;:::-;4791:74;;4874:93;4963:3;4874:93;:::i;:::-;4992:2;4987:3;4983:12;4976:19;;4635:366;;;:::o;5007:419::-;5173:4;5211:2;5200:9;5196:18;5188:26;;5260:9;5254:4;5250:20;5246:1;5235:9;5231:17;5224:47;5288:131;5414:4;5288:131;:::i;:::-;5280:139;;5007:419;;;:::o;5432:221::-;5572:34;5568:1;5560:6;5556:14;5549:58;5641:4;5636:2;5628:6;5624:15;5617:29;5432:221;:::o;5659:366::-;5801:3;5822:67;5886:2;5881:3;5822:67;:::i;:::-;5815:74;;5898:93;5987:3;5898:93;:::i;:::-;6016:2;6011:3;6007:12;6000:19;;5659:366;;;:::o;6031:419::-;6197:4;6235:2;6224:9;6220:18;6212:26;;6284:9;6278:4;6274:20;6270:1;6259:9;6255:17;6248:47;6312:131;6438:4;6312:131;:::i;:::-;6304:139;;6031:419;;;:::o;6456:224::-;6596:34;6592:1;6584:6;6580:14;6573:58;6665:7;6660:2;6652:6;6648:15;6641:32;6456:224;:::o;6686:366::-;6828:3;6849:67;6913:2;6908:3;6849:67;:::i;:::-;6842:74;;6925:93;7014:3;6925:93;:::i;:::-;7043:2;7038:3;7034:12;7027:19;;6686:366;;;:::o;7058:419::-;7224:4;7262:2;7251:9;7247:18;7239:26;;7311:9;7305:4;7301:20;7297:1;7286:9;7282:17;7275:47;7339:131;7465:4;7339:131;:::i;:::-;7331:139;;7058:419;;;:::o;7483:222::-;7623:34;7619:1;7611:6;7607:14;7600:58;7692:5;7687:2;7679:6;7675:15;7668:30;7483:222;:::o;7711:366::-;7853:3;7874:67;7938:2;7933:3;7874:67;:::i;:::-;7867:74;;7950:93;8039:3;7950:93;:::i;:::-;8068:2;8063:3;8059:12;8052:19;;7711:366;;;:::o;8083:419::-;8249:4;8287:2;8276:9;8272:18;8264:26;;8336:9;8330:4;8326:20;8322:1;8311:9;8307:17;8300:47;8364:131;8490:4;8364:131;:::i;:::-;8356:139;;8083:419;;;:::o;8508:99::-;8560:6;8594:5;8588:12;8578:22;;8508:99;;;:::o;8613:246::-;8694:1;8704:113;8718:6;8715:1;8712:13;8704:113;;;8803:1;8798:3;8794:11;8788:18;8784:1;8779:3;8775:11;8768:39;8740:2;8737:1;8733:10;8728:15;;8704:113;;;8851:1;8842:6;8837:3;8833:16;8826:27;8675:184;8613:246;;;:::o;8865:102::-;8906:6;8957:2;8953:7;8948:2;8941:5;8937:14;8933:28;8923:38;;8865:102;;;:::o;8973:377::-;9061:3;9089:39;9122:5;9089:39;:::i;:::-;9144:71;9208:6;9203:3;9144:71;:::i;:::-;9137:78;;9224:65;9282:6;9277:3;9270:4;9263:5;9259:16;9224:65;:::i;:::-;9314:29;9336:6;9314:29;:::i;:::-;9309:3;9305:39;9298:46;;9065:285;8973:377;;;;:::o;9356:313::-;9469:4;9507:2;9496:9;9492:18;9484:26;;9556:9;9550:4;9546:20;9542:1;9531:9;9527:17;9520:47;9584:78;9657:4;9648:6;9584:78;:::i;:::-;9576:86;;9356:313;;;;:::o;9675:180::-;9723:77;9720:1;9713:88;9820:4;9817:1;9810:15;9844:4;9841:1;9834:15;9861:194;9901:4;9921:20;9939:1;9921:20;:::i;:::-;9916:25;;9955:20;9973:1;9955:20;:::i;:::-;9950:25;;9999:1;9996;9992:9;9984:17;;10023:1;10017:4;10014:11;10011:37;;;10028:18;;:::i;:::-;10011:37;9861:194;;;;:::o;10061:191::-;10101:3;10120:20;10138:1;10120:20;:::i;:::-;10115:25;;10154:20;10172:1;10154:20;:::i;:::-;10149:25;;10197:1;10194;10190:9;10183:16;;10218:3;10215:1;10212:10;10209:36;;;10225:18;;:::i;:::-;10209:36;10061:191;;;;:::o;10258:177::-;10398:29;10394:1;10386:6;10382:14;10375:53;10258:177;:::o;10441:366::-;10583:3;10604:67;10668:2;10663:3;10604:67;:::i;:::-;10597:74;;10680:93;10769:3;10680:93;:::i;:::-;10798:2;10793:3;10789:12;10782:19;;10441:366;;;:::o;10813:419::-;10979:4;11017:2;11006:9;11002:18;10994:26;;11066:9;11060:4;11056:20;11052:1;11041:9;11037:17;11030:47;11094:131;11220:4;11094:131;:::i;:::-;11086:139;;10813:419;;;:::o;11238:220::-;11378:34;11374:1;11366:6;11362:14;11355:58;11447:3;11442:2;11434:6;11430:15;11423:28;11238:220;:::o;11464:366::-;11606:3;11627:67;11691:2;11686:3;11627:67;:::i;:::-;11620:74;;11703:93;11792:3;11703:93;:::i;:::-;11821:2;11816:3;11812:12;11805:19;;11464:366;;;:::o;11836:419::-;12002:4;12040:2;12029:9;12025:18;12017:26;;12089:9;12083:4;12079:20;12075:1;12064:9;12060:17;12053:47;12117:131;12243:4;12117:131;:::i;:::-;12109:139;;11836:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1049000",
								"executionCost": "1085",
								"totalCost": "1050085"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2829",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"totalSupply()": "2455",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1403,
									"end": 10042,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1403,
									"end": 10042,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1403,
									"end": 10042,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 10042,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 10042,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 10042,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 10042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 10042,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 10042,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 10042,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 10042,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 10042,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 10042,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 10042,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 10042,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 10042,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 10042,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 10042,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 10042,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 10042,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 10042,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122089e87c42cbd84cd2c68fcc90731284b9bd1c7052664e7eebe2bd11a48c7ac9ec64736f6c63430008150033",
									".code": [
										{
											"begin": 1403,
											"end": 10042,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "PUSH",
											"source": 1,
											"value": "79CC6790"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "PUSH",
											"source": 1,
											"value": "42966C68"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 10042,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2735,
											"end": 2901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2735,
											"end": 2901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2735,
											"end": 2901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1800,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1702,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1702,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1702,
											"end": 1800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1800,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1702,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1800,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1702,
											"end": 1800,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1702,
											"end": 1800,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1800,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1702,
											"end": 1800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1800,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1702,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1800,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1702,
											"end": 1800,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1800,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1800,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1800,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1800,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1800,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3359,
											"end": 3676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3359,
											"end": 3676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3359,
											"end": 3676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 4071,
											"end": 4286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4071,
											"end": 4286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4071,
											"end": 4286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6881,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 6792,
											"end": 6881,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 6792,
											"end": 6881,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6792,
											"end": 6881,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6881,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6881,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6881,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6881,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6881,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 6792,
											"end": 6881,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6881,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 6792,
											"end": 6881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6881,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 6792,
											"end": 6881,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 6792,
											"end": 6881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6881,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 6792,
											"end": 6881,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6881,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1858,
											"end": 1975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1858,
											"end": 1975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 7185,
											"end": 7475,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 7185,
											"end": 7475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7185,
											"end": 7475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 7185,
											"end": 7475,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7185,
											"end": 7475,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7185,
											"end": 7475,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7185,
											"end": 7475,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7185,
											"end": 7475,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7185,
											"end": 7475,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7185,
											"end": 7475,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7185,
											"end": 7475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 7185,
											"end": 7475,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7185,
											"end": 7475,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7185,
											"end": 7475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 7185,
											"end": 7475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7185,
											"end": 7475,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 7185,
											"end": 7475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7185,
											"end": 7475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7185,
											"end": 7475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7185,
											"end": 7475,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 7185,
											"end": 7475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7185,
											"end": 7475,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 4773,
											"end": 5039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4773,
											"end": 5039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4773,
											"end": 5039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2178,
											"end": 2350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2178,
											"end": 2350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2178,
											"end": 2350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2408,
											"end": 2557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2408,
											"end": 2557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2408,
											"end": 2557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2818,
											"end": 2822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2843,
											"end": 2855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2843,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2843,
											"end": 2855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2855,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2843,
											"end": 2855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2864,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 2872,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2834,
											"end": 2873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2873,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2834,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2890,
											"end": 2894,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2883,
											"end": 2894,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2883,
											"end": 2894,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2901,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1800,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1702,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1781,
											"end": 1793,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1781,
											"end": 1793,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1774,
											"end": 1793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1774,
											"end": 1793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1800,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3469,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3491,
											"end": 3497,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3508,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3481,
											"end": 3490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3481,
											"end": 3517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3481,
											"end": 3517,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3481,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3527,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3536,
											"end": 3542,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3544,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3544,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3544,
											"end": 3556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3544,
											"end": 3556,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3544,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3596,
											"end": 3602,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3647,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3558,
											"end": 3647,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3647,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3647,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3558,
											"end": 3647,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3647,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3558,
											"end": 3647,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3647,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3647,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3558,
											"end": 3647,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3647,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3647,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3558,
											"end": 3647,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3647,
											"name": "PUSH data",
											"source": 1,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 3558,
											"end": 3647,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3558,
											"end": 3647,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3647,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3569,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3558,
											"end": 3577,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3570,
											"end": 3576,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3577,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3558,
											"end": 3577,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3577,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3558,
											"end": 3577,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3577,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3577,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3577,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3558,
											"end": 3577,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3577,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3577,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3577,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3558,
											"end": 3577,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3577,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3558,
											"end": 3577,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3591,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3578,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3578,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3578,
											"end": 3590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3578,
											"end": 3590,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3578,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3591,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3558,
											"end": 3591,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3591,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3558,
											"end": 3591,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3591,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3591,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3591,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3558,
											"end": 3591,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3591,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3591,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3591,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3591,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3558,
											"end": 3591,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3591,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3558,
											"end": 3591,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3591,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3558,
											"end": 3595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3647,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3647,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3647,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3647,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3558,
											"end": 3647,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3647,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3558,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3527,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3527,
											"end": 3648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3527,
											"end": 3648,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3527,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3669,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3658,
											"end": 3669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3658,
											"end": 3669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4159,
											"end": 4163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4175,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4184,
											"end": 4196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4184,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4184,
											"end": 4196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4184,
											"end": 4196,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4184,
											"end": 4196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4198,
											"end": 4205,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4246,
											"end": 4256,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4218,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4207,
											"end": 4232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4219,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4219,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4219,
											"end": 4231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4219,
											"end": 4231,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4219,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4232,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4207,
											"end": 4232,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4232,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4207,
											"end": 4232,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4207,
											"end": 4232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4207,
											"end": 4232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4207,
											"end": 4232,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4241,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4233,
											"end": 4240,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4241,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4207,
											"end": 4241,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4241,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4207,
											"end": 4241,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4241,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4207,
											"end": 4241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4241,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4207,
											"end": 4241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4241,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4207,
											"end": 4241,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4241,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4207,
											"end": 4245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4257,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4257,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4207,
											"end": 4257,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4257,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4207,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4175,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4175,
											"end": 4258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4175,
											"end": 4258,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4175,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4279,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4268,
											"end": 4279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4268,
											"end": 4279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4286,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6881,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 6792,
											"end": 6881,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 6853,
											"end": 6865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6853,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6853,
											"end": 6865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6865,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6853,
											"end": 6865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6867,
											"end": 6873,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 6847,
											"end": 6874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6874,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 6847,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6881,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1924,
											"end": 1931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1950,
											"end": 1959,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1967,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 1968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 1968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1975,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7185,
											"end": 7475,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7185,
											"end": 7475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7261,
											"end": 7287,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7290,
											"end": 7374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7327,
											"end": 7333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7290,
											"end": 7374,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7290,
											"end": 7374,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7290,
											"end": 7374,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7290,
											"end": 7374,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7290,
											"end": 7374,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7290,
											"end": 7374,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7290,
											"end": 7374,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7290,
											"end": 7374,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7290,
											"end": 7374,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7290,
											"end": 7374,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7290,
											"end": 7374,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7290,
											"end": 7374,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7290,
											"end": 7374,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7290,
											"end": 7374,
											"name": "PUSH data",
											"source": 1,
											"value": "A287C363786607A1457A2D9D12FA61C0073358E02D76B4035FC2C2D86A19C0DB"
										},
										{
											"begin": 7290,
											"end": 7374,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7290,
											"end": 7374,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7290,
											"end": 7374,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 7290,
											"end": 7322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 7300,
											"end": 7307,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7309,
											"end": 7321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 7309,
											"end": 7319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 7309,
											"end": 7321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7309,
											"end": 7321,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 7309,
											"end": 7321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7290,
											"end": 7299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 7290,
											"end": 7322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7290,
											"end": 7322,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 7290,
											"end": 7322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7290,
											"end": 7374,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7290,
											"end": 7374,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7290,
											"end": 7374,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7290,
											"end": 7374,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7290,
											"end": 7374,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7290,
											"end": 7374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7290,
											"end": 7374,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7290,
											"end": 7374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7261,
											"end": 7374,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7261,
											"end": 7374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7385,
											"end": 7436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 7394,
											"end": 7401,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7403,
											"end": 7415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 7403,
											"end": 7413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 7403,
											"end": 7415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7403,
											"end": 7415,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 7403,
											"end": 7415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7417,
											"end": 7435,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7385,
											"end": 7393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 7385,
											"end": 7436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7385,
											"end": 7436,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 7385,
											"end": 7436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7446,
											"end": 7468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 7452,
											"end": 7459,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7461,
											"end": 7467,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7446,
											"end": 7451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 7446,
											"end": 7468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7446,
											"end": 7468,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 7446,
											"end": 7468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7185,
											"end": 7475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7185,
											"end": 7475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7185,
											"end": 7475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4866,
											"end": 4870,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4882,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4891,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4891,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4891,
											"end": 4903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 4903,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4891,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4905,
											"end": 4912,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4953,
											"end": 4968,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 5010,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4914,
											"end": 5010,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 5010,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 5010,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4914,
											"end": 5010,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 5010,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4914,
											"end": 5010,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 5010,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 5010,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4914,
											"end": 5010,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 5010,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 5010,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4914,
											"end": 5010,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 5010,
											"name": "PUSH data",
											"source": 1,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 4914,
											"end": 5010,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4914,
											"end": 5010,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 5010,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4925,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4914,
											"end": 4939,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4926,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4926,
											"end": 4936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4926,
											"end": 4938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4926,
											"end": 4938,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4926,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4939,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4914,
											"end": 4939,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4939,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4914,
											"end": 4939,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4939,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4939,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4914,
											"end": 4939,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4939,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4939,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4914,
											"end": 4939,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4939,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4914,
											"end": 4939,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4948,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4914,
											"end": 4948,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4948,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4914,
											"end": 4948,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4948,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4914,
											"end": 4948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4948,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4948,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4914,
											"end": 4948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4914,
											"end": 4948,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4948,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4914,
											"end": 4952,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 5010,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 5010,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 5010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 5010,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4914,
											"end": 5010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 5010,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4914,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4882,
											"end": 5011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 5011,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4882,
											"end": 5011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5032,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5021,
											"end": 5032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5021,
											"end": 5032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2268,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2280,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2290,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2290,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2290,
											"end": 2302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2302,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2290,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2304,
											"end": 2313,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2315,
											"end": 2321,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2280,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2280,
											"end": 2322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2280,
											"end": 2322,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2280,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2343,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2332,
											"end": 2343,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2497,
											"end": 2504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2523,
											"end": 2534,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2523,
											"end": 2541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2535,
											"end": 2540,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2541,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2523,
											"end": 2541,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2541,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2523,
											"end": 2541,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2541,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2541,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2523,
											"end": 2541,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2541,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2541,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2523,
											"end": 2541,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2523,
											"end": 2541,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2550,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2542,
											"end": 2549,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2550,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2523,
											"end": 2550,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2550,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2523,
											"end": 2550,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2550,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2550,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2523,
											"end": 2550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2550,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2550,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2550,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2523,
											"end": 2550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2550,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2523,
											"end": 2550,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2550,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2516,
											"end": 2550,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2516,
											"end": 2550,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 591,
											"end": 704,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 591,
											"end": 704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 644,
											"end": 659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 696,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 671,
											"end": 697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 671,
											"end": 697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 591,
											"end": 704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 591,
											"end": 704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8630,
											"end": 8970,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 8630,
											"end": 8970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8748,
											"end": 8749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8731,
											"end": 8750,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8731,
											"end": 8750,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8736,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8750,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8731,
											"end": 8750,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8750,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8723,
											"end": 8791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 8723,
											"end": 8791,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8723,
											"end": 8791,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8723,
											"end": 8791,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8723,
											"end": 8791,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8723,
											"end": 8791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8723,
											"end": 8791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8723,
											"end": 8791,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8723,
											"end": 8791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8723,
											"end": 8791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 8723,
											"end": 8791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8723,
											"end": 8791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 8723,
											"end": 8791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8723,
											"end": 8791,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 8723,
											"end": 8791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8723,
											"end": 8791,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8723,
											"end": 8791,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8723,
											"end": 8791,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8723,
											"end": 8791,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8723,
											"end": 8791,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8723,
											"end": 8791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8723,
											"end": 8791,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8723,
											"end": 8791,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 8723,
											"end": 8791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8828,
											"end": 8829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8809,
											"end": 8830,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8809,
											"end": 8830,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8809,
											"end": 8816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8809,
											"end": 8830,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8809,
											"end": 8830,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8809,
											"end": 8830,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8801,
											"end": 8869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 8801,
											"end": 8869,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8801,
											"end": 8869,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8801,
											"end": 8869,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8801,
											"end": 8869,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8801,
											"end": 8869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8801,
											"end": 8869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8801,
											"end": 8869,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8801,
											"end": 8869,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8801,
											"end": 8869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 8801,
											"end": 8869,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8801,
											"end": 8869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 8801,
											"end": 8869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8801,
											"end": 8869,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 8801,
											"end": 8869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8801,
											"end": 8869,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8801,
											"end": 8869,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8801,
											"end": 8869,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8801,
											"end": 8869,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8801,
											"end": 8869,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8801,
											"end": 8869,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8801,
											"end": 8869,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8801,
											"end": 8869,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 8801,
											"end": 8869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8910,
											"end": 8916,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8880,
											"end": 8898,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8892,
											"end": 8897,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8898,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8880,
											"end": 8898,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8898,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8880,
											"end": 8898,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8898,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8898,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8898,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8880,
											"end": 8898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8898,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8898,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8898,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8880,
											"end": 8898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8898,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8880,
											"end": 8898,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8899,
											"end": 8906,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8907,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8880,
											"end": 8907,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8907,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8880,
											"end": 8907,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8907,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8907,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8907,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8880,
											"end": 8907,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8907,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8907,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8907,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8880,
											"end": 8907,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8880,
											"end": 8907,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8916,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8916,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8947,
											"end": 8954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8931,
											"end": 8963,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8931,
											"end": 8963,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8940,
											"end": 8945,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8931,
											"end": 8963,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8931,
											"end": 8963,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8931,
											"end": 8963,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 8956,
											"end": 8962,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8931,
											"end": 8963,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8931,
											"end": 8963,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8931,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 8931,
											"end": 8963,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8931,
											"end": 8963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8931,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 8931,
											"end": 8963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8931,
											"end": 8963,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 8931,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8931,
											"end": 8963,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8931,
											"end": 8963,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8931,
											"end": 8963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8931,
											"end": 8963,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8931,
											"end": 8963,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8931,
											"end": 8963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8931,
											"end": 8963,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8630,
											"end": 8970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8630,
											"end": 8970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8630,
											"end": 8970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8630,
											"end": 8970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5513,
											"end": 6043,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5513,
											"end": 6043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5636,
											"end": 5637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5618,
											"end": 5638,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5618,
											"end": 5638,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5618,
											"end": 5624,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5618,
											"end": 5638,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5618,
											"end": 5638,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5618,
											"end": 5638,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 5610,
											"end": 5680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5680,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5680,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5680,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5680,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5680,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5680,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 5610,
											"end": 5680,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5610,
											"end": 5680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5680,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 5610,
											"end": 5680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5680,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5680,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5680,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5680,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5680,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5680,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5680,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 5610,
											"end": 5680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5719,
											"end": 5720,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5698,
											"end": 5721,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5698,
											"end": 5721,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5698,
											"end": 5707,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5698,
											"end": 5721,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5698,
											"end": 5721,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5698,
											"end": 5721,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5690,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5690,
											"end": 5761,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5690,
											"end": 5761,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5690,
											"end": 5761,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5690,
											"end": 5761,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5690,
											"end": 5761,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5690,
											"end": 5761,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5690,
											"end": 5761,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5690,
											"end": 5761,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5690,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5690,
											"end": 5761,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5690,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5690,
											"end": 5761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5690,
											"end": 5761,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5690,
											"end": 5761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5690,
											"end": 5761,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5690,
											"end": 5761,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5690,
											"end": 5761,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5690,
											"end": 5761,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5690,
											"end": 5761,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5690,
											"end": 5761,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5690,
											"end": 5761,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5690,
											"end": 5761,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5690,
											"end": 5761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5772,
											"end": 5819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5793,
											"end": 5799,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5801,
											"end": 5810,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5812,
											"end": 5818,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5772,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5772,
											"end": 5819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5772,
											"end": 5819,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5772,
											"end": 5819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5872,
											"end": 5878,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5921,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5850,
											"end": 5921,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5921,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5921,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5850,
											"end": 5921,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5921,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5850,
											"end": 5921,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5921,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5921,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5850,
											"end": 5921,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5921,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5921,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5850,
											"end": 5921,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5921,
											"name": "PUSH data",
											"source": 1,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 5850,
											"end": 5921,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5850,
											"end": 5921,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5921,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5850,
											"end": 5867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5860,
											"end": 5866,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5867,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5850,
											"end": 5867,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5867,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5850,
											"end": 5867,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5867,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5850,
											"end": 5867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5867,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5850,
											"end": 5867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5867,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5850,
											"end": 5867,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5867,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5850,
											"end": 5871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5921,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5921,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5921,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5921,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5850,
											"end": 5921,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5921,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5850,
											"end": 5921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5839,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5830,
											"end": 5847,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5840,
											"end": 5846,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5847,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5830,
											"end": 5847,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5847,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5830,
											"end": 5847,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5847,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5847,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5830,
											"end": 5847,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5847,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5847,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5830,
											"end": 5847,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5847,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5830,
											"end": 5847,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5921,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5921,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5921,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5921,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5954,
											"end": 5986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 5979,
											"end": 5985,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5954,
											"end": 5963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5954,
											"end": 5974,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5964,
											"end": 5973,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5954,
											"end": 5974,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5954,
											"end": 5974,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5954,
											"end": 5974,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5954,
											"end": 5974,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5954,
											"end": 5974,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5954,
											"end": 5974,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5954,
											"end": 5974,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5954,
											"end": 5974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5954,
											"end": 5974,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5954,
											"end": 5974,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5954,
											"end": 5974,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5954,
											"end": 5974,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5954,
											"end": 5974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5954,
											"end": 5974,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5954,
											"end": 5974,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5954,
											"end": 5974,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5954,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5954,
											"end": 5978,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5954,
											"end": 5986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5954,
											"end": 5986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5954,
											"end": 5986,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5954,
											"end": 5986,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5954,
											"end": 5986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5954,
											"end": 5986,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 5954,
											"end": 5986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5931,
											"end": 5940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5931,
											"end": 5951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5941,
											"end": 5950,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5931,
											"end": 5951,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5931,
											"end": 5951,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5931,
											"end": 5951,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5931,
											"end": 5951,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5931,
											"end": 5951,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5931,
											"end": 5951,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5931,
											"end": 5951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5931,
											"end": 5951,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5931,
											"end": 5951,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5931,
											"end": 5951,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5931,
											"end": 5951,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5931,
											"end": 5951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5931,
											"end": 5951,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5931,
											"end": 5951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5931,
											"end": 5951,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5931,
											"end": 5986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5931,
											"end": 5986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5931,
											"end": 5986,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5931,
											"end": 5986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6018,
											"end": 6027,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6036,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6036,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6010,
											"end": 6016,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6036,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6036,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6036,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6029,
											"end": 6035,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6036,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6001,
											"end": 6036,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 6001,
											"end": 6036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 6001,
											"end": 6036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6036,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 6001,
											"end": 6036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6036,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6001,
											"end": 6036,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6036,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6036,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 5513,
											"end": 6043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5513,
											"end": 6043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5513,
											"end": 6043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5513,
											"end": 6043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1953,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1766,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1852,
											"end": 1859,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1884,
											"end": 1885,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1885,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1885,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1871,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 1927,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1922,
											"end": 1927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 1927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 1927,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 1946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1938,
											"end": 1946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1938,
											"end": 1946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1938,
											"end": 1946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1953,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1953,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1953,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1953,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1953,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 868,
											"end": 1044,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 868,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 926,
											"end": 933,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 945,
											"end": 954,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 961,
											"end": 962,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 957,
											"end": 958,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 957,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 957,
											"end": 962,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 957,
											"end": 962,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 957,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 957,
											"end": 962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 957,
											"end": 962,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 957,
											"end": 962,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 945,
											"end": 962,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 945,
											"end": 962,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 985,
											"end": 986,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 980,
											"end": 981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 980,
											"end": 986,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 980,
											"end": 986,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 972,
											"end": 1018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1037,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 868,
											"end": 1044,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 868,
											"end": 1044,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 868,
											"end": 1044,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 868,
											"end": 1044,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 868,
											"end": 1044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7795,
											"end": 8205,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 7795,
											"end": 8205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7897,
											"end": 7898,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7878,
											"end": 7899,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7878,
											"end": 7899,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7878,
											"end": 7885,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7878,
											"end": 7899,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7878,
											"end": 7899,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7878,
											"end": 7899,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7870,
											"end": 7937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7870,
											"end": 7937,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7870,
											"end": 7937,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7870,
											"end": 7937,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7870,
											"end": 7937,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7870,
											"end": 7937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7870,
											"end": 7937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7870,
											"end": 7937,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7870,
											"end": 7937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7870,
											"end": 7937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7870,
											"end": 7937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7870,
											"end": 7937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 7870,
											"end": 7937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7870,
											"end": 7937,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7870,
											"end": 7937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7870,
											"end": 7937,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7870,
											"end": 7937,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7870,
											"end": 7937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7870,
											"end": 7937,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7870,
											"end": 7937,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7870,
											"end": 7937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7870,
											"end": 7937,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7870,
											"end": 7937,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7870,
											"end": 7937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 7969,
											"end": 7976,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 7987,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7990,
											"end": 7996,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 7948,
											"end": 7997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7997,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 7948,
											"end": 7997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 8052,
											"end": 8058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8097,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8029,
											"end": 8097,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8097,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8097,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8029,
											"end": 8097,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8097,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8029,
											"end": 8097,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8097,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8097,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 8029,
											"end": 8097,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8097,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8097,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8029,
											"end": 8097,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8097,
											"name": "PUSH data",
											"source": 1,
											"value": "149B126E7125232B4200AF45303D04FBA8B74653B1A295A6A561A528C33FEFDD"
										},
										{
											"begin": 8029,
											"end": 8097,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 8029,
											"end": 8097,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8097,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8038,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8029,
											"end": 8047,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8039,
											"end": 8046,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8047,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8029,
											"end": 8047,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8047,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8029,
											"end": 8047,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8047,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8047,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8047,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8029,
											"end": 8047,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8047,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8047,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8047,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8047,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8029,
											"end": 8047,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8047,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8029,
											"end": 8047,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8047,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 8029,
											"end": 8051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8097,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8097,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8097,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8029,
											"end": 8097,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8097,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 8029,
											"end": 8097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8008,
											"end": 8017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8008,
											"end": 8026,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8018,
											"end": 8025,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8008,
											"end": 8026,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8008,
											"end": 8026,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8008,
											"end": 8026,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8008,
											"end": 8026,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8008,
											"end": 8026,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8008,
											"end": 8026,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8008,
											"end": 8026,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8008,
											"end": 8026,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8008,
											"end": 8026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8008,
											"end": 8026,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8008,
											"end": 8026,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8008,
											"end": 8026,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8008,
											"end": 8026,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8008,
											"end": 8026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8008,
											"end": 8026,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8008,
											"end": 8097,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8008,
											"end": 8097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8008,
											"end": 8097,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8008,
											"end": 8097,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 8139,
											"end": 8145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8134,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8122,
											"end": 8134,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 8122,
											"end": 8138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8146,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8122,
											"end": 8146,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8146,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 8122,
											"end": 8146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8107,
											"end": 8119,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8107,
											"end": 8146,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8107,
											"end": 8146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8107,
											"end": 8146,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8107,
											"end": 8146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8187,
											"end": 8188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8170,
											"end": 8177,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8191,
											"end": 8197,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 8161,
											"end": 8198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8198,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 8205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 8205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 8205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9948,
											"end": 10040,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 9948,
											"end": 10040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9948,
											"end": 10040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9948,
											"end": 10040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9948,
											"end": 10040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9948,
											"end": 10040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1442,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1308,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1373,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 1396,
											"end": 1397,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1399,
											"end": 1400,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "PUSH",
											"source": 3,
											"value": "1E"
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "PUSH",
											"source": 3,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1392,
											"end": 1435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1435,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1435,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1442,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1442,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1442,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1442,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1759,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 1760,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1761,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1729,
											"end": 1761,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1729,
											"end": 1761,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1773,
											"end": 1882,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1773,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1854,
											"end": 1875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1852,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1876,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1773,
											"end": 1882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1773,
											"end": 1882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1773,
											"end": 1882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1979,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2015,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2016,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1990,
											"end": 2016,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1990,
											"end": 2016,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2026,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 2088,
											"end": 2089,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2077,
											"end": 2086,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2073,
											"end": 2090,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2064,
											"end": 2070,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2026,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2026,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2026,
											"end": 2091,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 2026,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1888,
											"end": 2098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2222,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2104,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2191,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 2209,
											"end": 2214,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2191,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2191,
											"end": 2215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2191,
											"end": 2215,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 2191,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2189,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2179,
											"end": 2216,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2222,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2222,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2228,
											"end": 2450,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 2228,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2325,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2359,
											"end": 2361,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2357,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2362,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2336,
											"end": 2362,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2336,
											"end": 2362,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2372,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 2440,
											"end": 2441,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2438,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2442,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2416,
											"end": 2422,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2372,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2372,
											"end": 2443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2372,
											"end": 2443,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 2372,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2228,
											"end": 2450,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2228,
											"end": 2450,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2228,
											"end": 2450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2228,
											"end": 2450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2228,
											"end": 2450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2456,
											"end": 3075,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2456,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2539,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2555,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2600,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2586,
											"end": 2595,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2577,
											"end": 2584,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2573,
											"end": 2596,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2601,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2566,
											"end": 2685,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2566,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 2566,
											"end": 2685,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2604,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2604,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2604,
											"end": 2683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2604,
											"end": 2683,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2604,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2566,
											"end": 2685,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 2566,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2724,
											"end": 2725,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2749,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 2794,
											"end": 2801,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2785,
											"end": 2791,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2783,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2770,
											"end": 2792,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 2749,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2802,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 2749,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2739,
											"end": 2802,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2739,
											"end": 2802,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2695,
											"end": 2812,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2853,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2877,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2922,
											"end": 2929,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2913,
											"end": 2919,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2902,
											"end": 2911,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2898,
											"end": 2920,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 2877,
											"end": 2930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2930,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2877,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2867,
											"end": 2930,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2867,
											"end": 2930,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2822,
											"end": 2940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 2981,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3005,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3041,
											"end": 3047,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3030,
											"end": 3039,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3026,
											"end": 3048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3005,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 3005,
											"end": 3058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3005,
											"end": 3058,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 3005,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2995,
											"end": 3058,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2995,
											"end": 3058,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2950,
											"end": 3068,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2456,
											"end": 3075,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2456,
											"end": 3075,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2456,
											"end": 3075,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2456,
											"end": 3075,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2456,
											"end": 3075,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2456,
											"end": 3075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3081,
											"end": 3410,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3081,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3140,
											"end": 3146,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3189,
											"end": 3191,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3177,
											"end": 3186,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3168,
											"end": 3175,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3164,
											"end": 3187,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3160,
											"end": 3192,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3157,
											"end": 3276,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3157,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 3157,
											"end": 3276,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3195,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 3195,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3195,
											"end": 3274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3195,
											"end": 3274,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 3195,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3157,
											"end": 3276,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 3157,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3316,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3340,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 3385,
											"end": 3392,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3374,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3361,
											"end": 3383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3340,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 3340,
											"end": 3393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3340,
											"end": 3393,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 3340,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3330,
											"end": 3393,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3330,
											"end": 3393,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3286,
											"end": 3403,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3081,
											"end": 3410,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3081,
											"end": 3410,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3081,
											"end": 3410,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3081,
											"end": 3410,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3081,
											"end": 3410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3745,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3416,
											"end": 3745,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3475,
											"end": 3481,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3524,
											"end": 3526,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3512,
											"end": 3521,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3510,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3499,
											"end": 3522,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3495,
											"end": 3527,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3611,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 3492,
											"end": 3611,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3530,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 3530,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3530,
											"end": 3609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3530,
											"end": 3609,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 3530,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3611,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 3492,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3650,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3675,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3711,
											"end": 3717,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3709,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3718,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3675,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 3675,
											"end": 3728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3675,
											"end": 3728,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 3675,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3665,
											"end": 3728,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3665,
											"end": 3728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3738,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3745,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3745,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3751,
											"end": 4225,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3751,
											"end": 4225,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3819,
											"end": 3825,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3827,
											"end": 3833,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3876,
											"end": 3878,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3864,
											"end": 3873,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3855,
											"end": 3862,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3851,
											"end": 3874,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3847,
											"end": 3879,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3844,
											"end": 3963,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3844,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 3844,
											"end": 3963,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3882,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 3882,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3882,
											"end": 3961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3882,
											"end": 3961,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 3882,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3844,
											"end": 3963,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 3844,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4003,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4027,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 4072,
											"end": 4079,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4063,
											"end": 4069,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4052,
											"end": 4061,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4048,
											"end": 4070,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4027,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4027,
											"end": 4080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4027,
											"end": 4080,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 4027,
											"end": 4080,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4017,
											"end": 4080,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4017,
											"end": 4080,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3973,
											"end": 4090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4129,
											"end": 4131,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4155,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 4200,
											"end": 4207,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4191,
											"end": 4197,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4180,
											"end": 4189,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4176,
											"end": 4198,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4155,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4155,
											"end": 4208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4155,
											"end": 4208,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 4155,
											"end": 4208,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4100,
											"end": 4218,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3751,
											"end": 4225,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3751,
											"end": 4225,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3751,
											"end": 4225,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3751,
											"end": 4225,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3751,
											"end": 4225,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3751,
											"end": 4225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4231,
											"end": 4400,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 4231,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4315,
											"end": 4326,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4344,
											"end": 4347,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4356,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4389,
											"end": 4393,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4384,
											"end": 4387,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4380,
											"end": 4394,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4365,
											"end": 4394,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4365,
											"end": 4394,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4231,
											"end": 4400,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4231,
											"end": 4400,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4231,
											"end": 4400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4231,
											"end": 4400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4231,
											"end": 4400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4406,
											"end": 4629,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 4406,
											"end": 4629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4546,
											"end": 4580,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4542,
											"end": 4543,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4534,
											"end": 4540,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4530,
											"end": 4544,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4523,
											"end": 4581,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "PUSH",
											"source": 5,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4610,
											"end": 4612,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4602,
											"end": 4608,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4598,
											"end": 4613,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4591,
											"end": 4622,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4406,
											"end": 4629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4406,
											"end": 4629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4635,
											"end": 5001,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4635,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4777,
											"end": 4780,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4798,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 4862,
											"end": 4864,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4857,
											"end": 4860,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4798,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 4798,
											"end": 4865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4798,
											"end": 4865,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 4798,
											"end": 4865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4791,
											"end": 4865,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4791,
											"end": 4865,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 4963,
											"end": 4966,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 4874,
											"end": 4967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 4967,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 4874,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4992,
											"end": 4994,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4987,
											"end": 4990,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4983,
											"end": 4995,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4976,
											"end": 4995,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4976,
											"end": 4995,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4635,
											"end": 5001,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4635,
											"end": 5001,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4635,
											"end": 5001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4635,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5007,
											"end": 5426,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 5007,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5177,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5211,
											"end": 5213,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5200,
											"end": 5209,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5214,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5188,
											"end": 5214,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5188,
											"end": 5214,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5260,
											"end": 5269,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5254,
											"end": 5258,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5250,
											"end": 5270,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5246,
											"end": 5247,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5235,
											"end": 5244,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5231,
											"end": 5248,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5271,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5288,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5288,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 5288,
											"end": 5419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5288,
											"end": 5419,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 5288,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5280,
											"end": 5419,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5280,
											"end": 5419,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5007,
											"end": 5426,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5007,
											"end": 5426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5007,
											"end": 5426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5007,
											"end": 5426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5432,
											"end": 5653,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 5432,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5572,
											"end": 5606,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 5568,
											"end": 5569,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5560,
											"end": 5566,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5556,
											"end": 5570,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5549,
											"end": 5607,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5645,
											"name": "PUSH",
											"source": 5,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5636,
											"end": 5638,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5628,
											"end": 5634,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5624,
											"end": 5639,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5617,
											"end": 5646,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5432,
											"end": 5653,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5432,
											"end": 5653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5659,
											"end": 6025,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 5659,
											"end": 6025,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5801,
											"end": 5804,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5822,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 5886,
											"end": 5888,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 5881,
											"end": 5884,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 5822,
											"end": 5889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5889,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 5822,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5815,
											"end": 5889,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5815,
											"end": 5889,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5898,
											"end": 5991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 5987,
											"end": 5990,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5898,
											"end": 5991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 5898,
											"end": 5991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5898,
											"end": 5991,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 5898,
											"end": 5991,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6016,
											"end": 6018,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6011,
											"end": 6014,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6007,
											"end": 6019,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6000,
											"end": 6019,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6000,
											"end": 6019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5659,
											"end": 6025,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5659,
											"end": 6025,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5659,
											"end": 6025,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5659,
											"end": 6025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6031,
											"end": 6450,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 6031,
											"end": 6450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6197,
											"end": 6201,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6235,
											"end": 6237,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6224,
											"end": 6233,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6220,
											"end": 6238,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6212,
											"end": 6238,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6212,
											"end": 6238,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6284,
											"end": 6293,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6278,
											"end": 6282,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6274,
											"end": 6294,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6270,
											"end": 6271,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6259,
											"end": 6268,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6255,
											"end": 6272,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6248,
											"end": 6295,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6312,
											"end": 6443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 6438,
											"end": 6442,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6312,
											"end": 6443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 6312,
											"end": 6443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6312,
											"end": 6443,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 6312,
											"end": 6443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6304,
											"end": 6443,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6304,
											"end": 6443,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6031,
											"end": 6450,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6031,
											"end": 6450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6031,
											"end": 6450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6031,
											"end": 6450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6456,
											"end": 6680,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 6456,
											"end": 6680,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6596,
											"end": 6630,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 6592,
											"end": 6593,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6584,
											"end": 6590,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6580,
											"end": 6594,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6631,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6665,
											"end": 6672,
											"name": "PUSH",
											"source": 5,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6660,
											"end": 6662,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6652,
											"end": 6658,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6648,
											"end": 6663,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6641,
											"end": 6673,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6456,
											"end": 6680,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6456,
											"end": 6680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 7052,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 6686,
											"end": 7052,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6828,
											"end": 6831,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6849,
											"end": 6916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 6913,
											"end": 6915,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 6908,
											"end": 6911,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6849,
											"end": 6916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 6849,
											"end": 6916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6849,
											"end": 6916,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 6849,
											"end": 6916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6842,
											"end": 6916,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 7018,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 7014,
											"end": 7017,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 7018,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 6925,
											"end": 7018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 7018,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 6925,
											"end": 7018,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7043,
											"end": 7045,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7038,
											"end": 7041,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7034,
											"end": 7046,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7027,
											"end": 7046,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7027,
											"end": 7046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 7052,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 7052,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 7052,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 7052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7058,
											"end": 7477,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 7058,
											"end": 7477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7224,
											"end": 7228,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7262,
											"end": 7264,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7251,
											"end": 7260,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7247,
											"end": 7265,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7239,
											"end": 7265,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7239,
											"end": 7265,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7311,
											"end": 7320,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7305,
											"end": 7309,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7301,
											"end": 7321,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7297,
											"end": 7298,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7286,
											"end": 7295,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7299,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7275,
											"end": 7322,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 7465,
											"end": 7469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 7339,
											"end": 7470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7470,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 7339,
											"end": 7470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7331,
											"end": 7470,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7331,
											"end": 7470,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7058,
											"end": 7477,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7058,
											"end": 7477,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7058,
											"end": 7477,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7058,
											"end": 7477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7483,
											"end": 7705,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 7483,
											"end": 7705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7623,
											"end": 7657,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 7619,
											"end": 7620,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7611,
											"end": 7617,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7607,
											"end": 7621,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7600,
											"end": 7658,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7692,
											"end": 7697,
											"name": "PUSH",
											"source": 5,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7687,
											"end": 7689,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7679,
											"end": 7685,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7675,
											"end": 7690,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7668,
											"end": 7698,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7483,
											"end": 7705,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7483,
											"end": 7705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7711,
											"end": 8077,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 7711,
											"end": 8077,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7853,
											"end": 7856,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7874,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 7938,
											"end": 7940,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 7933,
											"end": 7936,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7874,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 7874,
											"end": 7941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7874,
											"end": 7941,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 7874,
											"end": 7941,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7867,
											"end": 7941,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7867,
											"end": 7941,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 8039,
											"end": 8042,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 7950,
											"end": 8043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7950,
											"end": 8043,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 7950,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8068,
											"end": 8070,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8063,
											"end": 8066,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8052,
											"end": 8071,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8052,
											"end": 8071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7711,
											"end": 8077,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7711,
											"end": 8077,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7711,
											"end": 8077,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7711,
											"end": 8077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8083,
											"end": 8502,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 8083,
											"end": 8502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8249,
											"end": 8253,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8287,
											"end": 8289,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8276,
											"end": 8285,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8272,
											"end": 8290,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8264,
											"end": 8290,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8264,
											"end": 8290,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8336,
											"end": 8345,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8330,
											"end": 8334,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8326,
											"end": 8346,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8322,
											"end": 8323,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8311,
											"end": 8320,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8307,
											"end": 8324,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8300,
											"end": 8347,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8364,
											"end": 8495,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 8490,
											"end": 8494,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8364,
											"end": 8495,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 8364,
											"end": 8495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8364,
											"end": 8495,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 8364,
											"end": 8495,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8356,
											"end": 8495,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8356,
											"end": 8495,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8083,
											"end": 8502,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8083,
											"end": 8502,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8083,
											"end": 8502,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8083,
											"end": 8502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8508,
											"end": 8607,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 8508,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8560,
											"end": 8566,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8594,
											"end": 8599,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8588,
											"end": 8600,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8508,
											"end": 8607,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8508,
											"end": 8607,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8508,
											"end": 8607,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8508,
											"end": 8607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8613,
											"end": 8859,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 8613,
											"end": 8859,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8694,
											"end": 8695,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8704,
											"end": 8817,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 8704,
											"end": 8817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8718,
											"end": 8724,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8715,
											"end": 8716,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8712,
											"end": 8725,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 8704,
											"end": 8817,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8704,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 8704,
											"end": 8817,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8804,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8798,
											"end": 8801,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8794,
											"end": 8805,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8788,
											"end": 8806,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8784,
											"end": 8785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8779,
											"end": 8782,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8775,
											"end": 8786,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8768,
											"end": 8807,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8740,
											"end": 8742,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8737,
											"end": 8738,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8733,
											"end": 8743,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8728,
											"end": 8743,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8728,
											"end": 8743,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8704,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 8704,
											"end": 8817,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8704,
											"end": 8817,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 8704,
											"end": 8817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8851,
											"end": 8852,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8842,
											"end": 8848,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8837,
											"end": 8840,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8833,
											"end": 8849,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8826,
											"end": 8853,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8675,
											"end": 8859,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8613,
											"end": 8859,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8613,
											"end": 8859,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8613,
											"end": 8859,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8613,
											"end": 8859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8865,
											"end": 8967,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 8865,
											"end": 8967,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8906,
											"end": 8912,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8957,
											"end": 8959,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 8953,
											"end": 8960,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 8948,
											"end": 8950,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 8941,
											"end": 8946,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8937,
											"end": 8951,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8933,
											"end": 8961,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8923,
											"end": 8961,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8923,
											"end": 8961,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8865,
											"end": 8967,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8865,
											"end": 8967,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8865,
											"end": 8967,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8865,
											"end": 8967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8973,
											"end": 9350,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 8973,
											"end": 9350,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9061,
											"end": 9064,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9089,
											"end": 9128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 9122,
											"end": 9127,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9089,
											"end": 9128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 9089,
											"end": 9128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9089,
											"end": 9128,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 9089,
											"end": 9128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9144,
											"end": 9215,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 9208,
											"end": 9214,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9203,
											"end": 9206,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9144,
											"end": 9215,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 9144,
											"end": 9215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9144,
											"end": 9215,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 9144,
											"end": 9215,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9137,
											"end": 9215,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9137,
											"end": 9215,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9224,
											"end": 9289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 9282,
											"end": 9288,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9277,
											"end": 9280,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9270,
											"end": 9274,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9263,
											"end": 9268,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9259,
											"end": 9275,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9224,
											"end": 9289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 9224,
											"end": 9289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9224,
											"end": 9289,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 9224,
											"end": 9289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9314,
											"end": 9343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 9336,
											"end": 9342,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9314,
											"end": 9343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 9314,
											"end": 9343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9314,
											"end": 9343,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 9314,
											"end": 9343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9309,
											"end": 9312,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9305,
											"end": 9344,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9298,
											"end": 9344,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9298,
											"end": 9344,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9065,
											"end": 9350,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8973,
											"end": 9350,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8973,
											"end": 9350,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8973,
											"end": 9350,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8973,
											"end": 9350,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8973,
											"end": 9350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9356,
											"end": 9669,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 9356,
											"end": 9669,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9469,
											"end": 9473,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9507,
											"end": 9509,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9496,
											"end": 9505,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9492,
											"end": 9510,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9484,
											"end": 9510,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9484,
											"end": 9510,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9556,
											"end": 9565,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9550,
											"end": 9554,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9546,
											"end": 9566,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9542,
											"end": 9543,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9531,
											"end": 9540,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9527,
											"end": 9544,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9520,
											"end": 9567,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9584,
											"end": 9662,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 9657,
											"end": 9661,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9648,
											"end": 9654,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9584,
											"end": 9662,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 9584,
											"end": 9662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9584,
											"end": 9662,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 9584,
											"end": 9662,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9576,
											"end": 9662,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9576,
											"end": 9662,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9356,
											"end": 9669,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9356,
											"end": 9669,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9356,
											"end": 9669,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9356,
											"end": 9669,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9356,
											"end": 9669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9675,
											"end": 9855,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 9675,
											"end": 9855,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9723,
											"end": 9800,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9720,
											"end": 9721,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9713,
											"end": 9801,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9820,
											"end": 9824,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 9817,
											"end": 9818,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9810,
											"end": 9825,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9844,
											"end": 9848,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 9841,
											"end": 9842,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9834,
											"end": 9849,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9861,
											"end": 10055,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 9861,
											"end": 10055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9901,
											"end": 9905,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9921,
											"end": 9941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 9939,
											"end": 9940,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9921,
											"end": 9941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 9921,
											"end": 9941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9921,
											"end": 9941,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 9921,
											"end": 9941,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9916,
											"end": 9941,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9916,
											"end": 9941,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 9973,
											"end": 9974,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 9955,
											"end": 9975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9975,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 9955,
											"end": 9975,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9950,
											"end": 9975,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9950,
											"end": 9975,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9999,
											"end": 10000,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9996,
											"end": 9997,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9992,
											"end": 10001,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9984,
											"end": 10001,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9984,
											"end": 10001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10023,
											"end": 10024,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10017,
											"end": 10021,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10014,
											"end": 10025,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 10011,
											"end": 10048,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10011,
											"end": 10048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 10011,
											"end": 10048,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10028,
											"end": 10046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 10028,
											"end": 10046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 10028,
											"end": 10046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10028,
											"end": 10046,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 10028,
											"end": 10046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10011,
											"end": 10048,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 10011,
											"end": 10048,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9861,
											"end": 10055,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9861,
											"end": 10055,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9861,
											"end": 10055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9861,
											"end": 10055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9861,
											"end": 10055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10252,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 10061,
											"end": 10252,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10101,
											"end": 10104,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10120,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 10138,
											"end": 10139,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10120,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 10120,
											"end": 10140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10120,
											"end": 10140,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 10120,
											"end": 10140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10115,
											"end": 10140,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10115,
											"end": 10140,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10154,
											"end": 10174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 10172,
											"end": 10173,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10154,
											"end": 10174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 10154,
											"end": 10174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10154,
											"end": 10174,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 10154,
											"end": 10174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10149,
											"end": 10174,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10149,
											"end": 10174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10197,
											"end": 10198,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10194,
											"end": 10195,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10190,
											"end": 10199,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10183,
											"end": 10199,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10183,
											"end": 10199,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10218,
											"end": 10221,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10215,
											"end": 10216,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10212,
											"end": 10222,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 10209,
											"end": 10245,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10209,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 10209,
											"end": 10245,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10225,
											"end": 10243,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 10225,
											"end": 10243,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 10225,
											"end": 10243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10225,
											"end": 10243,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 10225,
											"end": 10243,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10209,
											"end": 10245,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 10209,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10252,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10252,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10252,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10252,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10258,
											"end": 10435,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 10258,
											"end": 10435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10398,
											"end": 10427,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 10394,
											"end": 10395,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10386,
											"end": 10392,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10382,
											"end": 10396,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10375,
											"end": 10428,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10258,
											"end": 10435,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10258,
											"end": 10435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10441,
											"end": 10807,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 10441,
											"end": 10807,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10583,
											"end": 10586,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10604,
											"end": 10671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 10668,
											"end": 10670,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 10663,
											"end": 10666,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10604,
											"end": 10671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 10604,
											"end": 10671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10604,
											"end": 10671,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 10604,
											"end": 10671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10597,
											"end": 10671,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10597,
											"end": 10671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10680,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 10769,
											"end": 10772,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10680,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 10680,
											"end": 10773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10680,
											"end": 10773,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 10680,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10798,
											"end": 10800,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10793,
											"end": 10796,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10789,
											"end": 10801,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10782,
											"end": 10801,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10782,
											"end": 10801,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10441,
											"end": 10807,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10441,
											"end": 10807,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10441,
											"end": 10807,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10441,
											"end": 10807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10813,
											"end": 11232,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 10813,
											"end": 11232,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10979,
											"end": 10983,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11017,
											"end": 11019,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11006,
											"end": 11015,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11002,
											"end": 11020,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10994,
											"end": 11020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10994,
											"end": 11020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11066,
											"end": 11075,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11060,
											"end": 11064,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11056,
											"end": 11076,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11052,
											"end": 11053,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11041,
											"end": 11050,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11037,
											"end": 11054,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11030,
											"end": 11077,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11094,
											"end": 11225,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 11220,
											"end": 11224,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11094,
											"end": 11225,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 11094,
											"end": 11225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11094,
											"end": 11225,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 11094,
											"end": 11225,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11086,
											"end": 11225,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11086,
											"end": 11225,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10813,
											"end": 11232,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10813,
											"end": 11232,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10813,
											"end": 11232,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10813,
											"end": 11232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11238,
											"end": 11458,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 11238,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11378,
											"end": 11412,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 11374,
											"end": 11375,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11366,
											"end": 11372,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11362,
											"end": 11376,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11355,
											"end": 11413,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11447,
											"end": 11450,
											"name": "PUSH",
											"source": 5,
											"value": "7300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11442,
											"end": 11444,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11434,
											"end": 11440,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11430,
											"end": 11445,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11423,
											"end": 11451,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11238,
											"end": 11458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11238,
											"end": 11458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11464,
											"end": 11830,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 11464,
											"end": 11830,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11606,
											"end": 11609,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11627,
											"end": 11694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 11691,
											"end": 11693,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 11686,
											"end": 11689,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11627,
											"end": 11694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 11627,
											"end": 11694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11627,
											"end": 11694,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 11627,
											"end": 11694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11620,
											"end": 11694,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11620,
											"end": 11694,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11703,
											"end": 11796,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 11792,
											"end": 11795,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11703,
											"end": 11796,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 11703,
											"end": 11796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11703,
											"end": 11796,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 11703,
											"end": 11796,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11821,
											"end": 11823,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11816,
											"end": 11819,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11812,
											"end": 11824,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11805,
											"end": 11824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11805,
											"end": 11824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11464,
											"end": 11830,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11464,
											"end": 11830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11464,
											"end": 11830,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11464,
											"end": 11830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11836,
											"end": 12255,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 11836,
											"end": 12255,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12002,
											"end": 12006,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12040,
											"end": 12042,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12029,
											"end": 12038,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12025,
											"end": 12043,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12017,
											"end": 12043,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12017,
											"end": 12043,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12089,
											"end": 12098,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12083,
											"end": 12087,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12079,
											"end": 12099,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12075,
											"end": 12076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12064,
											"end": 12073,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12060,
											"end": 12077,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12053,
											"end": 12100,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12117,
											"end": 12248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 12243,
											"end": 12247,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12117,
											"end": 12248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 12117,
											"end": 12248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12117,
											"end": 12248,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 12117,
											"end": 12248,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12109,
											"end": 12248,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12109,
											"end": 12248,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11836,
											"end": 12255,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11836,
											"end": 12255,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11836,
											"end": 12255,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11836,
											"end": 12255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									],
									".data": {
										"149B126E7125232B4200AF45303D04FBA8B74653B1A295A6A561A528C33FEFDD": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A287C363786607A1457A2D9D12FA61C0073358E02D76B4035FC2C2D86A19C0DB": "45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							},
							"sourceList": [
								"NewFraxProtocol/contracts/Common/Context.sol",
								"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol",
								"NewFraxProtocol/contracts/ERC20/IERC20.sol",
								"NewFraxProtocol/contracts/Math/SafeMath.sol",
								"NewFraxProtocol/contracts/Utils/Address.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20Mintable}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.approve(address spender, uint256 amount)\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for `accounts`'s tokens of at least `amount`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":\"ERC20Custom\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NewFraxProtocol/contracts/Common/Context.sol\":{\"keccak256\":\"0x60d51a32063a4975dbf9433d38f5849173527da72f007c38053274e06698cb54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9ee6938d731aac55f6176c30ba4fc8456a63de57a7a2d659f43a053dfb381d3\",\"dweb:/ipfs/QmRyq4LneV4qz8uLdEhTU4YndjT365PJBPvK4btHKtmSSG\"]},\"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol\":{\"keccak256\":\"0xff03c1b74f9769a972c7a45f1876f8d14f02692d6994e23a2e61cb7b47f2dcc7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://692b1c8a92cae3984781a36cbeac86dfa75133760cc87ed90a6a32d7d7a8c7eb\",\"dweb:/ipfs/QmNZPS2M5kJNG1biNbWufyfJWimvpE7Waw2YhgaCiXLrv5\"]},\"NewFraxProtocol/contracts/ERC20/IERC20.sol\":{\"keccak256\":\"0x057bec1fafd7ca222117f41fcfb9c8dc1f61aa30e5a0222c981196e9113de7e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c74a52d9102d6eaf4c2a6d630892f92260391ee5e95c9f55578a3a21b02f8b09\",\"dweb:/ipfs/QmWjPAqmGF88HpkR4BCf3pgimrZvLf4ERVG2Tz5EDjKP62\"]},\"NewFraxProtocol/contracts/Math/SafeMath.sol\":{\"keccak256\":\"0x43a20f7cf4c4319f81450d53779455e88a7ab80bdfc43925156ed4083b74a180\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85317e177f613c29156ffe0b1c1c29c31fedfea1ffc373c9d7f393ef51372728\",\"dweb:/ipfs/QmckZqe6wjgKWd4BTPUjRY1ofC9CsZKxAgXPFCKBisuJdr\"]},\"NewFraxProtocol/contracts/Utils/Address.sol\":{\"keccak256\":\"0x60b5be0e623c9caa7d5ae4c9cf623c4f984ddb87837d2967fd070ef119f8a4ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00aecccf754f6c47afc02fc0b9fa80f5c0d76b868dad1dfe027efe336aa9d7f7\",\"dweb:/ipfs/QmZSAq9jF52a6LgJjxokShg81Lnd32mK4JPNmeTvFD49tN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 43,
								"contract": "NewFraxProtocol/contracts/ERC20/ERC20Custom.sol:ERC20Custom",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 49,
								"contract": "NewFraxProtocol/contracts/ERC20/ERC20Custom.sol:ERC20Custom",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 51,
								"contract": "NewFraxProtocol/contracts/ERC20/ERC20Custom.sol:ERC20Custom",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"NewFraxProtocol/contracts/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see {ERC20Detailed}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see {ERC20Detailed}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NewFraxProtocol/contracts/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NewFraxProtocol/contracts/Common/Context.sol\":{\"keccak256\":\"0x60d51a32063a4975dbf9433d38f5849173527da72f007c38053274e06698cb54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9ee6938d731aac55f6176c30ba4fc8456a63de57a7a2d659f43a053dfb381d3\",\"dweb:/ipfs/QmRyq4LneV4qz8uLdEhTU4YndjT365PJBPvK4btHKtmSSG\"]},\"NewFraxProtocol/contracts/ERC20/IERC20.sol\":{\"keccak256\":\"0x057bec1fafd7ca222117f41fcfb9c8dc1f61aa30e5a0222c981196e9113de7e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c74a52d9102d6eaf4c2a6d630892f92260391ee5e95c9f55578a3a21b02f8b09\",\"dweb:/ipfs/QmWjPAqmGF88HpkR4BCf3pgimrZvLf4ERVG2Tz5EDjKP62\"]},\"NewFraxProtocol/contracts/Math/SafeMath.sol\":{\"keccak256\":\"0x43a20f7cf4c4319f81450d53779455e88a7ab80bdfc43925156ed4083b74a180\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85317e177f613c29156ffe0b1c1c29c31fedfea1ffc373c9d7f393ef51372728\",\"dweb:/ipfs/QmckZqe6wjgKWd4BTPUjRY1ofC9CsZKxAgXPFCKBisuJdr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"NewFraxProtocol/contracts/Math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":623:5331  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":623:5331  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c7b39ab999725fcb3e84bedf8e06eebafe308e7b44eb69ac14aa01809f548ff164736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c7b39ab999725fcb3e84bedf8e06eebafe308e7b44eb69ac14aa01809f548ff164736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xB3 SWAP11 0xB9 SWAP10 PUSH19 0x5FCB3E84BEDF8E06EEBAFE308E7B44EB69AC14 0xAA ADD DUP1 SWAP16 SLOAD DUP16 CALL PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "623:4708:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c7b39ab999725fcb3e84bedf8e06eebafe308e7b44eb69ac14aa01809f548ff164736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xB3 SWAP11 0xB9 SWAP10 PUSH19 0x5FCB3E84BEDF8E06EEBAFE308E7B44EB69AC14 0xAA ADD DUP1 SWAP16 SLOAD DUP16 CALL PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "623:4708:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c7b39ab999725fcb3e84bedf8e06eebafe308e7b44eb69ac14aa01809f548ff164736f6c63430008150033",
									".code": [
										{
											"begin": 623,
											"end": 5331,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"NewFraxProtocol/contracts/Common/Context.sol",
								"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol",
								"NewFraxProtocol/contracts/ERC20/IERC20.sol",
								"NewFraxProtocol/contracts/Math/SafeMath.sol",
								"NewFraxProtocol/contracts/Utils/Address.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NewFraxProtocol/contracts/Math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NewFraxProtocol/contracts/Math/SafeMath.sol\":{\"keccak256\":\"0x43a20f7cf4c4319f81450d53779455e88a7ab80bdfc43925156ed4083b74a180\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85317e177f613c29156ffe0b1c1c29c31fedfea1ffc373c9d7f393ef51372728\",\"dweb:/ipfs/QmckZqe6wjgKWd4BTPUjRY1ofC9CsZKxAgXPFCKBisuJdr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"NewFraxProtocol/contracts/Utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NewFraxProtocol/contracts/Utils/Address.sol\":127:7811  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"NewFraxProtocol/contracts/Utils/Address.sol\":127:7811  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203dee4be3b2713989af158b1462f93e958024d6715e9c5870d91509d739a37bfc64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203dee4be3b2713989af158b1462f93e958024d6715e9c5870d91509d739a37bfc64736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE 0xEE 0x4B 0xE3 0xB2 PUSH18 0x3989AF158B1462F93E958024D6715E9C5870 0xD9 ISZERO MULMOD 0xD7 CODECOPY LOG3 PUSH28 0xFC64736F6C6343000815003300000000000000000000000000000000 ",
							"sourceMap": "127:7684:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203dee4be3b2713989af158b1462f93e958024d6715e9c5870d91509d739a37bfc64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE 0xEE 0x4B 0xE3 0xB2 PUSH18 0x3989AF158B1462F93E958024D6715E9C5870 0xD9 ISZERO MULMOD 0xD7 CODECOPY LOG3 PUSH28 0xFC64736F6C6343000815003300000000000000000000000000000000 ",
							"sourceMap": "127:7684:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 127,
									"end": 7811,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203dee4be3b2713989af158b1462f93e958024d6715e9c5870d91509d739a37bfc64736f6c63430008150033",
									".code": [
										{
											"begin": 127,
											"end": 7811,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 127,
											"end": 7811,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 127,
											"end": 7811,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 127,
											"end": 7811,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 127,
											"end": 7811,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 127,
											"end": 7811,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 127,
											"end": 7811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 127,
											"end": 7811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 127,
											"end": 7811,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"NewFraxProtocol/contracts/Common/Context.sol",
								"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol",
								"NewFraxProtocol/contracts/ERC20/IERC20.sol",
								"NewFraxProtocol/contracts/Math/SafeMath.sol",
								"NewFraxProtocol/contracts/Utils/Address.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NewFraxProtocol/contracts/Utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NewFraxProtocol/contracts/Utils/Address.sol\":{\"keccak256\":\"0x60b5be0e623c9caa7d5ae4c9cf623c4f984ddb87837d2967fd070ef119f8a4ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00aecccf754f6c47afc02fc0b9fa80f5c0d76b868dad1dfe027efe336aa9d7f7\",\"dweb:/ipfs/QmZSAq9jF52a6LgJjxokShg81Lnd32mK4JPNmeTvFD49tN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"NewFraxProtocol/contracts/Common/Context.sol": {
				"ast": {
					"absolutePath": "NewFraxProtocol/contracts/Common/Context.sol",
					"exportedSymbols": {
						"Context": [
							25
						]
					},
					"id": 26,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "32:25:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 25,
							"linearizedBaseContracts": [
								25
							],
							"name": "Context",
							"nameLocation": "577:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 12,
										"nodeType": "Block",
										"src": "661:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 8,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "686:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 9,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "690:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "686:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 7,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "678:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 6,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "678:8:0",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "678:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 5,
												"id": 11,
												"nodeType": "Return",
												"src": "671:26:0"
											}
										]
									},
									"id": 13,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "600:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "610:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "644:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "644:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "643:17:0"
									},
									"scope": 25,
									"src": "591:113:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "775:165:0",
										"statements": [
											{
												"expression": {
													"id": 18,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "785:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$25",
														"typeString": "contract Context"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "785:4:0"
											},
											{
												"expression": {
													"expression": {
														"id": 20,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "925:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "929:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "925:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 17,
												"id": 22,
												"nodeType": "Return",
												"src": "918:15:0"
											}
										]
									},
									"id": 24,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "719:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "727:2:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "761:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 15,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "761:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "760:14:0"
									},
									"scope": 25,
									"src": "710:230:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 26,
							"src": "559:383:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:910:0"
				},
				"id": 0
			},
			"NewFraxProtocol/contracts/ERC20/ERC20Custom.sol": {
				"ast": {
					"absolutePath": "NewFraxProtocol/contracts/ERC20/ERC20Custom.sol",
					"exportedSymbols": {
						"Address": [
							1112
						],
						"Context": [
							25
						],
						"ERC20Custom": [
							540
						],
						"IERC20": [
							620
						],
						"SafeMath": [
							816
						]
					},
					"id": 541,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 27,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "32:25:1"
						},
						{
							"absolutePath": "NewFraxProtocol/contracts/Common/Context.sol",
							"file": "../Common/Context.sol",
							"id": 28,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 541,
							"sourceUnit": 26,
							"src": "59:31:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "NewFraxProtocol/contracts/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 29,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 541,
							"sourceUnit": 621,
							"src": "91:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "NewFraxProtocol/contracts/Math/SafeMath.sol",
							"file": "../Math/SafeMath.sol",
							"id": 30,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 541,
							"sourceUnit": 817,
							"src": "114:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "NewFraxProtocol/contracts/Utils/Address.sol",
							"file": "../Utils/Address.sol",
							"id": 31,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 541,
							"sourceUnit": 1113,
							"src": "145:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 33,
										"name": "Context",
										"nameLocations": [
											"1427:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 25,
										"src": "1427:7:1"
									},
									"id": 34,
									"nodeType": "InheritanceSpecifier",
									"src": "1427:7:1"
								},
								{
									"baseName": {
										"id": 35,
										"name": "IERC20",
										"nameLocations": [
											"1436:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 620,
										"src": "1436:6:1"
									},
									"id": 36,
									"nodeType": "InheritanceSpecifier",
									"src": "1436:6:1"
								}
							],
							"canonicalName": "ERC20Custom",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 32,
								"nodeType": "StructuredDocumentation",
								"src": "250:1152:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20Mintable}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 540,
							"linearizedBaseContracts": [
								540,
								620,
								25
							],
							"name": "ERC20Custom",
							"nameLocation": "1412:11:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 39,
									"libraryName": {
										"id": 37,
										"name": "SafeMath",
										"nameLocations": [
											"1455:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 816,
										"src": "1455:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "1449:27:1",
									"typeName": {
										"id": 38,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1468:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 43,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1520:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 540,
									"src": "1482:47:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 42,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 40,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1491:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1482:28:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 41,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1502:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 49,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1595:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 540,
									"src": "1536:70:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 48,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 44,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1545:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1536:49:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 47,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 45,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1565:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1556:28:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 46,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1576:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 51,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1629:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 540,
									"src": "1613:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 50,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1613:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										551
									],
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "1764:36:1",
										"statements": [
											{
												"expression": {
													"id": 58,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 51,
													"src": "1781:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 57,
												"id": 59,
												"nodeType": "Return",
												"src": "1774:19:1"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "1648:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 61,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1711:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 54,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1737:8:1"
									},
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:2:1"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "1755:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:9:1"
									},
									"scope": 540,
									"src": "1702:98:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										559
									],
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "1933:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 70,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "1950:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 72,
													"indexExpression": {
														"id": 71,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "1960:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1950:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 69,
												"id": 73,
												"nodeType": "Return",
												"src": "1943:25:1"
											}
										]
									},
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "1806:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1867:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 66,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1906:8:1"
									},
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1885:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1877:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1877:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1876:17:1"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1924:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1924:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1923:9:1"
									},
									"scope": 540,
									"src": "1858:117:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										569
									],
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "2270:80:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 87,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "2290:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2290:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 89,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "2304:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 90,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "2315:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 86,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "2280:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2280:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "2280:42:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2339:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 85,
												"id": 94,
												"nodeType": "Return",
												"src": "2332:11:1"
											}
										]
									},
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "1981:192:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 96,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2187:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 82,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2246:8:1"
									},
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2204:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "2196:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 77,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2196:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2223:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "2215:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2195:35:1"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "2264:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 83,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2264:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2263:6:1"
									},
									"scope": 540,
									"src": "2178:172:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										579
									],
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "2506:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 107,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "2523:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 109,
														"indexExpression": {
															"id": 108,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "2535:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2523:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 111,
													"indexExpression": {
														"id": 110,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2542:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2523:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 106,
												"id": 112,
												"nodeType": "Return",
												"src": "2516:34:1"
											}
										]
									},
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "2356:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2417:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 103,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2479:8:1"
									},
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2435:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "2427:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2450:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "2442:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2442:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2426:32:1"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "2497:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2497:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2496:9:1"
									},
									"scope": 540,
									"src": "2408:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										589
									],
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "2824:77:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 126,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "2843:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2843:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 128,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "2857:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 129,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "2866:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 125,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "2834:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2834:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "2834:39:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2890:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 124,
												"id": 133,
												"nodeType": "Return",
												"src": "2883:11:1"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "2563:167:1",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address.approve(address spender, uint256 amount)"
									},
									"functionSelector": "095ea7b3",
									"id": 135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2744:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 121,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2800:8:1"
									},
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2760:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "2752:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2752:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2777:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "2769:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2769:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2751:33:1"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "2818:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 122,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2818:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2817:6:1"
									},
									"scope": 540,
									"src": "2735:166:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										601
									],
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "3471:205:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 149,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "3491:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 150,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "3499:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 151,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "3510:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 148,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "3481:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3481:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "3481:36:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 155,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "3536:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 156,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "3544:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3544:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 165,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 142,
																	"src": "3596:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3604:42:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 158,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 49,
																			"src": "3558:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 160,
																		"indexExpression": {
																			"id": 159,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 138,
																			"src": "3570:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3558:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 163,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 161,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 13,
																			"src": "3578:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3578:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3558:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3592:3:1",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 694,
																"src": "3558:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3558:89:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 154,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "3527:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3527:121:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "3527:121:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3665:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 147,
												"id": 171,
												"nodeType": "Return",
												"src": "3658:11:1"
											}
										]
									},
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "2907:447:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for `sender`'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3368:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 144,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3447:8:1"
									},
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3389:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "3381:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3381:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3405:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "3397:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3397:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3424:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "3416:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3416:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3380:51:1"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "3465:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 145,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3465:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3464:6:1"
									},
									"scope": 540,
									"src": "3359:317:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 200,
										"nodeType": "Block",
										"src": "4165:121:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 184,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "4184:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4184:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 186,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "4198:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 194,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 178,
																	"src": "4246:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 187,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 49,
																			"src": "4207:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 190,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 188,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 13,
																				"src": "4219:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4219:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4207:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 192,
																	"indexExpression": {
																		"id": 191,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 176,
																		"src": "4233:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4207:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4242:3:1",
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 649,
																"src": "4207:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4207:50:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 183,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "4175:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4175:83:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "4175:83:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4275:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 182,
												"id": 199,
												"nodeType": "Return",
												"src": "4268:11:1"
											}
										]
									},
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "3682:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "4080:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4106:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "4098:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4098:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "4123:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "4115:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4115:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4097:37:1"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "4159:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 180,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4159:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4158:6:1"
									},
									"scope": 540,
									"src": "4071:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "4872:167:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 212,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "4891:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4891:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 214,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "4905:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 222,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 206,
																	"src": "4953:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4970:39:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 215,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 49,
																			"src": "4914:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 218,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 216,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 13,
																				"src": "4926:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 217,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4926:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4914:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 220,
																	"indexExpression": {
																		"id": 219,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 204,
																		"src": "4940:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4914:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4949:3:1",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 694,
																"src": "4914:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4914:96:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 211,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "4882:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4882:129:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "4882:129:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5028:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 210,
												"id": 228,
												"nodeType": "Return",
												"src": "5021:11:1"
											}
										]
									},
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "4292:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "4782:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4808:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "4800:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4800:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "4825:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "4817:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4817:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4799:42:1"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "4866:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4866:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4865:6:1"
									},
									"scope": 540,
									"src": "4773:266:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "5600:443:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 241,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "5618:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5636:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5628:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 242,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5628:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5628:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5618:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5640:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 240,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5610:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5610:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "5610:70:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "5698:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5719:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5711:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 252,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5711:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5711:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5698:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5723:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5690:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5690:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "5690:71:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 261,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "5793:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 262,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "5801:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 263,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "5812:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 260,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 539,
														"src": "5772:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5772:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "5772:47:1"
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 266,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "5830:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 268,
														"indexExpression": {
															"id": 267,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "5840:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5830:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 273,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "5872:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5880:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 269,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "5850:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 271,
																"indexExpression": {
																	"id": 270,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "5860:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5850:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5868:3:1",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 694,
															"src": "5850:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5850:71:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5830:91:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "5830:91:1"
											},
											{
												"expression": {
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 278,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "5931:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 280,
														"indexExpression": {
															"id": 279,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "5941:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5931:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 285,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "5979:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 281,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "5954:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 283,
																"indexExpression": {
																	"id": 282,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "5964:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5954:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5975:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 649,
															"src": "5954:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5954:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5931:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "5931:55:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 290,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "6010:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 291,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "6018:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 292,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "6029:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 289,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "6001:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6001:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 294,
												"nodeType": "EmitStatement",
												"src": "5996:40:1"
											}
										]
									},
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "5045:463:1",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5522:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5540:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "5532:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5532:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5556:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "5548:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5575:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "5567:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5567:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5531:51:1"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5600:0:1"
									},
									"scope": 540,
									"src": "5513:530:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "6378:305:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 305,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "6396:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6415:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6407:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 306,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6407:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6407:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6396:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6419:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 304,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6388:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6388:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 313,
												"nodeType": "ExpressionStatement",
												"src": "6388:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6493:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6485:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 315,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6485:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6485:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 319,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "6497:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 320,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "6506:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 314,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 539,
														"src": "6464:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6464:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "6464:49:1"
											},
											{
												"expression": {
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 323,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "6524:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 326,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "6556:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 324,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 51,
																"src": "6539:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6552:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 649,
															"src": "6539:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6539:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6524:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "6524:39:1"
											},
											{
												"expression": {
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 330,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "6573:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 332,
														"indexExpression": {
															"id": 331,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "6583:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6573:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 337,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "6617:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 333,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "6594:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 335,
																"indexExpression": {
																	"id": 334,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 299,
																	"src": "6604:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6594:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6613:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 649,
															"src": "6594:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6594:30:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6573:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "6573:51:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6656:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6648:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 342,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6648:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6648:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 346,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "6660:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 347,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "6669:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 341,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "6639:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6639:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 349,
												"nodeType": "EmitStatement",
												"src": "6634:42:1"
											}
										]
									},
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "6049:259:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
									},
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "6322:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6336:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "6328:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6328:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6353:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "6345:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6327:33:1"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6378:0:1"
									},
									"scope": 540,
									"src": "6313:370:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "6837:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 358,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "6853:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6853:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 360,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "6867:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 357,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "6847:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6847:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "6847:27:1"
											}
										]
									},
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "6689:98:1",
										"text": " @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "6801:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6814:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "6806:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6806:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6805:16:1"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6837:0:1"
									},
									"scope": 540,
									"src": "6792:89:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "7251:224:1",
										"statements": [
											{
												"assignments": [
													373
												],
												"declarations": [
													{
														"constant": false,
														"id": 373,
														"mutability": "mutable",
														"name": "decreasedAllowance",
														"nameLocation": "7269:18:1",
														"nodeType": "VariableDeclaration",
														"scope": 396,
														"src": "7261:26:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 372,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7261:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 383,
												"initialValue": {
													"arguments": [
														{
															"id": 380,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "7327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7335:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
																"typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
															},
															"value": "ERC20: burn amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
																"typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 375,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "7300:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 376,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 13,
																		"src": "7309:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7309:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 374,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "7290:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view returns (uint256)"
																}
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7290:32:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7323:3:1",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 694,
														"src": "7290:36:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7290:84:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7261:113:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 385,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "7394:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 386,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "7403:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7403:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 388,
															"name": "decreasedAllowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "7417:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 384,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "7385:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7385:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "7385:51:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 392,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "7452:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 393,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "7461:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 391,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "7446:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7446:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "7446:22:1"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "6887:293:1",
										"text": " @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for `accounts`'s tokens of at least\n `amount`."
									},
									"functionSelector": "79cc6790",
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "7194:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7211:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "7203:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7203:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7228:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "7220:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7220:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7202:33:1"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7251:0:1"
									},
									"scope": 540,
									"src": "7185:290:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "7860:345:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 406,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "7878:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7897:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7889:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 407,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7889:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7889:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7878:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7901:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 405,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7870:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7870:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 414,
												"nodeType": "ExpressionStatement",
												"src": "7870:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 416,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "7969:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7986:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7978:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 417,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7978:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7978:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 421,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "7990:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 415,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 539,
														"src": "7948:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7948:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "7948:49:1"
											},
											{
												"expression": {
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 424,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "8008:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 426,
														"indexExpression": {
															"id": 425,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "8018:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8008:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 431,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "8052:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8060:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 427,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "8029:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 429,
																"indexExpression": {
																	"id": 428,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "8039:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8029:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8048:3:1",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 694,
															"src": "8029:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8029:68:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8008:89:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "8008:89:1"
											},
											{
												"expression": {
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 436,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "8107:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 439,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "8139:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 437,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 51,
																"src": "8122:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8135:3:1",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 666,
															"src": "8122:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8122:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8107:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "8107:39:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 444,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "8170:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8187:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8179:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 445,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8179:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8179:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 449,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "8191:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 443,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "8161:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8161:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 451,
												"nodeType": "EmitStatement",
												"src": "8156:42:1"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "7482:308:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7804:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7818:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "7810:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7810:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7835:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "7827:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7827:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7809:33:1"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7860:0:1"
									},
									"scope": 540,
									"src": "7795:410:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "8713:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 464,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "8731:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8748:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8740:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 465,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8740:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8740:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8731:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8752:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 463,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8723:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8723:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "8723:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 474,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "8809:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8828:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8820:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 475,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8820:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8820:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8809:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8832:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8801:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8801:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "8801:68:1"
											},
											{
												"expression": {
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 483,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 49,
																"src": "8880:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 486,
															"indexExpression": {
																"id": 484,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "8892:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8880:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 487,
														"indexExpression": {
															"id": 485,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "8899:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8880:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 488,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "8910:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8880:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "8880:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 492,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "8940:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 493,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "8947:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 494,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "8956:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 491,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "8931:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8931:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "EmitStatement",
												"src": "8926:37:1"
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "8211:414:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8639:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8656:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "8648:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8648:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8671:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "8663:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8688:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "8680:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8680:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8647:48:1"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8713:0:1"
									},
									"scope": 540,
									"src": "8630:340:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 527,
										"nodeType": "Block",
										"src": "9217:168:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 507,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "9233:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 508,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "9242:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "9227:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9227:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "9227:22:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 512,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "9268:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 513,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "9277:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9277:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 522,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 503,
																	"src": "9330:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9338:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
																		"typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
																	},
																	"value": "ERC20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
																		"typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 515,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 49,
																			"src": "9291:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 517,
																		"indexExpression": {
																			"id": 516,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 501,
																			"src": "9303:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9291:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 520,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 518,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 13,
																			"src": "9312:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9312:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9291:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9326:3:1",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 694,
																"src": "9291:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9291:86:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 511,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "9259:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9259:119:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "9259:119:1"
											}
										]
									},
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "8976:167:1",
										"text": " @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n from the caller's allowance.\n See {_burn} and {_approve}."
									},
									"id": 528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nameLocation": "9157:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9175:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "9167:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9167:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9192:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "9184:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9184:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9166:33:1"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9217:0:1"
									},
									"scope": 540,
									"src": "9148:237:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "10037:3:1",
										"statements": []
									},
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "9391:552:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of `from`'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of `from`'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:using-hooks.adoc[Using Hooks]."
									},
									"id": 539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "9957:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9986:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "9978:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9978:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10000:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "9992:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9992:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10012:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "10004:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10004:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9977:42:1"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10037:0:1"
									},
									"scope": 540,
									"src": "9948:92:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 541,
							"src": "1403:8639:1",
							"usedErrors": [],
							"usedEvents": [
								610,
								619
							]
						}
					],
					"src": "32:10010:1"
				},
				"id": 1
			},
			"NewFraxProtocol/contracts/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "NewFraxProtocol/contracts/ERC20/IERC20.sol",
					"exportedSymbols": {
						"Context": [
							25
						],
						"IERC20": [
							620
						],
						"SafeMath": [
							816
						]
					},
					"id": 621,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 542,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "32:25:2"
						},
						{
							"absolutePath": "NewFraxProtocol/contracts/Common/Context.sol",
							"file": "../Common/Context.sol",
							"id": 543,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 621,
							"sourceUnit": 26,
							"src": "59:31:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "NewFraxProtocol/contracts/Math/SafeMath.sol",
							"file": "../Math/SafeMath.sol",
							"id": 544,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 621,
							"sourceUnit": 817,
							"src": "91:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 545,
								"nodeType": "StructuredDocumentation",
								"src": "123:150:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP. Does not include\n the optional functions; to access them see {ERC20Detailed}."
							},
							"fullyImplemented": false,
							"id": 620,
							"linearizedBaseContracts": [
								620
							],
							"name": "IERC20",
							"nameLocation": "284:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "297:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 551,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "377:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "388:2:2"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "414:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:9:2"
									},
									"scope": 620,
									"src": "368:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "429:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "515:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "533:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "525:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "524:17:2"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "565:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:9:2"
									},
									"scope": 620,
									"src": "506:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "580:209:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 569,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "803:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "820:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "812:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "839:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "831:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:35:2"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "865:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 566,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "865:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "864:6:2"
									},
									"scope": 620,
									"src": "794:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "877:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 579,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1155:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1173:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "1165:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1165:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1188:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "1180:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1180:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1164:32:2"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "1220:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:9:2"
									},
									"scope": 620,
									"src": "1146:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "1235:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 589,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1891:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1907:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "1899:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1899:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1924:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "1916:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1916:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1898:33:2"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "1950:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 586,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1950:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:6:2"
									},
									"scope": 620,
									"src": "1882:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "1962:296:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 601,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2272:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2293:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "2285:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2285:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2309:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "2301:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2301:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2328:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "2320:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2320:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:51:2"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "2354:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 598,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2354:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2353:6:2"
									},
									"scope": 620,
									"src": "2263:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "2366:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 610,
									"name": "Transfer",
									"nameLocation": "2535:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2560:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "2544:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2544:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2582:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "2566:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2594:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "2586:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2586:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2543:57:2"
									},
									"src": "2529:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 611,
										"nodeType": "StructuredDocumentation",
										"src": "2607:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 619,
									"name": "Approval",
									"nameLocation": "2766:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2791:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "2775:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2814:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "2798:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2831:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "2823:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2823:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2774:63:2"
									},
									"src": "2760:78:2"
								}
							],
							"scope": 621,
							"src": "274:2566:2",
							"usedErrors": [],
							"usedEvents": [
								610,
								619
							]
						}
					],
					"src": "32:2810:2"
				},
				"id": 2
			},
			"NewFraxProtocol/contracts/Math/SafeMath.sol": {
				"ast": {
					"absolutePath": "NewFraxProtocol/contracts/Math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							816
						]
					},
					"id": 817,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 622,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "32:25:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 623,
								"nodeType": "StructuredDocumentation",
								"src": "59:563:3",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 816,
							"linearizedBaseContracts": [
								816
							],
							"name": "SafeMath",
							"nameLocation": "631:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "935:109:3",
										"statements": [
											{
												"assignments": [
													634
												],
												"declarations": [
													{
														"constant": false,
														"id": 634,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "953:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 648,
														"src": "945:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 633,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "945:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 638,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 635,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "957:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 636,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "961:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "957:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "945:17:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 640,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "980:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 641,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "985:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "980:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "988:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 639,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "972:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "972:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "972:46:3"
											},
											{
												"expression": {
													"id": 646,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 634,
													"src": "1036:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 632,
												"id": 647,
												"nodeType": "Return",
												"src": "1029:8:3"
											}
										]
									},
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "646:217:3",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "877:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "889:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "881:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "900:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "892:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "880:22:3"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 816,
									"src": "868:176:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "1375:67:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 660,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "1396:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 661,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "1399:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1402:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 659,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															666,
															694
														],
														"referencedDeclaration": 694,
														"src": "1392:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1392:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 658,
												"id": 664,
												"nodeType": "Return",
												"src": "1385:50:3"
											}
										]
									},
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "1050:253:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1317:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1329:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "1321:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1321:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1340:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "1332:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1320:22:3"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "1366:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1365:9:3"
									},
									"scope": 816,
									"src": "1308:134:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "1861:92:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 679,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "1879:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 680,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 669,
																"src": "1884:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1879:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 682,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "1887:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 678,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1871:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1871:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 684,
												"nodeType": "ExpressionStatement",
												"src": "1871:29:3"
											},
											{
												"assignments": [
													686
												],
												"declarations": [
													{
														"constant": false,
														"id": 686,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1918:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 693,
														"src": "1910:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 685,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1910:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 690,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 687,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "1922:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 688,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "1926:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1922:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1910:17:3"
											},
											{
												"expression": {
													"id": 691,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 686,
													"src": "1945:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 677,
												"id": 692,
												"nodeType": "Return",
												"src": "1938:8:3"
											}
										]
									},
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "1448:313:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow.\n _Available since v2.4.0._"
									},
									"id": 694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1775:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1787:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "1779:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1798:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "1790:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1790:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1815:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "1801:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 672,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1801:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:50:3"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "1852:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1851:9:3"
									},
									"scope": 816,
									"src": "1766:187:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "2260:392:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 704,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "2492:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 705,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2497:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2492:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 710,
												"nodeType": "IfStatement",
												"src": "2488:45:3",
												"trueBody": {
													"id": 709,
													"nodeType": "Block",
													"src": "2500:33:3",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2521:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 703,
															"id": 708,
															"nodeType": "Return",
															"src": "2514:8:3"
														}
													]
												}
											},
											{
												"assignments": [
													712
												],
												"declarations": [
													{
														"constant": false,
														"id": 712,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2551:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 728,
														"src": "2543:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 711,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2543:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 716,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 713,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "2555:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 714,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "2559:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2555:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2543:17:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 718,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "2578:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 719,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 697,
																	"src": "2582:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2578:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 721,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 699,
																"src": "2587:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2578:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2590:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 717,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2570:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2570:56:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 725,
												"nodeType": "ExpressionStatement",
												"src": "2570:56:3"
											},
											{
												"expression": {
													"id": 726,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 712,
													"src": "2644:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 703,
												"id": 727,
												"nodeType": "Return",
												"src": "2637:8:3"
											}
										]
									},
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "1959:229:3",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "2202:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2214:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "2206:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2225:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "2217:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2217:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2205:22:3"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "2251:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2251:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2250:9:3"
									},
									"scope": 816,
									"src": "2193:459:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "3174:63:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 740,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "3195:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 741,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "3198:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3201:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 739,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															746,
															774
														],
														"referencedDeclaration": 774,
														"src": "3191:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3191:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 738,
												"id": 744,
												"nodeType": "Return",
												"src": "3184:46:3"
											}
										]
									},
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "2658:444:3",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3116:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3128:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "3120:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3120:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3139:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "3131:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3131:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3119:22:3"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "3165:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:9:3"
									},
									"scope": 816,
									"src": "3107:130:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 773,
										"nodeType": "Block",
										"src": "3847:243:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 759,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 751,
																"src": "3931:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3935:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3931:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 762,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "3938:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 758,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3923:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3923:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 764,
												"nodeType": "ExpressionStatement",
												"src": "3923:28:3"
											},
											{
												"assignments": [
													766
												],
												"declarations": [
													{
														"constant": false,
														"id": 766,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "3969:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 773,
														"src": "3961:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 765,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3961:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 770,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "3973:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 768,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "3977:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3973:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3961:17:3"
											},
											{
												"expression": {
													"id": 771,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 766,
													"src": "4082:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 757,
												"id": 772,
												"nodeType": "Return",
												"src": "4075:8:3"
											}
										]
									},
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "3243:504:3",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3761:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3773:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "3765:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3765:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3784:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "3776:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3776:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3801:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "3787:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 752,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3787:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3764:50:3"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "3838:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3838:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3837:9:3"
									},
									"scope": 816,
									"src": "3752:338:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "4601:61:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 785,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "4622:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 786,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "4625:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4628:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 784,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															791,
															815
														],
														"referencedDeclaration": 815,
														"src": "4618:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 783,
												"id": 789,
												"nodeType": "Return",
												"src": "4611:44:3"
											}
										]
									},
									"documentation": {
										"id": 775,
										"nodeType": "StructuredDocumentation",
										"src": "4096:433:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4543:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4555:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "4547:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4547:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4566:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "4558:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4558:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4546:22:3"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "4592:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4592:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4591:9:3"
									},
									"scope": 816,
									"src": "4534:128:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "5261:68:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 804,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "5279:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5284:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5279:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 807,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "5287:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 803,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5271:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5271:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "5271:29:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 810,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "5317:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 811,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "5321:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5317:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 802,
												"id": 813,
												"nodeType": "Return",
												"src": "5310:12:3"
											}
										]
									},
									"documentation": {
										"id": 792,
										"nodeType": "StructuredDocumentation",
										"src": "4668:493:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "5175:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5187:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "5179:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5179:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5198:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "5190:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5190:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5215:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "5201:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 797,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5201:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5178:50:3"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "5252:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5252:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5251:9:3"
									},
									"scope": 816,
									"src": "5166:163:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 817,
							"src": "623:4708:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:5299:3"
				},
				"id": 3
			},
			"NewFraxProtocol/contracts/Utils/Address.sol": {
				"ast": {
					"absolutePath": "NewFraxProtocol/contracts/Utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1112
						]
					},
					"id": 1113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 818,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "32:25:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 819,
								"nodeType": "StructuredDocumentation",
								"src": "59:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1112,
							"linearizedBaseContracts": [
								1112
							],
							"name": "Address",
							"nameLocation": "135:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "785:347:4",
										"statements": [
											{
												"assignments": [
													828
												],
												"declarations": [
													{
														"constant": false,
														"id": 828,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "990:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 835,
														"src": "982:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 827,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "982:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 829,
												"nodeType": "VariableDeclarationStatement",
												"src": "982:12:4"
											},
											{
												"AST": {
													"nativeSrc": "1069:32:4",
													"nodeType": "YulBlock",
													"src": "1069:32:4",
													"statements": [
														{
															"nativeSrc": "1071:28:4",
															"nodeType": "YulAssignment",
															"src": "1071:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nativeSrc": "1091:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "1091:7:4"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nativeSrc": "1079:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "1079:11:4"
																},
																"nativeSrc": "1079:20:4",
																"nodeType": "YulFunctionCall",
																"src": "1079:20:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1071:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1071:4:4"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 822,
														"isOffset": false,
														"isSlot": false,
														"src": "1091:7:4",
														"valueSize": 1
													},
													{
														"declaration": 828,
														"isOffset": false,
														"isSlot": false,
														"src": "1071:4:4",
														"valueSize": 1
													}
												],
												"id": 830,
												"nodeType": "InlineAssembly",
												"src": "1060:41:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 831,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "1117:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1124:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1117:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 826,
												"id": 834,
												"nodeType": "Return",
												"src": "1110:15:4"
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "149:565:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "728:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "747:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "739:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "739:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:17:4"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "779:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 824,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:4"
									},
									"scope": 1112,
									"src": "719:413:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "2120:320:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 847,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2146:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1112",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1112",
																				"typeString": "library Address"
																			}
																		],
																		"id": 846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2138:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 845,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2138:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2138:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2152:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2138:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 850,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 841,
																"src": "2163:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2138:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2171:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 844,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2130:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2130:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "2130:73:4"
											},
											{
												"assignments": [
													856,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 856,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2297:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 869,
														"src": "2292:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 855,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2292:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 863,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2342:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 857,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "2310:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2320:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2310:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 860,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 859,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 841,
																"src": "2333:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2310:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2310:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2291:54:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 865,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "2363:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2372:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 864,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2355:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2355:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "2355:78:4"
											}
										]
									},
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "1138:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2058:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2084:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "2068:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2068:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2103:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "2095:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2095:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2067:43:4"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2120:0:4"
									},
									"scope": 1112,
									"src": "2049:391:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "3270:82:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 881,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "3298:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 882,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "3306:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3312:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 880,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															887,
															907
														],
														"referencedDeclaration": 907,
														"src": "3285:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3285:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 879,
												"id": 885,
												"nodeType": "Return",
												"src": "3278:67:4"
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "2446:730:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3190:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3211:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "3203:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3203:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3232:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "3219:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 874,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3219:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:35:4"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "3256:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 877,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3256:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3255:14:4"
									},
									"scope": 1112,
									"src": "3181:171:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "3691:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 900,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "3730:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 901,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "3738:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3744:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 903,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "3747:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 899,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															927,
															977
														],
														"referencedDeclaration": 977,
														"src": "3708:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3708:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 898,
												"id": 905,
												"nodeType": "Return",
												"src": "3701:59:4"
											}
										]
									},
									"documentation": {
										"id": 888,
										"nodeType": "StructuredDocumentation",
										"src": "3358:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3583:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3604:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "3596:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3625:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "3612:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 891,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3612:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3645:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "3631:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3631:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3595:63:4"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "3677:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 896,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3677:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3676:14:4"
									},
									"scope": 1112,
									"src": "3574:193:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 926,
										"nodeType": "Block",
										"src": "4242:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 920,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "4281:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 921,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "4289:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 922,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "4295:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4302:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 919,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															927,
															977
														],
														"referencedDeclaration": 977,
														"src": "4259:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4259:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 918,
												"id": 925,
												"nodeType": "Return",
												"src": "4252:94:4"
											}
										]
									},
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "3773:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4138:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4168:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "4160:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4160:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4189:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "4176:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 911,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4176:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4203:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "4195:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4195:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4159:50:4"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "4228:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 916,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4228:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4227:14:4"
									},
									"scope": 1112,
									"src": "4129:224:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 976,
										"nodeType": "Block",
										"src": "4742:382:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 944,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4768:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1112",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1112",
																				"typeString": "library Address"
																			}
																		],
																		"id": 943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4760:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 942,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4760:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4760:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4774:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4760:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 947,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 934,
																"src": "4785:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4760:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4792:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 941,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4752:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4752:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "4752:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 954,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "4862:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 953,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 836,
																"src": "4851:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4851:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4871:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 952,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4843:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4843:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "4843:60:4"
											},
											{
												"assignments": [
													960,
													962
												],
												"declarations": [
													{
														"constant": false,
														"id": 960,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4979:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 976,
														"src": "4974:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 959,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4974:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 962,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5001:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 976,
														"src": "4988:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 961,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4988:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 969,
												"initialValue": {
													"arguments": [
														{
															"id": 967,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "5043:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 963,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "5015:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5022:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5015:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 965,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 934,
																"src": "5035:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5015:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5015:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4973:75:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 971,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "5083:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 972,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "5092:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 973,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "5104:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 970,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1111,
														"src": "5065:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5065:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 940,
												"id": 975,
												"nodeType": "Return",
												"src": "5058:59:4"
											}
										]
									},
									"documentation": {
										"id": 928,
										"nodeType": "StructuredDocumentation",
										"src": "4359:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 977,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4610:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4640:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "4632:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4632:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4661:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "4648:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 931,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4648:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4675:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "4667:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4667:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4696:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "4682:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 935,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4682:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4631:78:4"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "4728:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 938,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4728:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4727:14:4"
									},
									"scope": 1112,
									"src": "4601:523:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 993,
										"nodeType": "Block",
										"src": "5401:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 988,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "5437:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 989,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "5445:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5451:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 987,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															994,
															1029
														],
														"referencedDeclaration": 1029,
														"src": "5418:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5418:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 986,
												"id": 992,
												"nodeType": "Return",
												"src": "5411:80:4"
											}
										]
									},
									"documentation": {
										"id": 978,
										"nodeType": "StructuredDocumentation",
										"src": "5130:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5310:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5337:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "5329:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5329:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5358:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "5345:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 981,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5345:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5328:35:4"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "5387:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 984,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5387:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5386:14:4"
									},
									"scope": 1112,
									"src": "5301:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "5810:288:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1008,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 997,
																	"src": "5839:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1007,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 836,
																"src": "5828:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5828:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5848:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1006,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5820:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5820:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "5820:67:4"
											},
											{
												"assignments": [
													1014,
													1016
												],
												"declarations": [
													{
														"constant": false,
														"id": 1014,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5963:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1028,
														"src": "5958:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1013,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5958:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1016,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5985:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1028,
														"src": "5972:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1015,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5972:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1021,
												"initialValue": {
													"arguments": [
														{
															"id": 1019,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "6017:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1017,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "5999:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1018,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6006:10:4",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5999:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5999:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5957:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1023,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "6057:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1024,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "6066:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1025,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "6078:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1022,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1111,
														"src": "6039:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6039:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1005,
												"id": 1027,
												"nodeType": "Return",
												"src": "6032:59:4"
											}
										]
									},
									"documentation": {
										"id": 995,
										"nodeType": "StructuredDocumentation",
										"src": "5504:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5691:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5718:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "5710:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5710:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5739:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "5726:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 998,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5726:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5759:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "5745:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1000,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5745:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:63:4"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "5796:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1003,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5796:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5795:14:4"
									},
									"scope": 1112,
									"src": "5682:416:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "6374:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1040,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "6412:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1041,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "6420:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6426:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1039,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1046,
															1081
														],
														"referencedDeclaration": 1081,
														"src": "6391:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6391:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1038,
												"id": 1044,
												"nodeType": "Return",
												"src": "6384:84:4"
											}
										]
									},
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "6104:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6286:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6315:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "6307:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6307:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6336:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "6323:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1033,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6323:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6306:35:4"
									},
									"returnParameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "6360:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1036,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6360:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6359:14:4"
									},
									"scope": 1112,
									"src": "6277:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1080,
										"nodeType": "Block",
										"src": "6786:292:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1060,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1049,
																	"src": "6815:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1059,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 836,
																"src": "6804:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6804:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6824:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1058,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6796:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6796:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "6796:69:4"
											},
											{
												"assignments": [
													1066,
													1068
												],
												"declarations": [
													{
														"constant": false,
														"id": 1066,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6941:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1080,
														"src": "6936:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1065,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6936:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1068,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6963:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1080,
														"src": "6950:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1067,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6950:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1073,
												"initialValue": {
													"arguments": [
														{
															"id": 1071,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "6997:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1069,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "6977:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1070,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6984:12:4",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6977:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6977:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6935:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1075,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "7037:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1076,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "7046:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1077,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "7058:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1074,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1111,
														"src": "7019:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7019:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1057,
												"id": 1079,
												"nodeType": "Return",
												"src": "7012:59:4"
											}
										]
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "6481:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6670:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6699:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "6691:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6691:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "6707:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1050,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6707:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6740:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "6726:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1052,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6726:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6690:63:4"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "6772:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1055,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6772:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6771:14:4"
									},
									"scope": 1112,
									"src": "6661:417:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1110,
										"nodeType": "Block",
										"src": "7213:596:4",
										"statements": [
											{
												"condition": {
													"id": 1092,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1083,
													"src": "7227:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1108,
													"nodeType": "Block",
													"src": "7284:519:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1096,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1085,
																		"src": "7368:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7379:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7368:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7388:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7368:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1106,
																"nodeType": "Block",
																"src": "7740:53:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1103,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1087,
																					"src": "7765:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1102,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7758:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7758:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1105,
																		"nodeType": "ExpressionStatement",
																		"src": "7758:20:4"
																	}
																]
															},
															"id": 1107,
															"nodeType": "IfStatement",
															"src": "7364:429:4",
															"trueBody": {
																"id": 1101,
																"nodeType": "Block",
																"src": "7391:343:4",
																"statements": [
																	{
																		"AST": {
																			"nativeSrc": "7575:145:4",
																			"nodeType": "YulBlock",
																			"src": "7575:145:4",
																			"statements": [
																				{
																					"nativeSrc": "7597:40:4",
																					"nodeType": "YulVariableDeclaration",
																					"src": "7597:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nativeSrc": "7626:10:4",
																								"nodeType": "YulIdentifier",
																								"src": "7626:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nativeSrc": "7620:5:4",
																							"nodeType": "YulIdentifier",
																							"src": "7620:5:4"
																						},
																						"nativeSrc": "7620:17:4",
																						"nodeType": "YulFunctionCall",
																						"src": "7620:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nativeSrc": "7601:15:4",
																							"nodeType": "YulTypedName",
																							"src": "7601:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "7669:2:4",
																										"nodeType": "YulLiteral",
																										"src": "7669:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nativeSrc": "7673:10:4",
																										"nodeType": "YulIdentifier",
																										"src": "7673:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7665:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "7665:3:4"
																								},
																								"nativeSrc": "7665:19:4",
																								"nodeType": "YulFunctionCall",
																								"src": "7665:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nativeSrc": "7686:15:4",
																								"nodeType": "YulIdentifier",
																								"src": "7686:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "7658:6:4",
																							"nodeType": "YulIdentifier",
																							"src": "7658:6:4"
																						},
																						"nativeSrc": "7658:44:4",
																						"nodeType": "YulFunctionCall",
																						"src": "7658:44:4"
																					},
																					"nativeSrc": "7658:44:4",
																					"nodeType": "YulExpressionStatement",
																					"src": "7658:44:4"
																				}
																			]
																		},
																		"evmVersion": "shanghai",
																		"externalReferences": [
																			{
																				"declaration": 1085,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7626:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1085,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7673:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 1100,
																		"nodeType": "InlineAssembly",
																		"src": "7566:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 1109,
												"nodeType": "IfStatement",
												"src": "7223:580:4",
												"trueBody": {
													"id": 1095,
													"nodeType": "Block",
													"src": "7236:42:4",
													"statements": [
														{
															"expression": {
																"id": 1093,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "7257:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1091,
															"id": 1094,
															"nodeType": "Return",
															"src": "7250:17:4"
														}
													]
												}
											}
										]
									},
									"id": 1111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nameLocation": "7093:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7116:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "7111:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1082,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7111:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7138:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "7125:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1084,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7125:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7164:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "7150:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1086,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7150:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7110:67:4"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "7199:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1089,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:4"
									},
									"scope": 1112,
									"src": "7084:725:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1113,
							"src": "127:7684:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:7779:4"
				},
				"id": 4
			}
		}
	}
}