{
	"id": "91890aedaaff8ae59454d222bc1d7b22",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"NewFraxProtocol/contracts/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.11;\n\nimport \"../Common/Context.sol\";\nimport \"./IERC20.sol\";\nimport \"../Math/SafeMath.sol\";\nimport \"../Utils/Address.sol\";\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20Mintable}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\n \ncontract ERC20 is Context, IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n    \n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory __name, string memory __symbol) public {\n        _name = __name;\n        _symbol = __symbol;\n        _decimals = 18;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.approve(address spender, uint256 amount)\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20};\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for `sender`'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for `accounts`'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        uint256 decreasedAllowance = allowance(account, _msgSender()).sub(amount, \"ERC20: burn amount exceeds allowance\");\n\n        _approve(account, _msgSender(), decreasedAllowance);\n        _burn(account, amount);\n    }\n\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n     * from the caller's allowance.\n     *\n     * See {_burn} and {_approve}.\n     */\n    function _burnFrom(address account, uint256 amount) internal virtual {\n        _burn(account, amount);\n        _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"ERC20: burn amount exceeds allowance\"));\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of `from`'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of `from`'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:using-hooks.adoc[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}\n"
			},
			"NewFraxProtocol/contracts/Utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.11;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}"
			},
			"NewFraxProtocol/contracts/Math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.11;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     *\n     * _Available since v2.4.0._\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}"
			},
			"NewFraxProtocol/contracts/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.11;\n\nimport \"../Common/Context.sol\";\nimport \"../Math/SafeMath.sol\";\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\n * the optional functions; to access them see {ERC20Detailed}.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n"
			},
			"NewFraxProtocol/contracts/Common/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.11;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return payable(msg.sender);\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"NewFraxProtocol/contracts/Common/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NewFraxProtocol/contracts/Common/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"NewFraxProtocol/contracts/Common/Context.sol\":{\"keccak256\":\"0x60d51a32063a4975dbf9433d38f5849173527da72f007c38053274e06698cb54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9ee6938d731aac55f6176c30ba4fc8456a63de57a7a2d659f43a053dfb381d3\",\"dweb:/ipfs/QmRyq4LneV4qz8uLdEhTU4YndjT365PJBPvK4btHKtmSSG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"NewFraxProtocol/contracts/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "__name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "__symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20Mintable}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.approve(address spender, uint256 amount)"
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for `accounts`'s tokens of at least `amount`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":1333:11571  contract ERC20 is Context, IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":1974:2123  constructor (string memory __name, string memory __symbol) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":2050:2055  _name */\n  0x03\n    /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":2050:2064  _name = __name */\n  tag_6\n    /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":2058:2064  __name */\n  dup4\n    /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":2050:2055  _name */\n  dup3\n    /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":2050:2064  _name = __name */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":2074:2081  _symbol */\n  0x04\n    /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":2074:2092  _symbol = __symbol */\n  tag_8\n    /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":2084:2092  __symbol */\n  dup3\n    /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":2074:2081  _symbol */\n  dup3\n    /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":2074:2092  _symbol = __symbol */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n  pop\n    /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":2102:2111  _decimals */\n  0x05\n    /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":2102:2116  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":2114:2116  18 */\n  0x12\n    /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":2102:2116  _decimals = 18 */\n  or\n  swap1\n  sstore\n  pop\n    /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":1333:11571  contract ERC20 is Context, IERC20 {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_24:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_25:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1553   */\ntag_3:\n    /* \"#utility.yul\":1090:1096   */\n  0x00\n    /* \"#utility.yul\":1098:1104   */\n  dup1\n    /* \"#utility.yul\":1151:1153   */\n  0x40\n    /* \"#utility.yul\":1139:1148   */\n  dup4\n    /* \"#utility.yul\":1130:1137   */\n  dup6\n    /* \"#utility.yul\":1126:1149   */\n  sub\n    /* \"#utility.yul\":1122:1154   */\n  slt\n    /* \"#utility.yul\":1119:1171   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1164:1165   */\n  dup1\n    /* \"#utility.yul\":1157:1169   */\n  revert\n    /* \"#utility.yul\":1119:1171   */\ntag_29:\n    /* \"#utility.yul\":1194:1210   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1259:1273   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1256:1290   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1286:1287   */\n  0x00\n    /* \"#utility.yul\":1283:1284   */\n  dup1\n    /* \"#utility.yul\":1276:1288   */\n  revert\n    /* \"#utility.yul\":1256:1290   */\ntag_30:\n    /* \"#utility.yul\":1309:1370   */\n  tag_31\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup4\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1309:1370   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1299:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1416:1418   */\n  0x20\n    /* \"#utility.yul\":1405:1414   */\n  dup6\n    /* \"#utility.yul\":1401:1419   */\n  add\n    /* \"#utility.yul\":1395:1420   */\n  mload\n    /* \"#utility.yul\":1379:1420   */\n  swap2\n  pop\n    /* \"#utility.yul\":1445:1447   */\n  dup1\n    /* \"#utility.yul\":1435:1443   */\n  dup3\n    /* \"#utility.yul\":1432:1448   */\n  gt\n    /* \"#utility.yul\":1429:1465   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1458:1459   */\n  dup1\n    /* \"#utility.yul\":1451:1463   */\n  revert\n    /* \"#utility.yul\":1429:1465   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1484:1547   */\n  tag_33\n    /* \"#utility.yul\":1539:1546   */\n  dup6\n    /* \"#utility.yul\":1528:1536   */\n  dup3\n    /* \"#utility.yul\":1517:1526   */\n  dup7\n    /* \"#utility.yul\":1513:1537   */\n  add\n    /* \"#utility.yul\":1484:1547   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1474:1547   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":991:1553   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1558:1938   */\ntag_12:\n    /* \"#utility.yul\":1637:1638   */\n  0x01\n    /* \"#utility.yul\":1633:1645   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1680:1692   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1701:1762   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1755:1759   */\n  0x7f\n    /* \"#utility.yul\":1747:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1760   */\n  and\n    /* \"#utility.yul\":1733:1760   */\n  swap2\n  pop\n    /* \"#utility.yul\":1701:1762   */\ntag_35:\n    /* \"#utility.yul\":1808:1810   */\n  0x20\n    /* \"#utility.yul\":1800:1806   */\n  dup3\n    /* \"#utility.yul\":1797:1811   */\n  lt\n    /* \"#utility.yul\":1777:1795   */\n  dup2\n    /* \"#utility.yul\":1774:1812   */\n  sub\n    /* \"#utility.yul\":1771:1932   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1854:1864   */\n  0x4e487b71\n    /* \"#utility.yul\":1849:1852   */\n  0xe0\n    /* \"#utility.yul\":1845:1865   */\n  shl\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1835:1866   */\n  mstore\n    /* \"#utility.yul\":1889:1893   */\n  0x22\n    /* \"#utility.yul\":1886:1887   */\n  0x04\n    /* \"#utility.yul\":1879:1894   */\n  mstore\n    /* \"#utility.yul\":1917:1921   */\n  0x24\n    /* \"#utility.yul\":1914:1915   */\n  0x00\n    /* \"#utility.yul\":1907:1922   */\n  revert\n    /* \"#utility.yul\":1771:1932   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1558:1938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2069:2614   */\ntag_14:\n    /* \"#utility.yul\":2171:2173   */\n  0x1f\n    /* \"#utility.yul\":2166:2169   */\n  dup3\n    /* \"#utility.yul\":2163:2174   */\n  gt\n    /* \"#utility.yul\":2160:2608   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2207:2208   */\n  0x00\n    /* \"#utility.yul\":2232:2237   */\n  dup2\n    /* \"#utility.yul\":2228:2230   */\n  dup2\n    /* \"#utility.yul\":2221:2238   */\n  mstore\n    /* \"#utility.yul\":2277:2281   */\n  0x20\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2263:2282   */\n  keccak256\n    /* \"#utility.yul\":2347:2349   */\n  0x1f\n    /* \"#utility.yul\":2335:2345   */\n  dup6\n    /* \"#utility.yul\":2331:2350   */\n  add\n    /* \"#utility.yul\":2328:2329   */\n  0x05\n    /* \"#utility.yul\":2324:2351   */\n  shr\n    /* \"#utility.yul\":2318:2322   */\n  dup2\n    /* \"#utility.yul\":2314:2352   */\n  add\n    /* \"#utility.yul\":2383:2387   */\n  0x20\n    /* \"#utility.yul\":2371:2381   */\n  dup7\n    /* \"#utility.yul\":2368:2388   */\n  lt\n    /* \"#utility.yul\":2365:2412   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":2406:2410   */\n  dup1\n    /* \"#utility.yul\":2365:2412   */\ntag_40:\n    /* \"#utility.yul\":2461:2463   */\n  0x1f\n    /* \"#utility.yul\":2456:2459   */\n  dup6\n    /* \"#utility.yul\":2452:2464   */\n  add\n    /* \"#utility.yul\":2449:2450   */\n  0x05\n    /* \"#utility.yul\":2445:2465   */\n  shr\n    /* \"#utility.yul\":2439:2443   */\n  dup3\n    /* \"#utility.yul\":2435:2466   */\n  add\n    /* \"#utility.yul\":2425:2466   */\n  swap2\n  pop\n    /* \"#utility.yul\":2516:2598   */\ntag_41:\n    /* \"#utility.yul\":2534:2536   */\n  dup2\n    /* \"#utility.yul\":2527:2532   */\n  dup2\n    /* \"#utility.yul\":2524:2537   */\n  lt\n    /* \"#utility.yul\":2516:2598   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2579:2596   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2560:2561   */\n  0x01\n    /* \"#utility.yul\":2549:2562   */\n  add\n    /* \"#utility.yul\":2516:2598   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":2520:2523   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2160:2608   */\ntag_39:\n    /* \"#utility.yul\":2069:2614   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2790:4142   */\ntag_7:\n    /* \"#utility.yul\":2910:2920   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2932:2962   */\n  dup2\n  gt\n    /* \"#utility.yul\":2929:2985   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2965:2983   */\n  tag_47\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2994:3091   */\n  tag_48\n    /* \"#utility.yul\":3084:3090   */\n  dup2\n    /* \"#utility.yul\":3044:3082   */\n  tag_49\n    /* \"#utility.yul\":3076:3080   */\n  dup5\n    /* \"#utility.yul\":3070:3081   */\n  sload\n    /* \"#utility.yul\":3044:3082   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":2994:3091   */\n  tag_14\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3146:3150   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3210:3212   */\n  0x1f\n    /* \"#utility.yul\":3199:3213   */\n  dup4\n  gt\n    /* \"#utility.yul\":3227:3228   */\n  0x01\n    /* \"#utility.yul\":3222:3885   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3929:3930   */\n  0x00\n    /* \"#utility.yul\":3946:3952   */\n  dup5\n    /* \"#utility.yul\":3943:4032   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3998:4017   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3992:4018   */\n  mload\n    /* \"#utility.yul\":3943:4032   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":2747:2748   */\n  0x03\n    /* \"#utility.yul\":2743:2754   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2739:2763   */\n  shr\n    /* \"#utility.yul\":2735:2764   */\n  not\n    /* \"#utility.yul\":2725:2765   */\n  and\n    /* \"#utility.yul\":2771:2772   */\n  0x01\n    /* \"#utility.yul\":2767:2778   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2722:2779   */\n  or\n    /* \"#utility.yul\":4045:4126   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3192:4136   */\n  jump(tag_43)\n    /* \"#utility.yul\":3222:3885   */\ntag_51:\n    /* \"#utility.yul\":2016:2017   */\n  0x00\n    /* \"#utility.yul\":2009:2023   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2053:2057   */\n  0x20\n    /* \"#utility.yul\":2040:2058   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3258:3278   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3376:3612   */\ntag_55:\n    /* \"#utility.yul\":3390:3397   */\n  dup3\n    /* \"#utility.yul\":3387:3388   */\n  dup2\n    /* \"#utility.yul\":3384:3398   */\n  lt\n    /* \"#utility.yul\":3376:3612   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3479:3498   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3473:3499   */\n  mload\n    /* \"#utility.yul\":3458:3500   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3571:3598   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3539:3540   */\n  0x01\n    /* \"#utility.yul\":3527:3541   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3406:3425   */\n  dup5\n  add\n    /* \"#utility.yul\":3376:3612   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":3380:3383   */\n  pop\n    /* \"#utility.yul\":3640:3646   */\n  dup6\n    /* \"#utility.yul\":3631:3638   */\n  dup3\n    /* \"#utility.yul\":3628:3647   */\n  lt\n    /* \"#utility.yul\":3625:3826   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3701:3720   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3695:3721   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3784:3785   */\n  0x03\n    /* \"#utility.yul\":3780:3794   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3796:3799   */\n  0xf8\n    /* \"#utility.yul\":3776:3800   */\n  and\n    /* \"#utility.yul\":3772:3809   */\n  shr\n    /* \"#utility.yul\":3768:3810   */\n  not\n    /* \"#utility.yul\":3753:3811   */\n  and\n    /* \"#utility.yul\":3738:3812   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3625:3826   */\ntag_58:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3872:3873   */\n  0x01\n    /* \"#utility.yul\":3856:3870   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3852:3874   */\n  add\n    /* \"#utility.yul\":3839:3875   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2790:4142   */\n  jump\t// out\ntag_16:\n    /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":1333:11571  contract ERC20 is Context, IERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":1333:11571  contract ERC20 is Context, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x42966c68\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x42966c68\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":2188:2269  function name() public view returns (string memory) {... */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":4264:4430  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":4264:4430  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_20\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":3231:3329  function totalSupply() public view override returns (uint256) {... */\n    tag_5:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":3310:3322  _totalSupply */\n      sload(0x02)\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":3231:3329  function totalSupply() public view override returns (uint256) {... */\n    tag_28:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":3231:3329  function totalSupply() public view override returns (uint256) {... */\n      tag_20\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":4888:5205  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_22\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":3090:3171  function decimals() public view returns (uint8) {... */\n    tag_7:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":3155:3164  _decimals */\n      sload(0x05)\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":3090:3171  function decimals() public view returns (uint8) {... */\n      mload(0x40)\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":3155:3164  _decimals */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":3090:3171  function decimals() public view returns (uint8) {... */\n      tag_20\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5600:5815  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_22\n      tag_42\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8321:8410  function burn(uint256 amount) public virtual {... */\n    tag_9:\n      tag_45\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":3387:3504  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_10:\n      tag_28\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":3479:3497  _balances[account] */\n      and\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":3453:3460  uint256 */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":3479:3497  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":3387:3504  function balanceOf(address account) public view override returns (uint256) {... */\n      jump\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8714:9004  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_11:\n      tag_45\n      tag_55\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":2382:2467  function symbol() public view returns (string memory) {... */\n    tag_12:\n      tag_18\n      tag_58\n      jump\t// in\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":6302:6568  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_13:\n      tag_22\n      tag_61\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":3707:3879  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_14:\n      tag_22\n      tag_65\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":3937:4086  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_15:\n      tag_28\n      tag_69\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":4052:4070  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":4026:4033  uint256 */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":4052:4070  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":4052:4063  _allowances */\n      0x01\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":4052:4070  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":4052:4079  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":3937:4086  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":2188:2269  function name() public view returns (string memory) {... */\n    tag_19:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":2225:2238  string memory */\n      0x60\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":2257:2262  _name */\n      0x03\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":2250:2262  return _name */\n      dup1\n      sload\n      tag_74\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_76\n      swap1\n      tag_75\n      jump\t// in\n    tag_76:\n      dup1\n      iszero\n      tag_77\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_78\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_77)\n    tag_78:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_79:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_79\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":2188:2269  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":4264:4430  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_25:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":4347:4351  bool */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":4363:4402  _approve(_msgSender(), spender, amount) */\n      tag_81\n        /* \"NewFraxProtocol/contracts/Common/Context.sol\":686:696  msg.sender */\n      caller\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":4386:4393  spender */\n      dup5\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":4395:4401  amount */\n      dup5\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":4363:4371  _approve */\n      tag_84\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":4363:4402  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_81:\n      pop\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":4419:4423  true */\n      0x01\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":4264:4430  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_80:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":4888:5205  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_35:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":4994:4998  bool */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5010:5046  _transfer(sender, recipient, amount) */\n      tag_87\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5020:5026  sender */\n      dup5\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5028:5037  recipient */\n      dup5\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5039:5045  amount */\n      dup5\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5010:5019  _transfer */\n      tag_88\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5010:5046  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_87:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5056:5177  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_89\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5065:5071  sender */\n      dup5\n        /* \"NewFraxProtocol/contracts/Common/Context.sol\":686:696  msg.sender */\n      caller\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5087:5176  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_91\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5125:5131  amount */\n      dup6\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5087:5176  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5087:5106  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5087:5098  _allowances */\n      0x01\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5087:5106  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"NewFraxProtocol/contracts/Common/Context.sol\":686:696  msg.sender */\n      caller\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5087:5120  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n      swap1\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5087:5124  _allowances[sender][_msgSender()].sub */\n      tag_93\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5087:5176  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      jump\t// in\n    tag_91:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5056:5064  _approve */\n      tag_84\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5056:5177  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_89:\n      pop\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5194:5198  true */\n      0x01\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":4888:5205  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5600:5815  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_43:\n        /* \"NewFraxProtocol/contracts/Common/Context.sol\":686:696  msg.sender */\n      caller\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5688:5692  bool */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5736:5761  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5736:5747  _allowances */\n      0x01\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5736:5761  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5736:5770  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5688:5692  bool */\n      swap1\n      swap2\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5704:5787  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_81\n      swap2\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5727:5734  spender */\n      dup6\n      swap1\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5736:5786  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_91\n      swap1\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5775:5785  addedValue */\n      dup7\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5736:5774  _allowances[_msgSender()][spender].add */\n      tag_100\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":5736:5786  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8321:8410  function burn(uint256 amount) public virtual {... */\n    tag_48:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8376:8403  _burn(_msgSender(), amount) */\n      tag_102\n        /* \"NewFraxProtocol/contracts/Common/Context.sol\":686:696  msg.sender */\n      caller\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8396:8402  amount */\n      dup3\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8376:8381  _burn */\n      tag_104\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8376:8403  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_102:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8321:8410  function burn(uint256 amount) public virtual {... */\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8714:9004  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_56:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8790:8816  uint256 decreasedAllowance */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8819:8903  allowance(account, _msgSender()).sub(amount, \"ERC20: burn amount exceeds allowance\") */\n      tag_107\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8856:8862  amount */\n      dup3\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8819:8903  allowance(account, _msgSender()).sub(amount, \"ERC20: burn amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      data_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db\n      0x24\n      swap2\n      codecopy\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8819:8851  allowance(account, _msgSender()) */\n      tag_108\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8829:8836  account */\n      dup7\n        /* \"NewFraxProtocol/contracts/Common/Context.sol\":686:696  msg.sender */\n      caller\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":3937:4086  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      tag_69\n      jump\t// in\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8819:8851  allowance(account, _msgSender()) */\n    tag_108:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8819:8855  allowance(account, _msgSender()).sub */\n      swap2\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8819:8903  allowance(account, _msgSender()).sub(amount, \"ERC20: burn amount exceeds allowance\") */\n      swap1\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8819:8855  allowance(account, _msgSender()).sub */\n      tag_93\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8819:8903  allowance(account, _msgSender()).sub(amount, \"ERC20: burn amount exceeds allowance\") */\n      jump\t// in\n    tag_107:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8790:8903  uint256 decreasedAllowance = allowance(account, _msgSender()).sub(amount, \"ERC20: burn amount exceeds allowance\") */\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8914:8965  _approve(account, _msgSender(), decreasedAllowance) */\n      tag_110\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8923:8930  account */\n      dup4\n        /* \"NewFraxProtocol/contracts/Common/Context.sol\":686:696  msg.sender */\n      caller\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8946:8964  decreasedAllowance */\n      dup4\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8914:8922  _approve */\n      tag_84\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8914:8965  _approve(account, _msgSender(), decreasedAllowance) */\n      jump\t// in\n    tag_110:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8975:8997  _burn(account, amount) */\n      tag_112\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8981:8988  account */\n      dup4\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8990:8996  amount */\n      dup4\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8975:8980  _burn */\n      tag_104\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8975:8997  _burn(account, amount) */\n      jump\t// in\n    tag_112:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8780:9004  {... */\n      pop\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":8714:9004  function burnFrom(address account, uint256 amount) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":2382:2467  function symbol() public view returns (string memory) {... */\n    tag_58:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":2421:2434  string memory */\n      0x60\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":2453:2460  _symbol */\n      0x04\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":2446:2460  return _symbol */\n      dup1\n      sload\n      tag_74\n      swap1\n      tag_75\n      jump\t// in\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":6302:6568  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_62:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":6395:6399  bool */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":6411:6540  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_81\n        /* \"NewFraxProtocol/contracts/Common/Context.sol\":686:696  msg.sender */\n      caller\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":6434:6441  spender */\n      dup5\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":6443:6539  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_91\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":6482:6497  subtractedValue */\n      dup6\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":6443:6539  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"NewFraxProtocol/contracts/Common/Context.sol\":686:696  msg.sender */\n      caller\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":6443:6468  _allowances[_msgSender()] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":6443:6454  _allowances */\n      0x01\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":6443:6468  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":6443:6477  _allowances[_msgSender()][spender] */\n      dup14\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n      swap1\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":6443:6481  _allowances[_msgSender()][spender].sub */\n      tag_93\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":6443:6539  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      jump\t// in\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":3707:3879  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_66:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":3793:3797  bool */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":3809:3851  _transfer(_msgSender(), recipient, amount) */\n      tag_81\n        /* \"NewFraxProtocol/contracts/Common/Context.sol\":686:696  msg.sender */\n      caller\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":3833:3842  recipient */\n      dup5\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":3844:3850  amount */\n      dup5\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":3809:3818  _transfer */\n      tag_88\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":3809:3851  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":10159:10499  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_84:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":10260:10279  owner != address(0) */\n      dup4\n      and\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":10252:10320  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3128:3130   */\n      0x20\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":10252:10320  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3110:3131   */\n      mstore\n        /* \"#utility.yul\":3167:3169   */\n      0x24\n        /* \"#utility.yul\":3147:3165   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3140:3170   */\n      mstore\n        /* \"#utility.yul\":3206:3240   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3186:3204   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3179:3241   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3257:3275   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3250:3284   */\n      mstore\n        /* \"#utility.yul\":3301:3320   */\n      0x84\n      add\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":10252:10320  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":10338:10359  spender != address(0) */\n      dup3\n      and\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":10330:10398  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3533:3535   */\n      0x20\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":10330:10398  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3515:3536   */\n      mstore\n        /* \"#utility.yul\":3572:3574   */\n      0x22\n        /* \"#utility.yul\":3552:3570   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3545:3575   */\n      mstore\n        /* \"#utility.yul\":3611:3645   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":3591:3609   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3584:3646   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":3662:3680   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3655:3687   */\n      mstore\n        /* \"#utility.yul\":3704:3723   */\n      0x84\n      add\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":10330:10398  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_131\n        /* \"#utility.yul\":3331:3729   */\n      jump\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":10330:10398  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_133:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":10409:10427  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":10409:10420  _allowances */\n      0x01\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":10409:10427  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":10409:10436  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":10409:10445  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":10460:10492  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":10460:10492  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":10460:10492  Approval(owner, spender, amount) */\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":10159:10499  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7042:7572  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7147:7167  sender != address(0) */\n      dup4\n      and\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7139:7209  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3936:3938   */\n      0x20\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7139:7209  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3918:3939   */\n      mstore\n        /* \"#utility.yul\":3975:3977   */\n      0x25\n        /* \"#utility.yul\":3955:3973   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3948:3978   */\n      mstore\n        /* \"#utility.yul\":4014:4048   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":3994:4012   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3987:4049   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4065:4083   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4058:4093   */\n      mstore\n        /* \"#utility.yul\":4110:4129   */\n      0x84\n      add\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7139:7209  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_131\n        /* \"#utility.yul\":3734:4135   */\n      jump\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7139:7209  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_138:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7227:7250  recipient != address(0) */\n      dup3\n      and\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7219:7290  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4342:4344   */\n      0x20\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7219:7290  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4324:4345   */\n      mstore\n        /* \"#utility.yul\":4381:4383   */\n      0x23\n        /* \"#utility.yul\":4361:4379   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4354:4384   */\n      mstore\n        /* \"#utility.yul\":4420:4454   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":4400:4418   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4393:4455   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":4471:4489   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4464:4497   */\n      mstore\n        /* \"#utility.yul\":4514:4533   */\n      0x84\n      add\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7219:7290  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_131\n        /* \"#utility.yul\":4140:4539   */\n      jump\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7219:7290  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_141:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7379:7450  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_146\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7401:7407  amount */\n      dup2\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7379:7450  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7379:7396  _balances[sender] */\n      dup7\n      and\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7379:7388  _balances */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7379:7396  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7379:7450  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap1\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7379:7400  _balances[sender].sub */\n      tag_93\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7379:7450  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      jump\t// in\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7359:7376  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7359:7368  _balances */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7359:7376  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7359:7450  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7483:7503  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7483:7515  _balances[recipient].add(amount) */\n      tag_147\n      swap1\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7508:7514  amount */\n      dup3\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7483:7507  _balances[recipient].add */\n      tag_100\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7483:7515  _balances[recipient].add(amount) */\n      jump\t// in\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7460:7480  _balances[recipient] */\n      dup4\n      dup2\n      and\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7460:7469  _balances */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7460:7480  _balances[recipient] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7460:7515  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7530:7565  Transfer(sender, recipient, amount) */\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7460:7480  _balances[recipient] */\n      swap1\n      swap3\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7530:7565  Transfer(sender, recipient, amount) */\n      swap2\n      dup7\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":7530:7565  Transfer(sender, recipient, amount) */\n      tag_136\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1766:1953  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_93:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1852:1859  uint256 */\n      0x00\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1887:1899  errorMessage */\n      dup2\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1879:1885  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1871:1900  require(b <= a, errorMessage) */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_150:\n      pop\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1910:1919  uint256 c */\n      0x00\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1922:1927  a - b */\n      tag_152\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1926:1927  b */\n      dup5\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1922:1923  a */\n      dup7\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1922:1927  a - b */\n      tag_153\n      jump\t// in\n    tag_152:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1910:1927  uint256 c = a - b */\n      swap6\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1766:1953  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":868:1044  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_100:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":926:933  uint256 */\n      0x00\n      dup1\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":957:962  a + b */\n      tag_155\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":961:962  b */\n      dup4\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":957:958  a */\n      dup6\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":957:962  a + b */\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":945:962  uint256 c = a + b */\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":985:986  a */\n      dup4\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":980:981  c */\n      dup2\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":980:986  c >= a */\n      lt\n      iszero\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":972:1018  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5141:5143   */\n      0x20\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":972:1018  require(c >= a, \"SafeMath: addition overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5123:5144   */\n      mstore\n        /* \"#utility.yul\":5180:5182   */\n      0x1b\n        /* \"#utility.yul\":5160:5178   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5153:5183   */\n      mstore\n        /* \"#utility.yul\":5219:5248   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":5199:5217   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5192:5249   */\n      mstore\n        /* \"#utility.yul\":5266:5284   */\n      0x64\n      add\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":972:1018  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_131\n        /* \"#utility.yul\":4939:5290   */\n      jump\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":972:1018  require(c >= a, \"SafeMath: addition overflow\") */\n    tag_157:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1036:1037  c */\n      swap4\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":868:1044  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":9324:9734  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":9407:9428  account != address(0) */\n      dup3\n      and\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":9399:9466  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5497:5499   */\n      0x20\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":9399:9466  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5479:5500   */\n      mstore\n        /* \"#utility.yul\":5536:5538   */\n      0x21\n        /* \"#utility.yul\":5516:5534   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5509:5539   */\n      mstore\n        /* \"#utility.yul\":5575:5609   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":5555:5573   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5548:5610   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":5626:5644   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5619:5650   */\n      mstore\n        /* \"#utility.yul\":5667:5686   */\n      0x84\n      add\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":9399:9466  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_131\n        /* \"#utility.yul\":5295:5692   */\n      jump\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":9399:9466  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_161:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":9558:9626  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      tag_165\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":9581:9587  amount */\n      dup2\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":9558:9626  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd\n      0x22\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":9558:9576  _balances[account] */\n      dup6\n      and\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":9558:9567  _balances */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":9558:9576  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":9558:9626  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      swap1\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":9558:9580  _balances[account].sub */\n      tag_93\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":9558:9626  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      jump\t// in\n    tag_165:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":9537:9555  _balances[account] */\n      dup4\n      and\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":9537:9546  _balances */\n      0x00\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":9537:9555  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":9537:9626  _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      sstore\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":9651:9663  _totalSupply */\n      sload(0x02)\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":9651:9675  _totalSupply.sub(amount) */\n      tag_166\n      swap1\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":9668:9674  amount */\n      dup3\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":9651:9667  _totalSupply.sub */\n      tag_167\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":9651:9675  _totalSupply.sub(amount) */\n      jump\t// in\n    tag_166:\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":9636:9648  _totalSupply */\n      0x02\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":9636:9675  _totalSupply = _totalSupply.sub(amount) */\n      sstore\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":9690:9727  Transfer(account, address(0), amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      dup2\n      mstore\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":9716:9717  0 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":9690:9727  Transfer(account, address(0), amount) */\n      dup5\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":9690:9727  Transfer(account, address(0), amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"NewFraxProtocol/contracts/ERC20/ERC20.sol\":9324:9734  function _burn(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1308:1442  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_167:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1366:1373  uint256 */\n      0x00\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1392:1435  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_157\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1396:1397  a */\n      dup4\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1399:1400  b */\n      dup4\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1392:1435  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1392:1395  sub */\n      tag_93\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1392:1435  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n        /* \"#utility.yul\":14:562   */\n    tag_21:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_176:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_178\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_176)\n    tag_178:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_172:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_180\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_180:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_24:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_182:\n        /* \"#utility.yul\":913:942   */\n      tag_183\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_172\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_34:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_187\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_187:\n        /* \"#utility.yul\":1563:1592   */\n      tag_188\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_172\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_189\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_172\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2080   */\n    tag_47:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_192\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_192:\n      pop\n        /* \"#utility.yul\":2051:2074   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1900:2080   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2085:2271   */\n    tag_51:\n        /* \"#utility.yul\":2144:2150   */\n      0x00\n        /* \"#utility.yul\":2197:2199   */\n      0x20\n        /* \"#utility.yul\":2185:2194   */\n      dup3\n        /* \"#utility.yul\":2176:2183   */\n      dup5\n        /* \"#utility.yul\":2172:2195   */\n      sub\n        /* \"#utility.yul\":2168:2200   */\n      slt\n        /* \"#utility.yul\":2165:2217   */\n      iszero\n      tag_194\n      jumpi\n        /* \"#utility.yul\":2213:2214   */\n      0x00\n        /* \"#utility.yul\":2210:2211   */\n      dup1\n        /* \"#utility.yul\":2203:2215   */\n      revert\n        /* \"#utility.yul\":2165:2217   */\n    tag_194:\n        /* \"#utility.yul\":2236:2265   */\n      tag_157\n        /* \"#utility.yul\":2255:2264   */\n      dup3\n        /* \"#utility.yul\":2236:2265   */\n      tag_172\n      jump\t// in\n        /* \"#utility.yul\":2276:2536   */\n    tag_70:\n        /* \"#utility.yul\":2344:2350   */\n      0x00\n        /* \"#utility.yul\":2352:2358   */\n      dup1\n        /* \"#utility.yul\":2405:2407   */\n      0x40\n        /* \"#utility.yul\":2393:2402   */\n      dup4\n        /* \"#utility.yul\":2384:2391   */\n      dup6\n        /* \"#utility.yul\":2380:2403   */\n      sub\n        /* \"#utility.yul\":2376:2408   */\n      slt\n        /* \"#utility.yul\":2373:2425   */\n      iszero\n      tag_197\n      jumpi\n        /* \"#utility.yul\":2421:2422   */\n      0x00\n        /* \"#utility.yul\":2418:2419   */\n      dup1\n        /* \"#utility.yul\":2411:2423   */\n      revert\n        /* \"#utility.yul\":2373:2425   */\n    tag_197:\n        /* \"#utility.yul\":2444:2473   */\n      tag_198\n        /* \"#utility.yul\":2463:2472   */\n      dup4\n        /* \"#utility.yul\":2444:2473   */\n      tag_172\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":2434:2473   */\n      swap2\n      pop\n        /* \"#utility.yul\":2492:2530   */\n      tag_199\n        /* \"#utility.yul\":2526:2528   */\n      0x20\n        /* \"#utility.yul\":2515:2524   */\n      dup5\n        /* \"#utility.yul\":2511:2529   */\n      add\n        /* \"#utility.yul\":2492:2530   */\n      tag_172\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":2482:2530   */\n      swap1\n      pop\n        /* \"#utility.yul\":2276:2536   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2921   */\n    tag_75:\n        /* \"#utility.yul\":2620:2621   */\n      0x01\n        /* \"#utility.yul\":2616:2628   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2663:2675   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2684:2745   */\n      tag_201\n      jumpi\n        /* \"#utility.yul\":2738:2742   */\n      0x7f\n        /* \"#utility.yul\":2730:2736   */\n      dup3\n        /* \"#utility.yul\":2726:2743   */\n      and\n        /* \"#utility.yul\":2716:2743   */\n      swap2\n      pop\n        /* \"#utility.yul\":2684:2745   */\n    tag_201:\n        /* \"#utility.yul\":2791:2793   */\n      0x20\n        /* \"#utility.yul\":2783:2789   */\n      dup3\n        /* \"#utility.yul\":2780:2794   */\n      lt\n        /* \"#utility.yul\":2760:2778   */\n      dup2\n        /* \"#utility.yul\":2757:2795   */\n      sub\n        /* \"#utility.yul\":2754:2915   */\n      tag_202\n      jumpi\n        /* \"#utility.yul\":2837:2847   */\n      0x4e487b71\n        /* \"#utility.yul\":2832:2835   */\n      0xe0\n        /* \"#utility.yul\":2828:2848   */\n      shl\n        /* \"#utility.yul\":2825:2826   */\n      0x00\n        /* \"#utility.yul\":2818:2849   */\n      mstore\n        /* \"#utility.yul\":2872:2876   */\n      0x22\n        /* \"#utility.yul\":2869:2870   */\n      0x04\n        /* \"#utility.yul\":2862:2877   */\n      mstore\n        /* \"#utility.yul\":2900:2904   */\n      0x24\n        /* \"#utility.yul\":2897:2898   */\n      0x00\n        /* \"#utility.yul\":2890:2905   */\n      revert\n        /* \"#utility.yul\":2754:2915   */\n    tag_202:\n      pop\n        /* \"#utility.yul\":2541:2921   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4544:4671   */\n    tag_173:\n        /* \"#utility.yul\":4605:4615   */\n      0x4e487b71\n        /* \"#utility.yul\":4600:4603   */\n      0xe0\n        /* \"#utility.yul\":4596:4616   */\n      shl\n        /* \"#utility.yul\":4593:4594   */\n      0x00\n        /* \"#utility.yul\":4586:4617   */\n      mstore\n        /* \"#utility.yul\":4636:4640   */\n      0x11\n        /* \"#utility.yul\":4633:4634   */\n      0x04\n        /* \"#utility.yul\":4626:4641   */\n      mstore\n        /* \"#utility.yul\":4660:4664   */\n      0x24\n        /* \"#utility.yul\":4657:4658   */\n      0x00\n        /* \"#utility.yul\":4650:4665   */\n      revert\n        /* \"#utility.yul\":4676:4804   */\n    tag_153:\n        /* \"#utility.yul\":4743:4752   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":4764:4775   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":4761:4798   */\n      iszero\n      tag_80\n      jumpi\n        /* \"#utility.yul\":4778:4796   */\n      tag_80\n      tag_173\n      jump\t// in\n        /* \"#utility.yul\":4809:4934   */\n    tag_156:\n        /* \"#utility.yul\":4874:4883   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4895:4905   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4892:4928   */\n      iszero\n      tag_80\n      jumpi\n        /* \"#utility.yul\":4908:4926   */\n      tag_80\n      tag_173\n      jump\t// in\n    stop\n    data_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd 45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db 45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa264697066735822122014e71421f32813e6397d990f3bb197397a40426f22d1893c7b955031001c115a64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_78": {
									"entryPoint": null,
									"id": 78,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 452,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 102,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4144:5",
										"nodeType": "YulBlock",
										"src": "0:4144:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:5",
													"nodeType": "YulBlock",
													"src": "46:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:5",
																		"nodeType": "YulLiteral",
																		"src": "63:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:5",
																				"nodeType": "YulLiteral",
																				"src": "70:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:5",
																				"nodeType": "YulLiteral",
																				"src": "75:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:5"
																		},
																		"nativeSrc": "66:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:5"
																},
																"nativeSrc": "56:31:5",
																"nodeType": "YulFunctionCall",
																"src": "56:31:5"
															},
															"nativeSrc": "56:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:5",
																		"nodeType": "YulLiteral",
																		"src": "103:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:5",
																		"nodeType": "YulLiteral",
																		"src": "106:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:5"
																},
																"nativeSrc": "96:15:5",
																"nodeType": "YulFunctionCall",
																"src": "96:15:5"
															},
															"nativeSrc": "96:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:5",
																		"nodeType": "YulLiteral",
																		"src": "127:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:5",
																		"nodeType": "YulLiteral",
																		"src": "130:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:5"
																},
																"nativeSrc": "120:15:5",
																"nodeType": "YulFunctionCall",
																"src": "120:15:5"
															},
															"nativeSrc": "120:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:5"
											},
											{
												"body": {
													"nativeSrc": "210:776:5",
													"nodeType": "YulBlock",
													"src": "210:776:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:5",
																"nodeType": "YulBlock",
																"src": "259:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:5",
																					"nodeType": "YulLiteral",
																					"src": "268:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:5",
																					"nodeType": "YulLiteral",
																					"src": "271:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:5"
																			},
																			"nativeSrc": "261:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:5"
																		},
																		"nativeSrc": "261:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:5",
																						"nodeType": "YulLiteral",
																						"src": "246:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:5"
																				},
																				"nativeSrc": "234:17:5",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:5"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:5"
																		},
																		"nativeSrc": "230:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:5"
																},
																"nativeSrc": "223:35:5",
																"nodeType": "YulFunctionCall",
																"src": "223:35:5"
															},
															"nativeSrc": "220:55:5",
															"nodeType": "YulIf",
															"src": "220:55:5"
														},
														{
															"nativeSrc": "284:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "300:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "294:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:5"
																},
																"nativeSrc": "294:13:5",
																"nodeType": "YulFunctionCall",
																"src": "294:13:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "288:2:5",
																	"nodeType": "YulTypedName",
																	"src": "288:2:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "316:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "334:2:5",
																				"nodeType": "YulLiteral",
																				"src": "334:2:5",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "338:1:5",
																				"nodeType": "YulLiteral",
																				"src": "338:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "330:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:5"
																		},
																		"nativeSrc": "330:10:5",
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "342:1:5",
																		"nodeType": "YulLiteral",
																		"src": "342:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "326:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:5"
																},
																"nativeSrc": "326:18:5",
																"nodeType": "YulFunctionCall",
																"src": "326:18:5"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "320:2:5",
																	"nodeType": "YulTypedName",
																	"src": "320:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "367:22:5",
																"nodeType": "YulBlock",
																"src": "367:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "369:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:5"
																			},
																			"nativeSrc": "369:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:5"
																		},
																		"nativeSrc": "369:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "359:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:5"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "363:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "356:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:5"
																},
																"nativeSrc": "356:10:5",
																"nodeType": "YulFunctionCall",
																"src": "356:10:5"
															},
															"nativeSrc": "353:36:5",
															"nodeType": "YulIf",
															"src": "353:36:5"
														},
														{
															"nativeSrc": "398:17:5",
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "412:2:5",
																		"nodeType": "YulLiteral",
																		"src": "412:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "408:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:5"
																},
																"nativeSrc": "408:7:5",
																"nodeType": "YulFunctionCall",
																"src": "408:7:5"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "402:2:5",
																	"nodeType": "YulTypedName",
																	"src": "402:2:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "424:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "444:2:5",
																		"nodeType": "YulLiteral",
																		"src": "444:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "438:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:5"
																},
																"nativeSrc": "438:9:5",
																"nodeType": "YulFunctionCall",
																"src": "438:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "428:6:5",
																	"nodeType": "YulTypedName",
																	"src": "428:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "456:71:5",
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "478:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nativeSrc": "502:2:5",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "506:4:5",
																										"nodeType": "YulLiteral",
																										"src": "506:4:5",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "498:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:5"
																								},
																								"nativeSrc": "498:13:5",
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:5"
																							},
																							{
																								"name": "_3",
																								"nativeSrc": "513:2:5",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:5"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "494:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:5"
																						},
																						"nativeSrc": "494:22:5",
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "518:2:5",
																						"nodeType": "YulLiteral",
																						"src": "518:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "490:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:5"
																				},
																				"nativeSrc": "490:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:5"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "523:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "486:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:5"
																		},
																		"nativeSrc": "486:40:5",
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "474:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:5"
																},
																"nativeSrc": "474:53:5",
																"nodeType": "YulFunctionCall",
																"src": "474:53:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "460:10:5",
																	"nodeType": "YulTypedName",
																	"src": "460:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "586:22:5",
																"nodeType": "YulBlock",
																"src": "586:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "588:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:5"
																			},
																			"nativeSrc": "588:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:5"
																		},
																		"nativeSrc": "588:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "545:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:5"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "557:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "542:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:5"
																		},
																		"nativeSrc": "542:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "565:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "577:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "562:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:5"
																		},
																		"nativeSrc": "562:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "539:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:5"
																},
																"nativeSrc": "539:46:5",
																"nodeType": "YulFunctionCall",
																"src": "539:46:5"
															},
															"nativeSrc": "536:72:5",
															"nodeType": "YulIf",
															"src": "536:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "624:2:5",
																		"nodeType": "YulLiteral",
																		"src": "624:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "628:10:5",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "617:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:5"
																},
																"nativeSrc": "617:22:5",
																"nodeType": "YulFunctionCall",
																"src": "617:22:5"
															},
															"nativeSrc": "617:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "617:22:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "655:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "663:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "648:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:5"
																},
																"nativeSrc": "648:18:5",
																"nodeType": "YulFunctionCall",
																"src": "648:18:5"
															},
															"nativeSrc": "648:18:5",
															"nodeType": "YulExpressionStatement",
															"src": "648:18:5"
														},
														{
															"nativeSrc": "675:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "685:4:5",
																"nodeType": "YulLiteral",
																"src": "685:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "679:2:5",
																	"nodeType": "YulTypedName",
																	"src": "679:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "735:16:5",
																"nodeType": "YulBlock",
																"src": "735:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "744:1:5",
																					"nodeType": "YulLiteral",
																					"src": "744:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "747:1:5",
																					"nodeType": "YulLiteral",
																					"src": "747:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "737:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:5"
																			},
																			"nativeSrc": "737:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:5"
																		},
																		"nativeSrc": "737:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "712:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:5"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "720:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "708:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:5"
																				},
																				"nativeSrc": "708:15:5",
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:5"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "725:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "704:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:5"
																		},
																		"nativeSrc": "704:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:5"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "730:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "701:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:5"
																},
																"nativeSrc": "701:33:5",
																"nodeType": "YulFunctionCall",
																"src": "701:33:5"
															},
															"nativeSrc": "698:53:5",
															"nodeType": "YulIf",
															"src": "698:53:5"
														},
														{
															"nativeSrc": "760:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "769:1:5",
																"nodeType": "YulLiteral",
																"src": "769:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "764:1:5",
																	"nodeType": "YulTypedName",
																	"src": "764:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "825:87:5",
																"nodeType": "YulBlock",
																"src": "825:87:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nativeSrc": "854:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:5"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "862:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "850:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:5"
																							},
																							"nativeSrc": "850:14:5",
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:5"
																						},
																						{
																							"name": "_4",
																							"nativeSrc": "866:2:5",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "846:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:5"
																					},
																					"nativeSrc": "846:23:5",
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nativeSrc": "885:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:5"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "893:1:5",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "881:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:5"
																									},
																									"nativeSrc": "881:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:5"
																								},
																								{
																									"name": "_4",
																									"nativeSrc": "897:2:5",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "877:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:5"
																							},
																							"nativeSrc": "877:23:5",
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "871:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:5"
																					},
																					"nativeSrc": "871:30:5",
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "839:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:5"
																			},
																			"nativeSrc": "839:63:5",
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:5"
																		},
																		"nativeSrc": "839:63:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "790:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "793:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "787:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:5"
																},
																"nativeSrc": "787:9:5",
																"nodeType": "YulFunctionCall",
																"src": "787:9:5"
															},
															"nativeSrc": "779:133:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "797:19:5",
																"nodeType": "YulBlock",
																"src": "797:19:5",
																"statements": [
																	{
																		"nativeSrc": "799:15:5",
																		"nodeType": "YulAssignment",
																		"src": "799:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "808:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:5"
																				},
																				{
																					"name": "_4",
																					"nativeSrc": "811:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "804:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:5"
																			},
																			"nativeSrc": "804:10:5",
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "799:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "783:3:5",
																"nodeType": "YulBlock",
																"src": "783:3:5",
																"statements": []
															},
															"src": "779:133:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "936:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:5"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "944:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "932:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:5"
																				},
																				"nativeSrc": "932:15:5",
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:5"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "949:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "928:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:5"
																		},
																		"nativeSrc": "928:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "954:1:5",
																		"nodeType": "YulLiteral",
																		"src": "954:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "921:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:5"
																},
																"nativeSrc": "921:35:5",
																"nodeType": "YulFunctionCall",
																"src": "921:35:5"
															},
															"nativeSrc": "921:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "921:35:5"
														},
														{
															"nativeSrc": "965:15:5",
															"nodeType": "YulAssignment",
															"src": "965:15:5",
															"value": {
																"name": "memPtr",
																"nativeSrc": "974:6:5",
																"nodeType": "YulIdentifier",
																"src": "974:6:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "965:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:840:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:5",
														"nodeType": "YulTypedName",
														"src": "184:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:5",
														"nodeType": "YulTypedName",
														"src": "192:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:5",
														"nodeType": "YulTypedName",
														"src": "200:5:5",
														"type": ""
													}
												],
												"src": "146:840:5"
											},
											{
												"body": {
													"nativeSrc": "1109:444:5",
													"nodeType": "YulBlock",
													"src": "1109:444:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1155:16:5",
																"nodeType": "YulBlock",
																"src": "1155:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1164:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1167:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1157:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:5"
																			},
																			"nativeSrc": "1157:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1157:12:5"
																		},
																		"nativeSrc": "1157:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1130:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1130:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1139:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1139:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1126:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:5"
																		},
																		"nativeSrc": "1126:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1126:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1151:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1122:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:5"
																},
																"nativeSrc": "1122:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1122:32:5"
															},
															"nativeSrc": "1119:52:5",
															"nodeType": "YulIf",
															"src": "1119:52:5"
														},
														{
															"nativeSrc": "1180:30:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1180:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1200:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1194:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:5"
																},
																"nativeSrc": "1194:16:5",
																"nodeType": "YulFunctionCall",
																"src": "1194:16:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1184:6:5",
																	"nodeType": "YulTypedName",
																	"src": "1184:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1219:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1219:28:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1237:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1237:2:5",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1241:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1241:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1233:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:5"
																		},
																		"nativeSrc": "1233:10:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1233:10:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1245:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1245:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1229:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:5"
																},
																"nativeSrc": "1229:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1229:18:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1223:2:5",
																	"nodeType": "YulTypedName",
																	"src": "1223:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1274:16:5",
																"nodeType": "YulBlock",
																"src": "1274:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1283:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1286:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1276:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1276:6:5"
																			},
																			"nativeSrc": "1276:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:5"
																		},
																		"nativeSrc": "1276:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1276:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1262:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1270:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "1270:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1259:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1259:2:5"
																},
																"nativeSrc": "1259:14:5",
																"nodeType": "YulFunctionCall",
																"src": "1259:14:5"
															},
															"nativeSrc": "1256:34:5",
															"nodeType": "YulIf",
															"src": "1256:34:5"
														},
														{
															"nativeSrc": "1299:71:5",
															"nodeType": "YulAssignment",
															"src": "1299:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1342:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:5"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1353:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1338:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:5"
																		},
																		"nativeSrc": "1338:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1338:22:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1362:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "1362:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1309:28:5",
																	"nodeType": "YulIdentifier",
																	"src": "1309:28:5"
																},
																"nativeSrc": "1309:61:5",
																"nodeType": "YulFunctionCall",
																"src": "1309:61:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1299:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:5"
																}
															]
														},
														{
															"nativeSrc": "1379:41:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1379:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1405:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1416:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1416:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1401:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:5"
																		},
																		"nativeSrc": "1401:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1401:18:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1395:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:5"
																},
																"nativeSrc": "1395:25:5",
																"nodeType": "YulFunctionCall",
																"src": "1395:25:5"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1383:8:5",
																	"nodeType": "YulTypedName",
																	"src": "1383:8:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1449:16:5",
																"nodeType": "YulBlock",
																"src": "1449:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1458:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1461:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1451:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:5"
																			},
																			"nativeSrc": "1451:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:5"
																		},
																		"nativeSrc": "1451:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1435:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "1435:8:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1445:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1432:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:5"
																},
																"nativeSrc": "1432:16:5",
																"nodeType": "YulFunctionCall",
																"src": "1432:16:5"
															},
															"nativeSrc": "1429:36:5",
															"nodeType": "YulIf",
															"src": "1429:36:5"
														},
														{
															"nativeSrc": "1474:73:5",
															"nodeType": "YulAssignment",
															"src": "1474:73:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1517:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:5"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1528:8:5",
																				"nodeType": "YulIdentifier",
																				"src": "1528:8:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1513:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:5"
																		},
																		"nativeSrc": "1513:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1513:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1539:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "1539:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1484:28:5",
																	"nodeType": "YulIdentifier",
																	"src": "1484:28:5"
																},
																"nativeSrc": "1484:63:5",
																"nodeType": "YulFunctionCall",
																"src": "1484:63:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1474:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "991:562:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1067:9:5",
														"nodeType": "YulTypedName",
														"src": "1067:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1078:7:5",
														"nodeType": "YulTypedName",
														"src": "1078:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1090:6:5",
														"nodeType": "YulTypedName",
														"src": "1090:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1098:6:5",
														"nodeType": "YulTypedName",
														"src": "1098:6:5",
														"type": ""
													}
												],
												"src": "991:562:5"
											},
											{
												"body": {
													"nativeSrc": "1613:325:5",
													"nodeType": "YulBlock",
													"src": "1613:325:5",
													"statements": [
														{
															"nativeSrc": "1623:22:5",
															"nodeType": "YulAssignment",
															"src": "1623:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1637:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1640:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1640:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1633:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:5"
																},
																"nativeSrc": "1633:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1633:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1623:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:5"
																}
															]
														},
														{
															"nativeSrc": "1654:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1654:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1684:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1684:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1690:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1690:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1680:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:5"
																},
																"nativeSrc": "1680:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1680:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1658:18:5",
																	"nodeType": "YulTypedName",
																	"src": "1658:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1731:31:5",
																"nodeType": "YulBlock",
																"src": "1731:31:5",
																"statements": [
																	{
																		"nativeSrc": "1733:27:5",
																		"nodeType": "YulAssignment",
																		"src": "1733:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1747:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "1747:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1755:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1755:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1743:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1743:3:5"
																			},
																			"nativeSrc": "1743:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1743:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1733:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1733:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1711:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "1711:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1704:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:5"
																},
																"nativeSrc": "1704:26:5",
																"nodeType": "YulFunctionCall",
																"src": "1704:26:5"
															},
															"nativeSrc": "1701:61:5",
															"nodeType": "YulIf",
															"src": "1701:61:5"
														},
														{
															"body": {
																"nativeSrc": "1821:111:5",
																"nodeType": "YulBlock",
																"src": "1821:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1842:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1842:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1849:3:5",
																							"nodeType": "YulLiteral",
																							"src": "1849:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1854:10:5",
																							"nodeType": "YulLiteral",
																							"src": "1854:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1845:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "1845:3:5"
																					},
																					"nativeSrc": "1845:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1845:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1835:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:5"
																			},
																			"nativeSrc": "1835:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1835:31:5"
																		},
																		"nativeSrc": "1835:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1835:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1886:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1889:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1879:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1879:6:5"
																			},
																			"nativeSrc": "1879:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1879:15:5"
																		},
																		"nativeSrc": "1879:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1879:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1914:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1917:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1917:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1907:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:5"
																			},
																			"nativeSrc": "1907:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1907:15:5"
																		},
																		"nativeSrc": "1907:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1777:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "1777:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1800:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1808:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1808:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1797:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1797:2:5"
																		},
																		"nativeSrc": "1797:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1797:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1774:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1774:2:5"
																},
																"nativeSrc": "1774:38:5",
																"nodeType": "YulFunctionCall",
																"src": "1774:38:5"
															},
															"nativeSrc": "1771:161:5",
															"nodeType": "YulIf",
															"src": "1771:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1558:380:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1593:4:5",
														"nodeType": "YulTypedName",
														"src": "1593:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1602:6:5",
														"nodeType": "YulTypedName",
														"src": "1602:6:5",
														"type": ""
													}
												],
												"src": "1558:380:5"
											},
											{
												"body": {
													"nativeSrc": "1999:65:5",
													"nodeType": "YulBlock",
													"src": "1999:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2016:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2019:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2009:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:5"
																},
																"nativeSrc": "2009:14:5",
																"nodeType": "YulFunctionCall",
																"src": "2009:14:5"
															},
															"nativeSrc": "2009:14:5",
															"nodeType": "YulExpressionStatement",
															"src": "2009:14:5"
														},
														{
															"nativeSrc": "2032:26:5",
															"nodeType": "YulAssignment",
															"src": "2032:26:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2050:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2053:4:5",
																		"nodeType": "YulLiteral",
																		"src": "2053:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2040:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2040:9:5"
																},
																"nativeSrc": "2040:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2040:18:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2032:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2032:4:5"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1943:121:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1982:3:5",
														"nodeType": "YulTypedName",
														"src": "1982:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1990:4:5",
														"nodeType": "YulTypedName",
														"src": "1990:4:5",
														"type": ""
													}
												],
												"src": "1943:121:5"
											},
											{
												"body": {
													"nativeSrc": "2150:464:5",
													"nodeType": "YulBlock",
													"src": "2150:464:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2183:425:5",
																"nodeType": "YulBlock",
																"src": "2183:425:5",
																"statements": [
																	{
																		"nativeSrc": "2197:11:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2197:11:5",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "2207:1:5",
																			"nodeType": "YulLiteral",
																			"src": "2207:1:5",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2201:2:5",
																				"nodeType": "YulTypedName",
																				"src": "2201:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nativeSrc": "2228:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "2228:2:5"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2232:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "2232:5:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2221:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:5"
																			},
																			"nativeSrc": "2221:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2221:17:5"
																		},
																		"nativeSrc": "2221:17:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:17:5"
																	},
																	{
																		"nativeSrc": "2251:31:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2251:31:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nativeSrc": "2273:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2277:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2277:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2263:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2263:9:5"
																			},
																			"nativeSrc": "2263:19:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2263:19:5"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2255:4:5",
																				"nodeType": "YulTypedName",
																				"src": "2255:4:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2295:57:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2295:57:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2318:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "2318:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2328:1:5",
																							"nodeType": "YulLiteral",
																							"src": "2328:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2335:10:5",
																									"nodeType": "YulIdentifier",
																									"src": "2335:10:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2347:2:5",
																									"nodeType": "YulLiteral",
																									"src": "2347:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2331:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "2331:3:5"
																							},
																							"nativeSrc": "2331:19:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2331:19:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2324:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2324:3:5"
																					},
																					"nativeSrc": "2324:27:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2324:27:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2314:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:5"
																			},
																			"nativeSrc": "2314:38:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2314:38:5"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2299:11:5",
																				"nodeType": "YulTypedName",
																				"src": "2299:11:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2389:23:5",
																			"nodeType": "YulBlock",
																			"src": "2389:23:5",
																			"statements": [
																				{
																					"nativeSrc": "2391:19:5",
																					"nodeType": "YulAssignment",
																					"src": "2391:19:5",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2406:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "2406:4:5"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2391:11:5",
																							"nodeType": "YulIdentifier",
																							"src": "2391:11:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2371:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "2371:10:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2383:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2383:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2368:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "2368:2:5"
																			},
																			"nativeSrc": "2368:20:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:20:5"
																		},
																		"nativeSrc": "2365:47:5",
																		"nodeType": "YulIf",
																		"src": "2365:47:5"
																	},
																	{
																		"nativeSrc": "2425:41:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2425:41:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2439:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "2439:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2449:1:5",
																							"nodeType": "YulLiteral",
																							"src": "2449:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2456:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2456:3:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2461:2:5",
																									"nodeType": "YulLiteral",
																									"src": "2461:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2452:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "2452:3:5"
																							},
																							"nativeSrc": "2452:12:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2452:12:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2445:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2445:3:5"
																					},
																					"nativeSrc": "2445:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2445:20:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2435:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2435:3:5"
																			},
																			"nativeSrc": "2435:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2435:31:5"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "2429:2:5",
																				"nodeType": "YulTypedName",
																				"src": "2429:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2479:24:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2479:24:5",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2492:11:5",
																			"nodeType": "YulIdentifier",
																			"src": "2492:11:5"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2483:5:5",
																				"nodeType": "YulTypedName",
																				"src": "2483:5:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2577:21:5",
																			"nodeType": "YulBlock",
																			"src": "2577:21:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2586:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "2586:5:5"
																							},
																							{
																								"name": "_1",
																								"nativeSrc": "2593:2:5",
																								"nodeType": "YulIdentifier",
																								"src": "2593:2:5"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2579:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "2579:6:5"
																						},
																						"nativeSrc": "2579:17:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2579:17:5"
																					},
																					"nativeSrc": "2579:17:5",
																					"nodeType": "YulExpressionStatement",
																					"src": "2579:17:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2527:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "2527:5:5"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "2534:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "2534:2:5"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2524:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "2524:2:5"
																			},
																			"nativeSrc": "2524:13:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2524:13:5"
																		},
																		"nativeSrc": "2516:82:5",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2538:26:5",
																			"nodeType": "YulBlock",
																			"src": "2538:26:5",
																			"statements": [
																				{
																					"nativeSrc": "2540:22:5",
																					"nodeType": "YulAssignment",
																					"src": "2540:22:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2553:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "2553:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2560:1:5",
																								"nodeType": "YulLiteral",
																								"src": "2560:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2549:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "2549:3:5"
																						},
																						"nativeSrc": "2549:13:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2549:13:5"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2540:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "2540:5:5"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2520:3:5",
																			"nodeType": "YulBlock",
																			"src": "2520:3:5",
																			"statements": []
																		},
																		"src": "2516:82:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2166:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2171:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2163:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2163:2:5"
																},
																"nativeSrc": "2163:11:5",
																"nodeType": "YulFunctionCall",
																"src": "2163:11:5"
															},
															"nativeSrc": "2160:448:5",
															"nodeType": "YulIf",
															"src": "2160:448:5"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2069:545:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2122:5:5",
														"nodeType": "YulTypedName",
														"src": "2122:5:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2129:3:5",
														"nodeType": "YulTypedName",
														"src": "2129:3:5",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2134:10:5",
														"nodeType": "YulTypedName",
														"src": "2134:10:5",
														"type": ""
													}
												],
												"src": "2069:545:5"
											},
											{
												"body": {
													"nativeSrc": "2704:81:5",
													"nodeType": "YulBlock",
													"src": "2704:81:5",
													"statements": [
														{
															"nativeSrc": "2714:65:5",
															"nodeType": "YulAssignment",
															"src": "2714:65:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2729:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "2729:4:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2747:1:5",
																										"nodeType": "YulLiteral",
																										"src": "2747:1:5",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2750:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "2750:3:5"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2743:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2743:3:5"
																								},
																								"nativeSrc": "2743:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2743:11:5"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2760:1:5",
																										"nodeType": "YulLiteral",
																										"src": "2760:1:5",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2756:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2756:3:5"
																								},
																								"nativeSrc": "2756:6:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2756:6:5"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2739:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "2739:3:5"
																						},
																						"nativeSrc": "2739:24:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2739:24:5"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2735:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2735:3:5"
																				},
																				"nativeSrc": "2735:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2735:29:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2725:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:5"
																		},
																		"nativeSrc": "2725:40:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2725:40:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2771:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2771:1:5",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2774:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2774:3:5"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2767:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:5"
																		},
																		"nativeSrc": "2767:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2767:11:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2722:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2722:2:5"
																},
																"nativeSrc": "2722:57:5",
																"nodeType": "YulFunctionCall",
																"src": "2722:57:5"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2714:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2714:4:5"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2619:166:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2681:4:5",
														"nodeType": "YulTypedName",
														"src": "2681:4:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2687:3:5",
														"nodeType": "YulTypedName",
														"src": "2687:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2695:4:5",
														"nodeType": "YulTypedName",
														"src": "2695:4:5",
														"type": ""
													}
												],
												"src": "2619:166:5"
											},
											{
												"body": {
													"nativeSrc": "2886:1256:5",
													"nodeType": "YulBlock",
													"src": "2886:1256:5",
													"statements": [
														{
															"nativeSrc": "2896:24:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2896:24:5",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2916:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2916:3:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2910:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2910:5:5"
																},
																"nativeSrc": "2910:10:5",
																"nodeType": "YulFunctionCall",
																"src": "2910:10:5"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2900:6:5",
																	"nodeType": "YulTypedName",
																	"src": "2900:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2963:22:5",
																"nodeType": "YulBlock",
																"src": "2963:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2965:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "2965:16:5"
																			},
																			"nativeSrc": "2965:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2965:18:5"
																		},
																		"nativeSrc": "2965:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2935:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2951:2:5",
																						"nodeType": "YulLiteral",
																						"src": "2951:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2955:1:5",
																						"nodeType": "YulLiteral",
																						"src": "2955:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2947:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:5"
																				},
																				"nativeSrc": "2947:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2947:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2959:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2959:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2943:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2943:3:5"
																		},
																		"nativeSrc": "2943:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2932:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2932:2:5"
																},
																"nativeSrc": "2932:30:5",
																"nodeType": "YulFunctionCall",
																"src": "2932:30:5"
															},
															"nativeSrc": "2929:56:5",
															"nodeType": "YulIf",
															"src": "2929:56:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3038:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "3038:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3076:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "3076:4:5"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3070:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "3070:5:5"
																				},
																				"nativeSrc": "3070:11:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3070:11:5"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3044:25:5",
																			"nodeType": "YulIdentifier",
																			"src": "3044:25:5"
																		},
																		"nativeSrc": "3044:38:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3044:38:5"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3084:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:5"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2994:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2994:43:5"
																},
																"nativeSrc": "2994:97:5",
																"nodeType": "YulFunctionCall",
																"src": "2994:97:5"
															},
															"nativeSrc": "2994:97:5",
															"nodeType": "YulExpressionStatement",
															"src": "2994:97:5"
														},
														{
															"nativeSrc": "3100:18:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3100:18:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3117:1:5",
																"nodeType": "YulLiteral",
																"src": "3117:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3104:9:5",
																	"nodeType": "YulTypedName",
																	"src": "3104:9:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3127:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3127:23:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3146:4:5",
																"nodeType": "YulLiteral",
																"src": "3146:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "3131:11:5",
																	"nodeType": "YulTypedName",
																	"src": "3131:11:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3159:24:5",
															"nodeType": "YulAssignment",
															"src": "3159:24:5",
															"value": {
																"name": "srcOffset_1",
																"nativeSrc": "3172:11:5",
																"nodeType": "YulIdentifier",
																"src": "3172:11:5"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3159:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "3159:9:5"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3229:656:5",
																		"nodeType": "YulBlock",
																		"src": "3229:656:5",
																		"statements": [
																			{
																				"nativeSrc": "3243:35:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3243:35:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3262:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3262:6:5"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3274:2:5",
																									"nodeType": "YulLiteral",
																									"src": "3274:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3270:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "3270:3:5"
																							},
																							"nativeSrc": "3270:7:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3270:7:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3258:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3258:3:5"
																					},
																					"nativeSrc": "3258:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3258:20:5"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3247:7:5",
																						"nodeType": "YulTypedName",
																						"src": "3247:7:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3291:49:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3291:49:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3335:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "3335:4:5"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3305:29:5",
																						"nodeType": "YulIdentifier",
																						"src": "3305:29:5"
																					},
																					"nativeSrc": "3305:35:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3305:35:5"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3295:6:5",
																						"nodeType": "YulTypedName",
																						"src": "3295:6:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3353:10:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3353:10:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3362:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3362:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3357:1:5",
																						"nodeType": "YulTypedName",
																						"src": "3357:1:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3440:172:5",
																					"nodeType": "YulBlock",
																					"src": "3440:172:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3465:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3465:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3483:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "3483:3:5"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3488:9:5",
																														"nodeType": "YulIdentifier",
																														"src": "3488:9:5"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3479:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "3479:3:5"
																												},
																												"nativeSrc": "3479:19:5",
																												"nodeType": "YulFunctionCall",
																												"src": "3479:19:5"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3473:5:5",
																											"nodeType": "YulIdentifier",
																											"src": "3473:5:5"
																										},
																										"nativeSrc": "3473:26:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3473:26:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3458:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3458:6:5"
																								},
																								"nativeSrc": "3458:42:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3458:42:5"
																							},
																							"nativeSrc": "3458:42:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "3458:42:5"
																						},
																						{
																							"nativeSrc": "3517:24:5",
																							"nodeType": "YulAssignment",
																							"src": "3517:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3531:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3531:6:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3539:1:5",
																										"nodeType": "YulLiteral",
																										"src": "3539:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3527:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3527:3:5"
																								},
																								"nativeSrc": "3527:14:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3527:14:5"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3517:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3517:6:5"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3558:40:5",
																							"nodeType": "YulAssignment",
																							"src": "3558:40:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3575:9:5",
																										"nodeType": "YulIdentifier",
																										"src": "3575:9:5"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3586:11:5",
																										"nodeType": "YulIdentifier",
																										"src": "3586:11:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3571:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3571:3:5"
																								},
																								"nativeSrc": "3571:27:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3571:27:5"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3558:9:5",
																									"nodeType": "YulIdentifier",
																									"src": "3558:9:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3387:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "3387:1:5"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3390:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "3390:7:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3384:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "3384:2:5"
																					},
																					"nativeSrc": "3384:14:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3384:14:5"
																				},
																				"nativeSrc": "3376:236:5",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3399:28:5",
																					"nodeType": "YulBlock",
																					"src": "3399:28:5",
																					"statements": [
																						{
																							"nativeSrc": "3401:24:5",
																							"nodeType": "YulAssignment",
																							"src": "3401:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3410:1:5",
																										"nodeType": "YulIdentifier",
																										"src": "3410:1:5"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3413:11:5",
																										"nodeType": "YulIdentifier",
																										"src": "3413:11:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3406:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3406:3:5"
																								},
																								"nativeSrc": "3406:19:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3406:19:5"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3401:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "3401:1:5"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3380:3:5",
																					"nodeType": "YulBlock",
																					"src": "3380:3:5",
																					"statements": []
																				},
																				"src": "3376:236:5"
																			},
																			{
																				"body": {
																					"nativeSrc": "3660:166:5",
																					"nodeType": "YulBlock",
																					"src": "3660:166:5",
																					"statements": [
																						{
																							"nativeSrc": "3678:43:5",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3678:43:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3705:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "3705:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3710:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "3710:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3701:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "3701:3:5"
																										},
																										"nativeSrc": "3701:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3701:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3695:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3695:5:5"
																								},
																								"nativeSrc": "3695:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3695:26:5"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3682:9:5",
																									"nodeType": "YulTypedName",
																									"src": "3682:9:5",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3745:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3745:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3757:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "3757:9:5"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3784:1:5",
																																				"nodeType": "YulLiteral",
																																				"src": "3784:1:5",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3787:6:5",
																																				"nodeType": "YulIdentifier",
																																				"src": "3787:6:5"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3780:3:5",
																																			"nodeType": "YulIdentifier",
																																			"src": "3780:3:5"
																																		},
																																		"nativeSrc": "3780:14:5",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3780:14:5"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3796:3:5",
																																		"nodeType": "YulLiteral",
																																		"src": "3796:3:5",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3776:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "3776:3:5"
																																},
																																"nativeSrc": "3776:24:5",
																																"nodeType": "YulFunctionCall",
																																"src": "3776:24:5"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3806:1:5",
																																		"nodeType": "YulLiteral",
																																		"src": "3806:1:5",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3802:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "3802:3:5"
																																},
																																"nativeSrc": "3802:6:5",
																																"nodeType": "YulFunctionCall",
																																"src": "3802:6:5"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3772:3:5",
																															"nodeType": "YulIdentifier",
																															"src": "3772:3:5"
																														},
																														"nativeSrc": "3772:37:5",
																														"nodeType": "YulFunctionCall",
																														"src": "3772:37:5"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3768:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "3768:3:5"
																												},
																												"nativeSrc": "3768:42:5",
																												"nodeType": "YulFunctionCall",
																												"src": "3768:42:5"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3753:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "3753:3:5"
																										},
																										"nativeSrc": "3753:58:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3753:58:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3738:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3738:6:5"
																								},
																								"nativeSrc": "3738:74:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3738:74:5"
																							},
																							"nativeSrc": "3738:74:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "3738:74:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3631:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "3631:7:5"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3640:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3640:6:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3628:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "3628:2:5"
																					},
																					"nativeSrc": "3628:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3628:19:5"
																				},
																				"nativeSrc": "3625:201:5",
																				"nodeType": "YulIf",
																				"src": "3625:201:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3846:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "3846:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3860:1:5",
																											"nodeType": "YulLiteral",
																											"src": "3860:1:5",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3863:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "3863:6:5"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3856:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "3856:3:5"
																									},
																									"nativeSrc": "3856:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "3856:14:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3872:1:5",
																									"nodeType": "YulLiteral",
																									"src": "3872:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3852:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "3852:3:5"
																							},
																							"nativeSrc": "3852:22:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3852:22:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3839:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3839:6:5"
																					},
																					"nativeSrc": "3839:36:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3839:36:5"
																				},
																				"nativeSrc": "3839:36:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "3839:36:5"
																			}
																		]
																	},
																	"nativeSrc": "3222:663:5",
																	"nodeType": "YulCase",
																	"src": "3222:663:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3227:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3902:234:5",
																		"nodeType": "YulBlock",
																		"src": "3902:234:5",
																		"statements": [
																			{
																				"nativeSrc": "3916:14:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3916:14:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3929:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3920:5:5",
																						"nodeType": "YulTypedName",
																						"src": "3920:5:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3965:67:5",
																					"nodeType": "YulBlock",
																					"src": "3965:67:5",
																					"statements": [
																						{
																							"nativeSrc": "3983:35:5",
																							"nodeType": "YulAssignment",
																							"src": "3983:35:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4002:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "4002:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4007:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "4007:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3998:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "3998:3:5"
																										},
																										"nativeSrc": "3998:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3998:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3992:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3992:5:5"
																								},
																								"nativeSrc": "3992:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3992:26:5"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3983:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3983:5:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3946:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "3946:6:5"
																				},
																				"nativeSrc": "3943:89:5",
																				"nodeType": "YulIf",
																				"src": "3943:89:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4052:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "4052:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4111:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "4111:5:5"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4118:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "4118:6:5"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "4058:52:5",
																								"nodeType": "YulIdentifier",
																								"src": "4058:52:5"
																							},
																							"nativeSrc": "4058:67:5",
																							"nodeType": "YulFunctionCall",
																							"src": "4058:67:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4045:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:5"
																					},
																					"nativeSrc": "4045:81:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4045:81:5"
																				},
																				"nativeSrc": "4045:81:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "4045:81:5"
																			}
																		]
																	},
																	"nativeSrc": "3894:242:5",
																	"nodeType": "YulCase",
																	"src": "3894:242:5",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3202:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3202:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3210:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3199:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3199:2:5"
																},
																"nativeSrc": "3199:14:5",
																"nodeType": "YulFunctionCall",
																"src": "3199:14:5"
															},
															"nativeSrc": "3192:944:5",
															"nodeType": "YulSwitch",
															"src": "3192:944:5"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2790:1352:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2871:4:5",
														"nodeType": "YulTypedName",
														"src": "2871:4:5",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2877:3:5",
														"nodeType": "YulTypedName",
														"src": "2877:3:5",
														"type": ""
													}
												],
												"src": "2790:1352:5"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162000e1938038062000e19833981016040819052620000339162000124565b600362000041838262000216565b50600462000050828262000216565b50506005805460ff1916601217905550620002de565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126200008a575f80fd5b81516001600160401b0380821115620000a757620000a762000066565b604051601f8301601f19908116603f01168101908282118183101715620000d257620000d262000066565b81604052838152602092508683858801011115620000ee575f80fd5b5f91505b83821015620001115785820183015181830184015290820190620000f2565b5f93810190920192909252949350505050565b5f806040838503121562000136575f80fd5b82516001600160401b03808211156200014d575f80fd5b6200015b868387016200007a565b9350602085015191508082111562000171575f80fd5b5062000180858286016200007a565b9150509250929050565b600181811c908216806200019f57607f821691505b602082108103620001be57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111562000211575f81815260208120601f850160051c81016020861015620001ec5750805b601f850160051c820191505b818110156200020d57828155600101620001f8565b5050505b505050565b81516001600160401b0381111562000232576200023262000066565b6200024a816200024384546200018a565b84620001c4565b602080601f83116001811462000280575f8415620002685750858301515b5f19600386901b1c1916600185901b1785556200020d565b5f85815260208120601f198616915b82811015620002b0578886015182559484019460019091019084016200028f565b5085821015620002ce57878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b610b2d80620002ec5f395ff3fe608060405234801561000f575f80fd5b50600436106100cb575f3560e01c806342966c681161008857806395d89b411161006357806395d89b41146101ad578063a457c2d7146101b5578063a9059cbb146101c8578063dd62ed3e146101db575f80fd5b806342966c681461015d57806370a082311461017257806379cc67901461019a575f80fd5b806306fdde03146100cf578063095ea7b3146100ed57806318160ddd1461011057806323b872dd14610122578063313ce56714610135578063395093511461014a575b5f80fd5b6100d7610213565b6040516100e491906108a4565b60405180910390f35b6101006100fb36600461090a565b6102a3565b60405190151581526020016100e4565b6002545b6040519081526020016100e4565b610100610130366004610932565b6102b9565b60055460405160ff90911681526020016100e4565b61010061015836600461090a565b610320565b61017061016b36600461096b565b610355565b005b610114610180366004610982565b6001600160a01b03165f9081526020819052604090205490565b6101706101a836600461090a565b610362565b6100d76103ad565b6101006101c336600461090a565b6103bc565b6101006101d636600461090a565b610409565b6101146101e936600461099b565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b606060038054610222906109cc565b80601f016020809104026020016040519081016040528092919081815260200182805461024e906109cc565b80156102995780601f1061027057610100808354040283529160200191610299565b820191905f5260205f20905b81548152906001019060200180831161027c57829003601f168201915b5050505050905090565b5f6102af338484610415565b5060015b92915050565b5f6102c584848461053e565b610316843361031185604051806060016040528060288152602001610a87602891396001600160a01b038a165f90815260016020908152604080832033845290915290205491906106be565b610415565b5060019392505050565b335f8181526001602090815260408083206001600160a01b038716845290915281205490916102af91859061031190866106f6565b61035f338261075b565b50565b5f61039182604051806060016040528060248152602001610aaf6024913961038a86336101e9565b91906106be565b905061039e833383610415565b6103a8838361075b565b505050565b606060048054610222906109cc565b5f6102af338461031185604051806060016040528060258152602001610ad360259139335f9081526001602090815260408083206001600160a01b038d16845290915290205491906106be565b5f6102af33848461053e565b6001600160a01b03831661047c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084015b60405180910390fd5b6001600160a01b0382166104dd5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610473565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166105a25760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610473565b6001600160a01b0382166106045760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610473565b61064081604051806060016040528060268152602001610a61602691396001600160a01b0386165f9081526020819052604090205491906106be565b6001600160a01b038085165f90815260208190526040808220939093559084168152205461066e90826106f6565b6001600160a01b038381165f818152602081815260409182902094909455518481529092918616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610531565b5f81848411156106e15760405162461bcd60e51b815260040161047391906108a4565b505f6106ed8486610a18565b95945050505050565b5f806107028385610a2b565b9050838110156107545760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610473565b9392505050565b6001600160a01b0382166107bb5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610473565b6107f781604051806060016040528060228152602001610a3f602291396001600160a01b0385165f9081526020819052604090205491906106be565b6001600160a01b0383165f9081526020819052604090205560025461081c9082610863565b6002556040518181525f906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b5f61075483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506106be565b5f6020808352835180828501525f5b818110156108cf578581018301518582016040015282016108b3565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610905575f80fd5b919050565b5f806040838503121561091b575f80fd5b610924836108ef565b946020939093013593505050565b5f805f60608486031215610944575f80fd5b61094d846108ef565b925061095b602085016108ef565b9150604084013590509250925092565b5f6020828403121561097b575f80fd5b5035919050565b5f60208284031215610992575f80fd5b610754826108ef565b5f80604083850312156109ac575f80fd5b6109b5836108ef565b91506109c3602084016108ef565b90509250929050565b600181811c908216806109e057607f821691505b6020821081036109fe57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156102b3576102b3610a04565b808201808211156102b3576102b3610a0456fe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122014e71421f32813e6397d990f3bb197397a40426f22d1893c7b955031001c115a64736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xE19 CODESIZE SUB DUP1 PUSH3 0xE19 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x33 SWAP2 PUSH3 0x124 JUMP JUMPDEST PUSH1 0x3 PUSH3 0x41 DUP4 DUP3 PUSH3 0x216 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x50 DUP3 DUP3 PUSH3 0x216 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE POP PUSH3 0x2DE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x8A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0xA7 JUMPI PUSH3 0xA7 PUSH3 0x66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xD2 JUMPI PUSH3 0xD2 PUSH3 0x66 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xEE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x111 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xF2 JUMP JUMPDEST PUSH0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x136 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH3 0x15B DUP7 DUP4 DUP8 ADD PUSH3 0x7A JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x171 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH3 0x180 DUP6 DUP3 DUP7 ADD PUSH3 0x7A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1BE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x211 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EC JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20D JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1F8 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x232 JUMPI PUSH3 0x232 PUSH3 0x66 JUMP JUMPDEST PUSH3 0x24A DUP2 PUSH3 0x243 DUP5 SLOAD PUSH3 0x18A JUMP JUMPDEST DUP5 PUSH3 0x1C4 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x280 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x268 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x20D JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B0 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x28F JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2CE JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xB2D DUP1 PUSH3 0x2EC PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1DB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x19A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD7 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0x90A JUMP JUMPDEST PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x100 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0x932 JUMP JUMPDEST PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x100 PUSH2 0x158 CALLDATASIZE PUSH1 0x4 PUSH2 0x90A JUMP JUMPDEST PUSH2 0x320 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0x96B JUMP JUMPDEST PUSH2 0x355 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x114 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x90A JUMP JUMPDEST PUSH2 0x362 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x3AD JUMP JUMPDEST PUSH2 0x100 PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x90A JUMP JUMPDEST PUSH2 0x3BC JUMP JUMPDEST PUSH2 0x100 PUSH2 0x1D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x90A JUMP JUMPDEST PUSH2 0x409 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x99B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x222 SWAP1 PUSH2 0x9CC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x24E SWAP1 PUSH2 0x9CC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x299 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x270 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x299 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x27C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x2AF CALLER DUP5 DUP5 PUSH2 0x415 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2C5 DUP5 DUP5 DUP5 PUSH2 0x53E JUMP JUMPDEST PUSH2 0x316 DUP5 CALLER PUSH2 0x311 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA87 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x6BE JUMP JUMPDEST PUSH2 0x415 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x2AF SWAP2 DUP6 SWAP1 PUSH2 0x311 SWAP1 DUP7 PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0x35F CALLER DUP3 PUSH2 0x75B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x391 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAAF PUSH1 0x24 SWAP2 CODECOPY PUSH2 0x38A DUP7 CALLER PUSH2 0x1E9 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x6BE JUMP JUMPDEST SWAP1 POP PUSH2 0x39E DUP4 CALLER DUP4 PUSH2 0x415 JUMP JUMPDEST PUSH2 0x3A8 DUP4 DUP4 PUSH2 0x75B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x222 SWAP1 PUSH2 0x9CC JUMP JUMPDEST PUSH0 PUSH2 0x2AF CALLER DUP5 PUSH2 0x311 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD3 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x6BE JUMP JUMPDEST PUSH0 PUSH2 0x2AF CALLER DUP5 DUP5 PUSH2 0x53E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x47C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x473 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x473 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x604 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x473 JUMP JUMPDEST PUSH2 0x640 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA61 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x66E SWAP1 DUP3 PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x531 JUMP JUMPDEST PUSH0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x6E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x473 SWAP2 SWAP1 PUSH2 0x8A4 JUMP JUMPDEST POP PUSH0 PUSH2 0x6ED DUP5 DUP7 PUSH2 0xA18 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x702 DUP4 DUP6 PUSH2 0xA2B JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x754 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x473 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x473 JUMP JUMPDEST PUSH2 0x7F7 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA3F PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x81C SWAP1 DUP3 PUSH2 0x863 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x754 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x6BE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8CF JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x8B3 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x905 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x91B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x924 DUP4 PUSH2 0x8EF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x944 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x94D DUP5 PUSH2 0x8EF JUMP JUMPDEST SWAP3 POP PUSH2 0x95B PUSH1 0x20 DUP6 ADD PUSH2 0x8EF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x97B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x992 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x754 DUP3 PUSH2 0x8EF JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9AC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9B5 DUP4 PUSH2 0x8EF JUMP JUMPDEST SWAP2 POP PUSH2 0x9C3 PUSH1 0x20 DUP5 ADD PUSH2 0x8EF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x9E0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x9FE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2B3 JUMPI PUSH2 0x2B3 PUSH2 0xA04 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2B3 JUMPI PUSH2 0x2B3 PUSH2 0xA04 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636545524332303A207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654552 NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x735822122014E7 EQ 0x21 RETURN 0x28 SGT 0xE6 CODECOPY PUSH30 0x990F3BB197397A40426F22D1893C7B955031001C115A64736F6C63430008 ISZERO STOP CALLER ",
							"sourceMap": "1333:10238:1:-:0;;;1974:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2050:5;:14;2058:6;2050:5;:14;:::i;:::-;-1:-1:-1;2074:7:1;:18;2084:8;2074:7;:18;:::i;:::-;-1:-1:-1;;2102:9:1;:14;;-1:-1:-1;;2102:14:1;2114:2;2102:14;;;-1:-1:-1;1333:10238:1;;14:127:5;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:5;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:5;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:5:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:5;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:5;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:5;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:5;;;3992:26;3943:89;-1:-1:-1;;2747:1:5;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:5;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:5;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:5;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:5:o;:::-;1333:10238:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_552": {
									"entryPoint": 1045,
									"id": 552,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_593": {
									"entryPoint": null,
									"id": 593,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_507": {
									"entryPoint": 1883,
									"id": 507,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_13": {
									"entryPoint": null,
									"id": 13,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_350": {
									"entryPoint": 1342,
									"id": 350,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_703": {
									"entryPoint": 1782,
									"id": 703,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_168": {
									"entryPoint": null,
									"id": 168,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_189": {
									"entryPoint": 675,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_129": {
									"entryPoint": null,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_451": {
									"entryPoint": 866,
									"id": 451,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_418": {
									"entryPoint": 853,
									"id": 418,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_105": {
									"entryPoint": null,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_284": {
									"entryPoint": 956,
									"id": 284,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_255": {
									"entryPoint": 800,
									"id": 255,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_87": {
									"entryPoint": 531,
									"id": 87,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@sub_720": {
									"entryPoint": 2147,
									"id": 720,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_748": {
									"entryPoint": 1726,
									"id": 748,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@symbol_96": {
									"entryPoint": 941,
									"id": 96,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_115": {
									"entryPoint": null,
									"id": 115,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_227": {
									"entryPoint": 697,
									"id": 227,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_150": {
									"entryPoint": 1033,
									"id": 150,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2411,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2564,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5694:5",
										"nodeType": "YulBlock",
										"src": "0:5694:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:427:5",
													"nodeType": "YulBlock",
													"src": "135:427:5",
													"statements": [
														{
															"nativeSrc": "145:12:5",
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:5",
															"value": {
																"kind": "number",
																"nativeSrc": "155:2:5",
																"nodeType": "YulLiteral",
																"src": "155:2:5",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "149:2:5",
																	"nodeType": "YulTypedName",
																	"src": "149:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "173:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "184:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "166:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:5"
																},
																"nativeSrc": "166:21:5",
																"nodeType": "YulFunctionCall",
																"src": "166:21:5"
															},
															"nativeSrc": "166:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "166:21:5"
														},
														{
															"nativeSrc": "196:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "216:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "210:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:5"
																},
																"nativeSrc": "210:13:5",
																"nodeType": "YulFunctionCall",
																"src": "210:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "200:6:5",
																	"nodeType": "YulTypedName",
																	"src": "200:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "243:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:5"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "254:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "239:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:5"
																		},
																		"nativeSrc": "239:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "259:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "232:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:5"
																},
																"nativeSrc": "232:34:5",
																"nodeType": "YulFunctionCall",
																"src": "232:34:5"
															},
															"nativeSrc": "232:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "232:34:5"
														},
														{
															"nativeSrc": "275:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "284:1:5",
																"nodeType": "YulLiteral",
																"src": "284:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "279:1:5",
																	"nodeType": "YulTypedName",
																	"src": "279:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "344:90:5",
																"nodeType": "YulBlock",
																"src": "344:90:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "373:9:5",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:5"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "384:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "369:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:5"
																							},
																							"nativeSrc": "369:17:5",
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "388:2:5",
																							"nodeType": "YulLiteral",
																							"src": "388:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "365:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:5"
																					},
																					"nativeSrc": "365:26:5",
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "407:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:5"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "415:1:5",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "403:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:5"
																									},
																									"nativeSrc": "403:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:5"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "419:2:5",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "399:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:5"
																							},
																							"nativeSrc": "399:23:5",
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "393:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:5"
																					},
																					"nativeSrc": "393:30:5",
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "358:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:5"
																			},
																			"nativeSrc": "358:66:5",
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:5"
																		},
																		"nativeSrc": "358:66:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "305:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "308:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "302:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:5"
																},
																"nativeSrc": "302:13:5",
																"nodeType": "YulFunctionCall",
																"src": "302:13:5"
															},
															"nativeSrc": "294:140:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "316:19:5",
																"nodeType": "YulBlock",
																"src": "316:19:5",
																"statements": [
																	{
																		"nativeSrc": "318:15:5",
																		"nodeType": "YulAssignment",
																		"src": "318:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "327:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:5"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "330:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "323:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:5"
																			},
																			"nativeSrc": "323:10:5",
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "318:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "298:3:5",
																"nodeType": "YulBlock",
																"src": "298:3:5",
																"statements": []
															},
															"src": "294:140:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "458:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "469:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "454:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:5"
																				},
																				"nativeSrc": "454:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "478:2:5",
																				"nodeType": "YulLiteral",
																				"src": "478:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "450:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:5"
																		},
																		"nativeSrc": "450:31:5",
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "483:1:5",
																		"nodeType": "YulLiteral",
																		"src": "483:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "443:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:5"
																},
																"nativeSrc": "443:42:5",
																"nodeType": "YulFunctionCall",
																"src": "443:42:5"
															},
															"nativeSrc": "443:42:5",
															"nodeType": "YulExpressionStatement",
															"src": "443:42:5"
														},
														{
															"nativeSrc": "494:62:5",
															"nodeType": "YulAssignment",
															"src": "494:62:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "510:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "529:6:5",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "537:2:5",
																								"nodeType": "YulLiteral",
																								"src": "537:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "525:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:5"
																						},
																						"nativeSrc": "525:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "546:2:5",
																								"nodeType": "YulLiteral",
																								"src": "546:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "542:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:5"
																						},
																						"nativeSrc": "542:7:5",
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "521:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:5"
																				},
																				"nativeSrc": "521:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "506:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:5"
																		},
																		"nativeSrc": "506:45:5",
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "553:2:5",
																		"nodeType": "YulLiteral",
																		"src": "553:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:5"
																},
																"nativeSrc": "502:54:5",
																"nodeType": "YulFunctionCall",
																"src": "502:54:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:548:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:5",
														"nodeType": "YulTypedName",
														"src": "104:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:5",
														"nodeType": "YulTypedName",
														"src": "115:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:5",
														"nodeType": "YulTypedName",
														"src": "126:4:5",
														"type": ""
													}
												],
												"src": "14:548:5"
											},
											{
												"body": {
													"nativeSrc": "616:124:5",
													"nodeType": "YulBlock",
													"src": "616:124:5",
													"statements": [
														{
															"nativeSrc": "626:29:5",
															"nodeType": "YulAssignment",
															"src": "626:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "648:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "635:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:5"
																},
																"nativeSrc": "635:20:5",
																"nodeType": "YulFunctionCall",
																"src": "635:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "626:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "718:16:5",
																"nodeType": "YulBlock",
																"src": "718:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "727:1:5",
																					"nodeType": "YulLiteral",
																					"src": "727:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "730:1:5",
																					"nodeType": "YulLiteral",
																					"src": "730:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "720:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:5"
																			},
																			"nativeSrc": "720:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:5"
																		},
																		"nativeSrc": "720:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "677:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "688:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "703:3:5",
																										"nodeType": "YulLiteral",
																										"src": "703:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "708:1:5",
																										"nodeType": "YulLiteral",
																										"src": "708:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "699:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:5"
																								},
																								"nativeSrc": "699:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "712:1:5",
																								"nodeType": "YulLiteral",
																								"src": "712:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "695:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:5"
																						},
																						"nativeSrc": "695:19:5",
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "684:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:5"
																				},
																				"nativeSrc": "684:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "674:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:5"
																		},
																		"nativeSrc": "674:42:5",
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "667:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:5"
																},
																"nativeSrc": "667:50:5",
																"nodeType": "YulFunctionCall",
																"src": "667:50:5"
															},
															"nativeSrc": "664:70:5",
															"nodeType": "YulIf",
															"src": "664:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "567:173:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "595:6:5",
														"nodeType": "YulTypedName",
														"src": "595:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "606:5:5",
														"nodeType": "YulTypedName",
														"src": "606:5:5",
														"type": ""
													}
												],
												"src": "567:173:5"
											},
											{
												"body": {
													"nativeSrc": "832:167:5",
													"nodeType": "YulBlock",
													"src": "832:167:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "878:16:5",
																"nodeType": "YulBlock",
																"src": "878:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "887:1:5",
																					"nodeType": "YulLiteral",
																					"src": "887:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "890:1:5",
																					"nodeType": "YulLiteral",
																					"src": "890:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "880:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:5"
																			},
																			"nativeSrc": "880:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:5"
																		},
																		"nativeSrc": "880:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "853:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "862:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "849:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:5"
																		},
																		"nativeSrc": "849:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "874:2:5",
																		"nodeType": "YulLiteral",
																		"src": "874:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "845:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:5"
																},
																"nativeSrc": "845:32:5",
																"nodeType": "YulFunctionCall",
																"src": "845:32:5"
															},
															"nativeSrc": "842:52:5",
															"nodeType": "YulIf",
															"src": "842:52:5"
														},
														{
															"nativeSrc": "903:39:5",
															"nodeType": "YulAssignment",
															"src": "903:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "932:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "913:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:5"
																},
																"nativeSrc": "913:29:5",
																"nodeType": "YulFunctionCall",
																"src": "913:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "903:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:5"
																}
															]
														},
														{
															"nativeSrc": "951:42:5",
															"nodeType": "YulAssignment",
															"src": "951:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "978:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "989:2:5",
																				"nodeType": "YulLiteral",
																				"src": "989:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "974:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:5"
																		},
																		"nativeSrc": "974:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "961:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:5"
																},
																"nativeSrc": "961:32:5",
																"nodeType": "YulFunctionCall",
																"src": "961:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "951:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "745:254:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "790:9:5",
														"nodeType": "YulTypedName",
														"src": "790:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "801:7:5",
														"nodeType": "YulTypedName",
														"src": "801:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "813:6:5",
														"nodeType": "YulTypedName",
														"src": "813:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "821:6:5",
														"nodeType": "YulTypedName",
														"src": "821:6:5",
														"type": ""
													}
												],
												"src": "745:254:5"
											},
											{
												"body": {
													"nativeSrc": "1099:92:5",
													"nodeType": "YulBlock",
													"src": "1099:92:5",
													"statements": [
														{
															"nativeSrc": "1109:26:5",
															"nodeType": "YulAssignment",
															"src": "1109:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1121:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1132:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1117:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:5"
																},
																"nativeSrc": "1117:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1117:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1109:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1151:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1176:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1169:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:5"
																				},
																				"nativeSrc": "1169:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1162:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:5"
																		},
																		"nativeSrc": "1162:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1144:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:5"
																},
																"nativeSrc": "1144:41:5",
																"nodeType": "YulFunctionCall",
																"src": "1144:41:5"
															},
															"nativeSrc": "1144:41:5",
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1004:187:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1068:9:5",
														"nodeType": "YulTypedName",
														"src": "1068:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1079:6:5",
														"nodeType": "YulTypedName",
														"src": "1079:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1090:4:5",
														"nodeType": "YulTypedName",
														"src": "1090:4:5",
														"type": ""
													}
												],
												"src": "1004:187:5"
											},
											{
												"body": {
													"nativeSrc": "1297:76:5",
													"nodeType": "YulBlock",
													"src": "1297:76:5",
													"statements": [
														{
															"nativeSrc": "1307:26:5",
															"nodeType": "YulAssignment",
															"src": "1307:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1319:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1330:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1315:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:5"
																},
																"nativeSrc": "1315:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1315:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1307:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1349:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1360:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1342:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:5"
																},
																"nativeSrc": "1342:25:5",
																"nodeType": "YulFunctionCall",
																"src": "1342:25:5"
															},
															"nativeSrc": "1342:25:5",
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1196:177:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1266:9:5",
														"nodeType": "YulTypedName",
														"src": "1266:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1277:6:5",
														"nodeType": "YulTypedName",
														"src": "1277:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1288:4:5",
														"nodeType": "YulTypedName",
														"src": "1288:4:5",
														"type": ""
													}
												],
												"src": "1196:177:5"
											},
											{
												"body": {
													"nativeSrc": "1482:224:5",
													"nodeType": "YulBlock",
													"src": "1482:224:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1528:16:5",
																"nodeType": "YulBlock",
																"src": "1528:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1537:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1540:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1530:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:5"
																			},
																			"nativeSrc": "1530:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:5"
																		},
																		"nativeSrc": "1530:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1503:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1512:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1499:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:5"
																		},
																		"nativeSrc": "1499:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1524:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1495:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:5"
																},
																"nativeSrc": "1495:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1495:32:5"
															},
															"nativeSrc": "1492:52:5",
															"nodeType": "YulIf",
															"src": "1492:52:5"
														},
														{
															"nativeSrc": "1553:39:5",
															"nodeType": "YulAssignment",
															"src": "1553:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1582:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1563:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:5"
																},
																"nativeSrc": "1563:29:5",
																"nodeType": "YulFunctionCall",
																"src": "1563:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1553:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:5"
																}
															]
														},
														{
															"nativeSrc": "1601:48:5",
															"nodeType": "YulAssignment",
															"src": "1601:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1634:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1645:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1630:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:5"
																		},
																		"nativeSrc": "1630:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1611:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:5"
																},
																"nativeSrc": "1611:38:5",
																"nodeType": "YulFunctionCall",
																"src": "1611:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1601:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:5"
																}
															]
														},
														{
															"nativeSrc": "1658:42:5",
															"nodeType": "YulAssignment",
															"src": "1658:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1685:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1696:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1681:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:5"
																		},
																		"nativeSrc": "1681:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1668:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:5"
																},
																"nativeSrc": "1668:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1668:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1658:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1378:328:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1432:9:5",
														"nodeType": "YulTypedName",
														"src": "1432:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1443:7:5",
														"nodeType": "YulTypedName",
														"src": "1443:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1455:6:5",
														"nodeType": "YulTypedName",
														"src": "1455:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1463:6:5",
														"nodeType": "YulTypedName",
														"src": "1463:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1471:6:5",
														"nodeType": "YulTypedName",
														"src": "1471:6:5",
														"type": ""
													}
												],
												"src": "1378:328:5"
											},
											{
												"body": {
													"nativeSrc": "1808:87:5",
													"nodeType": "YulBlock",
													"src": "1808:87:5",
													"statements": [
														{
															"nativeSrc": "1818:26:5",
															"nodeType": "YulAssignment",
															"src": "1818:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1830:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1841:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1826:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:5"
																},
																"nativeSrc": "1826:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1826:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1818:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1860:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1875:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1883:4:5",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1871:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:5"
																		},
																		"nativeSrc": "1871:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1853:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:5"
																},
																"nativeSrc": "1853:36:5",
																"nodeType": "YulFunctionCall",
																"src": "1853:36:5"
															},
															"nativeSrc": "1853:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1711:184:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1777:9:5",
														"nodeType": "YulTypedName",
														"src": "1777:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1788:6:5",
														"nodeType": "YulTypedName",
														"src": "1788:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1799:4:5",
														"nodeType": "YulTypedName",
														"src": "1799:4:5",
														"type": ""
													}
												],
												"src": "1711:184:5"
											},
											{
												"body": {
													"nativeSrc": "1970:110:5",
													"nodeType": "YulBlock",
													"src": "1970:110:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2016:16:5",
																"nodeType": "YulBlock",
																"src": "2016:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2025:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2028:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2018:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:5"
																			},
																			"nativeSrc": "2018:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:5"
																		},
																		"nativeSrc": "2018:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1991:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2000:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1987:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:5"
																		},
																		"nativeSrc": "1987:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2012:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1983:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:5"
																},
																"nativeSrc": "1983:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1983:32:5"
															},
															"nativeSrc": "1980:52:5",
															"nodeType": "YulIf",
															"src": "1980:52:5"
														},
														{
															"nativeSrc": "2041:33:5",
															"nodeType": "YulAssignment",
															"src": "2041:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2064:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2064:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2051:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2051:12:5"
																},
																"nativeSrc": "2051:23:5",
																"nodeType": "YulFunctionCall",
																"src": "2051:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2041:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1900:180:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1936:9:5",
														"nodeType": "YulTypedName",
														"src": "1936:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1947:7:5",
														"nodeType": "YulTypedName",
														"src": "1947:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1959:6:5",
														"nodeType": "YulTypedName",
														"src": "1959:6:5",
														"type": ""
													}
												],
												"src": "1900:180:5"
											},
											{
												"body": {
													"nativeSrc": "2155:116:5",
													"nodeType": "YulBlock",
													"src": "2155:116:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2201:16:5",
																"nodeType": "YulBlock",
																"src": "2201:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2210:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2210:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2213:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2213:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2203:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2203:6:5"
																			},
																			"nativeSrc": "2203:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2203:12:5"
																		},
																		"nativeSrc": "2203:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2203:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2176:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2176:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2185:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2185:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2172:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2172:3:5"
																		},
																		"nativeSrc": "2172:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2172:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2197:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2197:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2168:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2168:3:5"
																},
																"nativeSrc": "2168:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2168:32:5"
															},
															"nativeSrc": "2165:52:5",
															"nodeType": "YulIf",
															"src": "2165:52:5"
														},
														{
															"nativeSrc": "2226:39:5",
															"nodeType": "YulAssignment",
															"src": "2226:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2255:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2255:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2236:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2236:18:5"
																},
																"nativeSrc": "2236:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2236:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2226:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2226:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2085:186:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2121:9:5",
														"nodeType": "YulTypedName",
														"src": "2121:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2132:7:5",
														"nodeType": "YulTypedName",
														"src": "2132:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2144:6:5",
														"nodeType": "YulTypedName",
														"src": "2144:6:5",
														"type": ""
													}
												],
												"src": "2085:186:5"
											},
											{
												"body": {
													"nativeSrc": "2363:173:5",
													"nodeType": "YulBlock",
													"src": "2363:173:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2409:16:5",
																"nodeType": "YulBlock",
																"src": "2409:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2418:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2418:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2421:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2421:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2411:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2411:6:5"
																			},
																			"nativeSrc": "2411:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2411:12:5"
																		},
																		"nativeSrc": "2411:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2411:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2384:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2384:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2393:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2393:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2380:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2380:3:5"
																		},
																		"nativeSrc": "2380:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2380:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2405:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2405:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2376:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:5"
																},
																"nativeSrc": "2376:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2376:32:5"
															},
															"nativeSrc": "2373:52:5",
															"nodeType": "YulIf",
															"src": "2373:52:5"
														},
														{
															"nativeSrc": "2434:39:5",
															"nodeType": "YulAssignment",
															"src": "2434:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2463:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2463:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2444:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2444:18:5"
																},
																"nativeSrc": "2444:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2444:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2434:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2434:6:5"
																}
															]
														},
														{
															"nativeSrc": "2482:48:5",
															"nodeType": "YulAssignment",
															"src": "2482:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2515:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2515:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2526:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2526:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2511:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2511:3:5"
																		},
																		"nativeSrc": "2511:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2511:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2492:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2492:18:5"
																},
																"nativeSrc": "2492:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2492:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2482:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2482:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2276:260:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2321:9:5",
														"nodeType": "YulTypedName",
														"src": "2321:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2332:7:5",
														"nodeType": "YulTypedName",
														"src": "2332:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2344:6:5",
														"nodeType": "YulTypedName",
														"src": "2344:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2352:6:5",
														"nodeType": "YulTypedName",
														"src": "2352:6:5",
														"type": ""
													}
												],
												"src": "2276:260:5"
											},
											{
												"body": {
													"nativeSrc": "2596:325:5",
													"nodeType": "YulBlock",
													"src": "2596:325:5",
													"statements": [
														{
															"nativeSrc": "2606:22:5",
															"nodeType": "YulAssignment",
															"src": "2606:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2620:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2620:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2623:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2623:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2616:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2616:3:5"
																},
																"nativeSrc": "2616:12:5",
																"nodeType": "YulFunctionCall",
																"src": "2616:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2606:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2606:6:5"
																}
															]
														},
														{
															"nativeSrc": "2637:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2637:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2667:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2667:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2673:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2673:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2663:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2663:3:5"
																},
																"nativeSrc": "2663:12:5",
																"nodeType": "YulFunctionCall",
																"src": "2663:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2641:18:5",
																	"nodeType": "YulTypedName",
																	"src": "2641:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2714:31:5",
																"nodeType": "YulBlock",
																"src": "2714:31:5",
																"statements": [
																	{
																		"nativeSrc": "2716:27:5",
																		"nodeType": "YulAssignment",
																		"src": "2716:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2730:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "2730:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2738:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2738:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2726:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2726:3:5"
																			},
																			"nativeSrc": "2726:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2726:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2716:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2716:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2694:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "2694:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2687:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2687:6:5"
																},
																"nativeSrc": "2687:26:5",
																"nodeType": "YulFunctionCall",
																"src": "2687:26:5"
															},
															"nativeSrc": "2684:61:5",
															"nodeType": "YulIf",
															"src": "2684:61:5"
														},
														{
															"body": {
																"nativeSrc": "2804:111:5",
																"nodeType": "YulBlock",
																"src": "2804:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2825:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2825:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2832:3:5",
																							"nodeType": "YulLiteral",
																							"src": "2832:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2837:10:5",
																							"nodeType": "YulLiteral",
																							"src": "2837:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2828:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2828:3:5"
																					},
																					"nativeSrc": "2828:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2828:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2818:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2818:6:5"
																			},
																			"nativeSrc": "2818:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2818:31:5"
																		},
																		"nativeSrc": "2818:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2818:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2869:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2869:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2872:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2872:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2862:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2862:6:5"
																			},
																			"nativeSrc": "2862:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2862:15:5"
																		},
																		"nativeSrc": "2862:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2862:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2897:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2897:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2900:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2900:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2890:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2890:6:5"
																			},
																			"nativeSrc": "2890:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2890:15:5"
																		},
																		"nativeSrc": "2890:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2890:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2760:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "2760:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2783:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2783:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2791:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2791:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2780:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2780:2:5"
																		},
																		"nativeSrc": "2780:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2780:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2757:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2757:2:5"
																},
																"nativeSrc": "2757:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2757:38:5"
															},
															"nativeSrc": "2754:161:5",
															"nodeType": "YulIf",
															"src": "2754:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2541:380:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2576:4:5",
														"nodeType": "YulTypedName",
														"src": "2576:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2585:6:5",
														"nodeType": "YulTypedName",
														"src": "2585:6:5",
														"type": ""
													}
												],
												"src": "2541:380:5"
											},
											{
												"body": {
													"nativeSrc": "3100:226:5",
													"nodeType": "YulBlock",
													"src": "3100:226:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3117:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3117:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3128:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3128:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3110:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3110:6:5"
																},
																"nativeSrc": "3110:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3110:21:5"
															},
															"nativeSrc": "3110:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "3110:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3151:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3151:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3162:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3162:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3147:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3147:3:5"
																		},
																		"nativeSrc": "3147:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3147:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3167:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3167:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3140:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3140:6:5"
																},
																"nativeSrc": "3140:30:5",
																"nodeType": "YulFunctionCall",
																"src": "3140:30:5"
															},
															"nativeSrc": "3140:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "3140:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3190:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3190:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3201:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3201:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3186:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3186:3:5"
																		},
																		"nativeSrc": "3186:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3186:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "3206:34:5",
																		"nodeType": "YulLiteral",
																		"src": "3206:34:5",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3179:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3179:6:5"
																},
																"nativeSrc": "3179:62:5",
																"nodeType": "YulFunctionCall",
																"src": "3179:62:5"
															},
															"nativeSrc": "3179:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "3179:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3261:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3261:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3272:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3272:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3257:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3257:3:5"
																		},
																		"nativeSrc": "3257:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3257:18:5"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "3277:6:5",
																		"nodeType": "YulLiteral",
																		"src": "3277:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3250:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3250:6:5"
																},
																"nativeSrc": "3250:34:5",
																"nodeType": "YulFunctionCall",
																"src": "3250:34:5"
															},
															"nativeSrc": "3250:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "3250:34:5"
														},
														{
															"nativeSrc": "3293:27:5",
															"nodeType": "YulAssignment",
															"src": "3293:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3305:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3305:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3316:3:5",
																		"nodeType": "YulLiteral",
																		"src": "3316:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3301:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3301:3:5"
																},
																"nativeSrc": "3301:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3301:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3293:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3293:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2926:400:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3077:9:5",
														"nodeType": "YulTypedName",
														"src": "3077:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3091:4:5",
														"nodeType": "YulTypedName",
														"src": "3091:4:5",
														"type": ""
													}
												],
												"src": "2926:400:5"
											},
											{
												"body": {
													"nativeSrc": "3505:224:5",
													"nodeType": "YulBlock",
													"src": "3505:224:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3522:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3522:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3533:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3533:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3515:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3515:6:5"
																},
																"nativeSrc": "3515:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3515:21:5"
															},
															"nativeSrc": "3515:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "3515:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3556:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3556:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3567:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3567:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3552:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3552:3:5"
																		},
																		"nativeSrc": "3552:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3552:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3572:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3572:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3545:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3545:6:5"
																},
																"nativeSrc": "3545:30:5",
																"nodeType": "YulFunctionCall",
																"src": "3545:30:5"
															},
															"nativeSrc": "3545:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "3545:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3595:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3595:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3606:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3606:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3591:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3591:3:5"
																		},
																		"nativeSrc": "3591:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3591:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "3611:34:5",
																		"nodeType": "YulLiteral",
																		"src": "3611:34:5",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3584:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3584:6:5"
																},
																"nativeSrc": "3584:62:5",
																"nodeType": "YulFunctionCall",
																"src": "3584:62:5"
															},
															"nativeSrc": "3584:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "3584:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3666:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3666:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3677:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3677:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3662:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3662:3:5"
																		},
																		"nativeSrc": "3662:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3662:18:5"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "3682:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3682:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3655:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3655:6:5"
																},
																"nativeSrc": "3655:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3655:32:5"
															},
															"nativeSrc": "3655:32:5",
															"nodeType": "YulExpressionStatement",
															"src": "3655:32:5"
														},
														{
															"nativeSrc": "3696:27:5",
															"nodeType": "YulAssignment",
															"src": "3696:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3708:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3708:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3719:3:5",
																		"nodeType": "YulLiteral",
																		"src": "3719:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3704:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3704:3:5"
																},
																"nativeSrc": "3704:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3704:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3696:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3696:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3331:398:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3482:9:5",
														"nodeType": "YulTypedName",
														"src": "3482:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3496:4:5",
														"nodeType": "YulTypedName",
														"src": "3496:4:5",
														"type": ""
													}
												],
												"src": "3331:398:5"
											},
											{
												"body": {
													"nativeSrc": "3908:227:5",
													"nodeType": "YulBlock",
													"src": "3908:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3925:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3925:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3936:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3936:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3918:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3918:6:5"
																},
																"nativeSrc": "3918:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3918:21:5"
															},
															"nativeSrc": "3918:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "3918:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3959:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3959:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3970:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3970:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3955:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3955:3:5"
																		},
																		"nativeSrc": "3955:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3955:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3975:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3975:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3948:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3948:6:5"
																},
																"nativeSrc": "3948:30:5",
																"nodeType": "YulFunctionCall",
																"src": "3948:30:5"
															},
															"nativeSrc": "3948:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "3948:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3998:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3998:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4009:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4009:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3994:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3994:3:5"
																		},
																		"nativeSrc": "3994:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3994:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "4014:34:5",
																		"nodeType": "YulLiteral",
																		"src": "4014:34:5",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3987:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3987:6:5"
																},
																"nativeSrc": "3987:62:5",
																"nodeType": "YulFunctionCall",
																"src": "3987:62:5"
															},
															"nativeSrc": "3987:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "3987:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4069:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4069:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4080:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4080:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4065:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4065:3:5"
																		},
																		"nativeSrc": "4065:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4065:18:5"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "4085:7:5",
																		"nodeType": "YulLiteral",
																		"src": "4085:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4058:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4058:6:5"
																},
																"nativeSrc": "4058:35:5",
																"nodeType": "YulFunctionCall",
																"src": "4058:35:5"
															},
															"nativeSrc": "4058:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "4058:35:5"
														},
														{
															"nativeSrc": "4102:27:5",
															"nodeType": "YulAssignment",
															"src": "4102:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4114:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4114:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4125:3:5",
																		"nodeType": "YulLiteral",
																		"src": "4125:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4110:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4110:3:5"
																},
																"nativeSrc": "4110:19:5",
																"nodeType": "YulFunctionCall",
																"src": "4110:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4102:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4102:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3734:401:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3885:9:5",
														"nodeType": "YulTypedName",
														"src": "3885:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3899:4:5",
														"nodeType": "YulTypedName",
														"src": "3899:4:5",
														"type": ""
													}
												],
												"src": "3734:401:5"
											},
											{
												"body": {
													"nativeSrc": "4314:225:5",
													"nodeType": "YulBlock",
													"src": "4314:225:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4331:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4331:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4342:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4342:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4324:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4324:6:5"
																},
																"nativeSrc": "4324:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4324:21:5"
															},
															"nativeSrc": "4324:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "4324:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4365:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4365:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4376:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4376:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4361:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4361:3:5"
																		},
																		"nativeSrc": "4361:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4361:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4381:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4381:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4354:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:5"
																},
																"nativeSrc": "4354:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4354:30:5"
															},
															"nativeSrc": "4354:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "4354:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4404:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4404:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4415:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4415:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4400:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4400:3:5"
																		},
																		"nativeSrc": "4400:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4400:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "4420:34:5",
																		"nodeType": "YulLiteral",
																		"src": "4420:34:5",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4393:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4393:6:5"
																},
																"nativeSrc": "4393:62:5",
																"nodeType": "YulFunctionCall",
																"src": "4393:62:5"
															},
															"nativeSrc": "4393:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "4393:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4475:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4475:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4486:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4486:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4471:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4471:3:5"
																		},
																		"nativeSrc": "4471:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4471:18:5"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "4491:5:5",
																		"nodeType": "YulLiteral",
																		"src": "4491:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4464:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4464:6:5"
																},
																"nativeSrc": "4464:33:5",
																"nodeType": "YulFunctionCall",
																"src": "4464:33:5"
															},
															"nativeSrc": "4464:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "4464:33:5"
														},
														{
															"nativeSrc": "4506:27:5",
															"nodeType": "YulAssignment",
															"src": "4506:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4518:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4518:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4529:3:5",
																		"nodeType": "YulLiteral",
																		"src": "4529:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4514:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4514:3:5"
																},
																"nativeSrc": "4514:19:5",
																"nodeType": "YulFunctionCall",
																"src": "4514:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4506:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4506:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4140:399:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4291:9:5",
														"nodeType": "YulTypedName",
														"src": "4291:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4305:4:5",
														"nodeType": "YulTypedName",
														"src": "4305:4:5",
														"type": ""
													}
												],
												"src": "4140:399:5"
											},
											{
												"body": {
													"nativeSrc": "4576:95:5",
													"nodeType": "YulBlock",
													"src": "4576:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4593:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4593:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4600:3:5",
																				"nodeType": "YulLiteral",
																				"src": "4600:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4605:10:5",
																				"nodeType": "YulLiteral",
																				"src": "4605:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4596:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4596:3:5"
																		},
																		"nativeSrc": "4596:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4596:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4586:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:5"
																},
																"nativeSrc": "4586:31:5",
																"nodeType": "YulFunctionCall",
																"src": "4586:31:5"
															},
															"nativeSrc": "4586:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "4586:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4633:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4633:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4636:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4636:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4626:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4626:6:5"
																},
																"nativeSrc": "4626:15:5",
																"nodeType": "YulFunctionCall",
																"src": "4626:15:5"
															},
															"nativeSrc": "4626:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "4626:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4657:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4657:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4660:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4660:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4650:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4650:6:5"
																},
																"nativeSrc": "4650:15:5",
																"nodeType": "YulFunctionCall",
																"src": "4650:15:5"
															},
															"nativeSrc": "4650:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "4650:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4544:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "4544:127:5"
											},
											{
												"body": {
													"nativeSrc": "4725:79:5",
													"nodeType": "YulBlock",
													"src": "4725:79:5",
													"statements": [
														{
															"nativeSrc": "4735:17:5",
															"nodeType": "YulAssignment",
															"src": "4735:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4747:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4747:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4750:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4750:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4743:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4743:3:5"
																},
																"nativeSrc": "4743:9:5",
																"nodeType": "YulFunctionCall",
																"src": "4743:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "4735:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4735:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4776:22:5",
																"nodeType": "YulBlock",
																"src": "4776:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4778:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "4778:16:5"
																			},
																			"nativeSrc": "4778:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4778:18:5"
																		},
																		"nativeSrc": "4778:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4778:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "4767:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "4767:4:5"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "4773:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4773:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4764:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4764:2:5"
																},
																"nativeSrc": "4764:11:5",
																"nodeType": "YulFunctionCall",
																"src": "4764:11:5"
															},
															"nativeSrc": "4761:37:5",
															"nodeType": "YulIf",
															"src": "4761:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "4676:128:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4707:1:5",
														"nodeType": "YulTypedName",
														"src": "4707:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4710:1:5",
														"nodeType": "YulTypedName",
														"src": "4710:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "4716:4:5",
														"nodeType": "YulTypedName",
														"src": "4716:4:5",
														"type": ""
													}
												],
												"src": "4676:128:5"
											},
											{
												"body": {
													"nativeSrc": "4857:77:5",
													"nodeType": "YulBlock",
													"src": "4857:77:5",
													"statements": [
														{
															"nativeSrc": "4867:16:5",
															"nodeType": "YulAssignment",
															"src": "4867:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4878:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4878:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4881:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4881:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4874:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4874:3:5"
																},
																"nativeSrc": "4874:9:5",
																"nodeType": "YulFunctionCall",
																"src": "4874:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4867:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4867:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4906:22:5",
																"nodeType": "YulBlock",
																"src": "4906:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4908:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "4908:16:5"
																			},
																			"nativeSrc": "4908:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4908:18:5"
																		},
																		"nativeSrc": "4908:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4908:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4898:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4898:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4901:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4901:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4895:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4895:2:5"
																},
																"nativeSrc": "4895:10:5",
																"nodeType": "YulFunctionCall",
																"src": "4895:10:5"
															},
															"nativeSrc": "4892:36:5",
															"nodeType": "YulIf",
															"src": "4892:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4809:125:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4840:1:5",
														"nodeType": "YulTypedName",
														"src": "4840:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4843:1:5",
														"nodeType": "YulTypedName",
														"src": "4843:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4849:3:5",
														"nodeType": "YulTypedName",
														"src": "4849:3:5",
														"type": ""
													}
												],
												"src": "4809:125:5"
											},
											{
												"body": {
													"nativeSrc": "5113:177:5",
													"nodeType": "YulBlock",
													"src": "5113:177:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5130:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5130:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5141:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5141:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5123:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5123:6:5"
																},
																"nativeSrc": "5123:21:5",
																"nodeType": "YulFunctionCall",
																"src": "5123:21:5"
															},
															"nativeSrc": "5123:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "5123:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5164:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5164:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5175:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5175:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5160:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5160:3:5"
																		},
																		"nativeSrc": "5160:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5160:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5180:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5180:2:5",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5153:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5153:6:5"
																},
																"nativeSrc": "5153:30:5",
																"nodeType": "YulFunctionCall",
																"src": "5153:30:5"
															},
															"nativeSrc": "5153:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "5153:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5203:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5203:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5214:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5214:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5199:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5199:3:5"
																		},
																		"nativeSrc": "5199:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5199:18:5"
																	},
																	{
																		"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
																		"kind": "string",
																		"nativeSrc": "5219:29:5",
																		"nodeType": "YulLiteral",
																		"src": "5219:29:5",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5192:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5192:6:5"
																},
																"nativeSrc": "5192:57:5",
																"nodeType": "YulFunctionCall",
																"src": "5192:57:5"
															},
															"nativeSrc": "5192:57:5",
															"nodeType": "YulExpressionStatement",
															"src": "5192:57:5"
														},
														{
															"nativeSrc": "5258:26:5",
															"nodeType": "YulAssignment",
															"src": "5258:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5270:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5270:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5281:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5281:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5266:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5266:3:5"
																},
																"nativeSrc": "5266:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5266:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5258:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5258:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4939:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5090:9:5",
														"nodeType": "YulTypedName",
														"src": "5090:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5104:4:5",
														"nodeType": "YulTypedName",
														"src": "5104:4:5",
														"type": ""
													}
												],
												"src": "4939:351:5"
											},
											{
												"body": {
													"nativeSrc": "5469:223:5",
													"nodeType": "YulBlock",
													"src": "5469:223:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5486:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5486:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5497:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5497:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5479:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5479:6:5"
																},
																"nativeSrc": "5479:21:5",
																"nodeType": "YulFunctionCall",
																"src": "5479:21:5"
															},
															"nativeSrc": "5479:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "5479:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5520:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5520:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5531:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5531:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5516:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5516:3:5"
																		},
																		"nativeSrc": "5516:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5516:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5536:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5536:2:5",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5509:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5509:6:5"
																},
																"nativeSrc": "5509:30:5",
																"nodeType": "YulFunctionCall",
																"src": "5509:30:5"
															},
															"nativeSrc": "5509:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "5509:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5559:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5559:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5570:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5570:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5555:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5555:3:5"
																		},
																		"nativeSrc": "5555:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:18:5"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nativeSrc": "5575:34:5",
																		"nodeType": "YulLiteral",
																		"src": "5575:34:5",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5548:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5548:6:5"
																},
																"nativeSrc": "5548:62:5",
																"nodeType": "YulFunctionCall",
																"src": "5548:62:5"
															},
															"nativeSrc": "5548:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "5548:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5630:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5630:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5641:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5641:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5626:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5626:3:5"
																		},
																		"nativeSrc": "5626:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5626:18:5"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nativeSrc": "5646:3:5",
																		"nodeType": "YulLiteral",
																		"src": "5646:3:5",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5619:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5619:6:5"
																},
																"nativeSrc": "5619:31:5",
																"nodeType": "YulFunctionCall",
																"src": "5619:31:5"
															},
															"nativeSrc": "5619:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "5619:31:5"
														},
														{
															"nativeSrc": "5659:27:5",
															"nodeType": "YulAssignment",
															"src": "5659:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5671:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5671:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5682:3:5",
																		"nodeType": "YulLiteral",
																		"src": "5682:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5667:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5667:3:5"
																},
																"nativeSrc": "5667:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5667:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5659:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5659:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5295:397:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5446:9:5",
														"nodeType": "YulTypedName",
														"src": "5446:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5460:4:5",
														"nodeType": "YulTypedName",
														"src": "5460:4:5",
														"type": ""
													}
												],
												"src": "5295:397:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SafeMath: addition overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100cb575f3560e01c806342966c681161008857806395d89b411161006357806395d89b41146101ad578063a457c2d7146101b5578063a9059cbb146101c8578063dd62ed3e146101db575f80fd5b806342966c681461015d57806370a082311461017257806379cc67901461019a575f80fd5b806306fdde03146100cf578063095ea7b3146100ed57806318160ddd1461011057806323b872dd14610122578063313ce56714610135578063395093511461014a575b5f80fd5b6100d7610213565b6040516100e491906108a4565b60405180910390f35b6101006100fb36600461090a565b6102a3565b60405190151581526020016100e4565b6002545b6040519081526020016100e4565b610100610130366004610932565b6102b9565b60055460405160ff90911681526020016100e4565b61010061015836600461090a565b610320565b61017061016b36600461096b565b610355565b005b610114610180366004610982565b6001600160a01b03165f9081526020819052604090205490565b6101706101a836600461090a565b610362565b6100d76103ad565b6101006101c336600461090a565b6103bc565b6101006101d636600461090a565b610409565b6101146101e936600461099b565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b606060038054610222906109cc565b80601f016020809104026020016040519081016040528092919081815260200182805461024e906109cc565b80156102995780601f1061027057610100808354040283529160200191610299565b820191905f5260205f20905b81548152906001019060200180831161027c57829003601f168201915b5050505050905090565b5f6102af338484610415565b5060015b92915050565b5f6102c584848461053e565b610316843361031185604051806060016040528060288152602001610a87602891396001600160a01b038a165f90815260016020908152604080832033845290915290205491906106be565b610415565b5060019392505050565b335f8181526001602090815260408083206001600160a01b038716845290915281205490916102af91859061031190866106f6565b61035f338261075b565b50565b5f61039182604051806060016040528060248152602001610aaf6024913961038a86336101e9565b91906106be565b905061039e833383610415565b6103a8838361075b565b505050565b606060048054610222906109cc565b5f6102af338461031185604051806060016040528060258152602001610ad360259139335f9081526001602090815260408083206001600160a01b038d16845290915290205491906106be565b5f6102af33848461053e565b6001600160a01b03831661047c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084015b60405180910390fd5b6001600160a01b0382166104dd5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610473565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166105a25760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610473565b6001600160a01b0382166106045760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610473565b61064081604051806060016040528060268152602001610a61602691396001600160a01b0386165f9081526020819052604090205491906106be565b6001600160a01b038085165f90815260208190526040808220939093559084168152205461066e90826106f6565b6001600160a01b038381165f818152602081815260409182902094909455518481529092918616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610531565b5f81848411156106e15760405162461bcd60e51b815260040161047391906108a4565b505f6106ed8486610a18565b95945050505050565b5f806107028385610a2b565b9050838110156107545760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610473565b9392505050565b6001600160a01b0382166107bb5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610473565b6107f781604051806060016040528060228152602001610a3f602291396001600160a01b0385165f9081526020819052604090205491906106be565b6001600160a01b0383165f9081526020819052604090205560025461081c9082610863565b6002556040518181525f906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b5f61075483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506106be565b5f6020808352835180828501525f5b818110156108cf578581018301518582016040015282016108b3565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610905575f80fd5b919050565b5f806040838503121561091b575f80fd5b610924836108ef565b946020939093013593505050565b5f805f60608486031215610944575f80fd5b61094d846108ef565b925061095b602085016108ef565b9150604084013590509250925092565b5f6020828403121561097b575f80fd5b5035919050565b5f60208284031215610992575f80fd5b610754826108ef565b5f80604083850312156109ac575f80fd5b6109b5836108ef565b91506109c3602084016108ef565b90509250929050565b600181811c908216806109e057607f821691505b6020821081036109fe57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156102b3576102b3610a04565b808201808211156102b3576102b3610a0456fe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122014e71421f32813e6397d990f3bb197397a40426f22d1893c7b955031001c115a64736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1DB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x19A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD7 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0x90A JUMP JUMPDEST PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x100 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0x932 JUMP JUMPDEST PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x100 PUSH2 0x158 CALLDATASIZE PUSH1 0x4 PUSH2 0x90A JUMP JUMPDEST PUSH2 0x320 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0x96B JUMP JUMPDEST PUSH2 0x355 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x114 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x90A JUMP JUMPDEST PUSH2 0x362 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x3AD JUMP JUMPDEST PUSH2 0x100 PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x90A JUMP JUMPDEST PUSH2 0x3BC JUMP JUMPDEST PUSH2 0x100 PUSH2 0x1D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x90A JUMP JUMPDEST PUSH2 0x409 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x99B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x222 SWAP1 PUSH2 0x9CC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x24E SWAP1 PUSH2 0x9CC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x299 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x270 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x299 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x27C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x2AF CALLER DUP5 DUP5 PUSH2 0x415 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2C5 DUP5 DUP5 DUP5 PUSH2 0x53E JUMP JUMPDEST PUSH2 0x316 DUP5 CALLER PUSH2 0x311 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA87 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x6BE JUMP JUMPDEST PUSH2 0x415 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x2AF SWAP2 DUP6 SWAP1 PUSH2 0x311 SWAP1 DUP7 PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0x35F CALLER DUP3 PUSH2 0x75B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x391 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAAF PUSH1 0x24 SWAP2 CODECOPY PUSH2 0x38A DUP7 CALLER PUSH2 0x1E9 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x6BE JUMP JUMPDEST SWAP1 POP PUSH2 0x39E DUP4 CALLER DUP4 PUSH2 0x415 JUMP JUMPDEST PUSH2 0x3A8 DUP4 DUP4 PUSH2 0x75B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x222 SWAP1 PUSH2 0x9CC JUMP JUMPDEST PUSH0 PUSH2 0x2AF CALLER DUP5 PUSH2 0x311 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD3 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x6BE JUMP JUMPDEST PUSH0 PUSH2 0x2AF CALLER DUP5 DUP5 PUSH2 0x53E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x47C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x473 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x473 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x604 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x473 JUMP JUMPDEST PUSH2 0x640 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA61 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x66E SWAP1 DUP3 PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x531 JUMP JUMPDEST PUSH0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x6E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x473 SWAP2 SWAP1 PUSH2 0x8A4 JUMP JUMPDEST POP PUSH0 PUSH2 0x6ED DUP5 DUP7 PUSH2 0xA18 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x702 DUP4 DUP6 PUSH2 0xA2B JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x754 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x473 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x473 JUMP JUMPDEST PUSH2 0x7F7 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA3F PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x81C SWAP1 DUP3 PUSH2 0x863 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x754 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x6BE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8CF JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x8B3 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x905 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x91B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x924 DUP4 PUSH2 0x8EF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x944 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x94D DUP5 PUSH2 0x8EF JUMP JUMPDEST SWAP3 POP PUSH2 0x95B PUSH1 0x20 DUP6 ADD PUSH2 0x8EF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x97B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x992 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x754 DUP3 PUSH2 0x8EF JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9AC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9B5 DUP4 PUSH2 0x8EF JUMP JUMPDEST SWAP2 POP PUSH2 0x9C3 PUSH1 0x20 DUP5 ADD PUSH2 0x8EF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x9E0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x9FE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2B3 JUMPI PUSH2 0x2B3 PUSH2 0xA04 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2B3 JUMPI PUSH2 0x2B3 PUSH2 0xA04 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636545524332303A207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654552 NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x735822122014E7 EQ 0x21 RETURN 0x28 SGT 0xE6 CODECOPY PUSH30 0x990F3BB197397A40426F22D1893C7B955031001C115A64736F6C63430008 ISZERO STOP CALLER ",
							"sourceMap": "1333:10238:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2188:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4264:166;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:5;;1162:22;1144:41;;1132:2;1117:18;4264:166:1;1004:187:5;3231:98:1;3310:12;;3231:98;;;1342:25:5;;;1330:2;1315:18;3231:98:1;1196:177:5;4888:317:1;;;;;;:::i;:::-;;:::i;3090:81::-;3155:9;;3090:81;;3155:9;;;;1853:36:5;;1841:2;1826:18;3090:81:1;1711:184:5;5600:215:1;;;;;;:::i;:::-;;:::i;8321:89::-;;;;;;:::i;:::-;;:::i;:::-;;3387:117;;;;;;:::i;:::-;-1:-1:-1;;;;;3479:18:1;3453:7;3479:18;;;;;;;;;;;;3387:117;8714:290;;;;;;:::i;:::-;;:::i;2382:85::-;;;:::i;6302:266::-;;;;;;:::i;:::-;;:::i;3707:172::-;;;;;;:::i;:::-;;:::i;3937:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4052:18:1;;;4026:7;4052:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3937:149;2188:81;2225:13;2257:5;2250:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2188:81;:::o;4264:166::-;4347:4;4363:39;686:10:0;4386:7:1;4395:6;4363:8;:39::i;:::-;-1:-1:-1;4419:4:1;4264:166;;;;;:::o;4888:317::-;4994:4;5010:36;5020:6;5028:9;5039:6;5010:9;:36::i;:::-;5056:121;5065:6;686:10:0;5087:89:1;5125:6;5087:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5087:19:1;;;;;;:11;:19;;;;;;;;686:10:0;5087:33:1;;;;;;;;;;:37;:89::i;:::-;5056:8;:121::i;:::-;-1:-1:-1;5194:4:1;4888:317;;;;;:::o;5600:215::-;686:10:0;5688:4:1;5736:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5736:34:1;;;;;;;;;;5688:4;;5704:83;;5727:7;;5736:50;;5775:10;5736:38;:50::i;8321:89::-;8376:27;686:10:0;8396:6:1;8376:5;:27::i;:::-;8321:89;:::o;8714:290::-;8790:26;8819:84;8856:6;8819:84;;;;;;;;;;;;;;;;;:32;8829:7;686:10:0;3937:149:1;:::i;8819:32::-;:36;:84;:36;:84::i;:::-;8790:113;-1:-1:-1;8914:51:1;8923:7;686:10:0;8946:18:1;8914:8;:51::i;:::-;8975:22;8981:7;8990:6;8975:5;:22::i;:::-;8780:224;8714:290;;:::o;2382:85::-;2421:13;2453:7;2446:14;;;;;:::i;6302:266::-;6395:4;6411:129;686:10:0;6434:7:1;6443:96;6482:15;6443:96;;;;;;;;;;;;;;;;;686:10:0;6443:25:1;;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6443:34:1;;;;;;;;;;;;:38;:96::i;3707:172::-;3793:4;3809:42;686:10:0;3833:9:1;3844:6;3809:9;:42::i;10159:340::-;-1:-1:-1;;;;;10260:19:1;;10252:68;;;;-1:-1:-1;;;10252:68:1;;3128:2:5;10252:68:1;;;3110:21:5;3167:2;3147:18;;;3140:30;3206:34;3186:18;;;3179:62;-1:-1:-1;;;3257:18:5;;;3250:34;3301:19;;10252:68:1;;;;;;;;;-1:-1:-1;;;;;10338:21:1;;10330:68;;;;-1:-1:-1;;;10330:68:1;;3533:2:5;10330:68:1;;;3515:21:5;3572:2;3552:18;;;3545:30;3611:34;3591:18;;;3584:62;-1:-1:-1;;;3662:18:5;;;3655:32;3704:19;;10330:68:1;3331:398:5;10330:68:1;-1:-1:-1;;;;;10409:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10460:32;;1342:25:5;;;10460:32:1;;1315:18:5;10460:32:1;;;;;;;;10159:340;;;:::o;7042:530::-;-1:-1:-1;;;;;7147:20:1;;7139:70;;;;-1:-1:-1;;;7139:70:1;;3936:2:5;7139:70:1;;;3918:21:5;3975:2;3955:18;;;3948:30;4014:34;3994:18;;;3987:62;-1:-1:-1;;;4065:18:5;;;4058:35;4110:19;;7139:70:1;3734:401:5;7139:70:1;-1:-1:-1;;;;;7227:23:1;;7219:71;;;;-1:-1:-1;;;7219:71:1;;4342:2:5;7219:71:1;;;4324:21:5;4381:2;4361:18;;;4354:30;4420:34;4400:18;;;4393:62;-1:-1:-1;;;4471:18:5;;;4464:33;4514:19;;7219:71:1;4140:399:5;7219:71:1;7379;7401:6;7379:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7379:17:1;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7359:17:1;;;:9;:17;;;;;;;;;;;:91;;;;7483:20;;;;;;;:32;;7508:6;7483:24;:32::i;:::-;-1:-1:-1;;;;;7460:20:1;;;:9;:20;;;;;;;;;;;;:55;;;;7530:35;1342:25:5;;;7460:20:1;;7530:35;;;;;;1315:18:5;7530:35:1;1196:177:5;1766:187:3;1852:7;1887:12;1879:6;;;;1871:29;;;;-1:-1:-1;;;1871:29:3;;;;;;;;:::i;:::-;-1:-1:-1;1910:9:3;1922:5;1926:1;1922;:5;:::i;:::-;1910:17;1766:187;-1:-1:-1;;;;;1766:187:3:o;868:176::-;926:7;;957:5;961:1;957;:5;:::i;:::-;945:17;;985:1;980;:6;;972:46;;;;-1:-1:-1;;;972:46:3;;5141:2:5;972:46:3;;;5123:21:5;5180:2;5160:18;;;5153:30;5219:29;5199:18;;;5192:57;5266:18;;972:46:3;4939:351:5;972:46:3;1036:1;868:176;-1:-1:-1;;;868:176:3:o;9324:410:1:-;-1:-1:-1;;;;;9407:21:1;;9399:67;;;;-1:-1:-1;;;9399:67:1;;5497:2:5;9399:67:1;;;5479:21:5;5536:2;5516:18;;;5509:30;5575:34;5555:18;;;5548:62;-1:-1:-1;;;5626:18:5;;;5619:31;5667:19;;9399:67:1;5295:397:5;9399:67:1;9558:68;9581:6;9558:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9558:18:1;;:9;:18;;;;;;;;;;;;:68;:22;:68::i;:::-;-1:-1:-1;;;;;9537:18:1;;:9;:18;;;;;;;;;;:89;9651:12;;:24;;9668:6;9651:16;:24::i;:::-;9636:12;:39;9690:37;;1342:25:5;;;9716:1:1;;-1:-1:-1;;;;;9690:37:1;;;;;1330:2:5;1315:18;9690:37:1;;;;;;;9324:410;;:::o;1308:134:3:-;1366:7;1392:43;1396:1;1399;1392:43;;;;;;;;;;;;;;;;;:3;:43::i;14:548:5:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:5;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:5:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:180::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;-1:-1:-1;2051:23:5;;1900:180;-1:-1:-1;1900:180:5:o;2085:186::-;2144:6;2197:2;2185:9;2176:7;2172:23;2168:32;2165:52;;;2213:1;2210;2203:12;2165:52;2236:29;2255:9;2236:29;:::i;2276:260::-;2344:6;2352;2405:2;2393:9;2384:7;2380:23;2376:32;2373:52;;;2421:1;2418;2411:12;2373:52;2444:29;2463:9;2444:29;:::i;:::-;2434:39;;2492:38;2526:2;2515:9;2511:18;2492:38;:::i;:::-;2482:48;;2276:260;;;;;:::o;2541:380::-;2620:1;2616:12;;;;2663;;;2684:61;;2738:4;2730:6;2726:17;2716:27;;2684:61;2791:2;2783:6;2780:14;2760:18;2757:38;2754:161;;2837:10;2832:3;2828:20;2825:1;2818:31;2872:4;2869:1;2862:15;2900:4;2897:1;2890:15;2754:161;;2541:380;;;:::o;4544:127::-;4605:10;4600:3;4596:20;4593:1;4586:31;4636:4;4633:1;4626:15;4660:4;4657:1;4650:15;4676:128;4743:9;;;4764:11;;;4761:37;;;4778:18;;:::i;4809:125::-;4874:9;;;4895:10;;;4892:36;;;4908:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "572200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24617",
								"balanceOf(address)": "2582",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "2377",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1333,
									"end": 11571,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1333,
									"end": 11571,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1333,
									"end": 11571,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1974,
									"end": 2123,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1974,
									"end": 2123,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1974,
									"end": 2123,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1974,
									"end": 2123,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1974,
									"end": 2123,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1974,
									"end": 2123,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1974,
									"end": 2123,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1974,
									"end": 2123,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1974,
									"end": 2123,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1974,
									"end": 2123,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1974,
									"end": 2123,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1974,
									"end": 2123,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1974,
									"end": 2123,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1974,
									"end": 2123,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1974,
									"end": 2123,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1974,
									"end": 2123,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1974,
									"end": 2123,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1974,
									"end": 2123,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1974,
									"end": 2123,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1974,
									"end": 2123,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1974,
									"end": 2123,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1974,
									"end": 2123,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1974,
									"end": 2123,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1974,
									"end": 2123,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1974,
									"end": 2123,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1974,
									"end": 2123,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1974,
									"end": 2123,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1974,
									"end": 2123,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1974,
									"end": 2123,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1974,
									"end": 2123,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1974,
									"end": 2123,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1974,
									"end": 2123,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2050,
									"end": 2055,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2050,
									"end": 2064,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2058,
									"end": 2064,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2050,
									"end": 2055,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2050,
									"end": 2064,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2050,
									"end": 2064,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2050,
									"end": 2064,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2050,
									"end": 2064,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2074,
									"end": 2081,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2074,
									"end": 2092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2084,
									"end": 2092,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2074,
									"end": 2081,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2074,
									"end": 2092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2074,
									"end": 2092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2074,
									"end": 2092,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2074,
									"end": 2092,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2102,
									"end": 2111,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2102,
									"end": 2116,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2102,
									"end": 2116,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2102,
									"end": 2116,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2114,
									"end": 2116,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2102,
									"end": 2116,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2102,
									"end": 2116,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2102,
									"end": 2116,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1333,
									"end": 11571,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1333,
									"end": 11571,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 5,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1090,
									"end": 1096,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1104,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1148,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1126,
									"end": 1149,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1122,
									"end": 1154,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1157,
									"end": 1169,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1276,
									"end": 1288,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1309,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1416,
									"end": 1418,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1405,
									"end": 1414,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1401,
									"end": 1419,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1395,
									"end": 1420,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1435,
									"end": 1443,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1432,
									"end": 1448,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1528,
									"end": 1536,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1517,
									"end": 1526,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1513,
									"end": 1537,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1484,
									"end": 1547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 991,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1637,
									"end": 1638,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1755,
									"end": 1759,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1743,
									"end": 1760,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1806,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1797,
									"end": 1811,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1777,
									"end": 1795,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1774,
									"end": 1812,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1864,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 1849,
									"end": 1852,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 1845,
									"end": 1865,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1866,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1886,
									"end": 1887,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1894,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1917,
									"end": 1921,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1914,
									"end": 1915,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1922,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1558,
									"end": 1938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2171,
									"end": 2173,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2163,
									"end": 2174,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2207,
									"end": 2208,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2232,
									"end": 2237,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2228,
									"end": 2230,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2221,
									"end": 2238,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2263,
									"end": 2282,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 2347,
									"end": 2349,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2335,
									"end": 2345,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2331,
									"end": 2350,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2328,
									"end": 2329,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2324,
									"end": 2351,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2314,
									"end": 2352,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2383,
									"end": 2387,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2371,
									"end": 2381,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 2368,
									"end": 2388,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2461,
									"end": 2463,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2456,
									"end": 2459,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2445,
									"end": 2465,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2439,
									"end": 2443,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2435,
									"end": 2466,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2534,
									"end": 2536,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2527,
									"end": 2532,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2524,
									"end": 2537,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2560,
									"end": 2561,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2549,
									"end": 2562,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2069,
									"end": 2614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 2965,
									"end": 2983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "tag",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 3084,
									"end": 3090,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 3076,
									"end": 3080,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3070,
									"end": 3081,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 3044,
									"end": 3082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "tag",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 2994,
									"end": 3091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "tag",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3227,
									"end": 3228,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3929,
									"end": 3930,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3946,
									"end": 3952,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3992,
									"end": 4018,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "tag",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2747,
									"end": 2748,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2739,
									"end": 2763,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2735,
									"end": 2764,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2725,
									"end": 2765,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2771,
									"end": 2772,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2722,
									"end": 2779,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "tag",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2016,
									"end": 2017,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2057,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3390,
									"end": 3397,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3387,
									"end": 3388,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3384,
									"end": 3398,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3473,
									"end": 3499,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 3539,
									"end": 3540,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3380,
									"end": 3383,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3640,
									"end": 3646,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3631,
									"end": 3638,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3628,
									"end": 3647,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3695,
									"end": 3721,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3784,
									"end": 3785,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3796,
									"end": 3799,
									"name": "PUSH",
									"source": 5,
									"value": "F8"
								},
								{
									"begin": 3776,
									"end": 3800,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3772,
									"end": 3809,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 3768,
									"end": 3810,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 3753,
									"end": 3811,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "tag",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3872,
									"end": 3873,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3852,
									"end": 3874,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2790,
									"end": 4142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 11571,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1333,
									"end": 11571,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1333,
									"end": 11571,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1333,
									"end": 11571,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1333,
									"end": 11571,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1333,
									"end": 11571,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1333,
									"end": 11571,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122014e71421f32813e6397d990f3bb197397a40426f22d1893c7b955031001c115a64736f6c63430008150033",
									".code": [
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH",
											"source": 1,
											"value": "42966C68"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH",
											"source": 1,
											"value": "42966C68"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH",
											"source": 1,
											"value": "79CC6790"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 11571,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2269,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2188,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2188,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2188,
											"end": 2269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2269,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2188,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2269,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2188,
											"end": 2269,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2188,
											"end": 2269,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2269,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2188,
											"end": 2269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2269,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2188,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2269,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2188,
											"end": 2269,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2269,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2269,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2269,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2269,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2269,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4430,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4264,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4264,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4264,
											"end": 4430,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4430,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4264,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4264,
											"end": 4430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4430,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4264,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4264,
											"end": 4430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4430,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4264,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4430,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4264,
											"end": 4430,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4264,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3329,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3231,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3310,
											"end": 3322,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3310,
											"end": 3322,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3329,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3231,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3329,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3231,
											"end": 3329,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4888,
											"end": 5205,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4888,
											"end": 5205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4888,
											"end": 5205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4888,
											"end": 5205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4888,
											"end": 5205,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4888,
											"end": 5205,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4888,
											"end": 5205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4888,
											"end": 5205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4888,
											"end": 5205,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4888,
											"end": 5205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4888,
											"end": 5205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4888,
											"end": 5205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3090,
											"end": 3171,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3090,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3164,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3155,
											"end": 3164,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3090,
											"end": 3171,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3090,
											"end": 3171,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3164,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3155,
											"end": 3164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3164,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3090,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5600,
											"end": 5815,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5600,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5600,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 5600,
											"end": 5815,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5600,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5600,
											"end": 5815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5815,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 5600,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5600,
											"end": 5815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8321,
											"end": 8410,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 8321,
											"end": 8410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8321,
											"end": 8410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 8321,
											"end": 8410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 8321,
											"end": 8410,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 8321,
											"end": 8410,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8321,
											"end": 8410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 8321,
											"end": 8410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8321,
											"end": 8410,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 8321,
											"end": 8410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8321,
											"end": 8410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 8321,
											"end": 8410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8321,
											"end": 8410,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 8321,
											"end": 8410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8321,
											"end": 8410,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3504,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3387,
											"end": 3504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3387,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3387,
											"end": 3504,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3504,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3387,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3387,
											"end": 3504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3504,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3387,
											"end": 3504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3479,
											"end": 3497,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3453,
											"end": 3460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3479,
											"end": 3497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3497,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3497,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3497,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3479,
											"end": 3497,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3497,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3497,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3479,
											"end": 3497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3497,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3497,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3504,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8714,
											"end": 9004,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 8714,
											"end": 9004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8714,
											"end": 9004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 8714,
											"end": 9004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 8714,
											"end": 9004,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 8714,
											"end": 9004,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8714,
											"end": 9004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8714,
											"end": 9004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8714,
											"end": 9004,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 8714,
											"end": 9004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8714,
											"end": 9004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 8714,
											"end": 9004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2382,
											"end": 2467,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2382,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2382,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2382,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2382,
											"end": 2467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6302,
											"end": 6568,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 6302,
											"end": 6568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6302,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 6302,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6302,
											"end": 6568,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6302,
											"end": 6568,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6302,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6302,
											"end": 6568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6302,
											"end": 6568,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6302,
											"end": 6568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6302,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 6302,
											"end": 6568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3707,
											"end": 3879,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3707,
											"end": 3879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3707,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3707,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3707,
											"end": 3879,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3707,
											"end": 3879,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3707,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3707,
											"end": 3879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3707,
											"end": 3879,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3707,
											"end": 3879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3707,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3707,
											"end": 3879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3937,
											"end": 4086,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3937,
											"end": 4086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3937,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3937,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3937,
											"end": 4086,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3937,
											"end": 4086,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3937,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3937,
											"end": 4086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3937,
											"end": 4086,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3937,
											"end": 4086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4063,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4079,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4079,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4079,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4079,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4079,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4079,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4079,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4079,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4079,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4079,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4079,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4079,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4079,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3937,
											"end": 4086,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2269,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2188,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2238,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2257,
											"end": 2262,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2250,
											"end": 2262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2250,
											"end": 2262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2269,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4430,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4264,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4351,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4363,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 686,
											"end": 696,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4393,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4401,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4363,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4363,
											"end": 4402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4363,
											"end": 4402,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4363,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4419,
											"end": 4423,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4264,
											"end": 4430,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4264,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4430,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4430,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4888,
											"end": 5205,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4888,
											"end": 5205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4994,
											"end": 4998,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5010,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 5020,
											"end": 5026,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5037,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5045,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5010,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 5010,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5010,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 5010,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5056,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 5065,
											"end": 5071,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 686,
											"end": 696,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5087,
											"end": 5176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5125,
											"end": 5131,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5176,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5087,
											"end": 5176,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5176,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5176,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5087,
											"end": 5176,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5176,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5087,
											"end": 5176,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5176,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5176,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 5087,
											"end": 5176,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5176,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5176,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5087,
											"end": 5176,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5176,
											"name": "PUSH data",
											"source": 1,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 5087,
											"end": 5176,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 5087,
											"end": 5176,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5176,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5087,
											"end": 5106,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5106,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5106,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5087,
											"end": 5106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5106,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5106,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5098,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5087,
											"end": 5106,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5087,
											"end": 5106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5106,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5106,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5106,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5087,
											"end": 5106,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5106,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5106,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 686,
											"end": 696,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5087,
											"end": 5120,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5120,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5120,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 5087,
											"end": 5176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5176,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5087,
											"end": 5176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5056,
											"end": 5064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5056,
											"end": 5177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5056,
											"end": 5177,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 5056,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5194,
											"end": 5198,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4888,
											"end": 5205,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4888,
											"end": 5205,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4888,
											"end": 5205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4888,
											"end": 5205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4888,
											"end": 5205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4888,
											"end": 5205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5815,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5600,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 686,
											"end": 696,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5688,
											"end": 5692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5736,
											"end": 5761,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5761,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5761,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5747,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5736,
											"end": 5761,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5736,
											"end": 5761,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5761,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5761,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5761,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5736,
											"end": 5761,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5761,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5761,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5736,
											"end": 5770,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5770,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5770,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5770,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5770,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5770,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5692,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5704,
											"end": 5787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5704,
											"end": 5787,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5734,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5734,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5736,
											"end": 5786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5775,
											"end": 5785,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5736,
											"end": 5786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8321,
											"end": 8410,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 8321,
											"end": 8410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8376,
											"end": 8403,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 686,
											"end": 696,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8396,
											"end": 8402,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8376,
											"end": 8381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 8376,
											"end": 8403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8376,
											"end": 8403,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 8376,
											"end": 8403,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8321,
											"end": 8410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8321,
											"end": 8410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8714,
											"end": 9004,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 8714,
											"end": 9004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8819,
											"end": 8903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 8856,
											"end": 8862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8903,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8819,
											"end": 8903,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8903,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8903,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8819,
											"end": 8903,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8903,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8819,
											"end": 8903,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8903,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8903,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8819,
											"end": 8903,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8903,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8903,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8819,
											"end": 8903,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8903,
											"name": "PUSH data",
											"source": 1,
											"value": "A287C363786607A1457A2D9D12FA61C0073358E02D76B4035FC2C2D86A19C0DB"
										},
										{
											"begin": 8819,
											"end": 8903,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8819,
											"end": 8903,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8903,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 8829,
											"end": 8836,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 686,
											"end": 696,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3937,
											"end": 4086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8851,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 8819,
											"end": 8851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8855,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8903,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 8819,
											"end": 8903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8903,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 8819,
											"end": 8903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8903,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8914,
											"end": 8965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 8923,
											"end": 8930,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 686,
											"end": 696,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8914,
											"end": 8922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8914,
											"end": 8965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8914,
											"end": 8965,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 8914,
											"end": 8965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8975,
											"end": 8997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 8981,
											"end": 8988,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8990,
											"end": 8996,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8975,
											"end": 8980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 8975,
											"end": 8997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8975,
											"end": 8997,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 8975,
											"end": 8997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8780,
											"end": 9004,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8714,
											"end": 9004,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8714,
											"end": 9004,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8714,
											"end": 9004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2382,
											"end": 2467,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2382,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2434,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2453,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2446,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6302,
											"end": 6568,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 6302,
											"end": 6568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6395,
											"end": 6399,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6411,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 686,
											"end": 696,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6441,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 6482,
											"end": 6497,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6539,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6443,
											"end": 6539,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6539,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6443,
											"end": 6539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6539,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6443,
											"end": 6539,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6539,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 6443,
											"end": 6539,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6539,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6539,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6443,
											"end": 6539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6539,
											"name": "PUSH data",
											"source": 1,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 6443,
											"end": 6539,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 6443,
											"end": 6539,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6539,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 686,
											"end": 696,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6443,
											"end": 6468,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6443,
											"end": 6468,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6468,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6468,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6454,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6443,
											"end": 6468,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6443,
											"end": 6468,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6468,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6468,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6468,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6443,
											"end": 6468,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6468,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6468,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6443,
											"end": 6477,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6477,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6477,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6477,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6477,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6477,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6477,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6477,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6477,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 6443,
											"end": 6539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3707,
											"end": 3879,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3707,
											"end": 3879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3793,
											"end": 3797,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3809,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 686,
											"end": 696,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3833,
											"end": 3842,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 3850,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3809,
											"end": 3851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10499,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10159,
											"end": 10499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10260,
											"end": 10279,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10260,
											"end": 10279,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10252,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 10252,
											"end": 10320,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10252,
											"end": 10320,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10252,
											"end": 10320,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10252,
											"end": 10320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10252,
											"end": 10320,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3130,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10252,
											"end": 10320,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10252,
											"end": 10320,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10252,
											"end": 10320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3131,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3167,
											"end": 3169,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3147,
											"end": 3165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3165,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3165,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3140,
											"end": 3170,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3206,
											"end": 3240,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3186,
											"end": 3204,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3186,
											"end": 3204,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3186,
											"end": 3204,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3241,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3257,
											"end": 3275,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3257,
											"end": 3275,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3257,
											"end": 3275,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3284,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3320,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3301,
											"end": 3320,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10252,
											"end": 10320,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 10252,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10252,
											"end": 10320,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10252,
											"end": 10320,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10252,
											"end": 10320,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10252,
											"end": 10320,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10252,
											"end": 10320,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10252,
											"end": 10320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10252,
											"end": 10320,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10252,
											"end": 10320,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 10252,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10338,
											"end": 10359,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10338,
											"end": 10359,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10330,
											"end": 10398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 10330,
											"end": 10398,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10330,
											"end": 10398,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10330,
											"end": 10398,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10330,
											"end": 10398,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10330,
											"end": 10398,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3535,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10330,
											"end": 10398,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10330,
											"end": 10398,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10330,
											"end": 10398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3536,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3572,
											"end": 3574,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3552,
											"end": 3570,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3552,
											"end": 3570,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3552,
											"end": 3570,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3545,
											"end": 3575,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3645,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 3591,
											"end": 3609,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3591,
											"end": 3609,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3591,
											"end": 3609,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3584,
											"end": 3646,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3662,
											"end": 3680,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3662,
											"end": 3680,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3680,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3655,
											"end": 3687,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3704,
											"end": 3723,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3704,
											"end": 3723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10330,
											"end": 10398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3331,
											"end": 3729,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10330,
											"end": 10398,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 10330,
											"end": 10398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10409,
											"end": 10427,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10427,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10409,
											"end": 10427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10420,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10409,
											"end": 10427,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10409,
											"end": 10427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10427,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10409,
											"end": 10427,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10427,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10427,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10436,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10436,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10436,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10436,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10436,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10436,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10436,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10436,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10445,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10492,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10460,
											"end": 10492,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10460,
											"end": 10492,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10460,
											"end": 10492,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 10460,
											"end": 10492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10492,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10460,
											"end": 10492,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10492,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10492,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10492,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10492,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7042,
											"end": 7572,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 7042,
											"end": 7572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7147,
											"end": 7167,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7147,
											"end": 7167,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7139,
											"end": 7209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 7139,
											"end": 7209,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7139,
											"end": 7209,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7139,
											"end": 7209,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7139,
											"end": 7209,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7139,
											"end": 7209,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 3938,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7139,
											"end": 7209,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7139,
											"end": 7209,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7139,
											"end": 7209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3918,
											"end": 3939,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3975,
											"end": 3977,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3948,
											"end": 3978,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4014,
											"end": 4048,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 3994,
											"end": 4012,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3994,
											"end": 4012,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3994,
											"end": 4012,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4049,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4065,
											"end": 4083,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4065,
											"end": 4083,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4065,
											"end": 4083,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4058,
											"end": 4093,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4110,
											"end": 4129,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4110,
											"end": 4129,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7139,
											"end": 7209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3734,
											"end": 4135,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7139,
											"end": 7209,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 7139,
											"end": 7209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7227,
											"end": 7250,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7227,
											"end": 7250,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7219,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 7219,
											"end": 7290,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7219,
											"end": 7290,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7219,
											"end": 7290,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7219,
											"end": 7290,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7219,
											"end": 7290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4344,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7219,
											"end": 7290,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7219,
											"end": 7290,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7219,
											"end": 7290,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4324,
											"end": 4345,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4381,
											"end": 4383,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4354,
											"end": 4384,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4420,
											"end": 4454,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4393,
											"end": 4455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4471,
											"end": 4489,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4471,
											"end": 4489,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4471,
											"end": 4489,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4464,
											"end": 4497,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4514,
											"end": 4533,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4514,
											"end": 4533,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7219,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4140,
											"end": 4539,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7219,
											"end": 7290,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 7219,
											"end": 7290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 7401,
											"end": 7407,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7379,
											"end": 7450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7450,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7379,
											"end": 7450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7379,
											"end": 7450,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7450,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7379,
											"end": 7450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7450,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7450,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7379,
											"end": 7450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7450,
											"name": "PUSH data",
											"source": 1,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 7379,
											"end": 7450,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7379,
											"end": 7450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7450,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7388,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 7379,
											"end": 7450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7450,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 7379,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7359,
											"end": 7376,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7359,
											"end": 7376,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7359,
											"end": 7376,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7359,
											"end": 7368,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7359,
											"end": 7376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7359,
											"end": 7376,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7359,
											"end": 7376,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7359,
											"end": 7376,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7359,
											"end": 7376,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7359,
											"end": 7376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7359,
											"end": 7376,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7359,
											"end": 7376,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7359,
											"end": 7376,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7359,
											"end": 7376,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7359,
											"end": 7376,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7359,
											"end": 7450,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7359,
											"end": 7450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7359,
											"end": 7450,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7359,
											"end": 7450,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7483,
											"end": 7503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7483,
											"end": 7503,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7483,
											"end": 7503,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7483,
											"end": 7503,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7483,
											"end": 7503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7483,
											"end": 7503,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7483,
											"end": 7503,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7483,
											"end": 7515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 7483,
											"end": 7515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7514,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7483,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7483,
											"end": 7515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7483,
											"end": 7515,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 7483,
											"end": 7515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7460,
											"end": 7480,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7460,
											"end": 7480,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7460,
											"end": 7480,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7460,
											"end": 7469,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7460,
											"end": 7480,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7460,
											"end": 7480,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7460,
											"end": 7480,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7460,
											"end": 7480,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7460,
											"end": 7480,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7460,
											"end": 7480,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7460,
											"end": 7480,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7460,
											"end": 7480,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7460,
											"end": 7480,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7460,
											"end": 7480,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7460,
											"end": 7480,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7460,
											"end": 7480,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7460,
											"end": 7515,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7460,
											"end": 7515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7460,
											"end": 7515,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7460,
											"end": 7515,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7460,
											"end": 7480,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7460,
											"end": 7480,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 1953,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1766,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1852,
											"end": 1859,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1885,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1885,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1885,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1885,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1871,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 1926,
											"end": 1927,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 1922,
											"end": 1927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 1927,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1953,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1766,
											"end": 1953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 868,
											"end": 1044,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 868,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 926,
											"end": 933,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 933,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 957,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 961,
											"end": 962,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 957,
											"end": 958,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 957,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 957,
											"end": 962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 957,
											"end": 962,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 957,
											"end": 962,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 945,
											"end": 962,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 945,
											"end": 962,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 985,
											"end": 986,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 980,
											"end": 981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 980,
											"end": 986,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 980,
											"end": 986,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5141,
											"end": 5143,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5123,
											"end": 5144,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5180,
											"end": 5182,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 5160,
											"end": 5178,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5160,
											"end": 5178,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5160,
											"end": 5178,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5183,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5219,
											"end": 5248,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 5199,
											"end": 5217,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5199,
											"end": 5217,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5217,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5192,
											"end": 5249,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5266,
											"end": 5284,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5266,
											"end": 5284,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 4939,
											"end": 5290,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 868,
											"end": 1044,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 868,
											"end": 1044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9324,
											"end": 9734,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 9324,
											"end": 9734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9407,
											"end": 9428,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9407,
											"end": 9428,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9399,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 9399,
											"end": 9466,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9399,
											"end": 9466,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9399,
											"end": 9466,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9399,
											"end": 9466,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9399,
											"end": 9466,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5497,
											"end": 5499,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9399,
											"end": 9466,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9399,
											"end": 9466,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9399,
											"end": 9466,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5479,
											"end": 5500,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5536,
											"end": 5538,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 5516,
											"end": 5534,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5516,
											"end": 5534,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5534,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5575,
											"end": 5609,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 5555,
											"end": 5573,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5555,
											"end": 5573,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5555,
											"end": 5573,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5548,
											"end": 5610,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5626,
											"end": 5644,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5626,
											"end": 5644,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5626,
											"end": 5644,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5619,
											"end": 5650,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5667,
											"end": 5686,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5667,
											"end": 5686,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9399,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 5295,
											"end": 5692,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9399,
											"end": 9466,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 9399,
											"end": 9466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 9581,
											"end": 9587,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9626,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9558,
											"end": 9626,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9626,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9558,
											"end": 9626,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9626,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9558,
											"end": 9626,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9626,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 9558,
											"end": 9626,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9626,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9626,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9558,
											"end": 9626,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9626,
											"name": "PUSH data",
											"source": 1,
											"value": "149B126E7125232B4200AF45303D04FBA8B74653B1A295A6A561A528C33FEFDD"
										},
										{
											"begin": 9558,
											"end": 9626,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 9558,
											"end": 9626,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9626,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9558,
											"end": 9576,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9576,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9558,
											"end": 9576,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9576,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9576,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9576,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9558,
											"end": 9576,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9576,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9576,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9576,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9558,
											"end": 9576,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9576,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9576,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9576,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9626,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 9558,
											"end": 9626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9626,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 9558,
											"end": 9626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9537,
											"end": 9555,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 9555,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 9546,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9537,
											"end": 9555,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 9555,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 9555,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 9555,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9537,
											"end": 9555,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 9555,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 9555,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 9555,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9537,
											"end": 9555,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 9555,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 9626,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9651,
											"end": 9663,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9651,
											"end": 9663,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9651,
											"end": 9675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 9651,
											"end": 9675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9668,
											"end": 9674,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9651,
											"end": 9667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 9651,
											"end": 9675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9651,
											"end": 9675,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 9651,
											"end": 9675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9636,
											"end": 9648,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9636,
											"end": 9675,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9690,
											"end": 9727,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9690,
											"end": 9727,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9716,
											"end": 9717,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9716,
											"end": 9717,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9690,
											"end": 9727,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9690,
											"end": 9727,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9690,
											"end": 9727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9690,
											"end": 9727,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9690,
											"end": 9727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9690,
											"end": 9727,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9690,
											"end": 9727,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9690,
											"end": 9727,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9690,
											"end": 9727,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9690,
											"end": 9727,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9690,
											"end": 9727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9690,
											"end": 9727,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9324,
											"end": 9734,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9324,
											"end": 9734,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9324,
											"end": 9734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1442,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 1308,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1373,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 1396,
											"end": 1397,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1399,
											"end": 1400,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "PUSH",
											"source": 3,
											"value": "1E"
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "PUSH",
											"source": 3,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1392,
											"end": 1435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2051,
											"end": 2074,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2051,
											"end": 2074,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2199,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2185,
											"end": 2194,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2176,
											"end": 2183,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2172,
											"end": 2195,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2168,
											"end": 2200,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2214,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2210,
											"end": 2211,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 2255,
											"end": 2264,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2236,
											"end": 2265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2536,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2276,
											"end": 2536,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2350,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2405,
											"end": 2407,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2393,
											"end": 2402,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2391,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2380,
											"end": 2403,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2376,
											"end": 2408,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2425,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 2373,
											"end": 2425,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2421,
											"end": 2422,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2418,
											"end": 2419,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2411,
											"end": 2423,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2425,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 2373,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2444,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 2463,
											"end": 2472,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2444,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2444,
											"end": 2473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2444,
											"end": 2473,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 2444,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2473,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 2526,
											"end": 2528,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2515,
											"end": 2524,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2529,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2492,
											"end": 2530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2530,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 2492,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2530,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2530,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2536,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2536,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2536,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2536,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2536,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2921,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2541,
											"end": 2921,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2616,
											"end": 2628,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2628,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2628,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2628,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2675,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2675,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2675,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2684,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 2684,
											"end": 2745,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2742,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 2730,
											"end": 2736,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2726,
											"end": 2743,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2716,
											"end": 2743,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2716,
											"end": 2743,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2684,
											"end": 2745,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 2684,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2793,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2789,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2794,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2760,
											"end": 2778,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2757,
											"end": 2795,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2754,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 2754,
											"end": 2915,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2837,
											"end": 2847,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 2832,
											"end": 2835,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2828,
											"end": 2848,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2849,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2872,
											"end": 2876,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2869,
											"end": 2870,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2862,
											"end": 2877,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2904,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2897,
											"end": 2898,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2905,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2754,
											"end": 2915,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 2754,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2754,
											"end": 2915,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2921,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2921,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2921,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4544,
											"end": 4671,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 4544,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4605,
											"end": 4615,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 4600,
											"end": 4603,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4596,
											"end": 4616,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4586,
											"end": 4617,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4636,
											"end": 4640,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 4633,
											"end": 4634,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4626,
											"end": 4641,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4660,
											"end": 4664,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4657,
											"end": 4658,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4650,
											"end": 4665,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4676,
											"end": 4804,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 4676,
											"end": 4804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4743,
											"end": 4752,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4743,
											"end": 4752,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4743,
											"end": 4752,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4764,
											"end": 4775,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4764,
											"end": 4775,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4764,
											"end": 4775,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4798,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4761,
											"end": 4798,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 4778,
											"end": 4796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4809,
											"end": 4934,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 4809,
											"end": 4934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 4883,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 4883,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 4883,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4895,
											"end": 4905,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4895,
											"end": 4905,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4895,
											"end": 4905,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4892,
											"end": 4928,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4892,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4892,
											"end": 4928,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4908,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4908,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 4908,
											"end": 4926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										}
									],
									".data": {
										"149B126E7125232B4200AF45303D04FBA8B74653B1A295A6A561A528C33FEFDD": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A287C363786607A1457A2D9D12FA61C0073358E02D76B4035FC2C2D86A19C0DB": "45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							},
							"sourceList": [
								"NewFraxProtocol/contracts/Common/Context.sol",
								"NewFraxProtocol/contracts/ERC20/ERC20.sol",
								"NewFraxProtocol/contracts/ERC20/IERC20.sol",
								"NewFraxProtocol/contracts/Math/SafeMath.sol",
								"NewFraxProtocol/contracts/Utils/Address.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"__name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"__symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20Mintable}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.approve(address spender, uint256 amount)\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for `accounts`'s tokens of at least `amount`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NewFraxProtocol/contracts/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"NewFraxProtocol/contracts/Common/Context.sol\":{\"keccak256\":\"0x60d51a32063a4975dbf9433d38f5849173527da72f007c38053274e06698cb54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9ee6938d731aac55f6176c30ba4fc8456a63de57a7a2d659f43a053dfb381d3\",\"dweb:/ipfs/QmRyq4LneV4qz8uLdEhTU4YndjT365PJBPvK4btHKtmSSG\"]},\"NewFraxProtocol/contracts/ERC20/ERC20.sol\":{\"keccak256\":\"0x433b9ee195d0bd257219bc337ff8aac624282a826726b18fdb299de0e3d4149e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf5f5456bd1c28eb94e86ba33d9ec9f7110613f405ad58b935c6397b81185d78\",\"dweb:/ipfs/QmQXQCV5aGubTfmGMK4ecR3zBkj2NkBe1XJBbg5GSuUnwg\"]},\"NewFraxProtocol/contracts/ERC20/IERC20.sol\":{\"keccak256\":\"0x057bec1fafd7ca222117f41fcfb9c8dc1f61aa30e5a0222c981196e9113de7e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c74a52d9102d6eaf4c2a6d630892f92260391ee5e95c9f55578a3a21b02f8b09\",\"dweb:/ipfs/QmWjPAqmGF88HpkR4BCf3pgimrZvLf4ERVG2Tz5EDjKP62\"]},\"NewFraxProtocol/contracts/Math/SafeMath.sol\":{\"keccak256\":\"0x43a20f7cf4c4319f81450d53779455e88a7ab80bdfc43925156ed4083b74a180\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85317e177f613c29156ffe0b1c1c29c31fedfea1ffc373c9d7f393ef51372728\",\"dweb:/ipfs/QmckZqe6wjgKWd4BTPUjRY1ofC9CsZKxAgXPFCKBisuJdr\"]},\"NewFraxProtocol/contracts/Utils/Address.sol\":{\"keccak256\":\"0x60b5be0e623c9caa7d5ae4c9cf623c4f984ddb87837d2967fd070ef119f8a4ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00aecccf754f6c47afc02fc0b9fa80f5c0d76b868dad1dfe027efe336aa9d7f7\",\"dweb:/ipfs/QmZSAq9jF52a6LgJjxokShg81Lnd32mK4JPNmeTvFD49tN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 43,
								"contract": "NewFraxProtocol/contracts/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 49,
								"contract": "NewFraxProtocol/contracts/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 51,
								"contract": "NewFraxProtocol/contracts/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 53,
								"contract": "NewFraxProtocol/contracts/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 55,
								"contract": "NewFraxProtocol/contracts/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 57,
								"contract": "NewFraxProtocol/contracts/ERC20/ERC20.sol:ERC20",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"NewFraxProtocol/contracts/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see {ERC20Detailed}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see {ERC20Detailed}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NewFraxProtocol/contracts/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"NewFraxProtocol/contracts/Common/Context.sol\":{\"keccak256\":\"0x60d51a32063a4975dbf9433d38f5849173527da72f007c38053274e06698cb54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9ee6938d731aac55f6176c30ba4fc8456a63de57a7a2d659f43a053dfb381d3\",\"dweb:/ipfs/QmRyq4LneV4qz8uLdEhTU4YndjT365PJBPvK4btHKtmSSG\"]},\"NewFraxProtocol/contracts/ERC20/IERC20.sol\":{\"keccak256\":\"0x057bec1fafd7ca222117f41fcfb9c8dc1f61aa30e5a0222c981196e9113de7e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c74a52d9102d6eaf4c2a6d630892f92260391ee5e95c9f55578a3a21b02f8b09\",\"dweb:/ipfs/QmWjPAqmGF88HpkR4BCf3pgimrZvLf4ERVG2Tz5EDjKP62\"]},\"NewFraxProtocol/contracts/Math/SafeMath.sol\":{\"keccak256\":\"0x43a20f7cf4c4319f81450d53779455e88a7ab80bdfc43925156ed4083b74a180\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85317e177f613c29156ffe0b1c1c29c31fedfea1ffc373c9d7f393ef51372728\",\"dweb:/ipfs/QmckZqe6wjgKWd4BTPUjRY1ofC9CsZKxAgXPFCKBisuJdr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"NewFraxProtocol/contracts/Math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":623:5331  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":623:5331  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220263538fbb1d2d619d007e8ebbb9fda8b77fab4455d3f1facf1705d0d9e2065a264736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220263538fbb1d2d619d007e8ebbb9fda8b77fab4455d3f1facf1705d0d9e2065a264736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 CALLDATALOAD CODESIZE 0xFB 0xB1 0xD2 0xD6 NOT 0xD0 SMOD 0xE8 0xEB 0xBB SWAP16 0xDA DUP12 PUSH24 0xFAB4455D3F1FACF1705D0D9E2065A264736F6C6343000815 STOP CALLER ",
							"sourceMap": "623:4708:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;623:4708:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220263538fbb1d2d619d007e8ebbb9fda8b77fab4455d3f1facf1705d0d9e2065a264736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 CALLDATALOAD CODESIZE 0xFB 0xB1 0xD2 0xD6 NOT 0xD0 SMOD 0xE8 0xEB 0xBB SWAP16 0xDA DUP12 PUSH24 0xFAB4455D3F1FACF1705D0D9E2065A264736F6C6343000815 STOP CALLER ",
							"sourceMap": "623:4708:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220263538fbb1d2d619d007e8ebbb9fda8b77fab4455d3f1facf1705d0d9e2065a264736f6c63430008150033",
									".code": [
										{
											"begin": 623,
											"end": 5331,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"NewFraxProtocol/contracts/Common/Context.sol",
								"NewFraxProtocol/contracts/ERC20/ERC20.sol",
								"NewFraxProtocol/contracts/ERC20/IERC20.sol",
								"NewFraxProtocol/contracts/Math/SafeMath.sol",
								"NewFraxProtocol/contracts/Utils/Address.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NewFraxProtocol/contracts/Math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"NewFraxProtocol/contracts/Math/SafeMath.sol\":{\"keccak256\":\"0x43a20f7cf4c4319f81450d53779455e88a7ab80bdfc43925156ed4083b74a180\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85317e177f613c29156ffe0b1c1c29c31fedfea1ffc373c9d7f393ef51372728\",\"dweb:/ipfs/QmckZqe6wjgKWd4BTPUjRY1ofC9CsZKxAgXPFCKBisuJdr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"NewFraxProtocol/contracts/Utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NewFraxProtocol/contracts/Utils/Address.sol\":127:7811  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"NewFraxProtocol/contracts/Utils/Address.sol\":127:7811  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b3efa16d4dbaaffb0cc7dd2b79949736049a5516e1402e2d37b99d63d66c2d1564736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b3efa16d4dbaaffb0cc7dd2b79949736049a5516e1402e2d37b99d63d66c2d1564736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0xEF LOG1 PUSH14 0x4DBAAFFB0CC7DD2B79949736049A SSTORE AND 0xE1 BLOCKHASH 0x2E 0x2D CALLDATACOPY 0xB9 SWAP14 PUSH4 0xD66C2D15 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "127:7684:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;127:7684:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b3efa16d4dbaaffb0cc7dd2b79949736049a5516e1402e2d37b99d63d66c2d1564736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0xEF LOG1 PUSH14 0x4DBAAFFB0CC7DD2B79949736049A SSTORE AND 0xE1 BLOCKHASH 0x2E 0x2D CALLDATACOPY 0xB9 SWAP14 PUSH4 0xD66C2D15 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "127:7684:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 127,
									"end": 7811,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 127,
									"end": 7811,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b3efa16d4dbaaffb0cc7dd2b79949736049a5516e1402e2d37b99d63d66c2d1564736f6c63430008150033",
									".code": [
										{
											"begin": 127,
											"end": 7811,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 127,
											"end": 7811,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 127,
											"end": 7811,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 127,
											"end": 7811,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 127,
											"end": 7811,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 127,
											"end": 7811,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 127,
											"end": 7811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 127,
											"end": 7811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 127,
											"end": 7811,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"NewFraxProtocol/contracts/Common/Context.sol",
								"NewFraxProtocol/contracts/ERC20/ERC20.sol",
								"NewFraxProtocol/contracts/ERC20/IERC20.sol",
								"NewFraxProtocol/contracts/Math/SafeMath.sol",
								"NewFraxProtocol/contracts/Utils/Address.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NewFraxProtocol/contracts/Utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"NewFraxProtocol/contracts/Utils/Address.sol\":{\"keccak256\":\"0x60b5be0e623c9caa7d5ae4c9cf623c4f984ddb87837d2967fd070ef119f8a4ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00aecccf754f6c47afc02fc0b9fa80f5c0d76b868dad1dfe027efe336aa9d7f7\",\"dweb:/ipfs/QmZSAq9jF52a6LgJjxokShg81Lnd32mK4JPNmeTvFD49tN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> NewFraxProtocol/contracts/ERC20/ERC20.sol:57:5:\n   |\n57 |     constructor (string memory __name, string memory __symbol) public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2123,
					"file": "NewFraxProtocol/contracts/ERC20/ERC20.sol",
					"start": 1974
				},
				"type": "Warning"
			}
		],
		"sources": {
			"NewFraxProtocol/contracts/Common/Context.sol": {
				"ast": {
					"absolutePath": "NewFraxProtocol/contracts/Common/Context.sol",
					"exportedSymbols": {
						"Context": [
							25
						]
					},
					"id": 26,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "32:25:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 25,
							"linearizedBaseContracts": [
								25
							],
							"name": "Context",
							"nameLocation": "577:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 12,
										"nodeType": "Block",
										"src": "661:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 8,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "686:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 9,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "690:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "686:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 7,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "678:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 6,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "678:8:0",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "678:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 5,
												"id": 11,
												"nodeType": "Return",
												"src": "671:26:0"
											}
										]
									},
									"id": 13,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "600:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "610:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "644:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "644:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "643:17:0"
									},
									"scope": 25,
									"src": "591:113:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "775:165:0",
										"statements": [
											{
												"expression": {
													"id": 18,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "785:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$25",
														"typeString": "contract Context"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "785:4:0"
											},
											{
												"expression": {
													"expression": {
														"id": 20,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "925:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "929:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "925:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 17,
												"id": 22,
												"nodeType": "Return",
												"src": "918:15:0"
											}
										]
									},
									"id": 24,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "719:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "727:2:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "761:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 15,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "761:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "760:14:0"
									},
									"scope": 25,
									"src": "710:230:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 26,
							"src": "559:383:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:910:0"
				},
				"id": 0
			},
			"NewFraxProtocol/contracts/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "NewFraxProtocol/contracts/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Address": [
							1166
						],
						"Context": [
							25
						],
						"ERC20": [
							594
						],
						"IERC20": [
							674
						],
						"SafeMath": [
							870
						]
					},
					"id": 595,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 27,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "32:25:1"
						},
						{
							"absolutePath": "NewFraxProtocol/contracts/Common/Context.sol",
							"file": "../Common/Context.sol",
							"id": 28,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 595,
							"sourceUnit": 26,
							"src": "59:31:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "NewFraxProtocol/contracts/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 29,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 595,
							"sourceUnit": 675,
							"src": "91:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "NewFraxProtocol/contracts/Math/SafeMath.sol",
							"file": "../Math/SafeMath.sol",
							"id": 30,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 595,
							"sourceUnit": 871,
							"src": "114:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "NewFraxProtocol/contracts/Utils/Address.sol",
							"file": "../Utils/Address.sol",
							"id": 31,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 595,
							"sourceUnit": 1167,
							"src": "145:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 33,
										"name": "Context",
										"nameLocations": [
											"1351:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 25,
										"src": "1351:7:1"
									},
									"id": 34,
									"nodeType": "InheritanceSpecifier",
									"src": "1351:7:1"
								},
								{
									"baseName": {
										"id": 35,
										"name": "IERC20",
										"nameLocations": [
											"1360:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 674,
										"src": "1360:6:1"
									},
									"id": 36,
									"nodeType": "InheritanceSpecifier",
									"src": "1360:6:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 32,
								"nodeType": "StructuredDocumentation",
								"src": "178:1152:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20Mintable}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 594,
							"linearizedBaseContracts": [
								594,
								674,
								25
							],
							"name": "ERC20",
							"nameLocation": "1342:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 39,
									"libraryName": {
										"id": 37,
										"name": "SafeMath",
										"nameLocations": [
											"1379:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 870,
										"src": "1379:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "1373:27:1",
									"typeName": {
										"id": 38,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1392:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 43,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1443:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 594,
									"src": "1406:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 42,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 40,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1415:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1406:28:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 41,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1426:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 49,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1517:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 594,
									"src": "1459:69:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 48,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 44,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1468:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1459:49:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 47,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 45,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1488:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1479:28:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 46,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1499:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 51,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1551:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 594,
									"src": "1535:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 50,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1535:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 53,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1585:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 594,
									"src": "1570:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 52,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1570:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 55,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1611:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 594,
									"src": "1596:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 54,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1596:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 57,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "1638:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 594,
									"src": "1624:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 56,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1624:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 77,
										"nodeType": "Block",
										"src": "2040:83:1",
										"statements": [
											{
												"expression": {
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 65,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "2050:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 66,
														"name": "__name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "2058:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2050:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "2050:14:1"
											},
											{
												"expression": {
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 69,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "2074:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 70,
														"name": "__symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "2084:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2074:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "2074:18:1"
											},
											{
												"expression": {
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 73,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "2102:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138",
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2114:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "2102:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 76,
												"nodeType": "ExpressionStatement",
												"src": "2102:14:1"
											}
										]
									},
									"documentation": {
										"id": 58,
										"nodeType": "StructuredDocumentation",
										"src": "1658:311:1",
										"text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 78,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "__name",
												"nameLocation": "2001:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "1987:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 59,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1987:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "__symbol",
												"nameLocation": "2023:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "2009:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 61,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1986:46:1"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2040:0:1"
									},
									"scope": 594,
									"src": "1974:149:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "2240:29:1",
										"statements": [
											{
												"expression": {
													"id": 84,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 53,
													"src": "2257:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 83,
												"id": 85,
												"nodeType": "Return",
												"src": "2250:12:1"
											}
										]
									},
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "2129:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2197:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:1"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2225:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 81,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2225:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2224:15:1"
									},
									"scope": 594,
									"src": "2188:81:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "2436:31:1",
										"statements": [
											{
												"expression": {
													"id": 93,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 55,
													"src": "2453:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 92,
												"id": 94,
												"nodeType": "Return",
												"src": "2446:14:1"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "2275:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 96,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2391:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2397:2:1"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "2421:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2421:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2420:15:1"
									},
									"scope": 594,
									"src": "2382:85:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "3138:33:1",
										"statements": [
											{
												"expression": {
													"id": 102,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 57,
													"src": "3155:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 101,
												"id": 103,
												"nodeType": "Return",
												"src": "3148:16:1"
											}
										]
									},
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "2473:612:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3099:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3107:2:1"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "3131:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 99,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3131:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3130:7:1"
									},
									"scope": 594,
									"src": "3090:81:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										605
									],
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "3293:36:1",
										"statements": [
											{
												"expression": {
													"id": 112,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 51,
													"src": "3310:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 111,
												"id": 113,
												"nodeType": "Return",
												"src": "3303:19:1"
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "3177:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3240:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 108,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3266:8:1"
									},
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3251:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3284:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3284:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3283:9:1"
									},
									"scope": 594,
									"src": "3231:98:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										613
									],
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "3462:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 124,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "3479:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 126,
													"indexExpression": {
														"id": 125,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "3489:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3479:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 123,
												"id": 127,
												"nodeType": "Return",
												"src": "3472:25:1"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "3335:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3396:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 120,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3435:8:1"
									},
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3414:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3406:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3405:17:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3453:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3452:9:1"
									},
									"scope": 594,
									"src": "3387:117:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										623
									],
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "3799:80:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 141,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "3819:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3819:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 143,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "3833:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 144,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "3844:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 140,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "3809:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3809:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "3809:42:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3868:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 139,
												"id": 148,
												"nodeType": "Return",
												"src": "3861:11:1"
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "3510:192:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3716:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 136,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3775:8:1"
									},
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3733:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "3725:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3752:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "3744:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3744:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3724:35:1"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "3793:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 137,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3793:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3792:6:1"
									},
									"scope": 594,
									"src": "3707:172:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										633
									],
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "4035:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 161,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "4052:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 163,
														"indexExpression": {
															"id": 162,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4064:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4052:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 165,
													"indexExpression": {
														"id": 164,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "4071:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4052:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 160,
												"id": 166,
												"nodeType": "Return",
												"src": "4045:34:1"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "3885:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3946:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 157,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4008:8:1"
									},
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3964:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "3956:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3956:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3979:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "3971:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3971:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3955:32:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "4026:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4026:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4025:9:1"
									},
									"scope": 594,
									"src": "3937:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										643
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "4353:77:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 180,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "4372:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4372:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 182,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "4386:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 183,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "4395:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 179,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "4363:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4363:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "4363:39:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4419:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 178,
												"id": 187,
												"nodeType": "Return",
												"src": "4412:11:1"
											}
										]
									},
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "4092:167:1",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address.approve(address spender, uint256 amount)"
									},
									"functionSelector": "095ea7b3",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4273:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 175,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4329:8:1"
									},
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4289:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "4281:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4281:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4306:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "4298:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4298:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4280:33:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "4347:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4347:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4346:6:1"
									},
									"scope": 594,
									"src": "4264:166:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										655
									],
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "5000:205:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 203,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5020:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 204,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5028:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 205,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "5039:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 202,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "5010:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5010:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "5010:36:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 209,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5065:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 210,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "5073:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5073:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 219,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 196,
																	"src": "5125:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5133:42:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 212,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 49,
																			"src": "5087:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 214,
																		"indexExpression": {
																			"id": 213,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 192,
																			"src": "5099:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5087:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 217,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 215,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 13,
																			"src": "5107:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5107:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5087:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5121:3:1",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 748,
																"src": "5087:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5087:89:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 208,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "5056:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5056:121:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "5056:121:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5194:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 201,
												"id": 225,
												"nodeType": "Return",
												"src": "5187:11:1"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "4436:447:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for `sender`'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4897:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 198,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4976:8:1"
									},
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4918:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "4910:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4910:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4934:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "4926:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4926:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4953:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "4945:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4945:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4909:51:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "4994:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 199,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4994:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4993:6:1"
									},
									"scope": 594,
									"src": "4888:317:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "5694:121:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 238,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "5713:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5713:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 240,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "5727:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 248,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "5775:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 241,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 49,
																			"src": "5736:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 244,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 242,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 13,
																				"src": "5748:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5748:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5736:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 246,
																	"indexExpression": {
																		"id": 245,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 230,
																		"src": "5762:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5736:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5771:3:1",
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 703,
																"src": "5736:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5736:50:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 237,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "5704:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5704:83:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "5704:83:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5804:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 236,
												"id": 253,
												"nodeType": "Return",
												"src": "5797:11:1"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "5211:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5609:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5635:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "5627:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5627:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5652:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "5644:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5644:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5626:37:1"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "5688:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 234,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5688:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5687:6:1"
									},
									"scope": 594,
									"src": "5600:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "6401:167:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 266,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "6420:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6420:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 268,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "6434:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 276,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 260,
																	"src": "6482:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6499:39:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 269,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 49,
																			"src": "6443:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 272,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 270,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 13,
																				"src": "6455:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 271,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6455:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6443:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 274,
																	"indexExpression": {
																		"id": 273,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 258,
																		"src": "6469:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6443:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6478:3:1",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 748,
																"src": "6443:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6443:96:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 265,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "6411:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6411:129:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "6411:129:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6557:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 264,
												"id": 282,
												"nodeType": "Return",
												"src": "6550:11:1"
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "5821:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6311:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6337:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "6329:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6329:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6354:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "6346:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6346:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6328:42:1"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "6395:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 262,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6395:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6394:6:1"
									},
									"scope": 594,
									"src": "6302:266:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "7129:443:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 295,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "7147:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7165:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7157:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 296,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7157:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7157:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7147:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7169:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 294,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7139:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7139:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 303,
												"nodeType": "ExpressionStatement",
												"src": "7139:70:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 305,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 289,
																"src": "7227:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7248:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7240:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 306,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7240:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7240:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7227:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7252:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 304,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7219:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7219:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 313,
												"nodeType": "ExpressionStatement",
												"src": "7219:71:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 315,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "7322:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 316,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "7330:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 317,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "7341:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 314,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "7301:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7301:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "7301:47:1"
											},
											{
												"expression": {
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 320,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "7359:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 322,
														"indexExpression": {
															"id": 321,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "7369:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7359:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 327,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 291,
																"src": "7401:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7409:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 323,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "7379:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 325,
																"indexExpression": {
																	"id": 324,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "7389:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7379:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7397:3:1",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 748,
															"src": "7379:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 329,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7379:71:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7359:91:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "7359:91:1"
											},
											{
												"expression": {
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 332,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "7460:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 334,
														"indexExpression": {
															"id": 333,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "7470:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7460:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 339,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 291,
																"src": "7508:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 335,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "7483:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 337,
																"indexExpression": {
																	"id": 336,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 289,
																	"src": "7493:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7483:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7504:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 703,
															"src": "7483:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7483:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7460:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 342,
												"nodeType": "ExpressionStatement",
												"src": "7460:55:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 344,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "7539:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 345,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "7547:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 346,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "7558:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 343,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "7530:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7530:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 348,
												"nodeType": "EmitStatement",
												"src": "7525:40:1"
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "6574:463:1",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7051:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7069:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "7061:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7061:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7085:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "7077:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7077:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7104:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "7096:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7096:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7060:51:1"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7129:0:1"
									},
									"scope": 594,
									"src": "7042:530:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 404,
										"nodeType": "Block",
										"src": "7907:305:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 359,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "7925:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7944:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7936:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 360,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7936:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7936:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7925:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7948:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 358,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7917:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7917:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "7917:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8022:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8014:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 369,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8014:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8014:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 373,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "8026:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "8035:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 368,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "7993:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7993:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "7993:49:1"
											},
											{
												"expression": {
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 377,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "8053:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 380,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "8085:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 378,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 51,
																"src": "8068:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8081:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 703,
															"src": "8068:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8068:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8053:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "8053:39:1"
											},
											{
												"expression": {
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 384,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "8102:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 386,
														"indexExpression": {
															"id": 385,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "8112:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8102:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 391,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "8146:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 387,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "8123:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 389,
																"indexExpression": {
																	"id": 388,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "8133:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8123:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8142:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 703,
															"src": "8123:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8123:30:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8102:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 394,
												"nodeType": "ExpressionStatement",
												"src": "8102:51:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8185:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8177:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 396,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8177:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8177:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 400,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "8189:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 401,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "8198:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 395,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "8168:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8168:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 403,
												"nodeType": "EmitStatement",
												"src": "8163:42:1"
											}
										]
									},
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "7578:259:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
									},
									"id": 405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7851:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7865:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "7857:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7857:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7882:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "7874:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7874:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7856:33:1"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7907:0:1"
									},
									"scope": 594,
									"src": "7842:370:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "8366:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 412,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "8382:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8382:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 414,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "8396:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 411,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "8376:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8376:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "8376:27:1"
											}
										]
									},
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "8218:98:1",
										"text": " @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "8330:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8343:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "8335:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8335:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8334:16:1"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8366:0:1"
									},
									"scope": 594,
									"src": "8321:89:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 450,
										"nodeType": "Block",
										"src": "8780:224:1",
										"statements": [
											{
												"assignments": [
													427
												],
												"declarations": [
													{
														"constant": false,
														"id": 427,
														"mutability": "mutable",
														"name": "decreasedAllowance",
														"nameLocation": "8798:18:1",
														"nodeType": "VariableDeclaration",
														"scope": 450,
														"src": "8790:26:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 426,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8790:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 437,
												"initialValue": {
													"arguments": [
														{
															"id": 434,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "8856:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8864:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
																"typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
															},
															"value": "ERC20: burn amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
																"typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 429,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "8829:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 430,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 13,
																		"src": "8838:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8838:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 428,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 168,
																"src": "8819:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view returns (uint256)"
																}
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8819:32:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8852:3:1",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 748,
														"src": "8819:36:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8819:84:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8790:113:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "8923:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 440,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "8932:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8932:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 442,
															"name": "decreasedAllowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "8946:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 438,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "8914:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8914:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "8914:51:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "8981:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "8990:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 445,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "8975:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8975:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "8975:22:1"
											}
										]
									},
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "8416:293:1",
										"text": " @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for `accounts`'s tokens of at least\n `amount`."
									},
									"functionSelector": "79cc6790",
									"id": 451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "8723:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8740:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "8732:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8732:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8757:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "8749:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8749:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8731:33:1"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8780:0:1"
									},
									"scope": 594,
									"src": "8714:290:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "9389:345:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 460,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "9407:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9426:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9418:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 461,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9418:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9418:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9407:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9430:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 459,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9399:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9399:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "9399:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 470,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "9498:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9515:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9507:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 471,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9507:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9507:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "9519:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 469,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "9477:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9477:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "9477:49:1"
											},
											{
												"expression": {
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 478,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "9537:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 480,
														"indexExpression": {
															"id": 479,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "9547:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9537:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 485,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "9581:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9589:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 481,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "9558:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 483,
																"indexExpression": {
																	"id": 482,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "9568:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9558:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9577:3:1",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 748,
															"src": "9558:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9558:68:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9537:89:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "9537:89:1"
											},
											{
												"expression": {
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 490,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "9636:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 493,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "9668:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 491,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 51,
																"src": "9651:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9664:3:1",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 720,
															"src": "9651:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9651:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9636:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 496,
												"nodeType": "ExpressionStatement",
												"src": "9636:39:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 498,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "9699:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9716:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9708:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 499,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9708:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9708:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 503,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "9720:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 497,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "9690:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9690:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "EmitStatement",
												"src": "9685:42:1"
											}
										]
									},
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "9011:308:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9333:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9347:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "9339:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9339:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9364:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "9356:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9356:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9338:33:1"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9389:0:1"
									},
									"scope": 594,
									"src": "9324:410:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "10242:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 518,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 510,
																"src": "10260:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10277:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10269:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 519,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10269:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10269:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10260:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10281:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 517,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10252:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10252:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "10252:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 528,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 512,
																"src": "10338:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10357:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10349:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 529,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10349:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10349:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10338:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10361:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 527,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10330:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10330:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "10330:68:1"
											},
											{
												"expression": {
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 537,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 49,
																"src": "10409:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 540,
															"indexExpression": {
																"id": 538,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 510,
																"src": "10421:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10409:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 541,
														"indexExpression": {
															"id": 539,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "10428:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10409:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 542,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "10439:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10409:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "10409:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 546,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "10469:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 547,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "10476:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 548,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "10485:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 545,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "10460:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10460:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 550,
												"nodeType": "EmitStatement",
												"src": "10455:37:1"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "9740:414:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10168:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10185:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "10177:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10177:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10200:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "10192:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10217:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "10209:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10209:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10176:48:1"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10242:0:1"
									},
									"scope": 594,
									"src": "10159:340:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "10746:168:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 561,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "10762:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 562,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "10771:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 560,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "10756:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10756:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 564,
												"nodeType": "ExpressionStatement",
												"src": "10756:22:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 566,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "10797:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 567,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "10806:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10806:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 576,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 557,
																	"src": "10859:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10867:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
																		"typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
																	},
																	"value": "ERC20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
																		"typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 569,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 49,
																			"src": "10820:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 571,
																		"indexExpression": {
																			"id": 570,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 555,
																			"src": "10832:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10820:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 574,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 572,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 13,
																			"src": "10841:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10841:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10820:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10855:3:1",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 748,
																"src": "10820:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10820:86:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 565,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "10788:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10788:119:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "10788:119:1"
											}
										]
									},
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "10505:167:1",
										"text": " @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n from the caller's allowance.\n See {_burn} and {_approve}."
									},
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nameLocation": "10686:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10704:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "10696:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10696:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10721:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "10713:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10695:33:1"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10746:0:1"
									},
									"scope": 594,
									"src": "10677:237:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "11566:3:1",
										"statements": []
									},
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "10920:552:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of `from`'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of `from`'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:using-hooks.adoc[Using Hooks]."
									},
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "11486:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11515:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "11507:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11507:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11529:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "11521:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11521:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11541:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "11533:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11533:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11506:42:1"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11566:0:1"
									},
									"scope": 594,
									"src": "11477:92:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 595,
							"src": "1333:10238:1",
							"usedErrors": [],
							"usedEvents": [
								664,
								673
							]
						}
					],
					"src": "32:11540:1"
				},
				"id": 1
			},
			"NewFraxProtocol/contracts/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "NewFraxProtocol/contracts/ERC20/IERC20.sol",
					"exportedSymbols": {
						"Context": [
							25
						],
						"IERC20": [
							674
						],
						"SafeMath": [
							870
						]
					},
					"id": 675,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 596,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "32:25:2"
						},
						{
							"absolutePath": "NewFraxProtocol/contracts/Common/Context.sol",
							"file": "../Common/Context.sol",
							"id": 597,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 675,
							"sourceUnit": 26,
							"src": "59:31:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "NewFraxProtocol/contracts/Math/SafeMath.sol",
							"file": "../Math/SafeMath.sol",
							"id": 598,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 675,
							"sourceUnit": 871,
							"src": "91:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 599,
								"nodeType": "StructuredDocumentation",
								"src": "123:150:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP. Does not include\n the optional functions; to access them see {ERC20Detailed}."
							},
							"fullyImplemented": false,
							"id": 674,
							"linearizedBaseContracts": [
								674
							],
							"name": "IERC20",
							"nameLocation": "284:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "297:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 605,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "377:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "388:2:2"
									},
									"returnParameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "414:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:9:2"
									},
									"scope": 674,
									"src": "368:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "429:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 613,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "515:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "533:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "525:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "524:17:2"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "565:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:9:2"
									},
									"scope": 674,
									"src": "506:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "580:209:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 623,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "803:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "820:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "812:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "839:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "831:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:35:2"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "865:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 620,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "865:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "864:6:2"
									},
									"scope": 674,
									"src": "794:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "877:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 633,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1155:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1173:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "1165:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1165:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1188:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "1180:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1180:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1164:32:2"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "1220:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:9:2"
									},
									"scope": 674,
									"src": "1146:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "1235:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 643,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1891:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1907:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "1899:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1899:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1924:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "1916:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1916:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1898:33:2"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "1950:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 640,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1950:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:6:2"
									},
									"scope": 674,
									"src": "1882:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "1962:296:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 655,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2272:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2293:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "2285:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2285:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2309:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "2301:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2301:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2328:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "2320:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2320:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:51:2"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "2354:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 652,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2354:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2353:6:2"
									},
									"scope": 674,
									"src": "2263:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "2366:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 664,
									"name": "Transfer",
									"nameLocation": "2535:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2560:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "2544:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2544:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2582:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "2566:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2594:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "2586:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2586:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2543:57:2"
									},
									"src": "2529:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "2607:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 673,
									"name": "Approval",
									"nameLocation": "2766:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2791:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "2775:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2814:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "2798:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2831:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "2823:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2823:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2774:63:2"
									},
									"src": "2760:78:2"
								}
							],
							"scope": 675,
							"src": "274:2566:2",
							"usedErrors": [],
							"usedEvents": [
								664,
								673
							]
						}
					],
					"src": "32:2810:2"
				},
				"id": 2
			},
			"NewFraxProtocol/contracts/Math/SafeMath.sol": {
				"ast": {
					"absolutePath": "NewFraxProtocol/contracts/Math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							870
						]
					},
					"id": 871,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 676,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "32:25:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 677,
								"nodeType": "StructuredDocumentation",
								"src": "59:563:3",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 870,
							"linearizedBaseContracts": [
								870
							],
							"name": "SafeMath",
							"nameLocation": "631:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "935:109:3",
										"statements": [
											{
												"assignments": [
													688
												],
												"declarations": [
													{
														"constant": false,
														"id": 688,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "953:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 702,
														"src": "945:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 687,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "945:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 692,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 689,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "957:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 690,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "961:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "957:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "945:17:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 694,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 688,
																"src": "980:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 695,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 680,
																"src": "985:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "980:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "988:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 693,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "972:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "972:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "972:46:3"
											},
											{
												"expression": {
													"id": 700,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 688,
													"src": "1036:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 686,
												"id": 701,
												"nodeType": "Return",
												"src": "1029:8:3"
											}
										]
									},
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "646:217:3",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "877:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "889:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "881:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "900:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "892:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "880:22:3"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 870,
									"src": "868:176:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "1375:67:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 714,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "1396:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 715,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "1399:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1402:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 713,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															720,
															748
														],
														"referencedDeclaration": 748,
														"src": "1392:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1392:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 712,
												"id": 718,
												"nodeType": "Return",
												"src": "1385:50:3"
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "1050:253:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1317:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1329:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "1321:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1321:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1340:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "1332:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1320:22:3"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "1366:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1365:9:3"
									},
									"scope": 870,
									"src": "1308:134:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 747,
										"nodeType": "Block",
										"src": "1861:92:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 733,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "1879:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 734,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 723,
																"src": "1884:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1879:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 736,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "1887:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 732,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1871:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1871:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 738,
												"nodeType": "ExpressionStatement",
												"src": "1871:29:3"
											},
											{
												"assignments": [
													740
												],
												"declarations": [
													{
														"constant": false,
														"id": 740,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1918:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 747,
														"src": "1910:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 739,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1910:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 744,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 741,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "1922:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 742,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "1926:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1922:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1910:17:3"
											},
											{
												"expression": {
													"id": 745,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 740,
													"src": "1945:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 731,
												"id": 746,
												"nodeType": "Return",
												"src": "1938:8:3"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "1448:313:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow.\n _Available since v2.4.0._"
									},
									"id": 748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1775:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1787:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "1779:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1798:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "1790:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1790:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1815:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "1801:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 726,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1801:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:50:3"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "1852:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1851:9:3"
									},
									"scope": 870,
									"src": "1766:187:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "2260:392:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 758,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "2492:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 759,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2497:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2492:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 764,
												"nodeType": "IfStatement",
												"src": "2488:45:3",
												"trueBody": {
													"id": 763,
													"nodeType": "Block",
													"src": "2500:33:3",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2521:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 757,
															"id": 762,
															"nodeType": "Return",
															"src": "2514:8:3"
														}
													]
												}
											},
											{
												"assignments": [
													766
												],
												"declarations": [
													{
														"constant": false,
														"id": 766,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2551:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 782,
														"src": "2543:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 765,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2543:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 770,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "2555:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 768,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "2559:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2555:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2543:17:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 772,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "2578:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 773,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "2582:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2578:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 775,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 753,
																"src": "2587:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2578:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2590:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 771,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2570:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2570:56:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 779,
												"nodeType": "ExpressionStatement",
												"src": "2570:56:3"
											},
											{
												"expression": {
													"id": 780,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 766,
													"src": "2644:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 757,
												"id": 781,
												"nodeType": "Return",
												"src": "2637:8:3"
											}
										]
									},
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "1959:229:3",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "2202:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2214:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "2206:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2225:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "2217:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2217:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2205:22:3"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "2251:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2251:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2250:9:3"
									},
									"scope": 870,
									"src": "2193:459:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 799,
										"nodeType": "Block",
										"src": "3174:63:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 794,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "3195:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 795,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "3198:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3201:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 793,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															800,
															828
														],
														"referencedDeclaration": 828,
														"src": "3191:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3191:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 792,
												"id": 798,
												"nodeType": "Return",
												"src": "3184:46:3"
											}
										]
									},
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "2658:444:3",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3116:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3128:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "3120:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3120:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3139:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "3131:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3131:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3119:22:3"
									},
									"returnParameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "3165:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:9:3"
									},
									"scope": 870,
									"src": "3107:130:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "3847:243:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 813,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "3931:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3935:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3931:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 816,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "3938:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 812,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3923:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3923:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "3923:28:3"
											},
											{
												"assignments": [
													820
												],
												"declarations": [
													{
														"constant": false,
														"id": 820,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "3969:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 827,
														"src": "3961:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 819,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3961:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 824,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 821,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "3973:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 822,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "3977:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3973:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3961:17:3"
											},
											{
												"expression": {
													"id": 825,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 820,
													"src": "4082:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 811,
												"id": 826,
												"nodeType": "Return",
												"src": "4075:8:3"
											}
										]
									},
									"documentation": {
										"id": 801,
										"nodeType": "StructuredDocumentation",
										"src": "3243:504:3",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3761:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3773:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "3765:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3765:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3784:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "3776:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3776:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3801:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "3787:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 806,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3787:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3764:50:3"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "3838:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3838:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3837:9:3"
									},
									"scope": 870,
									"src": "3752:338:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "4601:61:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 839,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "4622:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 840,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "4625:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4628:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 838,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															845,
															869
														],
														"referencedDeclaration": 869,
														"src": "4618:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 837,
												"id": 843,
												"nodeType": "Return",
												"src": "4611:44:3"
											}
										]
									},
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "4096:433:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4543:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4555:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "4547:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4547:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4566:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "4558:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4558:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4546:22:3"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "4592:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4592:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4591:9:3"
									},
									"scope": 870,
									"src": "4534:128:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "5261:68:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 858,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 850,
																"src": "5279:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5284:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5279:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 861,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "5287:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 857,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5271:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5271:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "5271:29:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 864,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "5317:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 865,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "5321:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5317:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 856,
												"id": 867,
												"nodeType": "Return",
												"src": "5310:12:3"
											}
										]
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "4668:493:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "5175:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5187:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "5179:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5179:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5198:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "5190:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5190:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5215:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "5201:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 851,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5201:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5178:50:3"
									},
									"returnParameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "5252:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5252:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5251:9:3"
									},
									"scope": 870,
									"src": "5166:163:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 871,
							"src": "623:4708:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:5299:3"
				},
				"id": 3
			},
			"NewFraxProtocol/contracts/Utils/Address.sol": {
				"ast": {
					"absolutePath": "NewFraxProtocol/contracts/Utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1166
						]
					},
					"id": 1167,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 872,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "32:25:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 873,
								"nodeType": "StructuredDocumentation",
								"src": "59:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1166,
							"linearizedBaseContracts": [
								1166
							],
							"name": "Address",
							"nameLocation": "135:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 889,
										"nodeType": "Block",
										"src": "785:347:4",
										"statements": [
											{
												"assignments": [
													882
												],
												"declarations": [
													{
														"constant": false,
														"id": 882,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "990:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 889,
														"src": "982:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 881,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "982:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 883,
												"nodeType": "VariableDeclarationStatement",
												"src": "982:12:4"
											},
											{
												"AST": {
													"nativeSrc": "1069:32:4",
													"nodeType": "YulBlock",
													"src": "1069:32:4",
													"statements": [
														{
															"nativeSrc": "1071:28:4",
															"nodeType": "YulAssignment",
															"src": "1071:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nativeSrc": "1091:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "1091:7:4"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nativeSrc": "1079:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "1079:11:4"
																},
																"nativeSrc": "1079:20:4",
																"nodeType": "YulFunctionCall",
																"src": "1079:20:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1071:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1071:4:4"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 876,
														"isOffset": false,
														"isSlot": false,
														"src": "1091:7:4",
														"valueSize": 1
													},
													{
														"declaration": 882,
														"isOffset": false,
														"isSlot": false,
														"src": "1071:4:4",
														"valueSize": 1
													}
												],
												"id": 884,
												"nodeType": "InlineAssembly",
												"src": "1060:41:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 885,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "1117:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 886,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1124:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1117:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 880,
												"id": 888,
												"nodeType": "Return",
												"src": "1110:15:4"
											}
										]
									},
									"documentation": {
										"id": 874,
										"nodeType": "StructuredDocumentation",
										"src": "149:565:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "728:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "747:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "739:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "739:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:17:4"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "779:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 878,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:4"
									},
									"scope": 1166,
									"src": "719:413:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "2120:320:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 901,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2146:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1166",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1166",
																				"typeString": "library Address"
																			}
																		],
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2138:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 899,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2138:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2138:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 903,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2152:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2138:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 904,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 895,
																"src": "2163:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2138:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2171:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 898,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2130:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2130:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "2130:73:4"
											},
											{
												"assignments": [
													910,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 910,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2297:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 923,
														"src": "2292:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 909,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2292:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 917,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2342:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 911,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 893,
																"src": "2310:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2320:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2310:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 913,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 895,
																"src": "2333:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2310:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2310:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2291:54:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 919,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "2363:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2372:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 918,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2355:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2355:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "2355:78:4"
											}
										]
									},
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "1138:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2058:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2084:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "2068:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2068:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2103:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "2095:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2095:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2067:43:4"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2120:0:4"
									},
									"scope": 1166,
									"src": "2049:391:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "3270:82:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 935,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "3298:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 936,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "3306:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3312:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 934,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															941,
															961
														],
														"referencedDeclaration": 961,
														"src": "3285:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3285:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 933,
												"id": 939,
												"nodeType": "Return",
												"src": "3278:67:4"
											}
										]
									},
									"documentation": {
										"id": 925,
										"nodeType": "StructuredDocumentation",
										"src": "2446:730:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3190:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3211:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "3203:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3203:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3232:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "3219:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 928,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3219:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:35:4"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "3256:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 931,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3256:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3255:14:4"
									},
									"scope": 1166,
									"src": "3181:171:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "3691:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 954,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "3730:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 955,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "3738:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3744:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 957,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "3747:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 953,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															981,
															1031
														],
														"referencedDeclaration": 1031,
														"src": "3708:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3708:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 952,
												"id": 959,
												"nodeType": "Return",
												"src": "3701:59:4"
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "3358:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3583:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3604:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "3596:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3625:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "3612:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 945,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3612:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3645:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "3631:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 947,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3631:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3595:63:4"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "3677:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 950,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3677:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3676:14:4"
									},
									"scope": 1166,
									"src": "3574:193:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "4242:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 974,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "4281:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 975,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "4289:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 976,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "4295:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4302:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 973,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															981,
															1031
														],
														"referencedDeclaration": 1031,
														"src": "4259:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4259:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 972,
												"id": 979,
												"nodeType": "Return",
												"src": "4252:94:4"
											}
										]
									},
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "3773:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4138:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4168:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "4160:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4160:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4189:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "4176:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 965,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4176:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4203:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "4195:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4195:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4159:50:4"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "4228:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 970,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4228:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4227:14:4"
									},
									"scope": 1166,
									"src": "4129:224:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "4742:382:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 998,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4768:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1166",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1166",
																				"typeString": "library Address"
																			}
																		],
																		"id": 997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4760:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 996,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4760:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4760:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4774:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4760:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1001,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 988,
																"src": "4785:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4760:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4792:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 995,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4752:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4752:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "4752:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1008,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "4862:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1007,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "4851:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4851:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4871:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1006,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4843:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4843:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "4843:60:4"
											},
											{
												"assignments": [
													1014,
													1016
												],
												"declarations": [
													{
														"constant": false,
														"id": 1014,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4979:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1030,
														"src": "4974:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1013,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4974:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1016,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5001:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1030,
														"src": "4988:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1015,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4988:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1023,
												"initialValue": {
													"arguments": [
														{
															"id": 1021,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "5043:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1017,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "5015:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5022:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5015:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1019,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 988,
																"src": "5035:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5015:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5015:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4973:75:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1025,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "5083:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1026,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "5092:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1027,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "5104:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1024,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "5065:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5065:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 994,
												"id": 1029,
												"nodeType": "Return",
												"src": "5058:59:4"
											}
										]
									},
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "4359:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4610:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4640:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "4632:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4632:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4661:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "4648:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 985,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4648:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4675:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "4667:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4667:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4696:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "4682:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 989,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4682:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4631:78:4"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "4728:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 992,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4728:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4727:14:4"
									},
									"scope": 1166,
									"src": "4601:523:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1047,
										"nodeType": "Block",
										"src": "5401:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1042,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "5437:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1043,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "5445:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5451:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1041,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1048,
															1083
														],
														"referencedDeclaration": 1083,
														"src": "5418:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5418:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1040,
												"id": 1046,
												"nodeType": "Return",
												"src": "5411:80:4"
											}
										]
									},
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "5130:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1048,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5310:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5337:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "5329:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5329:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5358:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "5345:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1035,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5345:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5328:35:4"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "5387:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1038,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5387:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5386:14:4"
									},
									"scope": 1166,
									"src": "5301:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "5810:288:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1062,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1051,
																	"src": "5839:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1061,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "5828:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5828:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5848:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1060,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5820:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5820:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1066,
												"nodeType": "ExpressionStatement",
												"src": "5820:67:4"
											},
											{
												"assignments": [
													1068,
													1070
												],
												"declarations": [
													{
														"constant": false,
														"id": 1068,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5963:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1082,
														"src": "5958:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1067,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5958:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1070,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5985:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1082,
														"src": "5972:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1069,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5972:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1075,
												"initialValue": {
													"arguments": [
														{
															"id": 1073,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "6017:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1071,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "5999:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1072,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6006:10:4",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5999:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5999:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5957:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1077,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "6057:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1078,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "6066:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1079,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "6078:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1076,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "6039:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6039:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1059,
												"id": 1081,
												"nodeType": "Return",
												"src": "6032:59:4"
											}
										]
									},
									"documentation": {
										"id": 1049,
										"nodeType": "StructuredDocumentation",
										"src": "5504:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5691:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5718:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "5710:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5710:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5739:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "5726:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1052,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5726:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5759:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "5745:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1054,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5745:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:63:4"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "5796:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1057,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5796:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5795:14:4"
									},
									"scope": 1166,
									"src": "5682:416:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "6374:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1094,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "6412:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1095,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "6420:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6426:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1093,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1100,
															1135
														],
														"referencedDeclaration": 1135,
														"src": "6391:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6391:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1092,
												"id": 1098,
												"nodeType": "Return",
												"src": "6384:84:4"
											}
										]
									},
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "6104:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6286:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6315:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "6307:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6307:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6336:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "6323:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1087,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6323:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6306:35:4"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "6360:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1090,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6360:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6359:14:4"
									},
									"scope": 1166,
									"src": "6277:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1134,
										"nodeType": "Block",
										"src": "6786:292:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1114,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1103,
																	"src": "6815:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1113,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "6804:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6804:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6824:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1112,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6796:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6796:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1118,
												"nodeType": "ExpressionStatement",
												"src": "6796:69:4"
											},
											{
												"assignments": [
													1120,
													1122
												],
												"declarations": [
													{
														"constant": false,
														"id": 1120,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6941:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1134,
														"src": "6936:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1119,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6936:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1122,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6963:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1134,
														"src": "6950:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1121,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6950:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1127,
												"initialValue": {
													"arguments": [
														{
															"id": 1125,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "6997:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1123,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "6977:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6984:12:4",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6977:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6977:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6935:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1129,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "7037:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1130,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "7046:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1131,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "7058:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1128,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "7019:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7019:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1111,
												"id": 1133,
												"nodeType": "Return",
												"src": "7012:59:4"
											}
										]
									},
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "6481:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6670:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6699:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "6691:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6691:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "6707:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1104,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6707:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6740:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "6726:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1106,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6726:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6690:63:4"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "6772:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1109,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6772:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6771:14:4"
									},
									"scope": 1166,
									"src": "6661:417:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1164,
										"nodeType": "Block",
										"src": "7213:596:4",
										"statements": [
											{
												"condition": {
													"id": 1146,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1137,
													"src": "7227:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1162,
													"nodeType": "Block",
													"src": "7284:519:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1150,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1139,
																		"src": "7368:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7379:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7368:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7388:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7368:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1160,
																"nodeType": "Block",
																"src": "7740:53:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1157,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1141,
																					"src": "7765:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1156,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7758:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7758:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1159,
																		"nodeType": "ExpressionStatement",
																		"src": "7758:20:4"
																	}
																]
															},
															"id": 1161,
															"nodeType": "IfStatement",
															"src": "7364:429:4",
															"trueBody": {
																"id": 1155,
																"nodeType": "Block",
																"src": "7391:343:4",
																"statements": [
																	{
																		"AST": {
																			"nativeSrc": "7575:145:4",
																			"nodeType": "YulBlock",
																			"src": "7575:145:4",
																			"statements": [
																				{
																					"nativeSrc": "7597:40:4",
																					"nodeType": "YulVariableDeclaration",
																					"src": "7597:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nativeSrc": "7626:10:4",
																								"nodeType": "YulIdentifier",
																								"src": "7626:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nativeSrc": "7620:5:4",
																							"nodeType": "YulIdentifier",
																							"src": "7620:5:4"
																						},
																						"nativeSrc": "7620:17:4",
																						"nodeType": "YulFunctionCall",
																						"src": "7620:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nativeSrc": "7601:15:4",
																							"nodeType": "YulTypedName",
																							"src": "7601:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "7669:2:4",
																										"nodeType": "YulLiteral",
																										"src": "7669:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nativeSrc": "7673:10:4",
																										"nodeType": "YulIdentifier",
																										"src": "7673:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7665:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "7665:3:4"
																								},
																								"nativeSrc": "7665:19:4",
																								"nodeType": "YulFunctionCall",
																								"src": "7665:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nativeSrc": "7686:15:4",
																								"nodeType": "YulIdentifier",
																								"src": "7686:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "7658:6:4",
																							"nodeType": "YulIdentifier",
																							"src": "7658:6:4"
																						},
																						"nativeSrc": "7658:44:4",
																						"nodeType": "YulFunctionCall",
																						"src": "7658:44:4"
																					},
																					"nativeSrc": "7658:44:4",
																					"nodeType": "YulExpressionStatement",
																					"src": "7658:44:4"
																				}
																			]
																		},
																		"evmVersion": "shanghai",
																		"externalReferences": [
																			{
																				"declaration": 1139,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7626:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1139,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7673:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 1154,
																		"nodeType": "InlineAssembly",
																		"src": "7566:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 1163,
												"nodeType": "IfStatement",
												"src": "7223:580:4",
												"trueBody": {
													"id": 1149,
													"nodeType": "Block",
													"src": "7236:42:4",
													"statements": [
														{
															"expression": {
																"id": 1147,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1139,
																"src": "7257:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1145,
															"id": 1148,
															"nodeType": "Return",
															"src": "7250:17:4"
														}
													]
												}
											}
										]
									},
									"id": 1165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nameLocation": "7093:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7116:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "7111:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7111:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7138:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "7125:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1138,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7125:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7164:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "7150:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1140,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7150:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7110:67:4"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "7199:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1143,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:4"
									},
									"scope": 1166,
									"src": "7084:725:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1167,
							"src": "127:7684:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:7779:4"
				},
				"id": 4
			}
		}
	}
}