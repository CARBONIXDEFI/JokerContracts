{
	"id": "9fb619a7e5c80f391502bbc404d86f46",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.11;\n\nimport \"../../Math/SafeMath.sol\";\n\n\n\nlibrary FraxPoolLibrary {\n    using SafeMath for uint256;\n\n    // Constants for various precisions\n    uint256 private constant PRICE_PRECISION = 1e6;\n\n    // ================ Structs ================\n    // Needed to lower stack size\n    struct MintFF_Params {\n        uint256 fxs_price_usd; \n        uint256 col_price_usd;\n        uint256 fxs_amount;\n        uint256 collateral_amount;\n        uint256 col_ratio;\n    }\n\n    struct BuybackFXS_Params {\n        uint256 excess_collateral_dollar_value_d18;\n        uint256 fxs_price_usd;\n        uint256 col_price_usd;\n        uint256 FXS_amount;\n    }\n\n    // ================ Functions ================\n\n    function calcMint1t1FRAX(uint256 col_price, uint256 collateral_amount_d18) public pure returns (uint256) {\n        return (collateral_amount_d18.mul(col_price)).div(1e6);\n    }\n\n    function calcMintAlgorithmicFRAX(uint256 fxs_price_usd, uint256 fxs_amount_d18) public pure returns (uint256) {\n        return fxs_amount_d18.mul(fxs_price_usd).div(1e6);\n    }\n\n    // Must be internal because of the struct\n    function calcMintFractionalFRAX(MintFF_Params memory params) internal pure returns (uint256, uint256) {\n        // Since solidity truncates division, every division operation must be the last operation in the equation to ensure minimum error\n        // The contract must check the proper ratio was sent to mint FRAX. We do this by seeing the minimum mintable FRAX based on each amount \n        uint256 fxs_dollar_value_d18;\n        uint256 c_dollar_value_d18;\n        \n        // Scoping for stack concerns\n        {    \n            // USD amounts of the collateral and the FXS\n            fxs_dollar_value_d18 = params.fxs_amount.mul(params.fxs_price_usd).div(1e6);\n            c_dollar_value_d18 = params.collateral_amount.mul(params.col_price_usd).div(1e6);\n\n        }\n        uint calculated_fxs_dollar_value_d18 = \n                    (c_dollar_value_d18.mul(1e6).div(params.col_ratio))\n                    .sub(c_dollar_value_d18);\n\n        uint calculated_fxs_needed = calculated_fxs_dollar_value_d18.mul(1e6).div(params.fxs_price_usd);\n\n        return (\n            c_dollar_value_d18.add(calculated_fxs_dollar_value_d18),\n            calculated_fxs_needed\n        );\n    }\n\n    function calcRedeem1t1FRAX(uint256 col_price_usd, uint256 FRAX_amount) public pure returns (uint256) {\n        return FRAX_amount.mul(1e6).div(col_price_usd);\n    }\n\n    // Must be internal because of the struct\n    function calcBuyBackFXS(BuybackFXS_Params memory params) internal pure returns (uint256) {\n        // If the total collateral value is higher than the amount required at the current collateral ratio then buy back up to the possible FXS with the desired collateral\n        require(params.excess_collateral_dollar_value_d18 > 0, \"No excess collateral to buy back!\");\n\n        // Make sure not to take more than is available\n        uint256 fxs_dollar_value_d18 = params.FXS_amount.mul(params.fxs_price_usd).div(1e6);\n        require(fxs_dollar_value_d18 <= params.excess_collateral_dollar_value_d18, \"You are trying to buy back more than the excess!\");\n\n        // Get the equivalent amount of collateral based on the market value of FXS provided \n        uint256 collateral_equivalent_d18 = fxs_dollar_value_d18.mul(1e6).div(params.col_price_usd);\n        //collateral_equivalent_d18 = collateral_equivalent_d18.sub((collateral_equivalent_d18.mul(params.buyback_fee)).div(1e6));\n\n        return (\n            collateral_equivalent_d18\n        );\n\n    }\n\n\n    // Returns value of collateral that must increase to reach recollateralization target (if 0 means no recollateralization)\n    function recollateralizeAmount(uint256 total_supply, uint256 global_collateral_ratio, uint256 global_collat_value) public pure returns (uint256) {\n        uint256 target_collat_value = total_supply.mul(global_collateral_ratio).div(1e6); // We want 18 decimals of precision so divide by 1e6; total_supply is 1e18 and global_collateral_ratio is 1e6\n        // Subtract the current value of collateral from the target value needed, if higher than 0 then system needs to recollateralize\n        return target_collat_value.sub(global_collat_value); // If recollateralization is not needed, throws a subtraction underflow\n        // return(recollateralization_left);\n    }\n\n    function calcRecollateralizeFRAXInner(\n        uint256 collateral_amount, \n        uint256 col_price,\n        uint256 global_collat_value,\n        uint256 frax_total_supply,\n        uint256 global_collateral_ratio\n    ) public pure returns (uint256, uint256) {\n        uint256 collat_value_attempted = collateral_amount.mul(col_price).div(1e6);\n        uint256 effective_collateral_ratio = global_collat_value.mul(1e6).div(frax_total_supply); //returns it in 1e6\n        uint256 recollat_possible = (global_collateral_ratio.mul(frax_total_supply).sub(frax_total_supply.mul(effective_collateral_ratio))).div(1e6);\n\n        uint256 amount_to_recollat;\n        if(collat_value_attempted <= recollat_possible){\n            amount_to_recollat = collat_value_attempted;\n        } else {\n            amount_to_recollat = recollat_possible;\n        }\n\n        return (amount_to_recollat.mul(1e6).div(col_price), amount_to_recollat);\n\n    }\n\n}"
			},
			"NewFraxProtocol/contracts/Math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.11;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     *\n     * _Available since v2.4.0._\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol": {
				"FraxPoolLibrary": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "col_price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "collateral_amount_d18",
									"type": "uint256"
								}
							],
							"name": "calcMint1t1FRAX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "fxs_price_usd",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "fxs_amount_d18",
									"type": "uint256"
								}
							],
							"name": "calcMintAlgorithmicFRAX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "collateral_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "col_price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "global_collat_value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "frax_total_supply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "global_collateral_ratio",
									"type": "uint256"
								}
							],
							"name": "calcRecollateralizeFRAXInner",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "col_price_usd",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "FRAX_amount",
									"type": "uint256"
								}
							],
							"name": "calcRedeem1t1FRAX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "total_supply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "global_collateral_ratio",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "global_collat_value",
									"type": "uint256"
								}
							],
							"name": "recollateralizeAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":109:5370  library FraxPoolLibrary {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":109:5370  library FraxPoolLibrary {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x06058f4a\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x0f41b452\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0ff24ec1\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5413e192\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xce032cc1\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4436:5367  function calcRecollateralizeFRAXInner(... */\n    tag_2:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_11\n      swap3\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":2364:2528  function calcRedeem1t1FRAX(uint256 col_price_usd, uint256 FRAX_amount) public pure returns (uint256) {... */\n    tag_3:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":3764:4430  function recollateralizeAmount(uint256 total_supply, uint256 global_collateral_ratio, uint256 global_collat_value) public pure returns (uint256) {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":767:943  function calcMint1t1FRAX(uint256 col_price, uint256 collateral_amount_d18) public pure returns (uint256) {... */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_25:\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":949:1125  function calcMintAlgorithmicFRAX(uint256 fxs_price_usd, uint256 fxs_amount_d18) public pure returns (uint256) {... */\n    tag_6:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_29:\n      tag_30\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4436:5367  function calcRecollateralizeFRAXInner(... */\n    tag_10:\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4677:4684  uint256 */\n      0x00\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4686:4693  uint256 */\n      dup1\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4705:4735  uint256 collat_value_attempted */\n      0x00\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4738:4779  collateral_amount.mul(col_price).div(1e6) */\n      tag_33\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4775:4778  1e6 */\n      0x0f4240\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4738:4770  collateral_amount.mul(col_price) */\n      tag_34\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4760:4769  col_price */\n      dup10\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4738:4755  collateral_amount */\n      dup12\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4738:4759  collateral_amount.mul */\n      tag_35\n      swap1\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4738:4770  collateral_amount.mul(col_price) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_34:\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4738:4774  collateral_amount.mul(col_price).div */\n      tag_36\n      swap1\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4738:4779  collateral_amount.mul(col_price).div(1e6) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_33:\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4705:4779  uint256 collat_value_attempted = collateral_amount.mul(col_price).div(1e6) */\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4789:4823  uint256 effective_collateral_ratio */\n      0x00\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4826:4877  global_collat_value.mul(1e6).div(frax_total_supply) */\n      tag_37\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4859:4876  frax_total_supply */\n      dup7\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4826:4854  global_collat_value.mul(1e6) */\n      tag_38\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4850:4853  1e6 */\n      0x0f4240\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4826:4845  global_collat_value */\n      dup11\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4826:4849  global_collat_value.mul */\n      tag_35\n      swap1\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4826:4854  global_collat_value.mul(1e6) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_38:\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4826:4858  global_collat_value.mul(1e6).div */\n      tag_36\n      swap1\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4826:4877  global_collat_value.mul(1e6).div(frax_total_supply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_37:\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4789:4877  uint256 effective_collateral_ratio = global_collat_value.mul(1e6).div(frax_total_supply) */\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4907:4932  uint256 recollat_possible */\n      0x00\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4935:5047  (global_collateral_ratio.mul(frax_total_supply).sub(frax_total_supply.mul(effective_collateral_ratio))).div(1e6) */\n      tag_39\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":5043:5046  1e6 */\n      0x0f4240\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4936:5037  global_collateral_ratio.mul(frax_total_supply).sub(frax_total_supply.mul(effective_collateral_ratio)) */\n      tag_40\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4987:5036  frax_total_supply.mul(effective_collateral_ratio) */\n      tag_41\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":5009:5035  effective_collateral_ratio */\n      dup6\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4987:5004  frax_total_supply */\n      dup12\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4987:5008  frax_total_supply.mul */\n      tag_35\n      swap1\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4987:5036  frax_total_supply.mul(effective_collateral_ratio) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_41:\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4936:4982  global_collateral_ratio.mul(frax_total_supply) */\n      tag_42\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4964:4981  frax_total_supply */\n      dup12\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4936:4959  global_collateral_ratio */\n      dup12\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4936:4963  global_collateral_ratio.mul */\n      tag_35\n      swap1\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4936:4982  global_collateral_ratio.mul(frax_total_supply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_42:\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4936:4986  global_collateral_ratio.mul(frax_total_supply).sub */\n      tag_43\n      swap1\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4936:5037  global_collateral_ratio.mul(frax_total_supply).sub(frax_total_supply.mul(effective_collateral_ratio)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_40:\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4935:5042  (global_collateral_ratio.mul(frax_total_supply).sub(frax_total_supply.mul(effective_collateral_ratio))).div */\n      tag_36\n      swap1\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4935:5047  (global_collateral_ratio.mul(frax_total_supply).sub(frax_total_supply.mul(effective_collateral_ratio))).div(1e6) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_39:\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4907:5047  uint256 recollat_possible = (global_collateral_ratio.mul(frax_total_supply).sub(frax_total_supply.mul(effective_collateral_ratio))).div(1e6) */\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":5058:5084  uint256 amount_to_recollat */\n      0x00\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":5123:5140  recollat_possible */\n      dup2\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":5097:5119  collat_value_attempted */\n      dup5\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":5097:5140  collat_value_attempted <= recollat_possible */\n      gt\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":5094:5278  if(collat_value_attempted <= recollat_possible){... */\n      tag_44\n      jumpi\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":5176:5198  collat_value_attempted */\n      dup4\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":5155:5198  amount_to_recollat = collat_value_attempted */\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":5094:5278  if(collat_value_attempted <= recollat_possible){... */\n      jump(tag_45)\n    tag_44:\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":5250:5267  recollat_possible */\n      dup2\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":5229:5267  amount_to_recollat = recollat_possible */\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":5094:5278  if(collat_value_attempted <= recollat_possible){... */\n    tag_45:\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":5296:5338  amount_to_recollat.mul(1e6).div(col_price) */\n      tag_46\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":5328:5337  col_price */\n      dup11\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":5296:5323  amount_to_recollat.mul(1e6) */\n      tag_47\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":5319:5322  1e6 */\n      0x0f4240\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":5296:5314  amount_to_recollat */\n      dup5\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":5296:5318  amount_to_recollat.mul */\n      tag_35\n      swap1\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":5296:5323  amount_to_recollat.mul(1e6) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_47:\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":5296:5327  amount_to_recollat.mul(1e6).div */\n      tag_36\n      swap1\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":5296:5338  amount_to_recollat.mul(1e6).div(col_price) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_46:\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":5340:5358  amount_to_recollat */\n      dup2\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":5288:5359  return (amount_to_recollat.mul(1e6).div(col_price), amount_to_recollat) */\n      swap6\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4436:5367  function calcRecollateralizeFRAXInner(... */\n      swap6\n      pop\n      swap6\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":2364:2528  function calcRedeem1t1FRAX(uint256 col_price_usd, uint256 FRAX_amount) public pure returns (uint256) {... */\n    tag_16:\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":2456:2463  uint256 */\n      0x00\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":2482:2521  FRAX_amount.mul(1e6).div(col_price_usd) */\n      tag_49\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":2507:2520  col_price_usd */\n      dup4\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":2482:2502  FRAX_amount.mul(1e6) */\n      tag_50\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":2498:2501  1e6 */\n      0x0f4240\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":2482:2493  FRAX_amount */\n      dup6\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":2482:2497  FRAX_amount.mul */\n      tag_35\n      swap1\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":2482:2502  FRAX_amount.mul(1e6) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_50:\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":2482:2506  FRAX_amount.mul(1e6).div */\n      tag_36\n      swap1\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":2482:2521  FRAX_amount.mul(1e6).div(col_price_usd) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_49:\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":2475:2521  return FRAX_amount.mul(1e6).div(col_price_usd) */\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":2364:2528  function calcRedeem1t1FRAX(uint256 col_price_usd, uint256 FRAX_amount) public pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":3764:4430  function recollateralizeAmount(uint256 total_supply, uint256 global_collateral_ratio, uint256 global_collat_value) public pure returns (uint256) {... */\n    tag_22:\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":3900:3907  uint256 */\n      0x00\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":3919:3946  uint256 target_collat_value */\n      dup1\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":3949:3999  total_supply.mul(global_collateral_ratio).div(1e6) */\n      tag_52\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":3995:3998  1e6 */\n      0x0f4240\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":3949:3990  total_supply.mul(global_collateral_ratio) */\n      tag_53\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":3966:3989  global_collateral_ratio */\n      dup7\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":3949:3961  total_supply */\n      dup9\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":3949:3965  total_supply.mul */\n      tag_35\n      swap1\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":3949:3990  total_supply.mul(global_collateral_ratio) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_53:\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":3949:3994  total_supply.mul(global_collateral_ratio).div */\n      tag_36\n      swap1\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":3949:3999  total_supply.mul(global_collateral_ratio).div(1e6) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_52:\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":3919:3999  uint256 target_collat_value = total_supply.mul(global_collateral_ratio).div(1e6) */\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4262:4306  target_collat_value.sub(global_collat_value) */\n      tag_54\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4286:4305  global_collat_value */\n      dup4\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4262:4281  target_collat_value */\n      dup3\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4262:4285  target_collat_value.sub */\n      tag_43\n      swap1\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4262:4306  target_collat_value.sub(global_collat_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_54:\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":4255:4306  return target_collat_value.sub(global_collat_value) */\n      swap2\n      pop\n      pop\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":3764:4430  function recollateralizeAmount(uint256 total_supply, uint256 global_collateral_ratio, uint256 global_collat_value) public pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":767:943  function calcMint1t1FRAX(uint256 col_price, uint256 collateral_amount_d18) public pure returns (uint256) {... */\n    tag_26:\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":863:870  uint256 */\n      0x00\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":889:936  (collateral_amount_d18.mul(col_price)).div(1e6) */\n      tag_56\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":932:935  1e6 */\n      0x0f4240\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":890:926  collateral_amount_d18.mul(col_price) */\n      tag_57\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":916:925  col_price */\n      dup6\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":890:911  collateral_amount_d18 */\n      dup6\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":890:915  collateral_amount_d18.mul */\n      tag_35\n      swap1\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":890:926  collateral_amount_d18.mul(col_price) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_57:\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":889:931  (collateral_amount_d18.mul(col_price)).div */\n      tag_36\n      swap1\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":889:936  (collateral_amount_d18.mul(col_price)).div(1e6) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_56:\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":882:936  return (collateral_amount_d18.mul(col_price)).div(1e6) */\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":767:943  function calcMint1t1FRAX(uint256 col_price, uint256 collateral_amount_d18) public pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":949:1125  function calcMintAlgorithmicFRAX(uint256 fxs_price_usd, uint256 fxs_amount_d18) public pure returns (uint256) {... */\n    tag_30:\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":1050:1057  uint256 */\n      0x00\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":1076:1118  fxs_amount_d18.mul(fxs_price_usd).div(1e6) */\n      tag_59\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":1114:1117  1e6 */\n      0x0f4240\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":1076:1109  fxs_amount_d18.mul(fxs_price_usd) */\n      tag_60\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":1095:1108  fxs_price_usd */\n      dup6\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":1076:1090  fxs_amount_d18 */\n      dup6\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":1076:1094  fxs_amount_d18.mul */\n      tag_35\n      swap1\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":1076:1109  fxs_amount_d18.mul(fxs_price_usd) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_60:\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":1076:1113  fxs_amount_d18.mul(fxs_price_usd).div */\n      tag_36\n      swap1\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":1076:1118  fxs_amount_d18.mul(fxs_price_usd).div(1e6) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_59:\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":1069:1118  return fxs_amount_d18.mul(fxs_price_usd).div(1e6) */\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":949:1125  function calcMintAlgorithmicFRAX(uint256 fxs_price_usd, uint256 fxs_amount_d18) public pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2193:2652  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_35:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2251:2258  uint256 */\n      0x00\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2497:2498  0 */\n      dup1\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2492:2493  a */\n      dup4\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2492:2498  a == 0 */\n      sub\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2488:2533  if (a == 0) {... */\n      tag_62\n      jumpi\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2521:2522  0 */\n      0x00\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2514:2522  return 0 */\n      swap1\n      pop\n      jump(tag_61)\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2488:2533  if (a == 0) {... */\n    tag_62:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2543:2552  uint256 c */\n      0x00\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2559:2560  b */\n      dup3\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2555:2556  a */\n      dup5\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2555:2560  a * b */\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2543:2560  uint256 c = a * b */\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2587:2588  b */\n      dup3\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2582:2583  a */\n      dup5\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2578:2579  c */\n      dup3\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2578:2583  c / a */\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2578:2588  c / a == b */\n      eq\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2570:2626  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2644:2645  c */\n      dup1\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2637:2645  return c */\n      swap2\n      pop\n      pop\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2193:2652  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_61:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3107:3237  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_36:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3165:3172  uint256 */\n      0x00\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3191:3230  div(a, b, \"SafeMath: division by zero\") */\n      tag_71\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3195:3196  a */\n      dup4\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3198:3199  b */\n      dup4\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3191:3230  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3191:3194  div */\n      tag_72\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3191:3230  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_71:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3184:3230  return div(a, b, \"SafeMath: division by zero\") */\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3107:3237  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1308:1442  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_43:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1366:1373  uint256 */\n      0x00\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1392:1435  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_74\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1396:1397  a */\n      dup4\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1399:1400  b */\n      dup4\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1392:1435  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1392:1395  sub */\n      tag_75\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1392:1435  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_74:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1385:1435  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1308:1442  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3752:4090  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_72:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3838:3845  uint256 */\n      0x00\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3935:3936  0 */\n      dup1\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3931:3932  b */\n      dup4\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3931:3936  b > 0 */\n      gt\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3938:3950  errorMessage */\n      dup3\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3923:3951  require(b > 0, errorMessage) */\n      swap1\n      tag_77\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n      pop\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3961:3970  uint256 c */\n      0x00\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3977:3978  b */\n      dup4\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3973:3974  a */\n      dup6\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3973:3978  a / b */\n      tag_80\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_80:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3961:3978  uint256 c = a / b */\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":4082:4083  c */\n      dup1\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":4075:4083  return c */\n      swap2\n      pop\n      pop\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3752:4090  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1766:1953  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_75:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1852:1859  uint256 */\n      0x00\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1884:1885  a */\n      dup4\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1879:1880  b */\n      dup4\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1879:1885  b <= a */\n      gt\n      iszero\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1887:1899  errorMessage */\n      dup3\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1871:1900  require(b <= a, errorMessage) */\n      swap1\n      tag_82\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_82:\n      pop\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1910:1919  uint256 c */\n      0x00\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1926:1927  b */\n      dup4\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1922:1923  a */\n      dup6\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1922:1927  a - b */\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1910:1927  uint256 c = a - b */\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1945:1946  c */\n      dup1\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1938:1946  return c */\n      swap2\n      pop\n      pop\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":1766:1953  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_87:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_89:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_90:\n        /* \"#utility.yul\":490:514   */\n      tag_108\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_89\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_109\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_109:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_91:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_111\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_90\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1601   */\n    tag_9:\n        /* \"#utility.yul\":785:791   */\n      0x00\n        /* \"#utility.yul\":793:799   */\n      dup1\n        /* \"#utility.yul\":801:807   */\n      0x00\n        /* \"#utility.yul\":809:815   */\n      dup1\n        /* \"#utility.yul\":817:823   */\n      0x00\n        /* \"#utility.yul\":866:869   */\n      0xa0\n        /* \"#utility.yul\":854:863   */\n      dup7\n        /* \"#utility.yul\":845:852   */\n      dup9\n        /* \"#utility.yul\":841:864   */\n      sub\n        /* \"#utility.yul\":837:870   */\n      slt\n        /* \"#utility.yul\":834:954   */\n      iszero\n      tag_113\n      jumpi\n        /* \"#utility.yul\":873:952   */\n      tag_114\n      tag_87\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":834:954   */\n    tag_113:\n        /* \"#utility.yul\":993:994   */\n      0x00\n        /* \"#utility.yul\":1018:1071   */\n      tag_115\n        /* \"#utility.yul\":1063:1070   */\n      dup9\n        /* \"#utility.yul\":1054:1060   */\n      dup3\n        /* \"#utility.yul\":1043:1052   */\n      dup10\n        /* \"#utility.yul\":1039:1061   */\n      add\n        /* \"#utility.yul\":1018:1071   */\n      tag_91\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":1008:1071   */\n      swap6\n      pop\n        /* \"#utility.yul\":964:1081   */\n      pop\n        /* \"#utility.yul\":1120:1122   */\n      0x20\n        /* \"#utility.yul\":1146:1199   */\n      tag_116\n        /* \"#utility.yul\":1191:1198   */\n      dup9\n        /* \"#utility.yul\":1182:1188   */\n      dup3\n        /* \"#utility.yul\":1171:1180   */\n      dup10\n        /* \"#utility.yul\":1167:1189   */\n      add\n        /* \"#utility.yul\":1146:1199   */\n      tag_91\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":1136:1199   */\n      swap5\n      pop\n        /* \"#utility.yul\":1091:1209   */\n      pop\n        /* \"#utility.yul\":1248:1250   */\n      0x40\n        /* \"#utility.yul\":1274:1327   */\n      tag_117\n        /* \"#utility.yul\":1319:1326   */\n      dup9\n        /* \"#utility.yul\":1310:1316   */\n      dup3\n        /* \"#utility.yul\":1299:1308   */\n      dup10\n        /* \"#utility.yul\":1295:1317   */\n      add\n        /* \"#utility.yul\":1274:1327   */\n      tag_91\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":1264:1327   */\n      swap4\n      pop\n        /* \"#utility.yul\":1219:1337   */\n      pop\n        /* \"#utility.yul\":1376:1378   */\n      0x60\n        /* \"#utility.yul\":1402:1455   */\n      tag_118\n        /* \"#utility.yul\":1447:1454   */\n      dup9\n        /* \"#utility.yul\":1438:1444   */\n      dup3\n        /* \"#utility.yul\":1427:1436   */\n      dup10\n        /* \"#utility.yul\":1423:1445   */\n      add\n        /* \"#utility.yul\":1402:1455   */\n      tag_91\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":1392:1455   */\n      swap3\n      pop\n        /* \"#utility.yul\":1347:1465   */\n      pop\n        /* \"#utility.yul\":1504:1507   */\n      0x80\n        /* \"#utility.yul\":1531:1584   */\n      tag_119\n        /* \"#utility.yul\":1576:1583   */\n      dup9\n        /* \"#utility.yul\":1567:1573   */\n      dup3\n        /* \"#utility.yul\":1556:1565   */\n      dup10\n        /* \"#utility.yul\":1552:1574   */\n      add\n        /* \"#utility.yul\":1531:1584   */\n      tag_91\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":1521:1584   */\n      swap2\n      pop\n        /* \"#utility.yul\":1475:1594   */\n      pop\n        /* \"#utility.yul\":690:1601   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1607:1733   */\n    tag_92:\n        /* \"#utility.yul\":1702:1726   */\n      tag_121\n        /* \"#utility.yul\":1720:1725   */\n      dup2\n        /* \"#utility.yul\":1702:1726   */\n      tag_89\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":1697:1700   */\n      dup3\n        /* \"#utility.yul\":1690:1727   */\n      mstore\n        /* \"#utility.yul\":1607:1733   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:2095   */\n    tag_12:\n        /* \"#utility.yul\":1868:1872   */\n      0x00\n        /* \"#utility.yul\":1906:1908   */\n      0x40\n        /* \"#utility.yul\":1895:1904   */\n      dup3\n        /* \"#utility.yul\":1891:1909   */\n      add\n        /* \"#utility.yul\":1883:1909   */\n      swap1\n      pop\n        /* \"#utility.yul\":1919:1998   */\n      tag_123\n        /* \"#utility.yul\":1995:1996   */\n      0x00\n        /* \"#utility.yul\":1984:1993   */\n      dup4\n        /* \"#utility.yul\":1980:1997   */\n      add\n        /* \"#utility.yul\":1971:1977   */\n      dup6\n        /* \"#utility.yul\":1919:1998   */\n      tag_92\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":2008:2088   */\n      tag_124\n        /* \"#utility.yul\":2084:2086   */\n      0x20\n        /* \"#utility.yul\":2073:2082   */\n      dup4\n        /* \"#utility.yul\":2069:2087   */\n      add\n        /* \"#utility.yul\":2060:2066   */\n      dup5\n        /* \"#utility.yul\":2008:2088   */\n      tag_92\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":1739:2095   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2101:2575   */\n    tag_15:\n        /* \"#utility.yul\":2169:2175   */\n      0x00\n        /* \"#utility.yul\":2177:2183   */\n      dup1\n        /* \"#utility.yul\":2226:2228   */\n      0x40\n        /* \"#utility.yul\":2214:2223   */\n      dup4\n        /* \"#utility.yul\":2205:2212   */\n      dup6\n        /* \"#utility.yul\":2201:2224   */\n      sub\n        /* \"#utility.yul\":2197:2229   */\n      slt\n        /* \"#utility.yul\":2194:2313   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":2232:2311   */\n      tag_127\n      tag_87\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":2194:2313   */\n    tag_126:\n        /* \"#utility.yul\":2352:2353   */\n      0x00\n        /* \"#utility.yul\":2377:2430   */\n      tag_128\n        /* \"#utility.yul\":2422:2429   */\n      dup6\n        /* \"#utility.yul\":2413:2419   */\n      dup3\n        /* \"#utility.yul\":2402:2411   */\n      dup7\n        /* \"#utility.yul\":2398:2420   */\n      add\n        /* \"#utility.yul\":2377:2430   */\n      tag_91\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":2367:2430   */\n      swap3\n      pop\n        /* \"#utility.yul\":2323:2440   */\n      pop\n        /* \"#utility.yul\":2479:2481   */\n      0x20\n        /* \"#utility.yul\":2505:2558   */\n      tag_129\n        /* \"#utility.yul\":2550:2557   */\n      dup6\n        /* \"#utility.yul\":2541:2547   */\n      dup3\n        /* \"#utility.yul\":2530:2539   */\n      dup7\n        /* \"#utility.yul\":2526:2548   */\n      add\n        /* \"#utility.yul\":2505:2558   */\n      tag_91\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":2495:2558   */\n      swap2\n      pop\n        /* \"#utility.yul\":2450:2568   */\n      pop\n        /* \"#utility.yul\":2101:2575   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2581:2819   */\n    tag_18:\n        /* \"#utility.yul\":2682:2686   */\n      0x00\n        /* \"#utility.yul\":2720:2722   */\n      0x20\n        /* \"#utility.yul\":2709:2718   */\n      dup3\n        /* \"#utility.yul\":2705:2723   */\n      add\n        /* \"#utility.yul\":2697:2723   */\n      swap1\n      pop\n        /* \"#utility.yul\":2733:2812   */\n      tag_131\n        /* \"#utility.yul\":2809:2810   */\n      0x00\n        /* \"#utility.yul\":2798:2807   */\n      dup4\n        /* \"#utility.yul\":2794:2811   */\n      add\n        /* \"#utility.yul\":2785:2791   */\n      dup5\n        /* \"#utility.yul\":2733:2812   */\n      tag_92\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":2581:2819   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2825:3444   */\n    tag_21:\n        /* \"#utility.yul\":2902:2908   */\n      0x00\n        /* \"#utility.yul\":2910:2916   */\n      dup1\n        /* \"#utility.yul\":2918:2924   */\n      0x00\n        /* \"#utility.yul\":2967:2969   */\n      0x60\n        /* \"#utility.yul\":2955:2964   */\n      dup5\n        /* \"#utility.yul\":2946:2953   */\n      dup7\n        /* \"#utility.yul\":2942:2965   */\n      sub\n        /* \"#utility.yul\":2938:2970   */\n      slt\n        /* \"#utility.yul\":2935:3054   */\n      iszero\n      tag_133\n      jumpi\n        /* \"#utility.yul\":2973:3052   */\n      tag_134\n      tag_87\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":2935:3054   */\n    tag_133:\n        /* \"#utility.yul\":3093:3094   */\n      0x00\n        /* \"#utility.yul\":3118:3171   */\n      tag_135\n        /* \"#utility.yul\":3163:3170   */\n      dup7\n        /* \"#utility.yul\":3154:3160   */\n      dup3\n        /* \"#utility.yul\":3143:3152   */\n      dup8\n        /* \"#utility.yul\":3139:3161   */\n      add\n        /* \"#utility.yul\":3118:3171   */\n      tag_91\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":3108:3171   */\n      swap4\n      pop\n        /* \"#utility.yul\":3064:3181   */\n      pop\n        /* \"#utility.yul\":3220:3222   */\n      0x20\n        /* \"#utility.yul\":3246:3299   */\n      tag_136\n        /* \"#utility.yul\":3291:3298   */\n      dup7\n        /* \"#utility.yul\":3282:3288   */\n      dup3\n        /* \"#utility.yul\":3271:3280   */\n      dup8\n        /* \"#utility.yul\":3267:3289   */\n      add\n        /* \"#utility.yul\":3246:3299   */\n      tag_91\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":3236:3299   */\n      swap3\n      pop\n        /* \"#utility.yul\":3191:3309   */\n      pop\n        /* \"#utility.yul\":3348:3350   */\n      0x40\n        /* \"#utility.yul\":3374:3427   */\n      tag_137\n        /* \"#utility.yul\":3419:3426   */\n      dup7\n        /* \"#utility.yul\":3410:3416   */\n      dup3\n        /* \"#utility.yul\":3399:3408   */\n      dup8\n        /* \"#utility.yul\":3395:3417   */\n      add\n        /* \"#utility.yul\":3374:3427   */\n      tag_91\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":3364:3427   */\n      swap2\n      pop\n        /* \"#utility.yul\":3319:3437   */\n      pop\n        /* \"#utility.yul\":2825:3444   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3450:3630   */\n    tag_93:\n        /* \"#utility.yul\":3498:3575   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3495:3496   */\n      0x00\n        /* \"#utility.yul\":3488:3576   */\n      mstore\n        /* \"#utility.yul\":3595:3599   */\n      0x11\n        /* \"#utility.yul\":3592:3593   */\n      0x04\n        /* \"#utility.yul\":3585:3600   */\n      mstore\n        /* \"#utility.yul\":3619:3623   */\n      0x24\n        /* \"#utility.yul\":3616:3617   */\n      0x00\n        /* \"#utility.yul\":3609:3624   */\n      revert\n        /* \"#utility.yul\":3636:4046   */\n    tag_64:\n        /* \"#utility.yul\":3676:3683   */\n      0x00\n        /* \"#utility.yul\":3699:3719   */\n      tag_140\n        /* \"#utility.yul\":3717:3718   */\n      dup3\n        /* \"#utility.yul\":3699:3719   */\n      tag_89\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":3694:3719   */\n      swap2\n      pop\n        /* \"#utility.yul\":3733:3753   */\n      tag_141\n        /* \"#utility.yul\":3751:3752   */\n      dup4\n        /* \"#utility.yul\":3733:3753   */\n      tag_89\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":3728:3753   */\n      swap3\n      pop\n        /* \"#utility.yul\":3788:3789   */\n      dup3\n        /* \"#utility.yul\":3785:3786   */\n      dup3\n        /* \"#utility.yul\":3781:3790   */\n      mul\n        /* \"#utility.yul\":3810:3840   */\n      tag_142\n        /* \"#utility.yul\":3828:3839   */\n      dup2\n        /* \"#utility.yul\":3810:3840   */\n      tag_89\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":3799:3840   */\n      swap2\n      pop\n        /* \"#utility.yul\":3989:3990   */\n      dup3\n        /* \"#utility.yul\":3980:3987   */\n      dup3\n        /* \"#utility.yul\":3976:3991   */\n      div\n        /* \"#utility.yul\":3973:3974   */\n      dup5\n        /* \"#utility.yul\":3970:3992   */\n      eq\n        /* \"#utility.yul\":3950:3951   */\n      dup4\n        /* \"#utility.yul\":3943:3952   */\n      iszero\n        /* \"#utility.yul\":3923:4006   */\n      or\n        /* \"#utility.yul\":3900:4039   */\n      tag_143\n      jumpi\n        /* \"#utility.yul\":4019:4037   */\n      tag_144\n      tag_93\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":3900:4039   */\n    tag_143:\n        /* \"#utility.yul\":3684:4046   */\n      pop\n        /* \"#utility.yul\":3636:4046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4052:4232   */\n    tag_94:\n        /* \"#utility.yul\":4100:4177   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4097:4098   */\n      0x00\n        /* \"#utility.yul\":4090:4178   */\n      mstore\n        /* \"#utility.yul\":4197:4201   */\n      0x12\n        /* \"#utility.yul\":4194:4195   */\n      0x04\n        /* \"#utility.yul\":4187:4202   */\n      mstore\n        /* \"#utility.yul\":4221:4225   */\n      0x24\n        /* \"#utility.yul\":4218:4219   */\n      0x00\n        /* \"#utility.yul\":4211:4226   */\n      revert\n        /* \"#utility.yul\":4238:4423   */\n    tag_66:\n        /* \"#utility.yul\":4278:4279   */\n      0x00\n        /* \"#utility.yul\":4295:4315   */\n      tag_147\n        /* \"#utility.yul\":4313:4314   */\n      dup3\n        /* \"#utility.yul\":4295:4315   */\n      tag_89\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":4290:4315   */\n      swap2\n      pop\n        /* \"#utility.yul\":4329:4349   */\n      tag_148\n        /* \"#utility.yul\":4347:4348   */\n      dup4\n        /* \"#utility.yul\":4329:4349   */\n      tag_89\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":4324:4349   */\n      swap3\n      pop\n        /* \"#utility.yul\":4368:4369   */\n      dup3\n        /* \"#utility.yul\":4358:4393   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":4373:4391   */\n      tag_150\n      tag_94\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":4358:4393   */\n    tag_149:\n        /* \"#utility.yul\":4415:4416   */\n      dup3\n        /* \"#utility.yul\":4412:4413   */\n      dup3\n        /* \"#utility.yul\":4408:4417   */\n      div\n        /* \"#utility.yul\":4403:4417   */\n      swap1\n      pop\n        /* \"#utility.yul\":4238:4423   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4429:4598   */\n    tag_95:\n        /* \"#utility.yul\":4513:4524   */\n      0x00\n        /* \"#utility.yul\":4547:4553   */\n      dup3\n        /* \"#utility.yul\":4542:4545   */\n      dup3\n        /* \"#utility.yul\":4535:4554   */\n      mstore\n        /* \"#utility.yul\":4587:4591   */\n      0x20\n        /* \"#utility.yul\":4582:4585   */\n      dup3\n        /* \"#utility.yul\":4578:4592   */\n      add\n        /* \"#utility.yul\":4563:4592   */\n      swap1\n      pop\n        /* \"#utility.yul\":4429:4598   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4604:4824   */\n    tag_96:\n        /* \"#utility.yul\":4744:4778   */\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n        /* \"#utility.yul\":4740:4741   */\n      0x00\n        /* \"#utility.yul\":4732:4738   */\n      dup3\n        /* \"#utility.yul\":4728:4742   */\n      add\n        /* \"#utility.yul\":4721:4779   */\n      mstore\n        /* \"#utility.yul\":4813:4816   */\n      0x7700000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4808:4810   */\n      0x20\n        /* \"#utility.yul\":4800:4806   */\n      dup3\n        /* \"#utility.yul\":4796:4811   */\n      add\n        /* \"#utility.yul\":4789:4817   */\n      mstore\n        /* \"#utility.yul\":4604:4824   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4830:5196   */\n    tag_97:\n        /* \"#utility.yul\":4972:4975   */\n      0x00\n        /* \"#utility.yul\":4993:5060   */\n      tag_154\n        /* \"#utility.yul\":5057:5059   */\n      0x21\n        /* \"#utility.yul\":5052:5055   */\n      dup4\n        /* \"#utility.yul\":4993:5060   */\n      tag_95\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":4986:5060   */\n      swap2\n      pop\n        /* \"#utility.yul\":5069:5162   */\n      tag_155\n        /* \"#utility.yul\":5158:5161   */\n      dup3\n        /* \"#utility.yul\":5069:5162   */\n      tag_96\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":5187:5189   */\n      0x40\n        /* \"#utility.yul\":5182:5185   */\n      dup3\n        /* \"#utility.yul\":5178:5190   */\n      add\n        /* \"#utility.yul\":5171:5190   */\n      swap1\n      pop\n        /* \"#utility.yul\":4830:5196   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5202:5621   */\n    tag_69:\n        /* \"#utility.yul\":5368:5372   */\n      0x00\n        /* \"#utility.yul\":5406:5408   */\n      0x20\n        /* \"#utility.yul\":5395:5404   */\n      dup3\n        /* \"#utility.yul\":5391:5409   */\n      add\n        /* \"#utility.yul\":5383:5409   */\n      swap1\n      pop\n        /* \"#utility.yul\":5455:5464   */\n      dup2\n        /* \"#utility.yul\":5449:5453   */\n      dup2\n        /* \"#utility.yul\":5445:5465   */\n      sub\n        /* \"#utility.yul\":5441:5442   */\n      0x00\n        /* \"#utility.yul\":5430:5439   */\n      dup4\n        /* \"#utility.yul\":5426:5443   */\n      add\n        /* \"#utility.yul\":5419:5466   */\n      mstore\n        /* \"#utility.yul\":5483:5614   */\n      tag_157\n        /* \"#utility.yul\":5609:5613   */\n      dup2\n        /* \"#utility.yul\":5483:5614   */\n      tag_97\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":5475:5614   */\n      swap1\n      pop\n        /* \"#utility.yul\":5202:5621   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5627:5726   */\n    tag_98:\n        /* \"#utility.yul\":5679:5685   */\n      0x00\n        /* \"#utility.yul\":5713:5718   */\n      dup2\n        /* \"#utility.yul\":5707:5719   */\n      mload\n        /* \"#utility.yul\":5697:5719   */\n      swap1\n      pop\n        /* \"#utility.yul\":5627:5726   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5732:5978   */\n    tag_99:\n        /* \"#utility.yul\":5813:5814   */\n      0x00\n        /* \"#utility.yul\":5823:5936   */\n    tag_160:\n        /* \"#utility.yul\":5837:5843   */\n      dup4\n        /* \"#utility.yul\":5834:5835   */\n      dup2\n        /* \"#utility.yul\":5831:5844   */\n      lt\n        /* \"#utility.yul\":5823:5936   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":5922:5923   */\n      dup1\n        /* \"#utility.yul\":5917:5920   */\n      dup3\n        /* \"#utility.yul\":5913:5924   */\n      add\n        /* \"#utility.yul\":5907:5925   */\n      mload\n        /* \"#utility.yul\":5903:5904   */\n      dup2\n        /* \"#utility.yul\":5898:5901   */\n      dup5\n        /* \"#utility.yul\":5894:5905   */\n      add\n        /* \"#utility.yul\":5887:5926   */\n      mstore\n        /* \"#utility.yul\":5859:5861   */\n      0x20\n        /* \"#utility.yul\":5856:5857   */\n      dup2\n        /* \"#utility.yul\":5852:5862   */\n      add\n        /* \"#utility.yul\":5847:5862   */\n      swap1\n      pop\n        /* \"#utility.yul\":5823:5936   */\n      jump(tag_160)\n    tag_162:\n        /* \"#utility.yul\":5970:5971   */\n      0x00\n        /* \"#utility.yul\":5961:5967   */\n      dup5\n        /* \"#utility.yul\":5956:5959   */\n      dup5\n        /* \"#utility.yul\":5952:5968   */\n      add\n        /* \"#utility.yul\":5945:5972   */\n      mstore\n        /* \"#utility.yul\":5794:5978   */\n      pop\n        /* \"#utility.yul\":5732:5978   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5984:6086   */\n    tag_100:\n        /* \"#utility.yul\":6025:6031   */\n      0x00\n        /* \"#utility.yul\":6076:6078   */\n      0x1f\n        /* \"#utility.yul\":6072:6079   */\n      not\n        /* \"#utility.yul\":6067:6069   */\n      0x1f\n        /* \"#utility.yul\":6060:6065   */\n      dup4\n        /* \"#utility.yul\":6056:6070   */\n      add\n        /* \"#utility.yul\":6052:6080   */\n      and\n        /* \"#utility.yul\":6042:6080   */\n      swap1\n      pop\n        /* \"#utility.yul\":5984:6086   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6092:6469   */\n    tag_101:\n        /* \"#utility.yul\":6180:6183   */\n      0x00\n        /* \"#utility.yul\":6208:6247   */\n      tag_165\n        /* \"#utility.yul\":6241:6246   */\n      dup3\n        /* \"#utility.yul\":6208:6247   */\n      tag_98\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":6263:6334   */\n      tag_166\n        /* \"#utility.yul\":6327:6333   */\n      dup2\n        /* \"#utility.yul\":6322:6325   */\n      dup6\n        /* \"#utility.yul\":6263:6334   */\n      tag_95\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":6256:6334   */\n      swap4\n      pop\n        /* \"#utility.yul\":6343:6408   */\n      tag_167\n        /* \"#utility.yul\":6401:6407   */\n      dup2\n        /* \"#utility.yul\":6396:6399   */\n      dup6\n        /* \"#utility.yul\":6389:6393   */\n      0x20\n        /* \"#utility.yul\":6382:6387   */\n      dup7\n        /* \"#utility.yul\":6378:6394   */\n      add\n        /* \"#utility.yul\":6343:6408   */\n      tag_99\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":6433:6462   */\n      tag_168\n        /* \"#utility.yul\":6455:6461   */\n      dup2\n        /* \"#utility.yul\":6433:6462   */\n      tag_100\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":6428:6431   */\n      dup5\n        /* \"#utility.yul\":6424:6463   */\n      add\n        /* \"#utility.yul\":6417:6463   */\n      swap2\n      pop\n        /* \"#utility.yul\":6184:6469   */\n      pop\n        /* \"#utility.yul\":6092:6469   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6475:6788   */\n    tag_79:\n        /* \"#utility.yul\":6588:6592   */\n      0x00\n        /* \"#utility.yul\":6626:6628   */\n      0x20\n        /* \"#utility.yul\":6615:6624   */\n      dup3\n        /* \"#utility.yul\":6611:6629   */\n      add\n        /* \"#utility.yul\":6603:6629   */\n      swap1\n      pop\n        /* \"#utility.yul\":6675:6684   */\n      dup2\n        /* \"#utility.yul\":6669:6673   */\n      dup2\n        /* \"#utility.yul\":6665:6685   */\n      sub\n        /* \"#utility.yul\":6661:6662   */\n      0x00\n        /* \"#utility.yul\":6650:6659   */\n      dup4\n        /* \"#utility.yul\":6646:6663   */\n      add\n        /* \"#utility.yul\":6639:6686   */\n      mstore\n        /* \"#utility.yul\":6703:6781   */\n      tag_170\n        /* \"#utility.yul\":6776:6780   */\n      dup2\n        /* \"#utility.yul\":6767:6773   */\n      dup5\n        /* \"#utility.yul\":6703:6781   */\n      tag_101\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":6695:6781   */\n      swap1\n      pop\n        /* \"#utility.yul\":6475:6788   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6794:6988   */\n    tag_85:\n        /* \"#utility.yul\":6834:6838   */\n      0x00\n        /* \"#utility.yul\":6854:6874   */\n      tag_172\n        /* \"#utility.yul\":6872:6873   */\n      dup3\n        /* \"#utility.yul\":6854:6874   */\n      tag_89\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":6849:6874   */\n      swap2\n      pop\n        /* \"#utility.yul\":6888:6908   */\n      tag_173\n        /* \"#utility.yul\":6906:6907   */\n      dup4\n        /* \"#utility.yul\":6888:6908   */\n      tag_89\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":6883:6908   */\n      swap3\n      pop\n        /* \"#utility.yul\":6932:6933   */\n      dup3\n        /* \"#utility.yul\":6929:6930   */\n      dup3\n        /* \"#utility.yul\":6925:6934   */\n      sub\n        /* \"#utility.yul\":6917:6934   */\n      swap1\n      pop\n        /* \"#utility.yul\":6956:6957   */\n      dup2\n        /* \"#utility.yul\":6950:6954   */\n      dup2\n        /* \"#utility.yul\":6947:6958   */\n      gt\n        /* \"#utility.yul\":6944:6981   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":6961:6979   */\n      tag_175\n      tag_93\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":6944:6981   */\n    tag_174:\n        /* \"#utility.yul\":6794:6988   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200d9257cd21b9e09bc23c8990880211aa91512baa4eca3ef11863acb5f46c205e64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6108ea61004e600b8282823980515f1a607314610042577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610610060575f3560e01c806306058f4a146100645780630f41b452146100955780630ff24ec1146100c55780635413e192146100f5578063ce032cc114610125575b5f80fd5b61007e6004803603810190610079919061052a565b610155565b60405161008c9291906105b0565b60405180910390f35b6100af60048036038101906100aa91906105d7565b61024b565b6040516100bc9190610615565b60405180910390f35b6100df60048036038101906100da919061062e565b61027c565b6040516100ec9190610615565b60405180910390f35b61010f600480360381019061010a91906105d7565b6102c5565b60405161011c9190610615565b60405180910390f35b61013f600480360381019061013a91906105d7565b6102f6565b60405161014c9190610615565b60405180910390f35b5f805f610180620f4240610172898b61032790919063ffffffff16565b61039e90919063ffffffff16565b90505f6101ab8661019d620f42408a61032790919063ffffffff16565b61039e90919063ffffffff16565b90505f6101fa620f42406101ec6101cb858b61032790919063ffffffff16565b6101de8b8b61032790919063ffffffff16565b6103e790919063ffffffff16565b61039e90919063ffffffff16565b90505f81841161020c57839050610210565b8190505b6102388a61022a620f42408461032790919063ffffffff16565b61039e90919063ffffffff16565b8195509550505050509550959350505050565b5f61027483610266620f42408561032790919063ffffffff16565b61039e90919063ffffffff16565b905092915050565b5f806102a6620f4240610298868861032790919063ffffffff16565b61039e90919063ffffffff16565b90506102bb83826103e790919063ffffffff16565b9150509392505050565b5f6102ee620f42406102e0858561032790919063ffffffff16565b61039e90919063ffffffff16565b905092915050565b5f61031f620f4240610311858561032790919063ffffffff16565b61039e90919063ffffffff16565b905092915050565b5f808303610337575f9050610398565b5f828461034491906106ab565b90508284826103539190610719565b14610393576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038a906107c9565b60405180910390fd5b809150505b92915050565b5f6103df83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610430565b905092915050565b5f61042883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610491565b905092915050565b5f8083118290610476576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046d9190610861565b60405180910390fd5b505f83856104849190610719565b9050809150509392505050565b5f8383111582906104d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cf9190610861565b60405180910390fd5b505f83856104e69190610881565b9050809150509392505050565b5f80fd5b5f819050919050565b610509816104f7565b8114610513575f80fd5b50565b5f8135905061052481610500565b92915050565b5f805f805f60a08688031215610543576105426104f3565b5b5f61055088828901610516565b955050602061056188828901610516565b945050604061057288828901610516565b935050606061058388828901610516565b925050608061059488828901610516565b9150509295509295909350565b6105aa816104f7565b82525050565b5f6040820190506105c35f8301856105a1565b6105d060208301846105a1565b9392505050565b5f80604083850312156105ed576105ec6104f3565b5b5f6105fa85828601610516565b925050602061060b85828601610516565b9150509250929050565b5f6020820190506106285f8301846105a1565b92915050565b5f805f60608486031215610645576106446104f3565b5b5f61065286828701610516565b935050602061066386828701610516565b925050604061067486828701610516565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6106b5826104f7565b91506106c0836104f7565b92508282026106ce816104f7565b915082820484148315176106e5576106e461067e565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610723826104f7565b915061072e836104f7565b92508261073e5761073d6106ec565b5b828204905092915050565b5f82825260208201905092915050565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f5f8201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b5f6107b3602183610749565b91506107be82610759565b604082019050919050565b5f6020820190508181035f8301526107e0816107a7565b9050919050565b5f81519050919050565b5f5b8381101561080e5780820151818401526020810190506107f3565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610833826107e7565b61083d8185610749565b935061084d8185602086016107f1565b61085681610819565b840191505092915050565b5f6020820190508181035f8301526108798184610829565b905092915050565b5f61088b826104f7565b9150610896836104f7565b92508282039050818111156108ae576108ad61067e565b5b9291505056fea26469706673582212200d9257cd21b9e09bc23c8990880211aa91512baa4eca3ef11863acb5f46c205e64736f6c63430008150033",
							"opcodes": "PUSH2 0x8EA PUSH2 0x4E PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH2 0x42 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6058F4A EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xF41B452 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0xFF24EC1 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x5413E192 EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0xCE032CC1 EQ PUSH2 0x125 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x155 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8C SWAP3 SWAP2 SWAP1 PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x5D7 JUMP JUMPDEST PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x615 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x62E JUMP JUMPDEST PUSH2 0x27C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x615 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x5D7 JUMP JUMPDEST PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x615 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x5D7 JUMP JUMPDEST PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x615 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x180 PUSH3 0xF4240 PUSH2 0x172 DUP10 DUP12 PUSH2 0x327 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1AB DUP7 PUSH2 0x19D PUSH3 0xF4240 DUP11 PUSH2 0x327 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1FA PUSH3 0xF4240 PUSH2 0x1EC PUSH2 0x1CB DUP6 DUP12 PUSH2 0x327 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1DE DUP12 DUP12 PUSH2 0x327 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3E7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP5 GT PUSH2 0x20C JUMPI DUP4 SWAP1 POP PUSH2 0x210 JUMP JUMPDEST DUP2 SWAP1 POP JUMPDEST PUSH2 0x238 DUP11 PUSH2 0x22A PUSH3 0xF4240 DUP5 PUSH2 0x327 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 SWAP6 POP SWAP6 POP POP POP POP POP SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x274 DUP4 PUSH2 0x266 PUSH3 0xF4240 DUP6 PUSH2 0x327 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2A6 PUSH3 0xF4240 PUSH2 0x298 DUP7 DUP9 PUSH2 0x327 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2BB DUP4 DUP3 PUSH2 0x3E7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2EE PUSH3 0xF4240 PUSH2 0x2E0 DUP6 DUP6 PUSH2 0x327 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x31F PUSH3 0xF4240 PUSH2 0x311 DUP6 DUP6 PUSH2 0x327 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 SUB PUSH2 0x337 JUMPI PUSH0 SWAP1 POP PUSH2 0x398 JUMP JUMPDEST PUSH0 DUP3 DUP5 PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x6AB JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x719 JUMP JUMPDEST EQ PUSH2 0x393 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38A SWAP1 PUSH2 0x7C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3DF DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x430 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x428 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x491 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x476 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x861 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH0 DUP4 DUP6 PUSH2 0x484 SWAP2 SWAP1 PUSH2 0x719 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x4D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CF SWAP2 SWAP1 PUSH2 0x861 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH0 DUP4 DUP6 PUSH2 0x4E6 SWAP2 SWAP1 PUSH2 0x881 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x509 DUP2 PUSH2 0x4F7 JUMP JUMPDEST DUP2 EQ PUSH2 0x513 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x524 DUP2 PUSH2 0x500 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x543 JUMPI PUSH2 0x542 PUSH2 0x4F3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x550 DUP9 DUP3 DUP10 ADD PUSH2 0x516 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x561 DUP9 DUP3 DUP10 ADD PUSH2 0x516 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x572 DUP9 DUP3 DUP10 ADD PUSH2 0x516 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x583 DUP9 DUP3 DUP10 ADD PUSH2 0x516 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x594 DUP9 DUP3 DUP10 ADD PUSH2 0x516 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x5AA DUP2 PUSH2 0x4F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5C3 PUSH0 DUP4 ADD DUP6 PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x5D0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5A1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5ED JUMPI PUSH2 0x5EC PUSH2 0x4F3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5FA DUP6 DUP3 DUP7 ADD PUSH2 0x516 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x60B DUP6 DUP3 DUP7 ADD PUSH2 0x516 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x628 PUSH0 DUP4 ADD DUP5 PUSH2 0x5A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x645 JUMPI PUSH2 0x644 PUSH2 0x4F3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x652 DUP7 DUP3 DUP8 ADD PUSH2 0x516 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x663 DUP7 DUP3 DUP8 ADD PUSH2 0x516 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x674 DUP7 DUP3 DUP8 ADD PUSH2 0x516 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x6B5 DUP3 PUSH2 0x4F7 JUMP JUMPDEST SWAP2 POP PUSH2 0x6C0 DUP4 PUSH2 0x4F7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x6CE DUP2 PUSH2 0x4F7 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x6E5 JUMPI PUSH2 0x6E4 PUSH2 0x67E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x723 DUP3 PUSH2 0x4F7 JUMP JUMPDEST SWAP2 POP PUSH2 0x72E DUP4 PUSH2 0x4F7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x73E JUMPI PUSH2 0x73D PUSH2 0x6EC JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x7B3 PUSH1 0x21 DUP4 PUSH2 0x749 JUMP JUMPDEST SWAP2 POP PUSH2 0x7BE DUP3 PUSH2 0x759 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x7E0 DUP2 PUSH2 0x7A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x80E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7F3 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x833 DUP3 PUSH2 0x7E7 JUMP JUMPDEST PUSH2 0x83D DUP2 DUP6 PUSH2 0x749 JUMP JUMPDEST SWAP4 POP PUSH2 0x84D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x856 DUP2 PUSH2 0x819 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x879 DUP2 DUP5 PUSH2 0x829 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x88B DUP3 PUSH2 0x4F7 JUMP JUMPDEST SWAP2 POP PUSH2 0x896 DUP4 PUSH2 0x4F7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x8AE JUMPI PUSH2 0x8AD PUSH2 0x67E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP3 JUMPI 0xCD 0x21 0xB9 0xE0 SWAP12 0xC2 EXTCODECOPY DUP10 SWAP1 DUP9 MUL GT 0xAA SWAP2 MLOAD 0x2B 0xAA 0x4E 0xCA RETURNDATACOPY CALL XOR PUSH4 0xACB5F46C KECCAK256 0x5E PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "109:5261:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@calcMint1t1FRAX_47": {
									"entryPoint": 709,
									"id": 47,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@calcMintAlgorithmicFRAX_65": {
									"entryPoint": 758,
									"id": 65,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@calcRecollateralizeFRAXInner_318": {
									"entryPoint": 341,
									"id": 318,
									"parameterSlots": 5,
									"returnSlots": 2
								},
								"@calcRedeem1t1FRAX_158": {
									"entryPoint": 587,
									"id": 158,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_445": {
									"entryPoint": 926,
									"id": 445,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_473": {
									"entryPoint": 1072,
									"id": 473,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@mul_428": {
									"entryPoint": 807,
									"id": 428,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@recollateralizeAmount_236": {
									"entryPoint": 636,
									"id": 236,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@sub_365": {
									"entryPoint": 999,
									"id": 365,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_393": {
									"entryPoint": 1169,
									"id": 393,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 1495,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 1582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256": {
									"entryPoint": 1322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2089,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack_library": {
									"entryPoint": 1441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed": {
									"entryPoint": 1557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_library_reversed": {
									"entryPoint": 1456,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2033,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 1662,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1772,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1267,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3": {
									"entryPoint": 1881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6991:2",
										"nodeType": "YulBlock",
										"src": "0:6991:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:2",
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nativeSrc": "57:19:2",
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:2",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nativeSrc": "67:9:2",
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:2",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nativeSrc": "177:28:2",
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:2",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:2",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nativeSrc": "187:12:2",
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nativeSrc": "187:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nativeSrc": "300:28:2",
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:2",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:2",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nativeSrc": "310:12:2",
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nativeSrc": "310:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nativeSrc": "379:32:2",
													"nodeType": "YulBlock",
													"src": "379:32:2",
													"statements": [
														{
															"nativeSrc": "389:16:2",
															"nodeType": "YulAssignment",
															"src": "389:16:2",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:2",
																"nodeType": "YulIdentifier",
																"src": "400:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:2",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:2",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:77:2"
											},
											{
												"body": {
													"nativeSrc": "460:79:2",
													"nodeType": "YulBlock",
													"src": "460:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:2",
																"nodeType": "YulBlock",
																"src": "517:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:2",
																					"nodeType": "YulLiteral",
																					"src": "526:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:2",
																					"nodeType": "YulLiteral",
																					"src": "529:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:2"
																			},
																			"nativeSrc": "519:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:2"
																		},
																		"nativeSrc": "519:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:2"
																				},
																				"nativeSrc": "490:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:2"
																		},
																		"nativeSrc": "480:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:2"
																},
																"nativeSrc": "473:43:2",
																"nodeType": "YulFunctionCall",
																"src": "473:43:2"
															},
															"nativeSrc": "470:63:2",
															"nodeType": "YulIf",
															"src": "470:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:2",
														"nodeType": "YulTypedName",
														"src": "453:5:2",
														"type": ""
													}
												],
												"src": "417:122:2"
											},
											{
												"body": {
													"nativeSrc": "597:87:2",
													"nodeType": "YulBlock",
													"src": "597:87:2",
													"statements": [
														{
															"nativeSrc": "607:29:2",
															"nodeType": "YulAssignment",
															"src": "607:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:2"
																},
																"nativeSrc": "616:20:2",
																"nodeType": "YulFunctionCall",
																"src": "616:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:2"
																},
																"nativeSrc": "645:33:2",
																"nodeType": "YulFunctionCall",
																"src": "645:33:2"
															},
															"nativeSrc": "645:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:2",
														"nodeType": "YulTypedName",
														"src": "575:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:2",
														"nodeType": "YulTypedName",
														"src": "583:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:2",
														"nodeType": "YulTypedName",
														"src": "591:5:2",
														"type": ""
													}
												],
												"src": "545:139:2"
											},
											{
												"body": {
													"nativeSrc": "824:777:2",
													"nodeType": "YulBlock",
													"src": "824:777:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "871:83:2",
																"nodeType": "YulBlock",
																"src": "871:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "873:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "873:77:2"
																			},
																			"nativeSrc": "873:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "873:79:2"
																		},
																		"nativeSrc": "873:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "873:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "845:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "845:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "854:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "854:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "841:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "841:3:2"
																		},
																		"nativeSrc": "841:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "841:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "866:3:2",
																		"nodeType": "YulLiteral",
																		"src": "866:3:2",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "837:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "837:3:2"
																},
																"nativeSrc": "837:33:2",
																"nodeType": "YulFunctionCall",
																"src": "837:33:2"
															},
															"nativeSrc": "834:120:2",
															"nodeType": "YulIf",
															"src": "834:120:2"
														},
														{
															"nativeSrc": "964:117:2",
															"nodeType": "YulBlock",
															"src": "964:117:2",
															"statements": [
																{
																	"nativeSrc": "979:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "979:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "993:1:2",
																		"nodeType": "YulLiteral",
																		"src": "993:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "983:6:2",
																			"nodeType": "YulTypedName",
																			"src": "983:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1008:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1008:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1043:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1043:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1054:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1054:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1039:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1039:3:2"
																				},
																				"nativeSrc": "1039:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1039:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1063:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1063:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1018:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1018:20:2"
																		},
																		"nativeSrc": "1018:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1018:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1008:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1008:6:2"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1091:118:2",
															"nodeType": "YulBlock",
															"src": "1091:118:2",
															"statements": [
																{
																	"nativeSrc": "1106:16:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1106:16:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1120:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1120:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1110:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1110:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1136:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1136:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1171:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1171:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1182:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1182:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1167:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1167:3:2"
																				},
																				"nativeSrc": "1167:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1167:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1191:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1191:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1146:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1146:20:2"
																		},
																		"nativeSrc": "1146:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1146:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1136:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1136:6:2"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1219:118:2",
															"nodeType": "YulBlock",
															"src": "1219:118:2",
															"statements": [
																{
																	"nativeSrc": "1234:16:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1234:16:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1248:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1248:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1238:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1238:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1264:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1264:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1299:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1299:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1310:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1310:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1295:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1295:3:2"
																				},
																				"nativeSrc": "1295:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1295:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1319:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1319:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1274:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1274:20:2"
																		},
																		"nativeSrc": "1274:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1274:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1264:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1264:6:2"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1347:118:2",
															"nodeType": "YulBlock",
															"src": "1347:118:2",
															"statements": [
																{
																	"nativeSrc": "1362:16:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1362:16:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1376:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1376:2:2",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1366:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1366:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1392:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1392:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1427:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1427:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1438:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1438:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1423:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1423:3:2"
																				},
																				"nativeSrc": "1423:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1423:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1447:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1447:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1402:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1402:20:2"
																		},
																		"nativeSrc": "1402:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1402:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "1392:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1392:6:2"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1475:119:2",
															"nodeType": "YulBlock",
															"src": "1475:119:2",
															"statements": [
																{
																	"nativeSrc": "1490:17:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1490:17:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1504:3:2",
																		"nodeType": "YulLiteral",
																		"src": "1504:3:2",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1494:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1494:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1521:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1521:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1556:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1556:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1567:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1567:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1552:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1552:3:2"
																				},
																				"nativeSrc": "1552:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1552:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1576:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1576:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1531:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1531:20:2"
																		},
																		"nativeSrc": "1531:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1531:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "1521:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1521:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256",
												"nativeSrc": "690:911:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "762:9:2",
														"nodeType": "YulTypedName",
														"src": "762:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "773:7:2",
														"nodeType": "YulTypedName",
														"src": "773:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "785:6:2",
														"nodeType": "YulTypedName",
														"src": "785:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "793:6:2",
														"nodeType": "YulTypedName",
														"src": "793:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "801:6:2",
														"nodeType": "YulTypedName",
														"src": "801:6:2",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "809:6:2",
														"nodeType": "YulTypedName",
														"src": "809:6:2",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "817:6:2",
														"nodeType": "YulTypedName",
														"src": "817:6:2",
														"type": ""
													}
												],
												"src": "690:911:2"
											},
											{
												"body": {
													"nativeSrc": "1680:53:2",
													"nodeType": "YulBlock",
													"src": "1680:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1697:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1697:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1720:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1720:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1702:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "1702:17:2"
																		},
																		"nativeSrc": "1702:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1702:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1690:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1690:6:2"
																},
																"nativeSrc": "1690:37:2",
																"nodeType": "YulFunctionCall",
																"src": "1690:37:2"
															},
															"nativeSrc": "1690:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "1690:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
												"nativeSrc": "1607:126:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1668:5:2",
														"nodeType": "YulTypedName",
														"src": "1668:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1675:3:2",
														"nodeType": "YulTypedName",
														"src": "1675:3:2",
														"type": ""
													}
												],
												"src": "1607:126:2"
											},
											{
												"body": {
													"nativeSrc": "1873:222:2",
													"nodeType": "YulBlock",
													"src": "1873:222:2",
													"statements": [
														{
															"nativeSrc": "1883:26:2",
															"nodeType": "YulAssignment",
															"src": "1883:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1895:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1895:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1906:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1906:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1891:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1891:3:2"
																},
																"nativeSrc": "1891:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1891:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1883:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1883:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1971:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1971:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1984:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1984:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1995:1:2",
																				"nodeType": "YulLiteral",
																				"src": "1995:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1980:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1980:3:2"
																		},
																		"nativeSrc": "1980:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1980:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
																	"nativeSrc": "1919:51:2",
																	"nodeType": "YulIdentifier",
																	"src": "1919:51:2"
																},
																"nativeSrc": "1919:79:2",
																"nodeType": "YulFunctionCall",
																"src": "1919:79:2"
															},
															"nativeSrc": "1919:79:2",
															"nodeType": "YulExpressionStatement",
															"src": "1919:79:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2060:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2060:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2073:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2073:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2084:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2084:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2069:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2069:3:2"
																		},
																		"nativeSrc": "2069:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2069:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
																	"nativeSrc": "2008:51:2",
																	"nodeType": "YulIdentifier",
																	"src": "2008:51:2"
																},
																"nativeSrc": "2008:80:2",
																"nodeType": "YulFunctionCall",
																"src": "2008:80:2"
															},
															"nativeSrc": "2008:80:2",
															"nodeType": "YulExpressionStatement",
															"src": "2008:80:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_library_reversed",
												"nativeSrc": "1739:356:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1837:9:2",
														"nodeType": "YulTypedName",
														"src": "1837:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1849:6:2",
														"nodeType": "YulTypedName",
														"src": "1849:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1857:6:2",
														"nodeType": "YulTypedName",
														"src": "1857:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1868:4:2",
														"nodeType": "YulTypedName",
														"src": "1868:4:2",
														"type": ""
													}
												],
												"src": "1739:356:2"
											},
											{
												"body": {
													"nativeSrc": "2184:391:2",
													"nodeType": "YulBlock",
													"src": "2184:391:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "2230:83:2",
																"nodeType": "YulBlock",
																"src": "2230:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2232:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "2232:77:2"
																			},
																			"nativeSrc": "2232:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2232:79:2"
																		},
																		"nativeSrc": "2232:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2232:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2205:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2205:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2214:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2214:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2201:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2201:3:2"
																		},
																		"nativeSrc": "2201:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2201:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2226:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2226:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2197:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2197:3:2"
																},
																"nativeSrc": "2197:32:2",
																"nodeType": "YulFunctionCall",
																"src": "2197:32:2"
															},
															"nativeSrc": "2194:119:2",
															"nodeType": "YulIf",
															"src": "2194:119:2"
														},
														{
															"nativeSrc": "2323:117:2",
															"nodeType": "YulBlock",
															"src": "2323:117:2",
															"statements": [
																{
																	"nativeSrc": "2338:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2338:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2352:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2352:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2342:6:2",
																			"nodeType": "YulTypedName",
																			"src": "2342:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2367:63:2",
																	"nodeType": "YulAssignment",
																	"src": "2367:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2402:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "2402:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2413:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "2413:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2398:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "2398:3:2"
																				},
																				"nativeSrc": "2398:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2398:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2422:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2422:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2377:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "2377:20:2"
																		},
																		"nativeSrc": "2377:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2377:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2367:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "2367:6:2"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2450:118:2",
															"nodeType": "YulBlock",
															"src": "2450:118:2",
															"statements": [
																{
																	"nativeSrc": "2465:16:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2465:16:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2479:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2479:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2469:6:2",
																			"nodeType": "YulTypedName",
																			"src": "2469:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2495:63:2",
																	"nodeType": "YulAssignment",
																	"src": "2495:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2530:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "2530:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2541:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "2541:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2526:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "2526:3:2"
																				},
																				"nativeSrc": "2526:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2526:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2550:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2550:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2505:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "2505:20:2"
																		},
																		"nativeSrc": "2505:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2505:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2495:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "2495:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "2101:474:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2146:9:2",
														"nodeType": "YulTypedName",
														"src": "2146:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2157:7:2",
														"nodeType": "YulTypedName",
														"src": "2157:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2169:6:2",
														"nodeType": "YulTypedName",
														"src": "2169:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2177:6:2",
														"nodeType": "YulTypedName",
														"src": "2177:6:2",
														"type": ""
													}
												],
												"src": "2101:474:2"
											},
											{
												"body": {
													"nativeSrc": "2687:132:2",
													"nodeType": "YulBlock",
													"src": "2687:132:2",
													"statements": [
														{
															"nativeSrc": "2697:26:2",
															"nodeType": "YulAssignment",
															"src": "2697:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2709:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2709:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2720:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2720:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2705:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2705:3:2"
																},
																"nativeSrc": "2705:18:2",
																"nodeType": "YulFunctionCall",
																"src": "2705:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2697:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2697:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2785:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2785:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2798:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2798:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2809:1:2",
																				"nodeType": "YulLiteral",
																				"src": "2809:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2794:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2794:3:2"
																		},
																		"nativeSrc": "2794:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2794:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
																	"nativeSrc": "2733:51:2",
																	"nodeType": "YulIdentifier",
																	"src": "2733:51:2"
																},
																"nativeSrc": "2733:79:2",
																"nodeType": "YulFunctionCall",
																"src": "2733:79:2"
															},
															"nativeSrc": "2733:79:2",
															"nodeType": "YulExpressionStatement",
															"src": "2733:79:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed",
												"nativeSrc": "2581:238:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2659:9:2",
														"nodeType": "YulTypedName",
														"src": "2659:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2671:6:2",
														"nodeType": "YulTypedName",
														"src": "2671:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2682:4:2",
														"nodeType": "YulTypedName",
														"src": "2682:4:2",
														"type": ""
													}
												],
												"src": "2581:238:2"
											},
											{
												"body": {
													"nativeSrc": "2925:519:2",
													"nodeType": "YulBlock",
													"src": "2925:519:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "2971:83:2",
																"nodeType": "YulBlock",
																"src": "2971:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2973:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "2973:77:2"
																			},
																			"nativeSrc": "2973:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2973:79:2"
																		},
																		"nativeSrc": "2973:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2973:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2946:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2946:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2955:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2955:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2942:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2942:3:2"
																		},
																		"nativeSrc": "2942:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2942:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2967:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2967:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2938:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2938:3:2"
																},
																"nativeSrc": "2938:32:2",
																"nodeType": "YulFunctionCall",
																"src": "2938:32:2"
															},
															"nativeSrc": "2935:119:2",
															"nodeType": "YulIf",
															"src": "2935:119:2"
														},
														{
															"nativeSrc": "3064:117:2",
															"nodeType": "YulBlock",
															"src": "3064:117:2",
															"statements": [
																{
																	"nativeSrc": "3079:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3079:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3093:1:2",
																		"nodeType": "YulLiteral",
																		"src": "3093:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3083:6:2",
																			"nodeType": "YulTypedName",
																			"src": "3083:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3108:63:2",
																	"nodeType": "YulAssignment",
																	"src": "3108:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3143:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "3143:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3154:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "3154:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3139:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "3139:3:2"
																				},
																				"nativeSrc": "3139:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3139:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3163:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "3163:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3118:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "3118:20:2"
																		},
																		"nativeSrc": "3118:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3118:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3108:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "3108:6:2"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3191:118:2",
															"nodeType": "YulBlock",
															"src": "3191:118:2",
															"statements": [
																{
																	"nativeSrc": "3206:16:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3206:16:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3220:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3220:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3210:6:2",
																			"nodeType": "YulTypedName",
																			"src": "3210:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3236:63:2",
																	"nodeType": "YulAssignment",
																	"src": "3236:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3271:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "3271:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3282:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "3282:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3267:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "3267:3:2"
																				},
																				"nativeSrc": "3267:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3267:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3291:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "3291:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3246:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "3246:20:2"
																		},
																		"nativeSrc": "3246:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3246:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3236:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "3236:6:2"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3319:118:2",
															"nodeType": "YulBlock",
															"src": "3319:118:2",
															"statements": [
																{
																	"nativeSrc": "3334:16:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3334:16:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3348:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3348:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3338:6:2",
																			"nodeType": "YulTypedName",
																			"src": "3338:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3364:63:2",
																	"nodeType": "YulAssignment",
																	"src": "3364:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3399:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "3399:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3410:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "3410:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3395:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "3395:3:2"
																				},
																				"nativeSrc": "3395:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3395:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3419:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "3419:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3374:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "3374:20:2"
																		},
																		"nativeSrc": "3374:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3374:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3364:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "3364:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nativeSrc": "2825:619:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2879:9:2",
														"nodeType": "YulTypedName",
														"src": "2879:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2890:7:2",
														"nodeType": "YulTypedName",
														"src": "2890:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2902:6:2",
														"nodeType": "YulTypedName",
														"src": "2902:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2910:6:2",
														"nodeType": "YulTypedName",
														"src": "2910:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2918:6:2",
														"nodeType": "YulTypedName",
														"src": "2918:6:2",
														"type": ""
													}
												],
												"src": "2825:619:2"
											},
											{
												"body": {
													"nativeSrc": "3478:152:2",
													"nodeType": "YulBlock",
													"src": "3478:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3495:1:2",
																		"nodeType": "YulLiteral",
																		"src": "3495:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3498:77:2",
																		"nodeType": "YulLiteral",
																		"src": "3498:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3488:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3488:6:2"
																},
																"nativeSrc": "3488:88:2",
																"nodeType": "YulFunctionCall",
																"src": "3488:88:2"
															},
															"nativeSrc": "3488:88:2",
															"nodeType": "YulExpressionStatement",
															"src": "3488:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3592:1:2",
																		"nodeType": "YulLiteral",
																		"src": "3592:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3595:4:2",
																		"nodeType": "YulLiteral",
																		"src": "3595:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3585:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3585:6:2"
																},
																"nativeSrc": "3585:15:2",
																"nodeType": "YulFunctionCall",
																"src": "3585:15:2"
															},
															"nativeSrc": "3585:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "3585:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3616:1:2",
																		"nodeType": "YulLiteral",
																		"src": "3616:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3619:4:2",
																		"nodeType": "YulLiteral",
																		"src": "3619:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3609:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3609:6:2"
																},
																"nativeSrc": "3609:15:2",
																"nodeType": "YulFunctionCall",
																"src": "3609:15:2"
															},
															"nativeSrc": "3609:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "3609:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3450:180:2",
												"nodeType": "YulFunctionDefinition",
												"src": "3450:180:2"
											},
											{
												"body": {
													"nativeSrc": "3684:362:2",
													"nodeType": "YulBlock",
													"src": "3684:362:2",
													"statements": [
														{
															"nativeSrc": "3694:25:2",
															"nodeType": "YulAssignment",
															"src": "3694:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3717:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3717:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3699:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "3699:17:2"
																},
																"nativeSrc": "3699:20:2",
																"nodeType": "YulFunctionCall",
																"src": "3699:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3694:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "3694:1:2"
																}
															]
														},
														{
															"nativeSrc": "3728:25:2",
															"nodeType": "YulAssignment",
															"src": "3728:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3751:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3751:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3733:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "3733:17:2"
																},
																"nativeSrc": "3733:20:2",
																"nodeType": "YulFunctionCall",
																"src": "3733:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3728:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "3728:1:2"
																}
															]
														},
														{
															"nativeSrc": "3762:28:2",
															"nodeType": "YulVariableDeclaration",
															"src": "3762:28:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3785:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3785:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3788:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3788:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3781:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3781:3:2"
																},
																"nativeSrc": "3781:9:2",
																"nodeType": "YulFunctionCall",
																"src": "3781:9:2"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "3766:11:2",
																	"nodeType": "YulTypedName",
																	"src": "3766:11:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3799:41:2",
															"nodeType": "YulAssignment",
															"src": "3799:41:2",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "3828:11:2",
																		"nodeType": "YulIdentifier",
																		"src": "3828:11:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3810:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "3810:17:2"
																},
																"nativeSrc": "3810:30:2",
																"nodeType": "YulFunctionCall",
																"src": "3810:30:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "3799:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "3799:7:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4017:22:2",
																"nodeType": "YulBlock",
																"src": "4017:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4019:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "4019:16:2"
																			},
																			"nativeSrc": "4019:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "4019:18:2"
																		},
																		"nativeSrc": "4019:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "4019:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "3950:1:2",
																						"nodeType": "YulIdentifier",
																						"src": "3950:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3943:6:2",
																					"nodeType": "YulIdentifier",
																					"src": "3943:6:2"
																				},
																				"nativeSrc": "3943:9:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3943:9:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "3973:1:2",
																						"nodeType": "YulIdentifier",
																						"src": "3973:1:2"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "3980:7:2",
																								"nodeType": "YulIdentifier",
																								"src": "3980:7:2"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "3989:1:2",
																								"nodeType": "YulIdentifier",
																								"src": "3989:1:2"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "3976:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "3976:3:2"
																						},
																						"nativeSrc": "3976:15:2",
																						"nodeType": "YulFunctionCall",
																						"src": "3976:15:2"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "3970:2:2",
																					"nodeType": "YulIdentifier",
																					"src": "3970:2:2"
																				},
																				"nativeSrc": "3970:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3970:22:2"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "3923:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "3923:2:2"
																		},
																		"nativeSrc": "3923:83:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3923:83:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3903:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3903:6:2"
																},
																"nativeSrc": "3903:113:2",
																"nodeType": "YulFunctionCall",
																"src": "3903:113:2"
															},
															"nativeSrc": "3900:139:2",
															"nodeType": "YulIf",
															"src": "3900:139:2"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "3636:410:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3667:1:2",
														"nodeType": "YulTypedName",
														"src": "3667:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3670:1:2",
														"nodeType": "YulTypedName",
														"src": "3670:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "3676:7:2",
														"nodeType": "YulTypedName",
														"src": "3676:7:2",
														"type": ""
													}
												],
												"src": "3636:410:2"
											},
											{
												"body": {
													"nativeSrc": "4080:152:2",
													"nodeType": "YulBlock",
													"src": "4080:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4097:1:2",
																		"nodeType": "YulLiteral",
																		"src": "4097:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4100:77:2",
																		"nodeType": "YulLiteral",
																		"src": "4100:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4090:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "4090:6:2"
																},
																"nativeSrc": "4090:88:2",
																"nodeType": "YulFunctionCall",
																"src": "4090:88:2"
															},
															"nativeSrc": "4090:88:2",
															"nodeType": "YulExpressionStatement",
															"src": "4090:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4194:1:2",
																		"nodeType": "YulLiteral",
																		"src": "4194:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4197:4:2",
																		"nodeType": "YulLiteral",
																		"src": "4197:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4187:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "4187:6:2"
																},
																"nativeSrc": "4187:15:2",
																"nodeType": "YulFunctionCall",
																"src": "4187:15:2"
															},
															"nativeSrc": "4187:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "4187:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4218:1:2",
																		"nodeType": "YulLiteral",
																		"src": "4218:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4221:4:2",
																		"nodeType": "YulLiteral",
																		"src": "4221:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4211:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "4211:6:2"
																},
																"nativeSrc": "4211:15:2",
																"nodeType": "YulFunctionCall",
																"src": "4211:15:2"
															},
															"nativeSrc": "4211:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "4211:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "4052:180:2",
												"nodeType": "YulFunctionDefinition",
												"src": "4052:180:2"
											},
											{
												"body": {
													"nativeSrc": "4280:143:2",
													"nodeType": "YulBlock",
													"src": "4280:143:2",
													"statements": [
														{
															"nativeSrc": "4290:25:2",
															"nodeType": "YulAssignment",
															"src": "4290:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4313:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "4313:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4295:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "4295:17:2"
																},
																"nativeSrc": "4295:20:2",
																"nodeType": "YulFunctionCall",
																"src": "4295:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4290:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "4290:1:2"
																}
															]
														},
														{
															"nativeSrc": "4324:25:2",
															"nodeType": "YulAssignment",
															"src": "4324:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4347:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "4347:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4329:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "4329:17:2"
																},
																"nativeSrc": "4329:20:2",
																"nodeType": "YulFunctionCall",
																"src": "4329:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4324:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "4324:1:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4371:22:2",
																"nodeType": "YulBlock",
																"src": "4371:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "4373:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "4373:16:2"
																			},
																			"nativeSrc": "4373:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "4373:18:2"
																		},
																		"nativeSrc": "4373:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "4373:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4368:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "4368:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4361:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "4361:6:2"
																},
																"nativeSrc": "4361:9:2",
																"nodeType": "YulFunctionCall",
																"src": "4361:9:2"
															},
															"nativeSrc": "4358:35:2",
															"nodeType": "YulIf",
															"src": "4358:35:2"
														},
														{
															"nativeSrc": "4403:14:2",
															"nodeType": "YulAssignment",
															"src": "4403:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4412:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "4412:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4415:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "4415:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4408:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "4408:3:2"
																},
																"nativeSrc": "4408:9:2",
																"nodeType": "YulFunctionCall",
																"src": "4408:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "4403:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "4403:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "4238:185:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4269:1:2",
														"nodeType": "YulTypedName",
														"src": "4269:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4272:1:2",
														"nodeType": "YulTypedName",
														"src": "4272:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "4278:1:2",
														"nodeType": "YulTypedName",
														"src": "4278:1:2",
														"type": ""
													}
												],
												"src": "4238:185:2"
											},
											{
												"body": {
													"nativeSrc": "4525:73:2",
													"nodeType": "YulBlock",
													"src": "4525:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4542:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "4542:3:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4547:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "4547:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4535:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "4535:6:2"
																},
																"nativeSrc": "4535:19:2",
																"nodeType": "YulFunctionCall",
																"src": "4535:19:2"
															},
															"nativeSrc": "4535:19:2",
															"nodeType": "YulExpressionStatement",
															"src": "4535:19:2"
														},
														{
															"nativeSrc": "4563:29:2",
															"nodeType": "YulAssignment",
															"src": "4563:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4582:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "4582:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4587:4:2",
																		"nodeType": "YulLiteral",
																		"src": "4587:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4578:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "4578:3:2"
																},
																"nativeSrc": "4578:14:2",
																"nodeType": "YulFunctionCall",
																"src": "4578:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4563:11:2",
																	"nodeType": "YulIdentifier",
																	"src": "4563:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4429:169:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4497:3:2",
														"nodeType": "YulTypedName",
														"src": "4497:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4502:6:2",
														"nodeType": "YulTypedName",
														"src": "4502:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4513:11:2",
														"nodeType": "YulTypedName",
														"src": "4513:11:2",
														"type": ""
													}
												],
												"src": "4429:169:2"
											},
											{
												"body": {
													"nativeSrc": "4710:114:2",
													"nodeType": "YulBlock",
													"src": "4710:114:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4732:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "4732:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4740:1:2",
																				"nodeType": "YulLiteral",
																				"src": "4740:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4728:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "4728:3:2"
																		},
																		"nativeSrc": "4728:14:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4728:14:2"
																	},
																	{
																		"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f",
																		"kind": "string",
																		"nativeSrc": "4744:34:2",
																		"nodeType": "YulLiteral",
																		"src": "4744:34:2",
																		"type": "",
																		"value": "SafeMath: multiplication overflo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4721:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "4721:6:2"
																},
																"nativeSrc": "4721:58:2",
																"nodeType": "YulFunctionCall",
																"src": "4721:58:2"
															},
															"nativeSrc": "4721:58:2",
															"nodeType": "YulExpressionStatement",
															"src": "4721:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4800:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "4800:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4808:2:2",
																				"nodeType": "YulLiteral",
																				"src": "4808:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4796:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "4796:3:2"
																		},
																		"nativeSrc": "4796:15:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4796:15:2"
																	},
																	{
																		"hexValue": "77",
																		"kind": "string",
																		"nativeSrc": "4813:3:2",
																		"nodeType": "YulLiteral",
																		"src": "4813:3:2",
																		"type": "",
																		"value": "w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4789:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "4789:6:2"
																},
																"nativeSrc": "4789:28:2",
																"nodeType": "YulFunctionCall",
																"src": "4789:28:2"
															},
															"nativeSrc": "4789:28:2",
															"nodeType": "YulExpressionStatement",
															"src": "4789:28:2"
														}
													]
												},
												"name": "store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
												"nativeSrc": "4604:220:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4702:6:2",
														"nodeType": "YulTypedName",
														"src": "4702:6:2",
														"type": ""
													}
												],
												"src": "4604:220:2"
											},
											{
												"body": {
													"nativeSrc": "4976:220:2",
													"nodeType": "YulBlock",
													"src": "4976:220:2",
													"statements": [
														{
															"nativeSrc": "4986:74:2",
															"nodeType": "YulAssignment",
															"src": "4986:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5052:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "5052:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5057:2:2",
																		"nodeType": "YulLiteral",
																		"src": "5057:2:2",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4993:58:2",
																	"nodeType": "YulIdentifier",
																	"src": "4993:58:2"
																},
																"nativeSrc": "4993:67:2",
																"nodeType": "YulFunctionCall",
																"src": "4993:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4986:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "4986:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5158:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "5158:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																	"nativeSrc": "5069:88:2",
																	"nodeType": "YulIdentifier",
																	"src": "5069:88:2"
																},
																"nativeSrc": "5069:93:2",
																"nodeType": "YulFunctionCall",
																"src": "5069:93:2"
															},
															"nativeSrc": "5069:93:2",
															"nodeType": "YulExpressionStatement",
															"src": "5069:93:2"
														},
														{
															"nativeSrc": "5171:19:2",
															"nodeType": "YulAssignment",
															"src": "5171:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5182:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "5182:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5187:2:2",
																		"nodeType": "YulLiteral",
																		"src": "5187:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5178:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "5178:3:2"
																},
																"nativeSrc": "5178:12:2",
																"nodeType": "YulFunctionCall",
																"src": "5178:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5171:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "5171:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4830:366:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4964:3:2",
														"nodeType": "YulTypedName",
														"src": "4964:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4972:3:2",
														"nodeType": "YulTypedName",
														"src": "4972:3:2",
														"type": ""
													}
												],
												"src": "4830:366:2"
											},
											{
												"body": {
													"nativeSrc": "5373:248:2",
													"nodeType": "YulBlock",
													"src": "5373:248:2",
													"statements": [
														{
															"nativeSrc": "5383:26:2",
															"nodeType": "YulAssignment",
															"src": "5383:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5395:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "5395:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5406:2:2",
																		"nodeType": "YulLiteral",
																		"src": "5406:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5391:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "5391:3:2"
																},
																"nativeSrc": "5391:18:2",
																"nodeType": "YulFunctionCall",
																"src": "5391:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5383:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "5383:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5430:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "5430:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5441:1:2",
																				"nodeType": "YulLiteral",
																				"src": "5441:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5426:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "5426:3:2"
																		},
																		"nativeSrc": "5426:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "5426:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5449:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "5449:4:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5455:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "5455:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5445:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "5445:3:2"
																		},
																		"nativeSrc": "5445:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "5445:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5419:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "5419:6:2"
																},
																"nativeSrc": "5419:47:2",
																"nodeType": "YulFunctionCall",
																"src": "5419:47:2"
															},
															"nativeSrc": "5419:47:2",
															"nodeType": "YulExpressionStatement",
															"src": "5419:47:2"
														},
														{
															"nativeSrc": "5475:139:2",
															"nodeType": "YulAssignment",
															"src": "5475:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5609:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "5609:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5483:124:2",
																	"nodeType": "YulIdentifier",
																	"src": "5483:124:2"
																},
																"nativeSrc": "5483:131:2",
																"nodeType": "YulFunctionCall",
																"src": "5483:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5475:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "5475:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5202:419:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5353:9:2",
														"nodeType": "YulTypedName",
														"src": "5353:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5368:4:2",
														"nodeType": "YulTypedName",
														"src": "5368:4:2",
														"type": ""
													}
												],
												"src": "5202:419:2"
											},
											{
												"body": {
													"nativeSrc": "5686:40:2",
													"nodeType": "YulBlock",
													"src": "5686:40:2",
													"statements": [
														{
															"nativeSrc": "5697:22:2",
															"nodeType": "YulAssignment",
															"src": "5697:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5713:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "5713:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5707:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "5707:5:2"
																},
																"nativeSrc": "5707:12:2",
																"nodeType": "YulFunctionCall",
																"src": "5707:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5697:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "5697:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "5627:99:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5669:5:2",
														"nodeType": "YulTypedName",
														"src": "5669:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5679:6:2",
														"nodeType": "YulTypedName",
														"src": "5679:6:2",
														"type": ""
													}
												],
												"src": "5627:99:2"
											},
											{
												"body": {
													"nativeSrc": "5794:184:2",
													"nodeType": "YulBlock",
													"src": "5794:184:2",
													"statements": [
														{
															"nativeSrc": "5804:10:2",
															"nodeType": "YulVariableDeclaration",
															"src": "5804:10:2",
															"value": {
																"kind": "number",
																"nativeSrc": "5813:1:2",
																"nodeType": "YulLiteral",
																"src": "5813:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "5808:1:2",
																	"nodeType": "YulTypedName",
																	"src": "5808:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5873:63:2",
																"nodeType": "YulBlock",
																"src": "5873:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "5898:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "5898:3:2"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "5903:1:2",
																							"nodeType": "YulIdentifier",
																							"src": "5903:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5894:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "5894:3:2"
																					},
																					"nativeSrc": "5894:11:2",
																					"nodeType": "YulFunctionCall",
																					"src": "5894:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "5917:3:2",
																									"nodeType": "YulIdentifier",
																									"src": "5917:3:2"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "5922:1:2",
																									"nodeType": "YulIdentifier",
																									"src": "5922:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5913:3:2",
																								"nodeType": "YulIdentifier",
																								"src": "5913:3:2"
																							},
																							"nativeSrc": "5913:11:2",
																							"nodeType": "YulFunctionCall",
																							"src": "5913:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "5907:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "5907:5:2"
																					},
																					"nativeSrc": "5907:18:2",
																					"nodeType": "YulFunctionCall",
																					"src": "5907:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5887:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "5887:6:2"
																			},
																			"nativeSrc": "5887:39:2",
																			"nodeType": "YulFunctionCall",
																			"src": "5887:39:2"
																		},
																		"nativeSrc": "5887:39:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "5887:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "5834:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "5834:1:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5837:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "5837:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5831:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "5831:2:2"
																},
																"nativeSrc": "5831:13:2",
																"nodeType": "YulFunctionCall",
																"src": "5831:13:2"
															},
															"nativeSrc": "5823:113:2",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5845:19:2",
																"nodeType": "YulBlock",
																"src": "5845:19:2",
																"statements": [
																	{
																		"nativeSrc": "5847:15:2",
																		"nodeType": "YulAssignment",
																		"src": "5847:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "5856:1:2",
																					"nodeType": "YulIdentifier",
																					"src": "5856:1:2"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5859:2:2",
																					"nodeType": "YulLiteral",
																					"src": "5859:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5852:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "5852:3:2"
																			},
																			"nativeSrc": "5852:10:2",
																			"nodeType": "YulFunctionCall",
																			"src": "5852:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "5847:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "5847:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5827:3:2",
																"nodeType": "YulBlock",
																"src": "5827:3:2",
																"statements": []
															},
															"src": "5823:113:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "5956:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "5956:3:2"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "5961:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "5961:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5952:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "5952:3:2"
																		},
																		"nativeSrc": "5952:16:2",
																		"nodeType": "YulFunctionCall",
																		"src": "5952:16:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5970:1:2",
																		"nodeType": "YulLiteral",
																		"src": "5970:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5945:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "5945:6:2"
																},
																"nativeSrc": "5945:27:2",
																"nodeType": "YulFunctionCall",
																"src": "5945:27:2"
															},
															"nativeSrc": "5945:27:2",
															"nodeType": "YulExpressionStatement",
															"src": "5945:27:2"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "5732:246:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5776:3:2",
														"nodeType": "YulTypedName",
														"src": "5776:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "5781:3:2",
														"nodeType": "YulTypedName",
														"src": "5781:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5786:6:2",
														"nodeType": "YulTypedName",
														"src": "5786:6:2",
														"type": ""
													}
												],
												"src": "5732:246:2"
											},
											{
												"body": {
													"nativeSrc": "6032:54:2",
													"nodeType": "YulBlock",
													"src": "6032:54:2",
													"statements": [
														{
															"nativeSrc": "6042:38:2",
															"nodeType": "YulAssignment",
															"src": "6042:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6060:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "6060:5:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6067:2:2",
																				"nodeType": "YulLiteral",
																				"src": "6067:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6056:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "6056:3:2"
																		},
																		"nativeSrc": "6056:14:2",
																		"nodeType": "YulFunctionCall",
																		"src": "6056:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6076:2:2",
																				"nodeType": "YulLiteral",
																				"src": "6076:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "6072:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "6072:3:2"
																		},
																		"nativeSrc": "6072:7:2",
																		"nodeType": "YulFunctionCall",
																		"src": "6072:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6052:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "6052:3:2"
																},
																"nativeSrc": "6052:28:2",
																"nodeType": "YulFunctionCall",
																"src": "6052:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6042:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "6042:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "5984:102:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6015:5:2",
														"nodeType": "YulTypedName",
														"src": "6015:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6025:6:2",
														"nodeType": "YulTypedName",
														"src": "6025:6:2",
														"type": ""
													}
												],
												"src": "5984:102:2"
											},
											{
												"body": {
													"nativeSrc": "6184:285:2",
													"nodeType": "YulBlock",
													"src": "6184:285:2",
													"statements": [
														{
															"nativeSrc": "6194:53:2",
															"nodeType": "YulVariableDeclaration",
															"src": "6194:53:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6241:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "6241:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6208:32:2",
																	"nodeType": "YulIdentifier",
																	"src": "6208:32:2"
																},
																"nativeSrc": "6208:39:2",
																"nodeType": "YulFunctionCall",
																"src": "6208:39:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6198:6:2",
																	"nodeType": "YulTypedName",
																	"src": "6198:6:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6256:78:2",
															"nodeType": "YulAssignment",
															"src": "6256:78:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6322:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "6322:3:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6327:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "6327:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6263:58:2",
																	"nodeType": "YulIdentifier",
																	"src": "6263:58:2"
																},
																"nativeSrc": "6263:71:2",
																"nodeType": "YulFunctionCall",
																"src": "6263:71:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6256:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "6256:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6382:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "6382:5:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6389:4:2",
																				"nodeType": "YulLiteral",
																				"src": "6389:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6378:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "6378:3:2"
																		},
																		"nativeSrc": "6378:16:2",
																		"nodeType": "YulFunctionCall",
																		"src": "6378:16:2"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6396:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "6396:3:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6401:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "6401:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6343:34:2",
																	"nodeType": "YulIdentifier",
																	"src": "6343:34:2"
																},
																"nativeSrc": "6343:65:2",
																"nodeType": "YulFunctionCall",
																"src": "6343:65:2"
															},
															"nativeSrc": "6343:65:2",
															"nodeType": "YulExpressionStatement",
															"src": "6343:65:2"
														},
														{
															"nativeSrc": "6417:46:2",
															"nodeType": "YulAssignment",
															"src": "6417:46:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6428:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "6428:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6455:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "6455:6:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6433:21:2",
																			"nodeType": "YulIdentifier",
																			"src": "6433:21:2"
																		},
																		"nativeSrc": "6433:29:2",
																		"nodeType": "YulFunctionCall",
																		"src": "6433:29:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6424:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "6424:3:2"
																},
																"nativeSrc": "6424:39:2",
																"nodeType": "YulFunctionCall",
																"src": "6424:39:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6417:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "6417:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6092:377:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6165:5:2",
														"nodeType": "YulTypedName",
														"src": "6165:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6172:3:2",
														"nodeType": "YulTypedName",
														"src": "6172:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6180:3:2",
														"nodeType": "YulTypedName",
														"src": "6180:3:2",
														"type": ""
													}
												],
												"src": "6092:377:2"
											},
											{
												"body": {
													"nativeSrc": "6593:195:2",
													"nodeType": "YulBlock",
													"src": "6593:195:2",
													"statements": [
														{
															"nativeSrc": "6603:26:2",
															"nodeType": "YulAssignment",
															"src": "6603:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6615:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "6615:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6626:2:2",
																		"nodeType": "YulLiteral",
																		"src": "6626:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6611:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "6611:3:2"
																},
																"nativeSrc": "6611:18:2",
																"nodeType": "YulFunctionCall",
																"src": "6611:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6603:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "6603:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6650:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "6650:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6661:1:2",
																				"nodeType": "YulLiteral",
																				"src": "6661:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6646:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "6646:3:2"
																		},
																		"nativeSrc": "6646:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "6646:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6669:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "6669:4:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6675:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "6675:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6665:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "6665:3:2"
																		},
																		"nativeSrc": "6665:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "6665:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6639:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "6639:6:2"
																},
																"nativeSrc": "6639:47:2",
																"nodeType": "YulFunctionCall",
																"src": "6639:47:2"
															},
															"nativeSrc": "6639:47:2",
															"nodeType": "YulExpressionStatement",
															"src": "6639:47:2"
														},
														{
															"nativeSrc": "6695:86:2",
															"nodeType": "YulAssignment",
															"src": "6695:86:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6767:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "6767:6:2"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "6776:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "6776:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6703:63:2",
																	"nodeType": "YulIdentifier",
																	"src": "6703:63:2"
																},
																"nativeSrc": "6703:78:2",
																"nodeType": "YulFunctionCall",
																"src": "6703:78:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6695:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "6695:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6475:313:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6565:9:2",
														"nodeType": "YulTypedName",
														"src": "6565:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6577:6:2",
														"nodeType": "YulTypedName",
														"src": "6577:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6588:4:2",
														"nodeType": "YulTypedName",
														"src": "6588:4:2",
														"type": ""
													}
												],
												"src": "6475:313:2"
											},
											{
												"body": {
													"nativeSrc": "6839:149:2",
													"nodeType": "YulBlock",
													"src": "6839:149:2",
													"statements": [
														{
															"nativeSrc": "6849:25:2",
															"nodeType": "YulAssignment",
															"src": "6849:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6872:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "6872:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6854:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "6854:17:2"
																},
																"nativeSrc": "6854:20:2",
																"nodeType": "YulFunctionCall",
																"src": "6854:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6849:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "6849:1:2"
																}
															]
														},
														{
															"nativeSrc": "6883:25:2",
															"nodeType": "YulAssignment",
															"src": "6883:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6906:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "6906:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6888:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "6888:17:2"
																},
																"nativeSrc": "6888:20:2",
																"nodeType": "YulFunctionCall",
																"src": "6888:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6883:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "6883:1:2"
																}
															]
														},
														{
															"nativeSrc": "6917:17:2",
															"nodeType": "YulAssignment",
															"src": "6917:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6929:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "6929:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6932:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "6932:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6925:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "6925:3:2"
																},
																"nativeSrc": "6925:9:2",
																"nodeType": "YulFunctionCall",
																"src": "6925:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6917:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "6917:4:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6959:22:2",
																"nodeType": "YulBlock",
																"src": "6959:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6961:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "6961:16:2"
																			},
																			"nativeSrc": "6961:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "6961:18:2"
																		},
																		"nativeSrc": "6961:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "6961:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6950:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "6950:4:2"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "6956:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "6956:1:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6947:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "6947:2:2"
																},
																"nativeSrc": "6947:11:2",
																"nodeType": "YulFunctionCall",
																"src": "6947:11:2"
															},
															"nativeSrc": "6944:37:2",
															"nodeType": "YulIf",
															"src": "6944:37:2"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "6794:194:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6825:1:2",
														"nodeType": "YulTypedName",
														"src": "6825:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6828:1:2",
														"nodeType": "YulTypedName",
														"src": "6828:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6834:4:2",
														"nodeType": "YulTypedName",
														"src": "6834:4:2",
														"type": ""
													}
												],
												"src": "6794:194:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_library_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack_library(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack_library(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: multiplication overflo\")\n\n        mstore(add(memPtr, 32), \"w\")\n\n    }\n\n    function abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "7300000000000000000000000000000000000000003014608060405260043610610060575f3560e01c806306058f4a146100645780630f41b452146100955780630ff24ec1146100c55780635413e192146100f5578063ce032cc114610125575b5f80fd5b61007e6004803603810190610079919061052a565b610155565b60405161008c9291906105b0565b60405180910390f35b6100af60048036038101906100aa91906105d7565b61024b565b6040516100bc9190610615565b60405180910390f35b6100df60048036038101906100da919061062e565b61027c565b6040516100ec9190610615565b60405180910390f35b61010f600480360381019061010a91906105d7565b6102c5565b60405161011c9190610615565b60405180910390f35b61013f600480360381019061013a91906105d7565b6102f6565b60405161014c9190610615565b60405180910390f35b5f805f610180620f4240610172898b61032790919063ffffffff16565b61039e90919063ffffffff16565b90505f6101ab8661019d620f42408a61032790919063ffffffff16565b61039e90919063ffffffff16565b90505f6101fa620f42406101ec6101cb858b61032790919063ffffffff16565b6101de8b8b61032790919063ffffffff16565b6103e790919063ffffffff16565b61039e90919063ffffffff16565b90505f81841161020c57839050610210565b8190505b6102388a61022a620f42408461032790919063ffffffff16565b61039e90919063ffffffff16565b8195509550505050509550959350505050565b5f61027483610266620f42408561032790919063ffffffff16565b61039e90919063ffffffff16565b905092915050565b5f806102a6620f4240610298868861032790919063ffffffff16565b61039e90919063ffffffff16565b90506102bb83826103e790919063ffffffff16565b9150509392505050565b5f6102ee620f42406102e0858561032790919063ffffffff16565b61039e90919063ffffffff16565b905092915050565b5f61031f620f4240610311858561032790919063ffffffff16565b61039e90919063ffffffff16565b905092915050565b5f808303610337575f9050610398565b5f828461034491906106ab565b90508284826103539190610719565b14610393576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038a906107c9565b60405180910390fd5b809150505b92915050565b5f6103df83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610430565b905092915050565b5f61042883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610491565b905092915050565b5f8083118290610476576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046d9190610861565b60405180910390fd5b505f83856104849190610719565b9050809150509392505050565b5f8383111582906104d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cf9190610861565b60405180910390fd5b505f83856104e69190610881565b9050809150509392505050565b5f80fd5b5f819050919050565b610509816104f7565b8114610513575f80fd5b50565b5f8135905061052481610500565b92915050565b5f805f805f60a08688031215610543576105426104f3565b5b5f61055088828901610516565b955050602061056188828901610516565b945050604061057288828901610516565b935050606061058388828901610516565b925050608061059488828901610516565b9150509295509295909350565b6105aa816104f7565b82525050565b5f6040820190506105c35f8301856105a1565b6105d060208301846105a1565b9392505050565b5f80604083850312156105ed576105ec6104f3565b5b5f6105fa85828601610516565b925050602061060b85828601610516565b9150509250929050565b5f6020820190506106285f8301846105a1565b92915050565b5f805f60608486031215610645576106446104f3565b5b5f61065286828701610516565b935050602061066386828701610516565b925050604061067486828701610516565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6106b5826104f7565b91506106c0836104f7565b92508282026106ce816104f7565b915082820484148315176106e5576106e461067e565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610723826104f7565b915061072e836104f7565b92508261073e5761073d6106ec565b5b828204905092915050565b5f82825260208201905092915050565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f5f8201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b5f6107b3602183610749565b91506107be82610759565b604082019050919050565b5f6020820190508181035f8301526107e0816107a7565b9050919050565b5f81519050919050565b5f5b8381101561080e5780820151818401526020810190506107f3565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610833826107e7565b61083d8185610749565b935061084d8185602086016107f1565b61085681610819565b840191505092915050565b5f6020820190508181035f8301526108798184610829565b905092915050565b5f61088b826104f7565b9150610896836104f7565b92508282039050818111156108ae576108ad61067e565b5b9291505056fea26469706673582212200d9257cd21b9e09bc23c8990880211aa91512baa4eca3ef11863acb5f46c205e64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6058F4A EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xF41B452 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0xFF24EC1 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x5413E192 EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0xCE032CC1 EQ PUSH2 0x125 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x155 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8C SWAP3 SWAP2 SWAP1 PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x5D7 JUMP JUMPDEST PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x615 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x62E JUMP JUMPDEST PUSH2 0x27C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x615 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x5D7 JUMP JUMPDEST PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x615 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x5D7 JUMP JUMPDEST PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x615 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x180 PUSH3 0xF4240 PUSH2 0x172 DUP10 DUP12 PUSH2 0x327 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1AB DUP7 PUSH2 0x19D PUSH3 0xF4240 DUP11 PUSH2 0x327 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1FA PUSH3 0xF4240 PUSH2 0x1EC PUSH2 0x1CB DUP6 DUP12 PUSH2 0x327 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1DE DUP12 DUP12 PUSH2 0x327 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3E7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP5 GT PUSH2 0x20C JUMPI DUP4 SWAP1 POP PUSH2 0x210 JUMP JUMPDEST DUP2 SWAP1 POP JUMPDEST PUSH2 0x238 DUP11 PUSH2 0x22A PUSH3 0xF4240 DUP5 PUSH2 0x327 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 SWAP6 POP SWAP6 POP POP POP POP POP SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x274 DUP4 PUSH2 0x266 PUSH3 0xF4240 DUP6 PUSH2 0x327 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2A6 PUSH3 0xF4240 PUSH2 0x298 DUP7 DUP9 PUSH2 0x327 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2BB DUP4 DUP3 PUSH2 0x3E7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2EE PUSH3 0xF4240 PUSH2 0x2E0 DUP6 DUP6 PUSH2 0x327 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x31F PUSH3 0xF4240 PUSH2 0x311 DUP6 DUP6 PUSH2 0x327 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x39E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 SUB PUSH2 0x337 JUMPI PUSH0 SWAP1 POP PUSH2 0x398 JUMP JUMPDEST PUSH0 DUP3 DUP5 PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x6AB JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x719 JUMP JUMPDEST EQ PUSH2 0x393 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38A SWAP1 PUSH2 0x7C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3DF DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x430 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x428 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x491 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x476 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x861 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH0 DUP4 DUP6 PUSH2 0x484 SWAP2 SWAP1 PUSH2 0x719 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x4D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CF SWAP2 SWAP1 PUSH2 0x861 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH0 DUP4 DUP6 PUSH2 0x4E6 SWAP2 SWAP1 PUSH2 0x881 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x509 DUP2 PUSH2 0x4F7 JUMP JUMPDEST DUP2 EQ PUSH2 0x513 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x524 DUP2 PUSH2 0x500 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x543 JUMPI PUSH2 0x542 PUSH2 0x4F3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x550 DUP9 DUP3 DUP10 ADD PUSH2 0x516 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x561 DUP9 DUP3 DUP10 ADD PUSH2 0x516 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x572 DUP9 DUP3 DUP10 ADD PUSH2 0x516 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x583 DUP9 DUP3 DUP10 ADD PUSH2 0x516 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x594 DUP9 DUP3 DUP10 ADD PUSH2 0x516 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x5AA DUP2 PUSH2 0x4F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5C3 PUSH0 DUP4 ADD DUP6 PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x5D0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5A1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5ED JUMPI PUSH2 0x5EC PUSH2 0x4F3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5FA DUP6 DUP3 DUP7 ADD PUSH2 0x516 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x60B DUP6 DUP3 DUP7 ADD PUSH2 0x516 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x628 PUSH0 DUP4 ADD DUP5 PUSH2 0x5A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x645 JUMPI PUSH2 0x644 PUSH2 0x4F3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x652 DUP7 DUP3 DUP8 ADD PUSH2 0x516 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x663 DUP7 DUP3 DUP8 ADD PUSH2 0x516 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x674 DUP7 DUP3 DUP8 ADD PUSH2 0x516 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x6B5 DUP3 PUSH2 0x4F7 JUMP JUMPDEST SWAP2 POP PUSH2 0x6C0 DUP4 PUSH2 0x4F7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x6CE DUP2 PUSH2 0x4F7 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x6E5 JUMPI PUSH2 0x6E4 PUSH2 0x67E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x723 DUP3 PUSH2 0x4F7 JUMP JUMPDEST SWAP2 POP PUSH2 0x72E DUP4 PUSH2 0x4F7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x73E JUMPI PUSH2 0x73D PUSH2 0x6EC JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x7B3 PUSH1 0x21 DUP4 PUSH2 0x749 JUMP JUMPDEST SWAP2 POP PUSH2 0x7BE DUP3 PUSH2 0x759 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x7E0 DUP2 PUSH2 0x7A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x80E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7F3 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x833 DUP3 PUSH2 0x7E7 JUMP JUMPDEST PUSH2 0x83D DUP2 DUP6 PUSH2 0x749 JUMP JUMPDEST SWAP4 POP PUSH2 0x84D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x856 DUP2 PUSH2 0x819 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x879 DUP2 DUP5 PUSH2 0x829 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x88B DUP3 PUSH2 0x4F7 JUMP JUMPDEST SWAP2 POP PUSH2 0x896 DUP4 PUSH2 0x4F7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x8AE JUMPI PUSH2 0x8AD PUSH2 0x67E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP3 JUMPI 0xCD 0x21 0xB9 0xE0 SWAP12 0xC2 EXTCODECOPY DUP10 SWAP1 DUP9 MUL GT 0xAA SWAP2 MLOAD 0x2B 0xAA 0x4E 0xCA RETURNDATACOPY CALL XOR PUSH4 0xACB5F46C KECCAK256 0x5E PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "109:5261:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4436:931;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2364:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3764:666;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;767:176;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;949;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4436:931;4677:7;4686;4705:30;4738:41;4775:3;4738:32;4760:9;4738:17;:21;;:32;;;;:::i;:::-;:36;;:41;;;;:::i;:::-;4705:74;;4789:34;4826:51;4859:17;4826:28;4850:3;4826:19;:23;;:28;;;;:::i;:::-;:32;;:51;;;;:::i;:::-;4789:88;;4907:25;4935:112;5043:3;4936:101;4987:49;5009:26;4987:17;:21;;:49;;;;:::i;:::-;4936:46;4964:17;4936:23;:27;;:46;;;;:::i;:::-;:50;;:101;;;;:::i;:::-;4935:107;;:112;;;;:::i;:::-;4907:140;;5058:26;5123:17;5097:22;:43;5094:184;;5176:22;5155:43;;5094:184;;;5250:17;5229:38;;5094:184;5296:42;5328:9;5296:27;5319:3;5296:18;:22;;:27;;;;:::i;:::-;:31;;:42;;;;:::i;:::-;5340:18;5288:71;;;;;;;;4436:931;;;;;;;;:::o;2364:164::-;2456:7;2482:39;2507:13;2482:20;2498:3;2482:11;:15;;:20;;;;:::i;:::-;:24;;:39;;;;:::i;:::-;2475:46;;2364:164;;;;:::o;3764:666::-;3900:7;3919:27;3949:50;3995:3;3949:41;3966:23;3949:12;:16;;:41;;;;:::i;:::-;:45;;:50;;;;:::i;:::-;3919:80;;4262:44;4286:19;4262;:23;;:44;;;;:::i;:::-;4255:51;;;3764:666;;;;;:::o;767:176::-;863:7;889:47;932:3;890:36;916:9;890:21;:25;;:36;;;;:::i;:::-;889:42;;:47;;;;:::i;:::-;882:54;;767:176;;;;:::o;949:::-;1050:7;1076:42;1114:3;1076:33;1095:13;1076:14;:18;;:33;;;;:::i;:::-;:37;;:42;;;;:::i;:::-;1069:49;;949:176;;;;:::o;2193:459:1:-;2251:7;2497:1;2492;:6;2488:45;;2521:1;2514:8;;;;2488:45;2543:9;2559:1;2555;:5;;;;:::i;:::-;2543:17;;2587:1;2582;2578;:5;;;;:::i;:::-;:10;2570:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2644:1;2637:8;;;2193:459;;;;;:::o;3107:130::-;3165:7;3191:39;3195:1;3198;3191:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3184:46;;3107:130;;;;:::o;1308:134::-;1366:7;1392:43;1396:1;1399;1392:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1385:50;;1308:134;;;;:::o;3752:338::-;3838:7;3935:1;3931;:5;3938:12;3923:28;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3961:9;3977:1;3973;:5;;;;:::i;:::-;3961:17;;4082:1;4075:8;;;3752:338;;;;;:::o;1766:187::-;1852:7;1884:1;1879;:6;;1887:12;1871:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1910:9;1926:1;1922;:5;;;;:::i;:::-;1910:17;;1945:1;1938:8;;;1766:187;;;;;:::o;88:117:2:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:911::-;785:6;793;801;809;817;866:3;854:9;845:7;841:23;837:33;834:120;;;873:79;;:::i;:::-;834:120;993:1;1018:53;1063:7;1054:6;1043:9;1039:22;1018:53;:::i;:::-;1008:63;;964:117;1120:2;1146:53;1191:7;1182:6;1171:9;1167:22;1146:53;:::i;:::-;1136:63;;1091:118;1248:2;1274:53;1319:7;1310:6;1299:9;1295:22;1274:53;:::i;:::-;1264:63;;1219:118;1376:2;1402:53;1447:7;1438:6;1427:9;1423:22;1402:53;:::i;:::-;1392:63;;1347:118;1504:3;1531:53;1576:7;1567:6;1556:9;1552:22;1531:53;:::i;:::-;1521:63;;1475:119;690:911;;;;;;;;:::o;1607:126::-;1702:24;1720:5;1702:24;:::i;:::-;1697:3;1690:37;1607:126;;:::o;1739:356::-;1868:4;1906:2;1895:9;1891:18;1883:26;;1919:79;1995:1;1984:9;1980:17;1971:6;1919:79;:::i;:::-;2008:80;2084:2;2073:9;2069:18;2060:6;2008:80;:::i;:::-;1739:356;;;;;:::o;2101:474::-;2169:6;2177;2226:2;2214:9;2205:7;2201:23;2197:32;2194:119;;;2232:79;;:::i;:::-;2194:119;2352:1;2377:53;2422:7;2413:6;2402:9;2398:22;2377:53;:::i;:::-;2367:63;;2323:117;2479:2;2505:53;2550:7;2541:6;2530:9;2526:22;2505:53;:::i;:::-;2495:63;;2450:118;2101:474;;;;;:::o;2581:238::-;2682:4;2720:2;2709:9;2705:18;2697:26;;2733:79;2809:1;2798:9;2794:17;2785:6;2733:79;:::i;:::-;2581:238;;;;:::o;2825:619::-;2902:6;2910;2918;2967:2;2955:9;2946:7;2942:23;2938:32;2935:119;;;2973:79;;:::i;:::-;2935:119;3093:1;3118:53;3163:7;3154:6;3143:9;3139:22;3118:53;:::i;:::-;3108:63;;3064:117;3220:2;3246:53;3291:7;3282:6;3271:9;3267:22;3246:53;:::i;:::-;3236:63;;3191:118;3348:2;3374:53;3419:7;3410:6;3399:9;3395:22;3374:53;:::i;:::-;3364:63;;3319:118;2825:619;;;;;:::o;3450:180::-;3498:77;3495:1;3488:88;3595:4;3592:1;3585:15;3619:4;3616:1;3609:15;3636:410;3676:7;3699:20;3717:1;3699:20;:::i;:::-;3694:25;;3733:20;3751:1;3733:20;:::i;:::-;3728:25;;3788:1;3785;3781:9;3810:30;3828:11;3810:30;:::i;:::-;3799:41;;3989:1;3980:7;3976:15;3973:1;3970:22;3950:1;3943:9;3923:83;3900:139;;4019:18;;:::i;:::-;3900:139;3684:362;3636:410;;;;:::o;4052:180::-;4100:77;4097:1;4090:88;4197:4;4194:1;4187:15;4221:4;4218:1;4211:15;4238:185;4278:1;4295:20;4313:1;4295:20;:::i;:::-;4290:25;;4329:20;4347:1;4329:20;:::i;:::-;4324:25;;4368:1;4358:35;;4373:18;;:::i;:::-;4358:35;4415:1;4412;4408:9;4403:14;;4238:185;;;;:::o;4429:169::-;4513:11;4547:6;4542:3;4535:19;4587:4;4582:3;4578:14;4563:29;;4429:169;;;;:::o;4604:220::-;4744:34;4740:1;4732:6;4728:14;4721:58;4813:3;4808:2;4800:6;4796:15;4789:28;4604:220;:::o;4830:366::-;4972:3;4993:67;5057:2;5052:3;4993:67;:::i;:::-;4986:74;;5069:93;5158:3;5069:93;:::i;:::-;5187:2;5182:3;5178:12;5171:19;;4830:366;;;:::o;5202:419::-;5368:4;5406:2;5395:9;5391:18;5383:26;;5455:9;5449:4;5445:20;5441:1;5430:9;5426:17;5419:47;5483:131;5609:4;5483:131;:::i;:::-;5475:139;;5202:419;;;:::o;5627:99::-;5679:6;5713:5;5707:12;5697:22;;5627:99;;;:::o;5732:246::-;5813:1;5823:113;5837:6;5834:1;5831:13;5823:113;;;5922:1;5917:3;5913:11;5907:18;5903:1;5898:3;5894:11;5887:39;5859:2;5856:1;5852:10;5847:15;;5823:113;;;5970:1;5961:6;5956:3;5952:16;5945:27;5794:184;5732:246;;;:::o;5984:102::-;6025:6;6076:2;6072:7;6067:2;6060:5;6056:14;6052:28;6042:38;;5984:102;;;:::o;6092:377::-;6180:3;6208:39;6241:5;6208:39;:::i;:::-;6263:71;6327:6;6322:3;6263:71;:::i;:::-;6256:78;;6343:65;6401:6;6396:3;6389:4;6382:5;6378:16;6343:65;:::i;:::-;6433:29;6455:6;6433:29;:::i;:::-;6428:3;6424:39;6417:46;;6184:285;6092:377;;;;:::o;6475:313::-;6588:4;6626:2;6615:9;6611:18;6603:26;;6675:9;6669:4;6665:20;6661:1;6650:9;6646:17;6639:47;6703:78;6776:4;6767:6;6703:78;:::i;:::-;6695:86;;6475:313;;;;:::o;6794:194::-;6834:4;6854:20;6872:1;6854:20;:::i;:::-;6849:25;;6888:20;6906:1;6888:20;:::i;:::-;6883:25;;6932:1;6929;6925:9;6917:17;;6956:1;6950:4;6947:11;6944:37;;;6961:18;;:::i;:::-;6944:37;6794:194;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "456400",
								"executionCost": "516",
								"totalCost": "456916"
							},
							"external": {
								"calcMint1t1FRAX(uint256,uint256)": "infinite",
								"calcMintAlgorithmicFRAX(uint256,uint256)": "infinite",
								"calcRecollateralizeFRAXInner(uint256,uint256,uint256,uint256,uint256)": "infinite",
								"calcRedeem1t1FRAX(uint256,uint256)": "infinite",
								"recollateralizeAmount(uint256,uint256,uint256)": "infinite"
							},
							"internal": {
								"calcBuyBackFXS(struct FraxPoolLibrary.BuybackFXS_Params memory)": "infinite",
								"calcMintFractionalFRAX(struct FraxPoolLibrary.MintFF_Params memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 109,
									"end": 5370,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 109,
									"end": 5370,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200d9257cd21b9e09bc23c8990880211aa91512baa4eca3ef11863acb5f46c205e64736f6c63430008150033",
									".code": [
										{
											"begin": 109,
											"end": 5370,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "PUSH",
											"source": 0,
											"value": "6058F4A"
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "PUSH",
											"source": 0,
											"value": "F41B452"
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "PUSH",
											"source": 0,
											"value": "FF24EC1"
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "PUSH",
											"source": 0,
											"value": "5413E192"
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "PUSH",
											"source": 0,
											"value": "CE032CC1"
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 5370,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4436,
											"end": 5367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4436,
											"end": 5367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4436,
											"end": 5367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2364,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2364,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2364,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3764,
											"end": 4430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3764,
											"end": 4430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3764,
											"end": 4430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 767,
											"end": 943,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 767,
											"end": 943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 767,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 767,
											"end": 943,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 767,
											"end": 943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 767,
											"end": 943,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 767,
											"end": 943,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 767,
											"end": 943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 767,
											"end": 943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 767,
											"end": 943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 767,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 767,
											"end": 943,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 767,
											"end": 943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 767,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 767,
											"end": 943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 767,
											"end": 943,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 767,
											"end": 943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 767,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 767,
											"end": 943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 767,
											"end": 943,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 767,
											"end": 943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 767,
											"end": 943,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 767,
											"end": 943,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 767,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 767,
											"end": 943,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 767,
											"end": 943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 767,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 767,
											"end": 943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 767,
											"end": 943,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 767,
											"end": 943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 767,
											"end": 943,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 767,
											"end": 943,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 767,
											"end": 943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 767,
											"end": 943,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 767,
											"end": 943,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 767,
											"end": 943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 767,
											"end": 943,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 949,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 949,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 949,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4677,
											"end": 4684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4705,
											"end": 4735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4738,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4775,
											"end": 4778,
											"name": "PUSH",
											"source": 0,
											"value": "F4240"
										},
										{
											"begin": 4738,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4760,
											"end": 4769,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4755,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4738,
											"end": 4759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4770,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4738,
											"end": 4770,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4770,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4738,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4738,
											"end": 4774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4779,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4738,
											"end": 4779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4779,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4738,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4705,
											"end": 4779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4705,
											"end": 4779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4859,
											"end": 4876,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4826,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4850,
											"end": 4853,
											"name": "PUSH",
											"source": 0,
											"value": "F4240"
										},
										{
											"begin": 4826,
											"end": 4845,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 4826,
											"end": 4849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4826,
											"end": 4849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4826,
											"end": 4854,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4826,
											"end": 4854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4826,
											"end": 4854,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4826,
											"end": 4854,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4826,
											"end": 4854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4826,
											"end": 4854,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4826,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4826,
											"end": 4858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4826,
											"end": 4858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4826,
											"end": 4877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4826,
											"end": 4877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4826,
											"end": 4877,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4826,
											"end": 4877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4826,
											"end": 4877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4826,
											"end": 4877,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4826,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4907,
											"end": 4932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4935,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5043,
											"end": 5046,
											"name": "PUSH",
											"source": 0,
											"value": "F4240"
										},
										{
											"begin": 4936,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4987,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5009,
											"end": 5035,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4987,
											"end": 5004,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 4987,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4987,
											"end": 5008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4987,
											"end": 5036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4987,
											"end": 5036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4987,
											"end": 5036,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4987,
											"end": 5036,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4987,
											"end": 5036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4987,
											"end": 5036,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4987,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4936,
											"end": 4982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4964,
											"end": 4981,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 4936,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4936,
											"end": 4963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4936,
											"end": 4982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4936,
											"end": 4982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4936,
											"end": 4982,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4936,
											"end": 4982,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4936,
											"end": 4982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4936,
											"end": 4982,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4936,
											"end": 4982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4936,
											"end": 4986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4936,
											"end": 4986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4936,
											"end": 5037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4936,
											"end": 5037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4936,
											"end": 5037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4936,
											"end": 5037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4936,
											"end": 5037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4936,
											"end": 5037,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4936,
											"end": 5037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4935,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4935,
											"end": 5042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4935,
											"end": 5047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4935,
											"end": 5047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4935,
											"end": 5047,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4935,
											"end": 5047,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4935,
											"end": 5047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4935,
											"end": 5047,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4935,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4907,
											"end": 5047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4907,
											"end": 5047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5058,
											"end": 5084,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5123,
											"end": 5140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5097,
											"end": 5119,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5097,
											"end": 5140,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5094,
											"end": 5278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5094,
											"end": 5278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5176,
											"end": 5198,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5155,
											"end": 5198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5155,
											"end": 5198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5094,
											"end": 5278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5094,
											"end": 5278,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5094,
											"end": 5278,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5094,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5250,
											"end": 5267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5229,
											"end": 5267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5229,
											"end": 5267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5094,
											"end": 5278,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5094,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5296,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5328,
											"end": 5337,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5296,
											"end": 5323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5319,
											"end": 5322,
											"name": "PUSH",
											"source": 0,
											"value": "F4240"
										},
										{
											"begin": 5296,
											"end": 5314,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5296,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 5296,
											"end": 5318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5296,
											"end": 5323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5296,
											"end": 5323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5296,
											"end": 5323,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5296,
											"end": 5323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5296,
											"end": 5323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5296,
											"end": 5323,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5296,
											"end": 5323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5296,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5296,
											"end": 5327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5296,
											"end": 5338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5296,
											"end": 5338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5296,
											"end": 5338,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5296,
											"end": 5338,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5296,
											"end": 5338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5296,
											"end": 5338,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5296,
											"end": 5338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5340,
											"end": 5358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5288,
											"end": 5359,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 5288,
											"end": 5359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5288,
											"end": 5359,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 5288,
											"end": 5359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5288,
											"end": 5359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5288,
											"end": 5359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5288,
											"end": 5359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5288,
											"end": 5359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 5367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2456,
											"end": 2463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2482,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2507,
											"end": 2520,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2498,
											"end": 2501,
											"name": "PUSH",
											"source": 0,
											"value": "F4240"
										},
										{
											"begin": 2482,
											"end": 2493,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2482,
											"end": 2497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2502,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2482,
											"end": 2502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2502,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2482,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2482,
											"end": 2506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2521,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2482,
											"end": 2521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2482,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3900,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3949,
											"end": 3999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3995,
											"end": 3998,
											"name": "PUSH",
											"source": 0,
											"value": "F4240"
										},
										{
											"begin": 3949,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3966,
											"end": 3989,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3949,
											"end": 3961,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3949,
											"end": 3965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3949,
											"end": 3965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3949,
											"end": 3990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3949,
											"end": 3990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3949,
											"end": 3990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3949,
											"end": 3990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3949,
											"end": 3990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3949,
											"end": 3990,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3949,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3949,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3949,
											"end": 3994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3949,
											"end": 3999,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3949,
											"end": 3999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3949,
											"end": 3999,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3949,
											"end": 3999,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3949,
											"end": 3999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3949,
											"end": 3999,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3949,
											"end": 3999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4262,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4286,
											"end": 4305,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4262,
											"end": 4281,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4262,
											"end": 4285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4262,
											"end": 4285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4262,
											"end": 4306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4262,
											"end": 4306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4262,
											"end": 4306,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4262,
											"end": 4306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4262,
											"end": 4306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4262,
											"end": 4306,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4262,
											"end": 4306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 4430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 4430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 767,
											"end": 943,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 767,
											"end": 943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 863,
											"end": 870,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 889,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 932,
											"end": 935,
											"name": "PUSH",
											"source": 0,
											"value": "F4240"
										},
										{
											"begin": 890,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 916,
											"end": 925,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 890,
											"end": 911,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 890,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 890,
											"end": 915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 890,
											"end": 926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 890,
											"end": 926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 890,
											"end": 926,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 890,
											"end": 926,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 890,
											"end": 926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 890,
											"end": 926,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 890,
											"end": 926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 889,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 889,
											"end": 931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 889,
											"end": 936,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 889,
											"end": 936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 889,
											"end": 936,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 889,
											"end": 936,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 889,
											"end": 936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 889,
											"end": 936,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 889,
											"end": 936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 882,
											"end": 936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 882,
											"end": 936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 767,
											"end": 943,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 767,
											"end": 943,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 767,
											"end": 943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 767,
											"end": 943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 767,
											"end": 943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1057,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1076,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1114,
											"end": 1117,
											"name": "PUSH",
											"source": 0,
											"value": "F4240"
										},
										{
											"begin": 1076,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1095,
											"end": 1108,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1090,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1076,
											"end": 1094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1109,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1076,
											"end": 1109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1109,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1076,
											"end": 1109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1076,
											"end": 1113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1118,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1076,
											"end": 1118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1118,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1076,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1069,
											"end": 1118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1069,
											"end": 1118,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2652,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2193,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2251,
											"end": 2258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2497,
											"end": 2498,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2493,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2498,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2488,
											"end": 2533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2514,
											"end": 2522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2514,
											"end": 2522,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2533,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2488,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2559,
											"end": 2560,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2556,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2555,
											"end": 2560,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2560,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2555,
											"end": 2560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2560,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2555,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2560,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2560,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2588,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2582,
											"end": 2583,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2578,
											"end": 2583,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2583,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2578,
											"end": 2583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2583,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2578,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2588,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2570,
											"end": 2626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2645,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2637,
											"end": 2645,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2637,
											"end": 2645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2637,
											"end": 2645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2193,
											"end": 2652,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2193,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2193,
											"end": 2652,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2193,
											"end": 2652,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2193,
											"end": 2652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2193,
											"end": 2652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2193,
											"end": 2652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3107,
											"end": 3237,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3107,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3165,
											"end": 3172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3195,
											"end": 3196,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3198,
											"end": 3199,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3191,
											"end": 3230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3184,
											"end": 3230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3184,
											"end": 3230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3107,
											"end": 3237,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3107,
											"end": 3237,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3107,
											"end": 3237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3107,
											"end": 3237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3107,
											"end": 3237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1442,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1308,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1373,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1396,
											"end": 1397,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1399,
											"end": 1400,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1392,
											"end": 1435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1442,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1442,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1442,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1442,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3752,
											"end": 4090,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3752,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3845,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3935,
											"end": 3936,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3932,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3936,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 3950,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3923,
											"end": 3951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3961,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3977,
											"end": 3978,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3973,
											"end": 3974,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3973,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3973,
											"end": 3978,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3973,
											"end": 3978,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3973,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3973,
											"end": 3978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3973,
											"end": 3978,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3973,
											"end": 3978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3961,
											"end": 3978,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3961,
											"end": 3978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4083,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4075,
											"end": 4083,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4075,
											"end": 4083,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4075,
											"end": 4083,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3752,
											"end": 4090,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3752,
											"end": 4090,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3752,
											"end": 4090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3752,
											"end": 4090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3752,
											"end": 4090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3752,
											"end": 4090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1953,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1766,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1852,
											"end": 1859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1884,
											"end": 1885,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1885,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1871,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 1927,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1922,
											"end": 1927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 1927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 1927,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 1946,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1953,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1953,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1953,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1953,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1953,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1601,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 690,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 785,
											"end": 791,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 799,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 807,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 817,
											"end": 823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 869,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 854,
											"end": 863,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 845,
											"end": 852,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 841,
											"end": 864,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 837,
											"end": 870,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 834,
											"end": 954,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 834,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 834,
											"end": 954,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 873,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 873,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 873,
											"end": 952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 873,
											"end": 952,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 873,
											"end": 952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 834,
											"end": 954,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 834,
											"end": 954,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 993,
											"end": 994,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1018,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1063,
											"end": 1070,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1060,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1043,
											"end": 1052,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 1039,
											"end": 1061,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1018,
											"end": 1071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1071,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1018,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1008,
											"end": 1071,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1008,
											"end": 1071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1146,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1191,
											"end": 1198,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1182,
											"end": 1188,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1180,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1189,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1146,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1146,
											"end": 1199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1146,
											"end": 1199,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1146,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1199,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1199,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1209,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1250,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1274,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1319,
											"end": 1326,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1316,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1299,
											"end": 1308,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 1295,
											"end": 1317,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1274,
											"end": 1327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1327,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1274,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1264,
											"end": 1327,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1264,
											"end": 1327,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1219,
											"end": 1337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1376,
											"end": 1378,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1402,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1447,
											"end": 1454,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1438,
											"end": 1444,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1436,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1445,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1402,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1402,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1402,
											"end": 1455,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1402,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1455,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1347,
											"end": 1465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1507,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1531,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1576,
											"end": 1583,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1567,
											"end": 1573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1565,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1574,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1584,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1584,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1594,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1601,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1601,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1601,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1601,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1601,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1601,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1601,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1601,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1733,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1607,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1720,
											"end": 1725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1702,
											"end": 1726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1726,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1702,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1700,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1690,
											"end": 1727,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1733,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1733,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 2095,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1739,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1868,
											"end": 1872,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1906,
											"end": 1908,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1895,
											"end": 1904,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1891,
											"end": 1909,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1883,
											"end": 1909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1883,
											"end": 1909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1995,
											"end": 1996,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1984,
											"end": 1993,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 1997,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1971,
											"end": 1977,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1919,
											"end": 1998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 1998,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1919,
											"end": 1998,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2084,
											"end": 2086,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2073,
											"end": 2082,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2008,
											"end": 2088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2088,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2008,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 2095,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 2095,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 2095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 2095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 2095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 2095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2575,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2101,
											"end": 2575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2226,
											"end": 2228,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2214,
											"end": 2223,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2205,
											"end": 2212,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2201,
											"end": 2224,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2197,
											"end": 2229,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2194,
											"end": 2313,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2194,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2194,
											"end": 2313,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2232,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2232,
											"end": 2311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2311,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2232,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2194,
											"end": 2313,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2194,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2352,
											"end": 2353,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2422,
											"end": 2429,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2413,
											"end": 2419,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2411,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2398,
											"end": 2420,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2377,
											"end": 2430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2430,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2377,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2479,
											"end": 2481,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2505,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2550,
											"end": 2557,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2530,
											"end": 2539,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2548,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2505,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2505,
											"end": 2558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2505,
											"end": 2558,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2505,
											"end": 2558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2495,
											"end": 2558,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2495,
											"end": 2558,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2568,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2575,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2575,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2575,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2575,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2819,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2581,
											"end": 2819,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2686,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2720,
											"end": 2722,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2709,
											"end": 2718,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2733,
											"end": 2812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2809,
											"end": 2810,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2798,
											"end": 2807,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2811,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2785,
											"end": 2791,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2733,
											"end": 2812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2733,
											"end": 2812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2733,
											"end": 2812,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2733,
											"end": 2812,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2819,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2819,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 3444,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2825,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2902,
											"end": 2908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2910,
											"end": 2916,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2918,
											"end": 2924,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2967,
											"end": 2969,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2955,
											"end": 2964,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2942,
											"end": 2965,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2938,
											"end": 2970,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 3054,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2935,
											"end": 3054,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2973,
											"end": 3052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2973,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 3054,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2935,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3118,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3163,
											"end": 3170,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3160,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3143,
											"end": 3152,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3139,
											"end": 3161,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3118,
											"end": 3171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3171,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3118,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3108,
											"end": 3171,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3108,
											"end": 3171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3064,
											"end": 3181,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3222,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3246,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3291,
											"end": 3298,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3282,
											"end": 3288,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3271,
											"end": 3280,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3267,
											"end": 3289,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3246,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3246,
											"end": 3299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3246,
											"end": 3299,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3246,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3299,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3309,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3348,
											"end": 3350,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3374,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3419,
											"end": 3426,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3410,
											"end": 3416,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3408,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3395,
											"end": 3417,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3374,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3374,
											"end": 3427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3374,
											"end": 3427,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3374,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3427,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3427,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3437,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 3444,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 3444,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 3444,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 3444,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 3444,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 3444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3630,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3450,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3498,
											"end": 3575,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3495,
											"end": 3496,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3576,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3595,
											"end": 3599,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3592,
											"end": 3593,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3585,
											"end": 3600,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3619,
											"end": 3623,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3616,
											"end": 3617,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3609,
											"end": 3624,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3636,
											"end": 4046,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3636,
											"end": 4046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3699,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3717,
											"end": 3718,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3699,
											"end": 3719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3719,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3699,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3694,
											"end": 3719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3694,
											"end": 3719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 3751,
											"end": 3752,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3733,
											"end": 3753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3753,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 3733,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3728,
											"end": 3753,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3728,
											"end": 3753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3788,
											"end": 3789,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3785,
											"end": 3786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3781,
											"end": 3790,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3810,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 3828,
											"end": 3839,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3810,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3810,
											"end": 3840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3810,
											"end": 3840,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 3810,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3840,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 3990,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3980,
											"end": 3987,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3976,
											"end": 3991,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3973,
											"end": 3974,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3970,
											"end": 3992,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3950,
											"end": 3951,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3943,
											"end": 3952,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 4006,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3900,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 3900,
											"end": 4039,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4019,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 4019,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4019,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4019,
											"end": 4037,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 4019,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3900,
											"end": 4039,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 3900,
											"end": 4039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3684,
											"end": 4046,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3636,
											"end": 4046,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3636,
											"end": 4046,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3636,
											"end": 4046,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3636,
											"end": 4046,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3636,
											"end": 4046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4232,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4052,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4100,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4097,
											"end": 4098,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4090,
											"end": 4178,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4201,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 4194,
											"end": 4195,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4187,
											"end": 4202,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4221,
											"end": 4225,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4218,
											"end": 4219,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4211,
											"end": 4226,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4238,
											"end": 4423,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4238,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4279,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4295,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 4313,
											"end": 4314,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4295,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 4295,
											"end": 4315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4295,
											"end": 4315,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 4295,
											"end": 4315,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4290,
											"end": 4315,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4290,
											"end": 4315,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4329,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 4347,
											"end": 4348,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4329,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 4329,
											"end": 4349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4329,
											"end": 4349,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 4329,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4324,
											"end": 4349,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4324,
											"end": 4349,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4368,
											"end": 4369,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4358,
											"end": 4393,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 4358,
											"end": 4393,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4373,
											"end": 4391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 4373,
											"end": 4391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4373,
											"end": 4391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4373,
											"end": 4391,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 4373,
											"end": 4391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4358,
											"end": 4393,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 4358,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4415,
											"end": 4416,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4412,
											"end": 4413,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4408,
											"end": 4417,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4417,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4238,
											"end": 4423,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4238,
											"end": 4423,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4238,
											"end": 4423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4238,
											"end": 4423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4238,
											"end": 4423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4429,
											"end": 4598,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4429,
											"end": 4598,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4513,
											"end": 4524,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4547,
											"end": 4553,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4542,
											"end": 4545,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4535,
											"end": 4554,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4587,
											"end": 4591,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4582,
											"end": 4585,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4592,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4563,
											"end": 4592,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4563,
											"end": 4592,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4429,
											"end": 4598,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4429,
											"end": 4598,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4429,
											"end": 4598,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4429,
											"end": 4598,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4429,
											"end": 4598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4604,
											"end": 4824,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4604,
											"end": 4824,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4778,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 4740,
											"end": 4741,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4732,
											"end": 4738,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4728,
											"end": 4742,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4721,
											"end": 4779,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4813,
											"end": 4816,
											"name": "PUSH",
											"source": 2,
											"value": "7700000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4808,
											"end": 4810,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4800,
											"end": 4806,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4796,
											"end": 4811,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4789,
											"end": 4817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4604,
											"end": 4824,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4604,
											"end": 4824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4830,
											"end": 5196,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4830,
											"end": 5196,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4972,
											"end": 4975,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4993,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 5057,
											"end": 5059,
											"name": "PUSH",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 5052,
											"end": 5055,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4993,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4993,
											"end": 5060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4993,
											"end": 5060,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 4993,
											"end": 5060,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 5060,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 5060,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5069,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 5158,
											"end": 5161,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5069,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 5069,
											"end": 5162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5069,
											"end": 5162,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 5069,
											"end": 5162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5187,
											"end": 5189,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5182,
											"end": 5185,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5178,
											"end": 5190,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5171,
											"end": 5190,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5171,
											"end": 5190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4830,
											"end": 5196,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4830,
											"end": 5196,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4830,
											"end": 5196,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4830,
											"end": 5196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5202,
											"end": 5621,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5202,
											"end": 5621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5368,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5395,
											"end": 5404,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5391,
											"end": 5409,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5383,
											"end": 5409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5383,
											"end": 5409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5455,
											"end": 5464,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5449,
											"end": 5453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5445,
											"end": 5465,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5442,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 5439,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5426,
											"end": 5443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5419,
											"end": 5466,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5483,
											"end": 5614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5609,
											"end": 5613,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5483,
											"end": 5614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 5483,
											"end": 5614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5483,
											"end": 5614,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5483,
											"end": 5614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5475,
											"end": 5614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5475,
											"end": 5614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5202,
											"end": 5621,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5202,
											"end": 5621,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5202,
											"end": 5621,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5202,
											"end": 5621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5627,
											"end": 5726,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 5627,
											"end": 5726,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5679,
											"end": 5685,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5713,
											"end": 5718,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5707,
											"end": 5719,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5719,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5627,
											"end": 5726,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5627,
											"end": 5726,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5627,
											"end": 5726,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5627,
											"end": 5726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5732,
											"end": 5978,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 5732,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5814,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5823,
											"end": 5936,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5823,
											"end": 5936,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5837,
											"end": 5843,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5835,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5831,
											"end": 5844,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5823,
											"end": 5936,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5823,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 5823,
											"end": 5936,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5922,
											"end": 5923,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5917,
											"end": 5920,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5913,
											"end": 5924,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5907,
											"end": 5925,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5903,
											"end": 5904,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5898,
											"end": 5901,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5894,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5887,
											"end": 5926,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5859,
											"end": 5861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5856,
											"end": 5857,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5852,
											"end": 5862,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5847,
											"end": 5862,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5847,
											"end": 5862,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5823,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5823,
											"end": 5936,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5823,
											"end": 5936,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 5823,
											"end": 5936,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5970,
											"end": 5971,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5961,
											"end": 5967,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5956,
											"end": 5959,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5952,
											"end": 5968,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5972,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5794,
											"end": 5978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5732,
											"end": 5978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5732,
											"end": 5978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5732,
											"end": 5978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5732,
											"end": 5978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5984,
											"end": 6086,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5984,
											"end": 6086,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6025,
											"end": 6031,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6076,
											"end": 6078,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6072,
											"end": 6079,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 6067,
											"end": 6069,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6060,
											"end": 6065,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6070,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6052,
											"end": 6080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6042,
											"end": 6080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6042,
											"end": 6080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5984,
											"end": 6086,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5984,
											"end": 6086,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5984,
											"end": 6086,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5984,
											"end": 6086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6092,
											"end": 6469,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 6092,
											"end": 6469,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6180,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6208,
											"end": 6247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 6241,
											"end": 6246,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6208,
											"end": 6247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 6208,
											"end": 6247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6208,
											"end": 6247,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 6208,
											"end": 6247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6263,
											"end": 6334,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 6327,
											"end": 6333,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6322,
											"end": 6325,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6263,
											"end": 6334,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 6263,
											"end": 6334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6263,
											"end": 6334,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 6263,
											"end": 6334,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6256,
											"end": 6334,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6256,
											"end": 6334,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6343,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 6401,
											"end": 6407,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6396,
											"end": 6399,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6389,
											"end": 6393,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6382,
											"end": 6387,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6378,
											"end": 6394,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6343,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 6343,
											"end": 6408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6343,
											"end": 6408,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 6343,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6433,
											"end": 6462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 6455,
											"end": 6461,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6433,
											"end": 6462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6433,
											"end": 6462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6433,
											"end": 6462,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 6433,
											"end": 6462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6431,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6424,
											"end": 6463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6417,
											"end": 6463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6417,
											"end": 6463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6184,
											"end": 6469,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6092,
											"end": 6469,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6092,
											"end": 6469,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6092,
											"end": 6469,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6092,
											"end": 6469,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6092,
											"end": 6469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6788,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 6475,
											"end": 6788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6588,
											"end": 6592,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6626,
											"end": 6628,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6615,
											"end": 6624,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6611,
											"end": 6629,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6629,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6629,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6675,
											"end": 6684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6669,
											"end": 6673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6665,
											"end": 6685,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6650,
											"end": 6659,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6663,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6639,
											"end": 6686,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6703,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 6776,
											"end": 6780,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6767,
											"end": 6773,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6703,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 6703,
											"end": 6781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6703,
											"end": 6781,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 6703,
											"end": 6781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6695,
											"end": 6781,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6695,
											"end": 6781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6788,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6794,
											"end": 6988,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 6794,
											"end": 6988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6838,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6854,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 6872,
											"end": 6873,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6854,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 6854,
											"end": 6874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6854,
											"end": 6874,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 6854,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6849,
											"end": 6874,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6849,
											"end": 6874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6888,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 6906,
											"end": 6907,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6888,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 6888,
											"end": 6908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6888,
											"end": 6908,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 6888,
											"end": 6908,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6883,
											"end": 6908,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6883,
											"end": 6908,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6932,
											"end": 6933,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6929,
											"end": 6930,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6934,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6917,
											"end": 6934,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6917,
											"end": 6934,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6956,
											"end": 6957,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6950,
											"end": 6954,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6947,
											"end": 6958,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 6944,
											"end": 6981,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6944,
											"end": 6981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 6944,
											"end": 6981,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6961,
											"end": 6979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 6961,
											"end": 6979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 6961,
											"end": 6979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6961,
											"end": 6979,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 6961,
											"end": 6979,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6944,
											"end": 6981,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 6944,
											"end": 6981,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6794,
											"end": 6988,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6794,
											"end": 6988,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6794,
											"end": 6988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6794,
											"end": 6988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6794,
											"end": 6988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol",
								"NewFraxProtocol/contracts/Math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"calcMint1t1FRAX(uint256,uint256)": "5413e192",
							"calcMintAlgorithmicFRAX(uint256,uint256)": "ce032cc1",
							"calcRecollateralizeFRAXInner(uint256,uint256,uint256,uint256,uint256)": "06058f4a",
							"calcRedeem1t1FRAX(uint256,uint256)": "0f41b452",
							"recollateralizeAmount(uint256,uint256,uint256)": "0ff24ec1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"col_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral_amount_d18\",\"type\":\"uint256\"}],\"name\":\"calcMint1t1FRAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fxs_price_usd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fxs_amount_d18\",\"type\":\"uint256\"}],\"name\":\"calcMintAlgorithmicFRAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"collateral_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"col_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"global_collat_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"frax_total_supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"global_collateral_ratio\",\"type\":\"uint256\"}],\"name\":\"calcRecollateralizeFRAXInner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"col_price_usd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"FRAX_amount\",\"type\":\"uint256\"}],\"name\":\"calcRedeem1t1FRAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"total_supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"global_collateral_ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"global_collat_value\",\"type\":\"uint256\"}],\"name\":\"recollateralizeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":\"FraxPoolLibrary\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol\":{\"keccak256\":\"0x180b06a68540715f3201cca08fd166e4c5e0d3cd75c0d02b2e1b5323a2a66f3c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1731cc8b9c84db20c70e56ed864dccc08334e63fb036eed6974e818540a23e89\",\"dweb:/ipfs/QmXqmNFMVCetmbLiWqutVfcuG9yJ7w9Sd51e3uv5QuLBo4\"]},\"NewFraxProtocol/contracts/Math/SafeMath.sol\":{\"keccak256\":\"0x43a20f7cf4c4319f81450d53779455e88a7ab80bdfc43925156ed4083b74a180\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85317e177f613c29156ffe0b1c1c29c31fedfea1ffc373c9d7f393ef51372728\",\"dweb:/ipfs/QmckZqe6wjgKWd4BTPUjRY1ofC9CsZKxAgXPFCKBisuJdr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"NewFraxProtocol/contracts/Math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":623:5331  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":623:5331  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c7b39ab999725fcb3e84bedf8e06eebafe308e7b44eb69ac14aa01809f548ff164736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c7b39ab999725fcb3e84bedf8e06eebafe308e7b44eb69ac14aa01809f548ff164736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xB3 SWAP11 0xB9 SWAP10 PUSH19 0x5FCB3E84BEDF8E06EEBAFE308E7B44EB69AC14 0xAA ADD DUP1 SWAP16 SLOAD DUP16 CALL PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "623:4708:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c7b39ab999725fcb3e84bedf8e06eebafe308e7b44eb69ac14aa01809f548ff164736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xB3 SWAP11 0xB9 SWAP10 PUSH19 0x5FCB3E84BEDF8E06EEBAFE308E7B44EB69AC14 0xAA ADD DUP1 SWAP16 SLOAD DUP16 CALL PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "623:4708:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c7b39ab999725fcb3e84bedf8e06eebafe308e7b44eb69ac14aa01809f548ff164736f6c63430008150033",
									".code": [
										{
											"begin": 623,
											"end": 5331,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol",
								"NewFraxProtocol/contracts/Math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NewFraxProtocol/contracts/Math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NewFraxProtocol/contracts/Math/SafeMath.sol\":{\"keccak256\":\"0x43a20f7cf4c4319f81450d53779455e88a7ab80bdfc43925156ed4083b74a180\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85317e177f613c29156ffe0b1c1c29c31fedfea1ffc373c9d7f393ef51372728\",\"dweb:/ipfs/QmckZqe6wjgKWd4BTPUjRY1ofC9CsZKxAgXPFCKBisuJdr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol": {
				"ast": {
					"absolutePath": "NewFraxProtocol/contracts/Frax/Pools/FraxPoolLibrary.sol",
					"exportedSymbols": {
						"FraxPoolLibrary": [
							319
						],
						"SafeMath": [
							515
						]
					},
					"id": 320,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "45:25:0"
						},
						{
							"absolutePath": "NewFraxProtocol/contracts/Math/SafeMath.sol",
							"file": "../../Math/SafeMath.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 516,
							"src": "72:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FraxPoolLibrary",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 319,
							"linearizedBaseContracts": [
								319
							],
							"name": "FraxPoolLibrary",
							"nameLocation": "117:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 5,
									"libraryName": {
										"id": 3,
										"name": "SafeMath",
										"nameLocations": [
											"145:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 515,
										"src": "145:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "139:27:0",
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "158:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "PRICE_PRECISION",
									"nameLocation": "237:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "212:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "212:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "316536",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "255:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000_by_1",
											"typeString": "int_const 1000000"
										},
										"value": "1e6"
									},
									"visibility": "private"
								},
								{
									"canonicalName": "FraxPoolLibrary.MintFF_Params",
									"id": 19,
									"members": [
										{
											"constant": false,
											"id": 10,
											"mutability": "mutable",
											"name": "fxs_price_usd",
											"nameLocation": "387:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "379:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "379:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 12,
											"mutability": "mutable",
											"name": "col_price_usd",
											"nameLocation": "419:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "411:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 11,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "411:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 14,
											"mutability": "mutable",
											"name": "fxs_amount",
											"nameLocation": "450:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "442:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 13,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "442:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "collateral_amount",
											"nameLocation": "478:17:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "470:25:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 15,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "470:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "col_ratio",
											"nameLocation": "513:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "505:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 17,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "505:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MintFF_Params",
									"nameLocation": "355:13:0",
									"nodeType": "StructDefinition",
									"scope": 319,
									"src": "348:181:0",
									"visibility": "public"
								},
								{
									"canonicalName": "FraxPoolLibrary.BuybackFXS_Params",
									"id": 28,
									"members": [
										{
											"constant": false,
											"id": 21,
											"mutability": "mutable",
											"name": "excess_collateral_dollar_value_d18",
											"nameLocation": "578:34:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "570:42:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 20,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "570:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 23,
											"mutability": "mutable",
											"name": "fxs_price_usd",
											"nameLocation": "630:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "622:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 22,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "622:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 25,
											"mutability": "mutable",
											"name": "col_price_usd",
											"nameLocation": "661:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "653:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 24,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "653:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 27,
											"mutability": "mutable",
											"name": "FXS_amount",
											"nameLocation": "692:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "684:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 26,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "684:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BuybackFXS_Params",
									"nameLocation": "542:17:0",
									"nodeType": "StructDefinition",
									"scope": 319,
									"src": "535:174:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "872:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "316536",
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "932:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000_by_1",
																"typeString": "int_const 1000000"
															},
															"value": "1e6"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000000_by_1",
																"typeString": "int_const 1000000"
															}
														],
														"expression": {
															"components": [
																{
																	"arguments": [
																		{
																			"id": 39,
																			"name": "col_price",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 30,
																			"src": "916:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 37,
																			"name": "collateral_amount_d18",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 32,
																			"src": "890:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 38,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "912:3:0",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 428,
																		"src": "890:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 40,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "890:36:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 41,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "889:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 42,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "928:3:0",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 445,
														"src": "889:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "889:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 36,
												"id": 45,
												"nodeType": "Return",
												"src": "882:54:0"
											}
										]
									},
									"functionSelector": "5413e192",
									"id": 47,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcMint1t1FRAX",
									"nameLocation": "776:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "col_price",
												"nameLocation": "800:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "792:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "collateral_amount_d18",
												"nameLocation": "819:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "811:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "811:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "791:50:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "863:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "862:9:0"
									},
									"scope": 319,
									"src": "767:176:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "1059:66:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "316536",
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1114:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000_by_1",
																"typeString": "int_const 1000000"
															},
															"value": "1e6"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000000_by_1",
																"typeString": "int_const 1000000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 58,
																	"name": "fxs_price_usd",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 49,
																	"src": "1095:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 56,
																	"name": "fxs_amount_d18",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 51,
																	"src": "1076:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1091:3:0",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 428,
																"src": "1076:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1076:33:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 60,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1110:3:0",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 445,
														"src": "1076:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1076:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 55,
												"id": 63,
												"nodeType": "Return",
												"src": "1069:49:0"
											}
										]
									},
									"functionSelector": "ce032cc1",
									"id": 65,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcMintAlgorithmicFRAX",
									"nameLocation": "958:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "fxs_price_usd",
												"nameLocation": "990:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "982:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "fxs_amount_d18",
												"nameLocation": "1013:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "1005:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1005:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:47:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "1050:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1050:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1049:9:0"
									},
									"scope": 319,
									"src": "949:176:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1279:1079:0",
										"statements": [
											{
												"assignments": [
													76
												],
												"declarations": [
													{
														"constant": false,
														"id": 76,
														"mutability": "mutable",
														"name": "fxs_dollar_value_d18",
														"nameLocation": "1579:20:0",
														"nodeType": "VariableDeclaration",
														"scope": 139,
														"src": "1571:28:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 75,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1571:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 77,
												"nodeType": "VariableDeclarationStatement",
												"src": "1571:28:0"
											},
											{
												"assignments": [
													79
												],
												"declarations": [
													{
														"constant": false,
														"id": 79,
														"mutability": "mutable",
														"name": "c_dollar_value_d18",
														"nameLocation": "1617:18:0",
														"nodeType": "VariableDeclaration",
														"scope": 139,
														"src": "1609:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 78,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1609:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 80,
												"nodeType": "VariableDeclarationStatement",
												"src": "1609:26:0"
											},
											{
												"id": 105,
												"nodeType": "Block",
												"src": "1692:256:0",
												"statements": [
													{
														"expression": {
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 81,
																"name": "fxs_dollar_value_d18",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 76,
																"src": "1767:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"hexValue": "316536",
																		"id": 89,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1838:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000_by_1",
																			"typeString": "int_const 1000000"
																		},
																		"value": "1e6"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1000000_by_1",
																			"typeString": "int_const 1000000"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 85,
																					"name": "params",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 68,
																					"src": "1812:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_MintFF_Params_$19_memory_ptr",
																						"typeString": "struct FraxPoolLibrary.MintFF_Params memory"
																					}
																				},
																				"id": 86,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1819:13:0",
																				"memberName": "fxs_price_usd",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 10,
																				"src": "1812:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"expression": {
																					"id": 82,
																					"name": "params",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 68,
																					"src": "1790:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_MintFF_Params_$19_memory_ptr",
																						"typeString": "struct FraxPoolLibrary.MintFF_Params memory"
																					}
																				},
																				"id": 83,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1797:10:0",
																				"memberName": "fxs_amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 14,
																				"src": "1790:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 84,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1808:3:0",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 428,
																			"src": "1790:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 87,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1790:43:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 88,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1834:3:0",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 445,
																	"src": "1790:47:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1790:52:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1767:75:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 92,
														"nodeType": "ExpressionStatement",
														"src": "1767:75:0"
													},
													{
														"expression": {
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 93,
																"name": "c_dollar_value_d18",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "1856:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"hexValue": "316536",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1932:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000_by_1",
																			"typeString": "int_const 1000000"
																		},
																		"value": "1e6"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1000000_by_1",
																			"typeString": "int_const 1000000"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 97,
																					"name": "params",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 68,
																					"src": "1906:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_MintFF_Params_$19_memory_ptr",
																						"typeString": "struct FraxPoolLibrary.MintFF_Params memory"
																					}
																				},
																				"id": 98,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1913:13:0",
																				"memberName": "col_price_usd",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 12,
																				"src": "1906:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"expression": {
																					"id": 94,
																					"name": "params",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 68,
																					"src": "1877:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_MintFF_Params_$19_memory_ptr",
																						"typeString": "struct FraxPoolLibrary.MintFF_Params memory"
																					}
																				},
																				"id": 95,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1884:17:0",
																				"memberName": "collateral_amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 16,
																				"src": "1877:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 96,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1902:3:0",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 428,
																			"src": "1877:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 99,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1877:50:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1928:3:0",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 445,
																	"src": "1877:54:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1877:59:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1856:80:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 104,
														"nodeType": "ExpressionStatement",
														"src": "1856:80:0"
													}
												]
											},
											{
												"assignments": [
													107
												],
												"declarations": [
													{
														"constant": false,
														"id": 107,
														"mutability": "mutable",
														"name": "calculated_fxs_dollar_value_d18",
														"nameLocation": "1962:31:0",
														"nodeType": "VariableDeclaration",
														"scope": 139,
														"src": "1957:36:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 106,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1957:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 120,
												"initialValue": {
													"arguments": [
														{
															"id": 118,
															"name": "c_dollar_value_d18",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "2094:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"components": [
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 113,
																				"name": "params",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 68,
																				"src": "2050:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MintFF_Params_$19_memory_ptr",
																					"typeString": "struct FraxPoolLibrary.MintFF_Params memory"
																				}
																			},
																			"id": 114,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2057:9:0",
																			"memberName": "col_ratio",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 18,
																			"src": "2050:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "316536",
																					"id": 110,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2041:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000_by_1",
																						"typeString": "int_const 1000000"
																					},
																					"value": "1e6"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_1000000_by_1",
																						"typeString": "int_const 1000000"
																					}
																				],
																				"expression": {
																					"id": 108,
																					"name": "c_dollar_value_d18",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 79,
																					"src": "2018:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 109,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2037:3:0",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 428,
																				"src": "2018:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 111,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2018:27:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2046:3:0",
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 445,
																		"src": "2018:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2018:49:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 116,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2017:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2090:3:0",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 365,
														"src": "2017:76:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2017:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1957:156:0"
											},
											{
												"assignments": [
													122
												],
												"declarations": [
													{
														"constant": false,
														"id": 122,
														"mutability": "mutable",
														"name": "calculated_fxs_needed",
														"nameLocation": "2129:21:0",
														"nodeType": "VariableDeclaration",
														"scope": 139,
														"src": "2124:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 121,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2124:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 131,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 128,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "2198:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MintFF_Params_$19_memory_ptr",
																	"typeString": "struct FraxPoolLibrary.MintFF_Params memory"
																}
															},
															"id": 129,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2205:13:0",
															"memberName": "fxs_price_usd",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 10,
															"src": "2198:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "316536",
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2189:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000_by_1",
																		"typeString": "int_const 1000000"
																	},
																	"value": "1e6"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000_by_1",
																		"typeString": "int_const 1000000"
																	}
																],
																"expression": {
																	"id": 123,
																	"name": "calculated_fxs_dollar_value_d18",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 107,
																	"src": "2153:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2185:3:0",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 428,
																"src": "2153:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2153:40:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2194:3:0",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 445,
														"src": "2153:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2153:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2124:95:0"
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 134,
																	"name": "calculated_fxs_dollar_value_d18",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 107,
																	"src": "2274:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 132,
																	"name": "c_dollar_value_d18",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 79,
																	"src": "2251:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2270:3:0",
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 348,
																"src": "2251:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2251:55:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 136,
															"name": "calculated_fxs_needed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "2320:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 137,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2237:114:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 74,
												"id": 138,
												"nodeType": "Return",
												"src": "2230:121:0"
											}
										]
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcMintFractionalFRAX",
									"nameLocation": "1186:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1230:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1209:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MintFF_Params_$19_memory_ptr",
													"typeString": "struct FraxPoolLibrary.MintFF_Params"
												},
												"typeName": {
													"id": 67,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 66,
														"name": "MintFF_Params",
														"nameLocations": [
															"1209:13:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 19,
														"src": "1209:13:0"
													},
													"referencedDeclaration": 19,
													"src": "1209:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MintFF_Params_$19_storage_ptr",
														"typeString": "struct FraxPoolLibrary.MintFF_Params"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1208:29:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1261:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1270:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:18:0"
									},
									"scope": 319,
									"src": "1177:1181:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "2465:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 154,
															"name": "col_price_usd",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "2507:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "316536",
																	"id": 151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2498:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000_by_1",
																		"typeString": "int_const 1000000"
																	},
																	"value": "1e6"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000_by_1",
																		"typeString": "int_const 1000000"
																	}
																],
																"expression": {
																	"id": 149,
																	"name": "FRAX_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "2482:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2494:3:0",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 428,
																"src": "2482:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2482:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2503:3:0",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 445,
														"src": "2482:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2482:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 148,
												"id": 156,
												"nodeType": "Return",
												"src": "2475:46:0"
											}
										]
									},
									"functionSelector": "0f41b452",
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcRedeem1t1FRAX",
									"nameLocation": "2373:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "col_price_usd",
												"nameLocation": "2399:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "2391:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "FRAX_amount",
												"nameLocation": "2422:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "2414:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2414:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:44:0"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "2456:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2456:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2455:9:0"
									},
									"scope": 319,
									"src": "2364:164:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "2669:962:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 167,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "2860:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuybackFXS_Params_$28_memory_ptr",
																		"typeString": "struct FraxPoolLibrary.BuybackFXS_Params memory"
																	}
																},
																"id": 168,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2867:34:0",
																"memberName": "excess_collateral_dollar_value_d18",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 21,
																"src": "2860:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2904:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2860:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2065786365737320636f6c6c61746572616c20746f20627579206261636b21",
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2907:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_62be30ad51f587419028108adbc87cc9e2c30cf8732921ae68682f0edb95ba89",
																"typeString": "literal_string \"No excess collateral to buy back!\""
															},
															"value": "No excess collateral to buy back!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_62be30ad51f587419028108adbc87cc9e2c30cf8732921ae68682f0edb95ba89",
																"typeString": "literal_string \"No excess collateral to buy back!\""
															}
														],
														"id": 166,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2852:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2852:91:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "2852:91:0"
											},
											{
												"assignments": [
													175
												],
												"declarations": [
													{
														"constant": false,
														"id": 175,
														"mutability": "mutable",
														"name": "fxs_dollar_value_d18",
														"nameLocation": "3018:20:0",
														"nodeType": "VariableDeclaration",
														"scope": 208,
														"src": "3010:28:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 174,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3010:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 185,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "316536",
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3089:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000_by_1",
																"typeString": "int_const 1000000"
															},
															"value": "1e6"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000000_by_1",
																"typeString": "int_const 1000000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 179,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 161,
																		"src": "3063:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BuybackFXS_Params_$28_memory_ptr",
																			"typeString": "struct FraxPoolLibrary.BuybackFXS_Params memory"
																		}
																	},
																	"id": 180,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3070:13:0",
																	"memberName": "fxs_price_usd",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 23,
																	"src": "3063:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 176,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 161,
																		"src": "3041:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BuybackFXS_Params_$28_memory_ptr",
																			"typeString": "struct FraxPoolLibrary.BuybackFXS_Params memory"
																		}
																	},
																	"id": 177,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3048:10:0",
																	"memberName": "FXS_amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 27,
																	"src": "3041:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3059:3:0",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 428,
																"src": "3041:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3041:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3085:3:0",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 445,
														"src": "3041:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3041:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3010:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 187,
																"name": "fxs_dollar_value_d18",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 175,
																"src": "3111:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 188,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "3135:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuybackFXS_Params_$28_memory_ptr",
																		"typeString": "struct FraxPoolLibrary.BuybackFXS_Params memory"
																	}
																},
																"id": 189,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3142:34:0",
																"memberName": "excess_collateral_dollar_value_d18",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 21,
																"src": "3135:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3111:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752061726520747279696e6720746f20627579206261636b206d6f7265207468616e207468652065786365737321",
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3178:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_20cee5f8efce895d1238c3d0c37f314fe6844bbbe5c581850efd4e66f70f37eb",
																"typeString": "literal_string \"You are trying to buy back more than the excess!\""
															},
															"value": "You are trying to buy back more than the excess!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_20cee5f8efce895d1238c3d0c37f314fe6844bbbe5c581850efd4e66f70f37eb",
																"typeString": "literal_string \"You are trying to buy back more than the excess!\""
															}
														],
														"id": 186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3103:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3103:126:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "3103:126:0"
											},
											{
												"assignments": [
													195
												],
												"declarations": [
													{
														"constant": false,
														"id": 195,
														"mutability": "mutable",
														"name": "collateral_equivalent_d18",
														"nameLocation": "3342:25:0",
														"nodeType": "VariableDeclaration",
														"scope": 208,
														"src": "3334:33:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 194,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3334:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 204,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 201,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "3404:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_BuybackFXS_Params_$28_memory_ptr",
																	"typeString": "struct FraxPoolLibrary.BuybackFXS_Params memory"
																}
															},
															"id": 202,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3411:13:0",
															"memberName": "col_price_usd",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 25,
															"src": "3404:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "316536",
																	"id": 198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3395:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000_by_1",
																		"typeString": "int_const 1000000"
																	},
																	"value": "1e6"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000_by_1",
																		"typeString": "int_const 1000000"
																	}
																],
																"expression": {
																	"id": 196,
																	"name": "fxs_dollar_value_d18",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 175,
																	"src": "3370:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3391:3:0",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 428,
																"src": "3370:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3370:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3400:3:0",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 445,
														"src": "3370:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3370:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3334:91:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 205,
															"name": "collateral_equivalent_d18",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "3588:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 206,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3574:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 165,
												"id": 207,
												"nodeType": "Return",
												"src": "3567:56:0"
											}
										]
									},
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcBuyBackFXS",
									"nameLocation": "2589:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2629:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2604:31:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BuybackFXS_Params_$28_memory_ptr",
													"typeString": "struct FraxPoolLibrary.BuybackFXS_Params"
												},
												"typeName": {
													"id": 160,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 159,
														"name": "BuybackFXS_Params",
														"nameLocations": [
															"2604:17:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 28,
														"src": "2604:17:0"
													},
													"referencedDeclaration": 28,
													"src": "2604:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BuybackFXS_Params_$28_storage_ptr",
														"typeString": "struct FraxPoolLibrary.BuybackFXS_Params"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2603:33:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2660:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2660:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:9:0"
									},
									"scope": 319,
									"src": "2580:1051:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "3909:521:0",
										"statements": [
											{
												"assignments": [
													221
												],
												"declarations": [
													{
														"constant": false,
														"id": 221,
														"mutability": "mutable",
														"name": "target_collat_value",
														"nameLocation": "3927:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 235,
														"src": "3919:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 220,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3919:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 229,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "316536",
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3995:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000_by_1",
																"typeString": "int_const 1000000"
															},
															"value": "1e6"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000000_by_1",
																"typeString": "int_const 1000000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 224,
																	"name": "global_collateral_ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 213,
																	"src": "3966:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 222,
																	"name": "total_supply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "3949:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3962:3:0",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 428,
																"src": "3949:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3949:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3991:3:0",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 445,
														"src": "3949:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3949:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3919:80:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 232,
															"name": "global_collat_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "4286:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 230,
															"name": "target_collat_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "4262:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4282:3:0",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 365,
														"src": "4262:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4262:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 219,
												"id": 234,
												"nodeType": "Return",
												"src": "4255:51:0"
											}
										]
									},
									"functionSelector": "0ff24ec1",
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recollateralizeAmount",
									"nameLocation": "3773:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "total_supply",
												"nameLocation": "3803:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3795:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3795:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "global_collateral_ratio",
												"nameLocation": "3825:23:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3817:31:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3817:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "global_collat_value",
												"nameLocation": "3858:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3850:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3850:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:84:0"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3900:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3900:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3899:9:0"
									},
									"scope": 319,
									"src": "3764:666:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "4695:672:0",
										"statements": [
											{
												"assignments": [
													254
												],
												"declarations": [
													{
														"constant": false,
														"id": 254,
														"mutability": "mutable",
														"name": "collat_value_attempted",
														"nameLocation": "4713:22:0",
														"nodeType": "VariableDeclaration",
														"scope": 317,
														"src": "4705:30:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 253,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4705:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 262,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "316536",
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4775:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000_by_1",
																"typeString": "int_const 1000000"
															},
															"value": "1e6"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000000_by_1",
																"typeString": "int_const 1000000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 257,
																	"name": "col_price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "4760:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 255,
																	"name": "collateral_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 238,
																	"src": "4738:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4756:3:0",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 428,
																"src": "4738:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4738:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4771:3:0",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 445,
														"src": "4738:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4738:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4705:74:0"
											},
											{
												"assignments": [
													264
												],
												"declarations": [
													{
														"constant": false,
														"id": 264,
														"mutability": "mutable",
														"name": "effective_collateral_ratio",
														"nameLocation": "4797:26:0",
														"nodeType": "VariableDeclaration",
														"scope": 317,
														"src": "4789:34:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 263,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4789:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 272,
												"initialValue": {
													"arguments": [
														{
															"id": 270,
															"name": "frax_total_supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "4859:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "316536",
																	"id": 267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4850:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000_by_1",
																		"typeString": "int_const 1000000"
																	},
																	"value": "1e6"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000_by_1",
																		"typeString": "int_const 1000000"
																	}
																],
																"expression": {
																	"id": 265,
																	"name": "global_collat_value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "4826:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4846:3:0",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 428,
																"src": "4826:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4826:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4855:3:0",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 445,
														"src": "4826:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4826:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4789:88:0"
											},
											{
												"assignments": [
													274
												],
												"declarations": [
													{
														"constant": false,
														"id": 274,
														"mutability": "mutable",
														"name": "recollat_possible",
														"nameLocation": "4915:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 317,
														"src": "4907:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 273,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4907:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 289,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "316536",
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5043:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000_by_1",
																"typeString": "int_const 1000000"
															},
															"value": "1e6"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000000_by_1",
																"typeString": "int_const 1000000"
															}
														],
														"expression": {
															"components": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 282,
																					"name": "effective_collateral_ratio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 264,
																					"src": "5009:26:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 280,
																					"name": "frax_total_supply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 244,
																					"src": "4987:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 281,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5005:3:0",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 428,
																				"src": "4987:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4987:49:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 277,
																					"name": "frax_total_supply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 244,
																					"src": "4964:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 275,
																					"name": "global_collateral_ratio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 246,
																					"src": "4936:23:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4960:3:0",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 428,
																				"src": "4936:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4936:46:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4983:3:0",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 365,
																		"src": "4936:50:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4936:101:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 285,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4935:103:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5039:3:0",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 445,
														"src": "4935:107:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4935:112:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4907:140:0"
											},
											{
												"assignments": [
													291
												],
												"declarations": [
													{
														"constant": false,
														"id": 291,
														"mutability": "mutable",
														"name": "amount_to_recollat",
														"nameLocation": "5066:18:0",
														"nodeType": "VariableDeclaration",
														"scope": 317,
														"src": "5058:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 290,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5058:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"nodeType": "VariableDeclarationStatement",
												"src": "5058:26:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 293,
														"name": "collat_value_attempted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "5097:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 294,
														"name": "recollat_possible",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "5123:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5097:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 305,
													"nodeType": "Block",
													"src": "5215:63:0",
													"statements": [
														{
															"expression": {
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 301,
																	"name": "amount_to_recollat",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 291,
																	"src": "5229:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 302,
																	"name": "recollat_possible",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 274,
																	"src": "5250:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5229:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 304,
															"nodeType": "ExpressionStatement",
															"src": "5229:38:0"
														}
													]
												},
												"id": 306,
												"nodeType": "IfStatement",
												"src": "5094:184:0",
												"trueBody": {
													"id": 300,
													"nodeType": "Block",
													"src": "5141:68:0",
													"statements": [
														{
															"expression": {
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 296,
																	"name": "amount_to_recollat",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 291,
																	"src": "5155:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 297,
																	"name": "collat_value_attempted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "5176:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5155:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 299,
															"nodeType": "ExpressionStatement",
															"src": "5155:43:0"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 312,
																	"name": "col_price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "5328:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "316536",
																			"id": 309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5319:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000_by_1",
																				"typeString": "int_const 1000000"
																			},
																			"value": "1e6"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000_by_1",
																				"typeString": "int_const 1000000"
																			}
																		],
																		"expression": {
																			"id": 307,
																			"name": "amount_to_recollat",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 291,
																			"src": "5296:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5315:3:0",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 428,
																		"src": "5296:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5296:27:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5324:3:0",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 445,
																"src": "5296:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5296:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 314,
															"name": "amount_to_recollat",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "5340:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 315,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5295:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 252,
												"id": 316,
												"nodeType": "Return",
												"src": "5288:71:0"
											}
										]
									},
									"functionSelector": "06058f4a",
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcRecollateralizeFRAXInner",
									"nameLocation": "4445:28:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "collateral_amount",
												"nameLocation": "4491:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "4483:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4483:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "col_price",
												"nameLocation": "4527:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "4519:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4519:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "global_collat_value",
												"nameLocation": "4554:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "4546:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "frax_total_supply",
												"nameLocation": "4591:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "4583:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4583:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "global_collateral_ratio",
												"nameLocation": "4626:23:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "4618:31:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4618:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4473:182:0"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "4677:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4677:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "4686:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4686:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4676:18:0"
									},
									"scope": 319,
									"src": "4436:931:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 320,
							"src": "109:5261:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:5325:0"
				},
				"id": 0
			},
			"NewFraxProtocol/contracts/Math/SafeMath.sol": {
				"ast": {
					"absolutePath": "NewFraxProtocol/contracts/Math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							515
						]
					},
					"id": 516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 321,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "32:25:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "59:563:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 515,
							"linearizedBaseContracts": [
								515
							],
							"name": "SafeMath",
							"nameLocation": "631:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "935:109:1",
										"statements": [
											{
												"assignments": [
													333
												],
												"declarations": [
													{
														"constant": false,
														"id": 333,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "953:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "945:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 332,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "945:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 337,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 334,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 325,
														"src": "957:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 335,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "961:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "957:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "945:17:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 339,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "980:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 340,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 325,
																"src": "985:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "980:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "988:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "972:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "972:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "972:46:1"
											},
											{
												"expression": {
													"id": 345,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 333,
													"src": "1036:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 331,
												"id": 346,
												"nodeType": "Return",
												"src": "1029:8:1"
											}
										]
									},
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "646:217:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "877:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "889:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "881:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "900:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "892:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "880:22:1"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 515,
									"src": "868:176:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "1375:67:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 359,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "1396:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 360,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "1399:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1402:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 358,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															365,
															393
														],
														"referencedDeclaration": 393,
														"src": "1392:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1392:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 357,
												"id": 363,
												"nodeType": "Return",
												"src": "1385:50:1"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "1050:253:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1317:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1329:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1321:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1321:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1340:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1332:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1320:22:1"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1366:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1365:9:1"
									},
									"scope": 515,
									"src": "1308:134:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "1861:92:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 378,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "1879:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 379,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "1884:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1879:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 381,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "1887:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 377,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1871:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1871:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "1871:29:1"
											},
											{
												"assignments": [
													385
												],
												"declarations": [
													{
														"constant": false,
														"id": 385,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1918:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "1910:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 384,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1910:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 389,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 386,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 368,
														"src": "1922:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 387,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "1926:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1922:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1910:17:1"
											},
											{
												"expression": {
													"id": 390,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 385,
													"src": "1945:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 376,
												"id": 391,
												"nodeType": "Return",
												"src": "1938:8:1"
											}
										]
									},
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "1448:313:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow.\n _Available since v2.4.0._"
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1775:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1787:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "1779:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1798:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "1790:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1790:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1815:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "1801:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 371,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1801:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:50:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "1852:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1851:9:1"
									},
									"scope": 515,
									"src": "1766:187:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "2260:392:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 403,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "2492:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2497:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2492:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 409,
												"nodeType": "IfStatement",
												"src": "2488:45:1",
												"trueBody": {
													"id": 408,
													"nodeType": "Block",
													"src": "2500:33:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2521:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 402,
															"id": 407,
															"nodeType": "Return",
															"src": "2514:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													411
												],
												"declarations": [
													{
														"constant": false,
														"id": 411,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2551:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 427,
														"src": "2543:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 410,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2543:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 415,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 412,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "2555:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 413,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "2559:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2555:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2543:17:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 417,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "2578:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 418,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "2582:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2578:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 420,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "2587:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2578:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2590:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 416,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2570:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2570:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "2570:56:1"
											},
											{
												"expression": {
													"id": 425,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 411,
													"src": "2644:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 402,
												"id": 426,
												"nodeType": "Return",
												"src": "2637:8:1"
											}
										]
									},
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "1959:229:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "2202:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2214:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "2206:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2225:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "2217:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2217:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2205:22:1"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "2251:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2251:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2250:9:1"
									},
									"scope": 515,
									"src": "2193:459:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "3174:63:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "3195:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 440,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "3198:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3201:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 438,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															445,
															473
														],
														"referencedDeclaration": 473,
														"src": "3191:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3191:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 437,
												"id": 443,
												"nodeType": "Return",
												"src": "3184:46:1"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "2658:444:1",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3116:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3128:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3120:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3120:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3139:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3131:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3131:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3119:22:1"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3165:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:9:1"
									},
									"scope": 515,
									"src": "3107:130:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "3847:243:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 458,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "3931:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3935:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3931:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 461,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "3938:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 457,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3923:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3923:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "3923:28:1"
											},
											{
												"assignments": [
													465
												],
												"declarations": [
													{
														"constant": false,
														"id": 465,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "3969:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 472,
														"src": "3961:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 464,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3961:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 469,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 448,
														"src": "3973:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 467,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "3977:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3973:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3961:17:1"
											},
											{
												"expression": {
													"id": 470,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 465,
													"src": "4082:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 456,
												"id": 471,
												"nodeType": "Return",
												"src": "4075:8:1"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "3243:504:1",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3761:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3773:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3765:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3765:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3784:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3776:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3776:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3801:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3787:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3787:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3764:50:1"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3838:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3838:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3837:9:1"
									},
									"scope": 515,
									"src": "3752:338:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "4601:61:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 484,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "4622:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 485,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "4625:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4628:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 483,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															490,
															514
														],
														"referencedDeclaration": 514,
														"src": "4618:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 482,
												"id": 488,
												"nodeType": "Return",
												"src": "4611:44:1"
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "4096:433:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4543:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4555:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "4547:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4566:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "4558:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4558:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4546:22:1"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "4592:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4592:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4591:9:1"
									},
									"scope": 515,
									"src": "4534:128:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 513,
										"nodeType": "Block",
										"src": "5261:68:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 503,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "5279:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5284:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5279:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 506,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "5287:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 502,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5271:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5271:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "5271:29:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 509,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "5317:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 510,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "5321:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5317:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 501,
												"id": 512,
												"nodeType": "Return",
												"src": "5310:12:1"
											}
										]
									},
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "4668:493:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "5175:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5187:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "5179:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5179:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5198:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "5190:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5190:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5215:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "5201:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 496,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5201:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5178:50:1"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "5252:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5252:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5251:9:1"
									},
									"scope": 515,
									"src": "5166:163:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 516,
							"src": "623:4708:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:5299:1"
				},
				"id": 1
			}
		}
	}
}