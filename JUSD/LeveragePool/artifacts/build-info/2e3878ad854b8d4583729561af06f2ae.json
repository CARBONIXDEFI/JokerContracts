{
	"id": "2e3878ad854b8d4583729561af06f2ae",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"NewFraxProtocol/contracts/LeveragePool/TestERC20.sol": {
				"content": "//SPDX-License-Identifier: Unlicense\r\npragma solidity ^0.8.4;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\n\r\ncontract TestERC20 is ERC20, ERC20Burnable, Ownable {\r\n    constructor() ERC20(\"TestERC20\", \"TestERC20\") {}\r\n\r\n    function mint(address to, uint256 amount) external onlyOwner {\r\n      _mint(to, amount);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 396,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 519,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1401:13011  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1976:2089  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2050:2055  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2042:2047  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2042:2055  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2075:2082  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2065:2072  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2065:2082  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1976:2089  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1401:13011  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:82   */\ntag_10:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_11:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_12:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_13:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_14:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_15:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_16:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_17:\n    /* \"#utility.yul\":957:984   */\n  tag_51\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_15\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_53\n  tag_16\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1030:1118   */\ntag_52:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_18:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_55\n  tag_10\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_56\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_17\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_19:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_59\n  tag_16\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1434:1490   */\ntag_58:\n    /* \"#utility.yul\":1508:1537   */\n  tag_60\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_15\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_20:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_62:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_21:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_66\n    /* \"#utility.yul\":1992:2041   */\n  tag_67\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_19\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1976:2042   */\n  tag_18\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_69\n  tag_14\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2117:2229   */\ntag_68:\n    /* \"#utility.yul\":2238:2290   */\n  tag_70\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_20\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_22:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_73\n  tag_13\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2399:2521   */\ntag_72:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_74\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_21\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3530   */\ntag_3:\n    /* \"#utility.yul\":2776:2782   */\n  0x00\n    /* \"#utility.yul\":2784:2790   */\n  dup1\n    /* \"#utility.yul\":2833:2835   */\n  0x40\n    /* \"#utility.yul\":2821:2830   */\n  dup4\n    /* \"#utility.yul\":2812:2819   */\n  dup6\n    /* \"#utility.yul\":2808:2831   */\n  sub\n    /* \"#utility.yul\":2804:2836   */\n  slt\n    /* \"#utility.yul\":2801:2920   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2839:2918   */\n  tag_77\n  tag_11\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2801:2920   */\ntag_76:\n    /* \"#utility.yul\":2980:2981   */\n  0x00\n    /* \"#utility.yul\":2969:2978   */\n  dup4\n    /* \"#utility.yul\":2965:2982   */\n  add\n    /* \"#utility.yul\":2959:2983   */\n  mload\n    /* \"#utility.yul\":3010:3028   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3008   */\n  dup2\n    /* \"#utility.yul\":2999:3029   */\n  gt\n    /* \"#utility.yul\":2996:3113   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3032:3111   */\n  tag_79\n  tag_12\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2996:3113   */\ntag_78:\n    /* \"#utility.yul\":3137:3211   */\n  tag_80\n    /* \"#utility.yul\":3203:3210   */\n  dup6\n    /* \"#utility.yul\":3194:3200   */\n  dup3\n    /* \"#utility.yul\":3183:3192   */\n  dup7\n    /* \"#utility.yul\":3179:3201   */\n  add\n    /* \"#utility.yul\":3137:3211   */\n  tag_22\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3127:3211   */\n  swap3\n  pop\n    /* \"#utility.yul\":2930:3221   */\n  pop\n    /* \"#utility.yul\":3281:3283   */\n  0x20\n    /* \"#utility.yul\":3270:3279   */\n  dup4\n    /* \"#utility.yul\":3266:3284   */\n  add\n    /* \"#utility.yul\":3260:3285   */\n  mload\n    /* \"#utility.yul\":3312:3330   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3304:3310   */\n  dup2\n    /* \"#utility.yul\":3301:3331   */\n  gt\n    /* \"#utility.yul\":3298:3415   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":3334:3413   */\n  tag_82\n  tag_12\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3298:3415   */\ntag_81:\n    /* \"#utility.yul\":3439:3513   */\n  tag_83\n    /* \"#utility.yul\":3505:3512   */\n  dup6\n    /* \"#utility.yul\":3496:3502   */\n  dup3\n    /* \"#utility.yul\":3485:3494   */\n  dup7\n    /* \"#utility.yul\":3481:3503   */\n  add\n    /* \"#utility.yul\":3439:3513   */\n  tag_22\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3429:3513   */\n  swap2\n  pop\n    /* \"#utility.yul\":3231:3523   */\n  pop\n    /* \"#utility.yul\":2677:3530   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3536:3635   */\ntag_23:\n    /* \"#utility.yul\":3588:3594   */\n  0x00\n    /* \"#utility.yul\":3622:3627   */\n  dup2\n    /* \"#utility.yul\":3616:3628   */\n  mload\n    /* \"#utility.yul\":3606:3628   */\n  swap1\n  pop\n    /* \"#utility.yul\":3536:3635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3641:3821   */\ntag_24:\n    /* \"#utility.yul\":3689:3766   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3686:3687   */\n  0x00\n    /* \"#utility.yul\":3679:3767   */\n  mstore\n    /* \"#utility.yul\":3786:3790   */\n  0x22\n    /* \"#utility.yul\":3783:3784   */\n  0x04\n    /* \"#utility.yul\":3776:3791   */\n  mstore\n    /* \"#utility.yul\":3810:3814   */\n  0x24\n    /* \"#utility.yul\":3807:3808   */\n  0x00\n    /* \"#utility.yul\":3800:3815   */\n  revert\n    /* \"#utility.yul\":3827:4147   */\ntag_25:\n    /* \"#utility.yul\":3871:3877   */\n  0x00\n    /* \"#utility.yul\":3908:3909   */\n  0x02\n    /* \"#utility.yul\":3902:3906   */\n  dup3\n    /* \"#utility.yul\":3898:3910   */\n  div\n    /* \"#utility.yul\":3888:3910   */\n  swap1\n  pop\n    /* \"#utility.yul\":3955:3956   */\n  0x01\n    /* \"#utility.yul\":3949:3953   */\n  dup3\n    /* \"#utility.yul\":3945:3957   */\n  and\n    /* \"#utility.yul\":3976:3994   */\n  dup1\n    /* \"#utility.yul\":3966:4047   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":4032:4036   */\n  0x7f\n    /* \"#utility.yul\":4024:4030   */\n  dup3\n    /* \"#utility.yul\":4020:4037   */\n  and\n    /* \"#utility.yul\":4010:4037   */\n  swap2\n  pop\n    /* \"#utility.yul\":3966:4047   */\ntag_87:\n    /* \"#utility.yul\":4094:4096   */\n  0x20\n    /* \"#utility.yul\":4086:4092   */\n  dup3\n    /* \"#utility.yul\":4083:4097   */\n  lt\n    /* \"#utility.yul\":4063:4081   */\n  dup2\n    /* \"#utility.yul\":4060:4098   */\n  sub\n    /* \"#utility.yul\":4057:4141   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":4113:4131   */\n  tag_89\n  tag_24\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4057:4141   */\ntag_88:\n    /* \"#utility.yul\":3878:4147   */\n  pop\n    /* \"#utility.yul\":3827:4147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4153:4294   */\ntag_26:\n    /* \"#utility.yul\":4202:4206   */\n  0x00\n    /* \"#utility.yul\":4225:4228   */\n  dup2\n    /* \"#utility.yul\":4217:4228   */\n  swap1\n  pop\n    /* \"#utility.yul\":4248:4251   */\n  dup2\n    /* \"#utility.yul\":4245:4246   */\n  0x00\n    /* \"#utility.yul\":4238:4252   */\n  mstore\n    /* \"#utility.yul\":4282:4286   */\n  0x20\n    /* \"#utility.yul\":4279:4280   */\n  0x00\n    /* \"#utility.yul\":4269:4287   */\n  keccak256\n    /* \"#utility.yul\":4261:4287   */\n  swap1\n  pop\n    /* \"#utility.yul\":4153:4294   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4300:4393   */\ntag_27:\n    /* \"#utility.yul\":4337:4343   */\n  0x00\n    /* \"#utility.yul\":4384:4386   */\n  0x20\n    /* \"#utility.yul\":4379:4381   */\n  0x1f\n    /* \"#utility.yul\":4372:4377   */\n  dup4\n    /* \"#utility.yul\":4368:4382   */\n  add\n    /* \"#utility.yul\":4364:4387   */\n  div\n    /* \"#utility.yul\":4354:4387   */\n  swap1\n  pop\n    /* \"#utility.yul\":4300:4393   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4399:4506   */\ntag_28:\n    /* \"#utility.yul\":4443:4451   */\n  0x00\n    /* \"#utility.yul\":4493:4498   */\n  dup3\n    /* \"#utility.yul\":4487:4491   */\n  dup3\n    /* \"#utility.yul\":4483:4499   */\n  shl\n    /* \"#utility.yul\":4462:4499   */\n  swap1\n  pop\n    /* \"#utility.yul\":4399:4506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4512:4905   */\ntag_29:\n    /* \"#utility.yul\":4581:4587   */\n  0x00\n    /* \"#utility.yul\":4631:4632   */\n  0x08\n    /* \"#utility.yul\":4619:4629   */\n  dup4\n    /* \"#utility.yul\":4615:4633   */\n  mul\n    /* \"#utility.yul\":4654:4751   */\n  tag_94\n    /* \"#utility.yul\":4684:4750   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4673:4682   */\n  dup3\n    /* \"#utility.yul\":4654:4751   */\n  tag_28\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4772:4811   */\n  tag_95\n    /* \"#utility.yul\":4802:4810   */\n  dup7\n    /* \"#utility.yul\":4791:4800   */\n  dup4\n    /* \"#utility.yul\":4772:4811   */\n  tag_28\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4760:4811   */\n  swap6\n  pop\n    /* \"#utility.yul\":4844:4848   */\n  dup1\n    /* \"#utility.yul\":4840:4849   */\n  not\n    /* \"#utility.yul\":4833:4838   */\n  dup5\n    /* \"#utility.yul\":4829:4850   */\n  and\n    /* \"#utility.yul\":4820:4850   */\n  swap4\n  pop\n    /* \"#utility.yul\":4893:4897   */\n  dup1\n    /* \"#utility.yul\":4883:4891   */\n  dup7\n    /* \"#utility.yul\":4879:4898   */\n  and\n    /* \"#utility.yul\":4872:4877   */\n  dup5\n    /* \"#utility.yul\":4869:4899   */\n  or\n    /* \"#utility.yul\":4859:4899   */\n  swap3\n  pop\n    /* \"#utility.yul\":4588:4905   */\n  pop\n  pop\n    /* \"#utility.yul\":4512:4905   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4911:4988   */\ntag_30:\n    /* \"#utility.yul\":4948:4955   */\n  0x00\n    /* \"#utility.yul\":4977:4982   */\n  dup2\n    /* \"#utility.yul\":4966:4982   */\n  swap1\n  pop\n    /* \"#utility.yul\":4911:4988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4994:5054   */\ntag_31:\n    /* \"#utility.yul\":5022:5025   */\n  0x00\n    /* \"#utility.yul\":5043:5048   */\n  dup2\n    /* \"#utility.yul\":5036:5048   */\n  swap1\n  pop\n    /* \"#utility.yul\":4994:5054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5060:5202   */\ntag_32:\n    /* \"#utility.yul\":5110:5119   */\n  0x00\n    /* \"#utility.yul\":5143:5196   */\n  tag_99\n    /* \"#utility.yul\":5161:5195   */\n  tag_100\n    /* \"#utility.yul\":5170:5194   */\n  tag_101\n    /* \"#utility.yul\":5188:5193   */\n  dup5\n    /* \"#utility.yul\":5170:5194   */\n  tag_30\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5161:5195   */\n  tag_31\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":5143:5196   */\n  tag_30\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":5130:5196   */\n  swap1\n  pop\n    /* \"#utility.yul\":5060:5202   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5208:5283   */\ntag_33:\n    /* \"#utility.yul\":5251:5254   */\n  0x00\n    /* \"#utility.yul\":5272:5277   */\n  dup2\n    /* \"#utility.yul\":5265:5277   */\n  swap1\n  pop\n    /* \"#utility.yul\":5208:5283   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5289:5558   */\ntag_34:\n    /* \"#utility.yul\":5399:5438   */\n  tag_104\n    /* \"#utility.yul\":5430:5437   */\n  dup4\n    /* \"#utility.yul\":5399:5438   */\n  tag_32\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5460:5551   */\n  tag_105\n    /* \"#utility.yul\":5509:5550   */\n  tag_106\n    /* \"#utility.yul\":5533:5549   */\n  dup3\n    /* \"#utility.yul\":5509:5550   */\n  tag_33\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5501:5507   */\n  dup5\n    /* \"#utility.yul\":5494:5498   */\n  dup5\n    /* \"#utility.yul\":5488:5499   */\n  sload\n    /* \"#utility.yul\":5460:5551   */\n  tag_29\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5454:5458   */\n  dup3\n    /* \"#utility.yul\":5447:5552   */\n  sstore\n    /* \"#utility.yul\":5365:5558   */\n  pop\n    /* \"#utility.yul\":5289:5558   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5564:5637   */\ntag_35:\n    /* \"#utility.yul\":5609:5612   */\n  0x00\n    /* \"#utility.yul\":5564:5637   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5643:5832   */\ntag_36:\n    /* \"#utility.yul\":5720:5752   */\n  tag_109\n  tag_35\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5761:5826   */\n  tag_110\n    /* \"#utility.yul\":5819:5825   */\n  dup2\n    /* \"#utility.yul\":5811:5817   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5761:5826   */\n  tag_34\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5696:5832   */\n  pop\n    /* \"#utility.yul\":5643:5832   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5838:6024   */\ntag_37:\n    /* \"#utility.yul\":5898:6018   */\ntag_112:\n    /* \"#utility.yul\":5915:5918   */\n  dup2\n    /* \"#utility.yul\":5908:5913   */\n  dup2\n    /* \"#utility.yul\":5905:5919   */\n  lt\n    /* \"#utility.yul\":5898:6018   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":5969:6008   */\n  tag_115\n    /* \"#utility.yul\":6006:6007   */\n  0x00\n    /* \"#utility.yul\":5999:6004   */\n  dup3\n    /* \"#utility.yul\":5969:6008   */\n  tag_36\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5942:5943   */\n  0x01\n    /* \"#utility.yul\":5935:5940   */\n  dup2\n    /* \"#utility.yul\":5931:5944   */\n  add\n    /* \"#utility.yul\":5922:5944   */\n  swap1\n  pop\n    /* \"#utility.yul\":5898:6018   */\n  jump(tag_112)\ntag_114:\n    /* \"#utility.yul\":5838:6024   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6030:6573   */\ntag_38:\n    /* \"#utility.yul\":6131:6133   */\n  0x1f\n    /* \"#utility.yul\":6126:6129   */\n  dup3\n    /* \"#utility.yul\":6123:6134   */\n  gt\n    /* \"#utility.yul\":6120:6566   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6165:6203   */\n  tag_118\n    /* \"#utility.yul\":6197:6202   */\n  dup2\n    /* \"#utility.yul\":6165:6203   */\n  tag_26\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6249:6278   */\n  tag_119\n    /* \"#utility.yul\":6267:6277   */\n  dup5\n    /* \"#utility.yul\":6249:6278   */\n  tag_27\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6239:6247   */\n  dup2\n    /* \"#utility.yul\":6235:6279   */\n  add\n    /* \"#utility.yul\":6432:6434   */\n  0x20\n    /* \"#utility.yul\":6420:6430   */\n  dup6\n    /* \"#utility.yul\":6417:6435   */\n  lt\n    /* \"#utility.yul\":6414:6463   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":6453:6461   */\n  dup2\n    /* \"#utility.yul\":6438:6461   */\n  swap1\n  pop\n    /* \"#utility.yul\":6414:6463   */\ntag_120:\n    /* \"#utility.yul\":6476:6556   */\n  tag_121\n    /* \"#utility.yul\":6532:6554   */\n  tag_122\n    /* \"#utility.yul\":6550:6553   */\n  dup6\n    /* \"#utility.yul\":6532:6554   */\n  tag_27\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6522:6530   */\n  dup4\n    /* \"#utility.yul\":6518:6555   */\n  add\n    /* \"#utility.yul\":6505:6516   */\n  dup3\n    /* \"#utility.yul\":6476:6556   */\n  tag_37\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6135:6566   */\n  pop\n  pop\n    /* \"#utility.yul\":6120:6566   */\ntag_117:\n    /* \"#utility.yul\":6030:6573   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6579:6696   */\ntag_39:\n    /* \"#utility.yul\":6633:6641   */\n  0x00\n    /* \"#utility.yul\":6683:6688   */\n  dup3\n    /* \"#utility.yul\":6677:6681   */\n  dup3\n    /* \"#utility.yul\":6673:6689   */\n  shr\n    /* \"#utility.yul\":6652:6689   */\n  swap1\n  pop\n    /* \"#utility.yul\":6579:6696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6702:6871   */\ntag_40:\n    /* \"#utility.yul\":6746:6752   */\n  0x00\n    /* \"#utility.yul\":6779:6830   */\n  tag_125\n    /* \"#utility.yul\":6827:6828   */\n  0x00\n    /* \"#utility.yul\":6823:6829   */\n  not\n    /* \"#utility.yul\":6815:6820   */\n  dup5\n    /* \"#utility.yul\":6812:6813   */\n  0x08\n    /* \"#utility.yul\":6808:6821   */\n  mul\n    /* \"#utility.yul\":6779:6830   */\n  tag_39\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6775:6831   */\n  not\n    /* \"#utility.yul\":6860:6864   */\n  dup1\n    /* \"#utility.yul\":6854:6858   */\n  dup4\n    /* \"#utility.yul\":6850:6865   */\n  and\n    /* \"#utility.yul\":6840:6865   */\n  swap2\n  pop\n    /* \"#utility.yul\":6753:6871   */\n  pop\n    /* \"#utility.yul\":6702:6871   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6876:7171   */\ntag_41:\n    /* \"#utility.yul\":6952:6956   */\n  0x00\n    /* \"#utility.yul\":7098:7127   */\n  tag_127\n    /* \"#utility.yul\":7123:7126   */\n  dup4\n    /* \"#utility.yul\":7117:7121   */\n  dup4\n    /* \"#utility.yul\":7098:7127   */\n  tag_40\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":7090:7127   */\n  swap2\n  pop\n    /* \"#utility.yul\":7160:7163   */\n  dup3\n    /* \"#utility.yul\":7157:7158   */\n  0x02\n    /* \"#utility.yul\":7153:7164   */\n  mul\n    /* \"#utility.yul\":7147:7151   */\n  dup3\n    /* \"#utility.yul\":7144:7165   */\n  or\n    /* \"#utility.yul\":7136:7165   */\n  swap1\n  pop\n    /* \"#utility.yul\":6876:7171   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7176:8571   */\ntag_7:\n    /* \"#utility.yul\":7293:7330   */\n  tag_129\n    /* \"#utility.yul\":7326:7329   */\n  dup3\n    /* \"#utility.yul\":7293:7330   */\n  tag_23\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7395:7413   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7387:7393   */\n  dup2\n    /* \"#utility.yul\":7384:7414   */\n  gt\n    /* \"#utility.yul\":7381:7437   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":7417:7435   */\n  tag_131\n  tag_16\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7381:7437   */\ntag_130:\n    /* \"#utility.yul\":7461:7499   */\n  tag_132\n    /* \"#utility.yul\":7493:7497   */\n  dup3\n    /* \"#utility.yul\":7487:7498   */\n  sload\n    /* \"#utility.yul\":7461:7499   */\n  tag_25\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":7546:7613   */\n  tag_133\n    /* \"#utility.yul\":7606:7612   */\n  dup3\n    /* \"#utility.yul\":7598:7604   */\n  dup3\n    /* \"#utility.yul\":7592:7596   */\n  dup6\n    /* \"#utility.yul\":7546:7613   */\n  tag_38\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7640:7641   */\n  0x00\n    /* \"#utility.yul\":7664:7668   */\n  0x20\n    /* \"#utility.yul\":7651:7668   */\n  swap1\n  pop\n    /* \"#utility.yul\":7696:7698   */\n  0x1f\n    /* \"#utility.yul\":7688:7694   */\n  dup4\n    /* \"#utility.yul\":7685:7699   */\n  gt\n    /* \"#utility.yul\":7713:7714   */\n  0x01\n    /* \"#utility.yul\":7708:8326   */\n  dup2\n  eq\n  tag_135\n  jumpi\n    /* \"#utility.yul\":8370:8371   */\n  0x00\n    /* \"#utility.yul\":8387:8393   */\n  dup5\n    /* \"#utility.yul\":8384:8461   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":8436:8445   */\n  dup3\n    /* \"#utility.yul\":8431:8434   */\n  dup8\n    /* \"#utility.yul\":8427:8446   */\n  add\n    /* \"#utility.yul\":8421:8447   */\n  mload\n    /* \"#utility.yul\":8412:8447   */\n  swap1\n  pop\n    /* \"#utility.yul\":8384:8461   */\ntag_136:\n    /* \"#utility.yul\":8487:8554   */\n  tag_137\n    /* \"#utility.yul\":8547:8553   */\n  dup6\n    /* \"#utility.yul\":8540:8545   */\n  dup3\n    /* \"#utility.yul\":8487:8554   */\n  tag_41\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":8481:8485   */\n  dup7\n    /* \"#utility.yul\":8474:8555   */\n  sstore\n    /* \"#utility.yul\":8343:8565   */\n  pop\n    /* \"#utility.yul\":7678:8565   */\n  jump(tag_134)\n    /* \"#utility.yul\":7708:8326   */\ntag_135:\n    /* \"#utility.yul\":7760:7764   */\n  0x1f\n    /* \"#utility.yul\":7756:7765   */\n  not\n    /* \"#utility.yul\":7748:7754   */\n  dup5\n    /* \"#utility.yul\":7744:7766   */\n  and\n    /* \"#utility.yul\":7794:7831   */\n  tag_138\n    /* \"#utility.yul\":7826:7830   */\n  dup7\n    /* \"#utility.yul\":7794:7831   */\n  tag_26\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":7853:7854   */\n  0x00\n    /* \"#utility.yul\":7867:8075   */\ntag_139:\n    /* \"#utility.yul\":7881:7888   */\n  dup3\n    /* \"#utility.yul\":7878:7879   */\n  dup2\n    /* \"#utility.yul\":7875:7889   */\n  lt\n    /* \"#utility.yul\":7867:8075   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":7960:7969   */\n  dup5\n    /* \"#utility.yul\":7955:7958   */\n  dup10\n    /* \"#utility.yul\":7951:7970   */\n  add\n    /* \"#utility.yul\":7945:7971   */\n  mload\n    /* \"#utility.yul\":7937:7943   */\n  dup3\n    /* \"#utility.yul\":7930:7972   */\n  sstore\n    /* \"#utility.yul\":8011:8012   */\n  0x01\n    /* \"#utility.yul\":8003:8009   */\n  dup3\n    /* \"#utility.yul\":7999:8013   */\n  add\n    /* \"#utility.yul\":7989:8013   */\n  swap2\n  pop\n    /* \"#utility.yul\":8058:8060   */\n  0x20\n    /* \"#utility.yul\":8047:8056   */\n  dup6\n    /* \"#utility.yul\":8043:8061   */\n  add\n    /* \"#utility.yul\":8030:8061   */\n  swap5\n  pop\n    /* \"#utility.yul\":7904:7908   */\n  0x20\n    /* \"#utility.yul\":7901:7902   */\n  dup2\n    /* \"#utility.yul\":7897:7909   */\n  add\n    /* \"#utility.yul\":7892:7909   */\n  swap1\n  pop\n    /* \"#utility.yul\":7867:8075   */\n  jump(tag_139)\ntag_141:\n    /* \"#utility.yul\":8103:8109   */\n  dup7\n    /* \"#utility.yul\":8094:8101   */\n  dup4\n    /* \"#utility.yul\":8091:8110   */\n  lt\n    /* \"#utility.yul\":8088:8267   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":8161:8170   */\n  dup5\n    /* \"#utility.yul\":8156:8159   */\n  dup10\n    /* \"#utility.yul\":8152:8171   */\n  add\n    /* \"#utility.yul\":8146:8172   */\n  mload\n    /* \"#utility.yul\":8204:8252   */\n  tag_143\n    /* \"#utility.yul\":8246:8250   */\n  0x1f\n    /* \"#utility.yul\":8238:8244   */\n  dup10\n    /* \"#utility.yul\":8234:8251   */\n  and\n    /* \"#utility.yul\":8223:8232   */\n  dup3\n    /* \"#utility.yul\":8204:8252   */\n  tag_40\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":8196:8202   */\n  dup4\n    /* \"#utility.yul\":8189:8253   */\n  sstore\n    /* \"#utility.yul\":8111:8267   */\n  pop\n    /* \"#utility.yul\":8088:8267   */\ntag_142:\n    /* \"#utility.yul\":8313:8314   */\n  0x01\n    /* \"#utility.yul\":8309:8310   */\n  0x02\n    /* \"#utility.yul\":8301:8307   */\n  dup9\n    /* \"#utility.yul\":8297:8311   */\n  mul\n    /* \"#utility.yul\":8293:8315   */\n  add\n    /* \"#utility.yul\":8287:8291   */\n  dup9\n    /* \"#utility.yul\":8280:8316   */\n  sstore\n    /* \"#utility.yul\":7715:8326   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7678:8565   */\ntag_134:\n  pop\n    /* \"#utility.yul\":7268:8571   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7176:8571   */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1401:13011  contract ERC20 is Context, IERC20, IERC20Metadata {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1401:13011  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2208:2221  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2240:2245  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2233:2245  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4514:4518  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4530:4543  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4546:4558  _msgSender() */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4546:4556  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4546:4558  _msgSender() */\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4530:4558  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4568:4600  _approve(owner, spender, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4577:4582  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4584:4591  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4593:4599  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4568:4576  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4568:4600  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4617:4621  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4610:4621  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3303:3310  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3341  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3322:3341  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5317:5321  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5333:5348  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5351:5363  _msgSender() */\n      tag_77\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5351:5361  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5351:5363  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5333:5363  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5373:5411  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5389:5393  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5395:5402  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5410  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5373:5388  _spendAllowance */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5373:5411  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5448  _transfer(from, to, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5431:5435  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5437:5439  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5441:5447  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5430  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5448  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5465:5469  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5458:5469  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3149:3154  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3173:3175  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3166:3175  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5959:5963  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5975:5988  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5991:6003  _msgSender() */\n      tag_84\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5991:6001  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5991:6003  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5975:6003  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6013:6077  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6022:6027  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6029:6036  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6066:6076  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6063  allowance(owner, spender) */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6048:6053  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6055:6062  spender */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6047  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6063  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6076  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6013:6021  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6013:6077  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6098  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6087:6098  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3480:3487  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3506:3515  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3506:3524  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3516:3523  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3506:3524  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3499:3524  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2421:2434  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2453:2460  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2446:2460  return _symbol */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_65\n      jump\t// in\n    tag_91:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_65\n      jump\t// in\n    tag_92:\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6685:6689  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6701:6714  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6717:6729  _msgSender() */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6717:6727  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6717:6729  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6701:6729  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6739:6763  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6791  allowance(owner, spender) */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6776:6781  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6783:6790  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6775  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6791  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6739:6791  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6829:6844  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6809:6825  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6809:6844  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6801:6886  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6920:6980  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6929:6934  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6936:6943  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6964:6979  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6945:6961  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6945:6979  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6920:6928  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6920:6980  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7008:7012  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7001:7012  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3806:3810  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3822:3835  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3838:3850  _msgSender() */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3838:3848  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3838:3850  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3822:3850  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3860:3888  _transfer(owner, to, amount) */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3870:3875  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3877:3879  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3881:3887  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3860:3869  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3860:3888  _transfer(owner, to, amount) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3905:3909  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3898:3909  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4063:4070  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4100  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4107  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4101:4106  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4107  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4116  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4108:4115  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4116  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4082:4116  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10874  function _approve(... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10652:10653  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10635:10654  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10635:10640  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10635:10654  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10695  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10733  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10713:10734  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10713:10720  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10713:10734  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10705:10773  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10814:10820  amount */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10795  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10802  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10796:10801  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10802  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10811  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10810  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10811  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10820  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10851:10858  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10844:10849  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10860:10866  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10874  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11155:11596  function _spendAllowance(... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11285:11309  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11312:11337  allowance(owner, spender) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11322:11327  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11329:11336  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11312:11321  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11312:11337  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11285:11337  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11371:11388  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11351:11367  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11351:11388  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11347:11590  if (currentAllowance != type(uint256).max) {... */\n      tag_118\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11438  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11412:11428  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11412:11438  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11404:11472  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11565  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11523:11528  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11530:11537  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11558:11564  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11539:11555  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11539:11564  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11522  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11565  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11347:11590  if (currentAllowance != type(uint256).max) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11275:11596  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11155:11596  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7473:8291  function _transfer(... */\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7615:7616  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7599:7617  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7599:7603  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7599:7617  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7591:7659  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7691:7692  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7677:7693  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7677:7679  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7677:7693  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7669:7733  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7744:7782  _beforeTokenTransfer(from, to, amount) */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7765:7769  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7771:7773  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7775:7781  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7744:7764  _beforeTokenTransfer */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7744:7782  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7812  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7815:7824  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7815:7830  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7825:7829  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7815:7830  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7830  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7863:7869  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7848:7859  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7848:7869  fromBalance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7840:7912  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7978:7984  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7964:7975  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7964:7984  fromBalance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7955  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7961  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7956:7960  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7961  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7984  _balances[from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8178:8184  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8170  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8174  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8171:8173  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8174  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8184  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8225:8227  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8219:8223  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8229:8235  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8284  _afterTokenTransfer(from, to, amount) */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8267:8271  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8273:8275  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8277:8283  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8266  _afterTokenTransfer */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8284  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7581:8291  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7473:8291  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":12180:12301  function _beforeTokenTransfer(... */\n    tag_131:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":12889:13009  function _afterTokenTransfer(... */\n    tag_137:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_140:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_141:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_142:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_180:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_180)\n    tag_182:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_143:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_144:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_185\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_140\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":818:889   */\n      tag_186\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_141\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_187\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_142\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":988:1017   */\n      tag_188\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_143\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_18:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_190\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_144\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_146:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_148:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_149:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_196\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_148\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_150:\n        /* \"#utility.yul\":1983:2007   */\n      tag_198\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_149\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_199\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_199:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_151:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_201\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_150\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_152:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_153:\n        /* \"#utility.yul\":2339:2363   */\n      tag_204\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_152\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_205\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_205:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_154:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_207\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_153\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_21:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_210\n      tag_146\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":2632:2751   */\n    tag_209:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_211\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_151\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_212\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_154\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_155:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_156:\n        /* \"#utility.yul\":3196:3217   */\n      tag_215\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_155\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_24:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_217\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_156\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_157:\n        /* \"#utility.yul\":3533:3557   */\n      tag_219\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_152\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_28:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_221\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_157\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_31:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_224\n      tag_146\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":3908:4027   */\n    tag_223:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_225\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_151\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_226\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_151\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_227\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_154\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_158:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_159:\n        /* \"#utility.yul\":4598:4620   */\n      tag_230\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_158\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_37:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_232\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_159\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_44:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_235\n      tag_146\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":4929:5048   */\n    tag_234:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_236\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_151\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5662   */\n    tag_60:\n        /* \"#utility.yul\":5256:5262   */\n      0x00\n        /* \"#utility.yul\":5264:5270   */\n      dup1\n        /* \"#utility.yul\":5313:5315   */\n      0x40\n        /* \"#utility.yul\":5301:5310   */\n      dup4\n        /* \"#utility.yul\":5292:5299   */\n      dup6\n        /* \"#utility.yul\":5288:5311   */\n      sub\n        /* \"#utility.yul\":5284:5316   */\n      slt\n        /* \"#utility.yul\":5281:5400   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":5319:5398   */\n      tag_239\n      tag_146\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":5281:5400   */\n    tag_238:\n        /* \"#utility.yul\":5439:5440   */\n      0x00\n        /* \"#utility.yul\":5464:5517   */\n      tag_240\n        /* \"#utility.yul\":5509:5516   */\n      dup6\n        /* \"#utility.yul\":5500:5506   */\n      dup3\n        /* \"#utility.yul\":5489:5498   */\n      dup7\n        /* \"#utility.yul\":5485:5507   */\n      add\n        /* \"#utility.yul\":5464:5517   */\n      tag_151\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":5454:5517   */\n      swap3\n      pop\n        /* \"#utility.yul\":5410:5527   */\n      pop\n        /* \"#utility.yul\":5566:5568   */\n      0x20\n        /* \"#utility.yul\":5592:5645   */\n      tag_241\n        /* \"#utility.yul\":5637:5644   */\n      dup6\n        /* \"#utility.yul\":5628:5634   */\n      dup3\n        /* \"#utility.yul\":5617:5626   */\n      dup7\n        /* \"#utility.yul\":5613:5635   */\n      add\n        /* \"#utility.yul\":5592:5645   */\n      tag_151\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":5582:5645   */\n      swap2\n      pop\n        /* \"#utility.yul\":5537:5655   */\n      pop\n        /* \"#utility.yul\":5188:5662   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5668:5848   */\n    tag_160:\n        /* \"#utility.yul\":5716:5793   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5713:5714   */\n      0x00\n        /* \"#utility.yul\":5706:5794   */\n      mstore\n        /* \"#utility.yul\":5813:5817   */\n      0x22\n        /* \"#utility.yul\":5810:5811   */\n      0x04\n        /* \"#utility.yul\":5803:5818   */\n      mstore\n        /* \"#utility.yul\":5837:5841   */\n      0x24\n        /* \"#utility.yul\":5834:5835   */\n      0x00\n        /* \"#utility.yul\":5827:5842   */\n      revert\n        /* \"#utility.yul\":5854:6174   */\n    tag_65:\n        /* \"#utility.yul\":5898:5904   */\n      0x00\n        /* \"#utility.yul\":5935:5936   */\n      0x02\n        /* \"#utility.yul\":5929:5933   */\n      dup3\n        /* \"#utility.yul\":5925:5937   */\n      div\n        /* \"#utility.yul\":5915:5937   */\n      swap1\n      pop\n        /* \"#utility.yul\":5982:5983   */\n      0x01\n        /* \"#utility.yul\":5976:5980   */\n      dup3\n        /* \"#utility.yul\":5972:5984   */\n      and\n        /* \"#utility.yul\":6003:6021   */\n      dup1\n        /* \"#utility.yul\":5993:6074   */\n      tag_244\n      jumpi\n        /* \"#utility.yul\":6059:6063   */\n      0x7f\n        /* \"#utility.yul\":6051:6057   */\n      dup3\n        /* \"#utility.yul\":6047:6064   */\n      and\n        /* \"#utility.yul\":6037:6064   */\n      swap2\n      pop\n        /* \"#utility.yul\":5993:6074   */\n    tag_244:\n        /* \"#utility.yul\":6121:6123   */\n      0x20\n        /* \"#utility.yul\":6113:6119   */\n      dup3\n        /* \"#utility.yul\":6110:6124   */\n      lt\n        /* \"#utility.yul\":6090:6108   */\n      dup2\n        /* \"#utility.yul\":6087:6125   */\n      sub\n        /* \"#utility.yul\":6084:6168   */\n      tag_245\n      jumpi\n        /* \"#utility.yul\":6140:6158   */\n      tag_246\n      tag_160\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":6084:6168   */\n    tag_245:\n        /* \"#utility.yul\":5905:6174   */\n      pop\n        /* \"#utility.yul\":5854:6174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6180:6360   */\n    tag_161:\n        /* \"#utility.yul\":6228:6305   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6225:6226   */\n      0x00\n        /* \"#utility.yul\":6218:6306   */\n      mstore\n        /* \"#utility.yul\":6325:6329   */\n      0x11\n        /* \"#utility.yul\":6322:6323   */\n      0x04\n        /* \"#utility.yul\":6315:6330   */\n      mstore\n        /* \"#utility.yul\":6349:6353   */\n      0x24\n        /* \"#utility.yul\":6346:6347   */\n      0x00\n        /* \"#utility.yul\":6339:6354   */\n      revert\n        /* \"#utility.yul\":6366:6557   */\n    tag_88:\n        /* \"#utility.yul\":6406:6409   */\n      0x00\n        /* \"#utility.yul\":6425:6445   */\n      tag_249\n        /* \"#utility.yul\":6443:6444   */\n      dup3\n        /* \"#utility.yul\":6425:6445   */\n      tag_152\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":6420:6445   */\n      swap2\n      pop\n        /* \"#utility.yul\":6459:6479   */\n      tag_250\n        /* \"#utility.yul\":6477:6478   */\n      dup4\n        /* \"#utility.yul\":6459:6479   */\n      tag_152\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":6454:6479   */\n      swap3\n      pop\n        /* \"#utility.yul\":6502:6503   */\n      dup3\n        /* \"#utility.yul\":6499:6500   */\n      dup3\n        /* \"#utility.yul\":6495:6504   */\n      add\n        /* \"#utility.yul\":6488:6504   */\n      swap1\n      pop\n        /* \"#utility.yul\":6523:6526   */\n      dup1\n        /* \"#utility.yul\":6520:6521   */\n      dup3\n        /* \"#utility.yul\":6517:6527   */\n      gt\n        /* \"#utility.yul\":6514:6550   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":6530:6548   */\n      tag_252\n      tag_161\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":6514:6550   */\n    tag_251:\n        /* \"#utility.yul\":6366:6557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6563:6787   */\n    tag_162:\n        /* \"#utility.yul\":6703:6737   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":6699:6700   */\n      0x00\n        /* \"#utility.yul\":6691:6697   */\n      dup3\n        /* \"#utility.yul\":6687:6701   */\n      add\n        /* \"#utility.yul\":6680:6738   */\n      mstore\n        /* \"#utility.yul\":6772:6779   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6767:6769   */\n      0x20\n        /* \"#utility.yul\":6759:6765   */\n      dup3\n        /* \"#utility.yul\":6755:6770   */\n      add\n        /* \"#utility.yul\":6748:6780   */\n      mstore\n        /* \"#utility.yul\":6563:6787   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6793:7159   */\n    tag_163:\n        /* \"#utility.yul\":6935:6938   */\n      0x00\n        /* \"#utility.yul\":6956:7023   */\n      tag_255\n        /* \"#utility.yul\":7020:7022   */\n      0x25\n        /* \"#utility.yul\":7015:7018   */\n      dup4\n        /* \"#utility.yul\":6956:7023   */\n      tag_141\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":6949:7023   */\n      swap2\n      pop\n        /* \"#utility.yul\":7032:7125   */\n      tag_256\n        /* \"#utility.yul\":7121:7124   */\n      dup3\n        /* \"#utility.yul\":7032:7125   */\n      tag_162\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":7150:7152   */\n      0x40\n        /* \"#utility.yul\":7145:7148   */\n      dup3\n        /* \"#utility.yul\":7141:7153   */\n      add\n        /* \"#utility.yul\":7134:7153   */\n      swap1\n      pop\n        /* \"#utility.yul\":6793:7159   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7165:7584   */\n    tag_101:\n        /* \"#utility.yul\":7331:7335   */\n      0x00\n        /* \"#utility.yul\":7369:7371   */\n      0x20\n        /* \"#utility.yul\":7358:7367   */\n      dup3\n        /* \"#utility.yul\":7354:7372   */\n      add\n        /* \"#utility.yul\":7346:7372   */\n      swap1\n      pop\n        /* \"#utility.yul\":7418:7427   */\n      dup2\n        /* \"#utility.yul\":7412:7416   */\n      dup2\n        /* \"#utility.yul\":7408:7428   */\n      sub\n        /* \"#utility.yul\":7404:7405   */\n      0x00\n        /* \"#utility.yul\":7393:7402   */\n      dup4\n        /* \"#utility.yul\":7389:7406   */\n      add\n        /* \"#utility.yul\":7382:7429   */\n      mstore\n        /* \"#utility.yul\":7446:7577   */\n      tag_258\n        /* \"#utility.yul\":7572:7576   */\n      dup2\n        /* \"#utility.yul\":7446:7577   */\n      tag_163\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":7438:7577   */\n      swap1\n      pop\n        /* \"#utility.yul\":7165:7584   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7590:7813   */\n    tag_164:\n        /* \"#utility.yul\":7730:7764   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":7726:7727   */\n      0x00\n        /* \"#utility.yul\":7718:7724   */\n      dup3\n        /* \"#utility.yul\":7714:7728   */\n      add\n        /* \"#utility.yul\":7707:7765   */\n      mstore\n        /* \"#utility.yul\":7799:7805   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7794:7796   */\n      0x20\n        /* \"#utility.yul\":7786:7792   */\n      dup3\n        /* \"#utility.yul\":7782:7797   */\n      add\n        /* \"#utility.yul\":7775:7806   */\n      mstore\n        /* \"#utility.yul\":7590:7813   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7819:8185   */\n    tag_165:\n        /* \"#utility.yul\":7961:7964   */\n      0x00\n        /* \"#utility.yul\":7982:8049   */\n      tag_261\n        /* \"#utility.yul\":8046:8048   */\n      0x24\n        /* \"#utility.yul\":8041:8044   */\n      dup4\n        /* \"#utility.yul\":7982:8049   */\n      tag_141\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":7975:8049   */\n      swap2\n      pop\n        /* \"#utility.yul\":8058:8151   */\n      tag_262\n        /* \"#utility.yul\":8147:8150   */\n      dup3\n        /* \"#utility.yul\":8058:8151   */\n      tag_164\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":8176:8178   */\n      0x40\n        /* \"#utility.yul\":8171:8174   */\n      dup3\n        /* \"#utility.yul\":8167:8179   */\n      add\n        /* \"#utility.yul\":8160:8179   */\n      swap1\n      pop\n        /* \"#utility.yul\":7819:8185   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8191:8610   */\n    tag_111:\n        /* \"#utility.yul\":8357:8361   */\n      0x00\n        /* \"#utility.yul\":8395:8397   */\n      0x20\n        /* \"#utility.yul\":8384:8393   */\n      dup3\n        /* \"#utility.yul\":8380:8398   */\n      add\n        /* \"#utility.yul\":8372:8398   */\n      swap1\n      pop\n        /* \"#utility.yul\":8444:8453   */\n      dup2\n        /* \"#utility.yul\":8438:8442   */\n      dup2\n        /* \"#utility.yul\":8434:8454   */\n      sub\n        /* \"#utility.yul\":8430:8431   */\n      0x00\n        /* \"#utility.yul\":8419:8428   */\n      dup4\n        /* \"#utility.yul\":8415:8432   */\n      add\n        /* \"#utility.yul\":8408:8455   */\n      mstore\n        /* \"#utility.yul\":8472:8603   */\n      tag_264\n        /* \"#utility.yul\":8598:8602   */\n      dup2\n        /* \"#utility.yul\":8472:8603   */\n      tag_165\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":8464:8603   */\n      swap1\n      pop\n        /* \"#utility.yul\":8191:8610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8616:8837   */\n    tag_166:\n        /* \"#utility.yul\":8756:8790   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":8752:8753   */\n      0x00\n        /* \"#utility.yul\":8744:8750   */\n      dup3\n        /* \"#utility.yul\":8740:8754   */\n      add\n        /* \"#utility.yul\":8733:8791   */\n      mstore\n        /* \"#utility.yul\":8825:8829   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8820:8822   */\n      0x20\n        /* \"#utility.yul\":8812:8818   */\n      dup3\n        /* \"#utility.yul\":8808:8823   */\n      add\n        /* \"#utility.yul\":8801:8830   */\n      mstore\n        /* \"#utility.yul\":8616:8837   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8843:9209   */\n    tag_167:\n        /* \"#utility.yul\":8985:8988   */\n      0x00\n        /* \"#utility.yul\":9006:9073   */\n      tag_267\n        /* \"#utility.yul\":9070:9072   */\n      0x22\n        /* \"#utility.yul\":9065:9068   */\n      dup4\n        /* \"#utility.yul\":9006:9073   */\n      tag_141\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":8999:9073   */\n      swap2\n      pop\n        /* \"#utility.yul\":9082:9175   */\n      tag_268\n        /* \"#utility.yul\":9171:9174   */\n      dup3\n        /* \"#utility.yul\":9082:9175   */\n      tag_166\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":9200:9202   */\n      0x40\n        /* \"#utility.yul\":9195:9198   */\n      dup3\n        /* \"#utility.yul\":9191:9203   */\n      add\n        /* \"#utility.yul\":9184:9203   */\n      swap1\n      pop\n        /* \"#utility.yul\":8843:9209   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9215:9634   */\n    tag_114:\n        /* \"#utility.yul\":9381:9385   */\n      0x00\n        /* \"#utility.yul\":9419:9421   */\n      0x20\n        /* \"#utility.yul\":9408:9417   */\n      dup3\n        /* \"#utility.yul\":9404:9422   */\n      add\n        /* \"#utility.yul\":9396:9422   */\n      swap1\n      pop\n        /* \"#utility.yul\":9468:9477   */\n      dup2\n        /* \"#utility.yul\":9462:9466   */\n      dup2\n        /* \"#utility.yul\":9458:9478   */\n      sub\n        /* \"#utility.yul\":9454:9455   */\n      0x00\n        /* \"#utility.yul\":9443:9452   */\n      dup4\n        /* \"#utility.yul\":9439:9456   */\n      add\n        /* \"#utility.yul\":9432:9479   */\n      mstore\n        /* \"#utility.yul\":9496:9627   */\n      tag_270\n        /* \"#utility.yul\":9622:9626   */\n      dup2\n        /* \"#utility.yul\":9496:9627   */\n      tag_167\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":9488:9627   */\n      swap1\n      pop\n        /* \"#utility.yul\":9215:9634   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9640:9819   */\n    tag_168:\n        /* \"#utility.yul\":9780:9811   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":9776:9777   */\n      0x00\n        /* \"#utility.yul\":9768:9774   */\n      dup3\n        /* \"#utility.yul\":9764:9778   */\n      add\n        /* \"#utility.yul\":9757:9812   */\n      mstore\n        /* \"#utility.yul\":9640:9819   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9825:10191   */\n    tag_169:\n        /* \"#utility.yul\":9967:9970   */\n      0x00\n        /* \"#utility.yul\":9988:10055   */\n      tag_273\n        /* \"#utility.yul\":10052:10054   */\n      0x1d\n        /* \"#utility.yul\":10047:10050   */\n      dup4\n        /* \"#utility.yul\":9988:10055   */\n      tag_141\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":9981:10055   */\n      swap2\n      pop\n        /* \"#utility.yul\":10064:10157   */\n      tag_274\n        /* \"#utility.yul\":10153:10156   */\n      dup3\n        /* \"#utility.yul\":10064:10157   */\n      tag_168\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":10182:10184   */\n      0x20\n        /* \"#utility.yul\":10177:10180   */\n      dup3\n        /* \"#utility.yul\":10173:10185   */\n      add\n        /* \"#utility.yul\":10166:10185   */\n      swap1\n      pop\n        /* \"#utility.yul\":9825:10191   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10197:10616   */\n    tag_121:\n        /* \"#utility.yul\":10363:10367   */\n      0x00\n        /* \"#utility.yul\":10401:10403   */\n      0x20\n        /* \"#utility.yul\":10390:10399   */\n      dup3\n        /* \"#utility.yul\":10386:10404   */\n      add\n        /* \"#utility.yul\":10378:10404   */\n      swap1\n      pop\n        /* \"#utility.yul\":10450:10459   */\n      dup2\n        /* \"#utility.yul\":10444:10448   */\n      dup2\n        /* \"#utility.yul\":10440:10460   */\n      sub\n        /* \"#utility.yul\":10436:10437   */\n      0x00\n        /* \"#utility.yul\":10425:10434   */\n      dup4\n        /* \"#utility.yul\":10421:10438   */\n      add\n        /* \"#utility.yul\":10414:10461   */\n      mstore\n        /* \"#utility.yul\":10478:10609   */\n      tag_276\n        /* \"#utility.yul\":10604:10608   */\n      dup2\n        /* \"#utility.yul\":10478:10609   */\n      tag_169\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":10470:10609   */\n      swap1\n      pop\n        /* \"#utility.yul\":10197:10616   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10622:10846   */\n    tag_170:\n        /* \"#utility.yul\":10762:10796   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":10758:10759   */\n      0x00\n        /* \"#utility.yul\":10750:10756   */\n      dup3\n        /* \"#utility.yul\":10746:10760   */\n      add\n        /* \"#utility.yul\":10739:10797   */\n      mstore\n        /* \"#utility.yul\":10831:10838   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10826:10828   */\n      0x20\n        /* \"#utility.yul\":10818:10824   */\n      dup3\n        /* \"#utility.yul\":10814:10829   */\n      add\n        /* \"#utility.yul\":10807:10839   */\n      mstore\n        /* \"#utility.yul\":10622:10846   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10852:11218   */\n    tag_171:\n        /* \"#utility.yul\":10994:10997   */\n      0x00\n        /* \"#utility.yul\":11015:11082   */\n      tag_279\n        /* \"#utility.yul\":11079:11081   */\n      0x25\n        /* \"#utility.yul\":11074:11077   */\n      dup4\n        /* \"#utility.yul\":11015:11082   */\n      tag_141\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":11008:11082   */\n      swap2\n      pop\n        /* \"#utility.yul\":11091:11184   */\n      tag_280\n        /* \"#utility.yul\":11180:11183   */\n      dup3\n        /* \"#utility.yul\":11091:11184   */\n      tag_170\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":11209:11211   */\n      0x40\n        /* \"#utility.yul\":11204:11207   */\n      dup3\n        /* \"#utility.yul\":11200:11212   */\n      add\n        /* \"#utility.yul\":11193:11212   */\n      swap1\n      pop\n        /* \"#utility.yul\":10852:11218   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11224:11643   */\n    tag_126:\n        /* \"#utility.yul\":11390:11394   */\n      0x00\n        /* \"#utility.yul\":11428:11430   */\n      0x20\n        /* \"#utility.yul\":11417:11426   */\n      dup3\n        /* \"#utility.yul\":11413:11431   */\n      add\n        /* \"#utility.yul\":11405:11431   */\n      swap1\n      pop\n        /* \"#utility.yul\":11477:11486   */\n      dup2\n        /* \"#utility.yul\":11471:11475   */\n      dup2\n        /* \"#utility.yul\":11467:11487   */\n      sub\n        /* \"#utility.yul\":11463:11464   */\n      0x00\n        /* \"#utility.yul\":11452:11461   */\n      dup4\n        /* \"#utility.yul\":11448:11465   */\n      add\n        /* \"#utility.yul\":11441:11488   */\n      mstore\n        /* \"#utility.yul\":11505:11636   */\n      tag_282\n        /* \"#utility.yul\":11631:11635   */\n      dup2\n        /* \"#utility.yul\":11505:11636   */\n      tag_171\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":11497:11636   */\n      swap1\n      pop\n        /* \"#utility.yul\":11224:11643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11649:11871   */\n    tag_172:\n        /* \"#utility.yul\":11789:11823   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":11785:11786   */\n      0x00\n        /* \"#utility.yul\":11777:11783   */\n      dup3\n        /* \"#utility.yul\":11773:11787   */\n      add\n        /* \"#utility.yul\":11766:11824   */\n      mstore\n        /* \"#utility.yul\":11858:11863   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11853:11855   */\n      0x20\n        /* \"#utility.yul\":11845:11851   */\n      dup3\n        /* \"#utility.yul\":11841:11856   */\n      add\n        /* \"#utility.yul\":11834:11864   */\n      mstore\n        /* \"#utility.yul\":11649:11871   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11877:12243   */\n    tag_173:\n        /* \"#utility.yul\":12019:12022   */\n      0x00\n        /* \"#utility.yul\":12040:12107   */\n      tag_285\n        /* \"#utility.yul\":12104:12106   */\n      0x23\n        /* \"#utility.yul\":12099:12102   */\n      dup4\n        /* \"#utility.yul\":12040:12107   */\n      tag_141\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":12033:12107   */\n      swap2\n      pop\n        /* \"#utility.yul\":12116:12209   */\n      tag_286\n        /* \"#utility.yul\":12205:12208   */\n      dup3\n        /* \"#utility.yul\":12116:12209   */\n      tag_172\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":12234:12236   */\n      0x40\n        /* \"#utility.yul\":12229:12232   */\n      dup3\n        /* \"#utility.yul\":12225:12237   */\n      add\n        /* \"#utility.yul\":12218:12237   */\n      swap1\n      pop\n        /* \"#utility.yul\":11877:12243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12249:12668   */\n    tag_129:\n        /* \"#utility.yul\":12415:12419   */\n      0x00\n        /* \"#utility.yul\":12453:12455   */\n      0x20\n        /* \"#utility.yul\":12442:12451   */\n      dup3\n        /* \"#utility.yul\":12438:12456   */\n      add\n        /* \"#utility.yul\":12430:12456   */\n      swap1\n      pop\n        /* \"#utility.yul\":12502:12511   */\n      dup2\n        /* \"#utility.yul\":12496:12500   */\n      dup2\n        /* \"#utility.yul\":12492:12512   */\n      sub\n        /* \"#utility.yul\":12488:12489   */\n      0x00\n        /* \"#utility.yul\":12477:12486   */\n      dup4\n        /* \"#utility.yul\":12473:12490   */\n      add\n        /* \"#utility.yul\":12466:12513   */\n      mstore\n        /* \"#utility.yul\":12530:12661   */\n      tag_288\n        /* \"#utility.yul\":12656:12660   */\n      dup2\n        /* \"#utility.yul\":12530:12661   */\n      tag_173\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":12522:12661   */\n      swap1\n      pop\n        /* \"#utility.yul\":12249:12668   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12674:12899   */\n    tag_174:\n        /* \"#utility.yul\":12814:12848   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":12810:12811   */\n      0x00\n        /* \"#utility.yul\":12802:12808   */\n      dup3\n        /* \"#utility.yul\":12798:12812   */\n      add\n        /* \"#utility.yul\":12791:12849   */\n      mstore\n        /* \"#utility.yul\":12883:12891   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12878:12880   */\n      0x20\n        /* \"#utility.yul\":12870:12876   */\n      dup3\n        /* \"#utility.yul\":12866:12881   */\n      add\n        /* \"#utility.yul\":12859:12892   */\n      mstore\n        /* \"#utility.yul\":12674:12899   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12905:13271   */\n    tag_175:\n        /* \"#utility.yul\":13047:13050   */\n      0x00\n        /* \"#utility.yul\":13068:13135   */\n      tag_291\n        /* \"#utility.yul\":13132:13134   */\n      0x26\n        /* \"#utility.yul\":13127:13130   */\n      dup4\n        /* \"#utility.yul\":13068:13135   */\n      tag_141\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":13061:13135   */\n      swap2\n      pop\n        /* \"#utility.yul\":13144:13237   */\n      tag_292\n        /* \"#utility.yul\":13233:13236   */\n      dup3\n        /* \"#utility.yul\":13144:13237   */\n      tag_174\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":13262:13264   */\n      0x40\n        /* \"#utility.yul\":13257:13260   */\n      dup3\n        /* \"#utility.yul\":13253:13265   */\n      add\n        /* \"#utility.yul\":13246:13265   */\n      swap1\n      pop\n        /* \"#utility.yul\":12905:13271   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13277:13696   */\n    tag_134:\n        /* \"#utility.yul\":13443:13447   */\n      0x00\n        /* \"#utility.yul\":13481:13483   */\n      0x20\n        /* \"#utility.yul\":13470:13479   */\n      dup3\n        /* \"#utility.yul\":13466:13484   */\n      add\n        /* \"#utility.yul\":13458:13484   */\n      swap1\n      pop\n        /* \"#utility.yul\":13530:13539   */\n      dup2\n        /* \"#utility.yul\":13524:13528   */\n      dup2\n        /* \"#utility.yul\":13520:13540   */\n      sub\n        /* \"#utility.yul\":13516:13517   */\n      0x00\n        /* \"#utility.yul\":13505:13514   */\n      dup4\n        /* \"#utility.yul\":13501:13518   */\n      add\n        /* \"#utility.yul\":13494:13541   */\n      mstore\n        /* \"#utility.yul\":13558:13689   */\n      tag_294\n        /* \"#utility.yul\":13684:13688   */\n      dup2\n        /* \"#utility.yul\":13558:13689   */\n      tag_175\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":13550:13689   */\n      swap1\n      pop\n        /* \"#utility.yul\":13277:13696   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e92046f2770e7ff9340495085a05a1a48dff6b719da36263910aa1ac8cca954964736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_654": {
									"entryPoint": null,
									"id": 654,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 363,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 98,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1034,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 873,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 321,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 628,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 139,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 115,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 119,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 111,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 107,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 770,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 921,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 964,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8574:14",
										"nodeType": "YulBlock",
										"src": "0:8574:14",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:14",
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nativeSrc": "57:19:14",
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:14",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nativeSrc": "67:9:14",
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:14",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nativeSrc": "177:28:14",
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:14",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:14",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nativeSrc": "187:12:14",
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nativeSrc": "187:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nativeSrc": "300:28:14",
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:14",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:14",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nativeSrc": "310:12:14",
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nativeSrc": "310:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nativeSrc": "423:28:14",
													"nodeType": "YulBlock",
													"src": "423:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:14",
																		"nodeType": "YulLiteral",
																		"src": "440:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:14",
																		"nodeType": "YulLiteral",
																		"src": "443:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:14"
																},
																"nativeSrc": "433:12:14",
																"nodeType": "YulFunctionCall",
																"src": "433:12:14"
															},
															"nativeSrc": "433:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:14"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:14"
											},
											{
												"body": {
													"nativeSrc": "546:28:14",
													"nodeType": "YulBlock",
													"src": "546:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:14",
																		"nodeType": "YulLiteral",
																		"src": "563:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:14",
																		"nodeType": "YulLiteral",
																		"src": "566:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:14"
																},
																"nativeSrc": "556:12:14",
																"nodeType": "YulFunctionCall",
																"src": "556:12:14"
															},
															"nativeSrc": "556:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:14"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:14"
											},
											{
												"body": {
													"nativeSrc": "628:54:14",
													"nodeType": "YulBlock",
													"src": "628:54:14",
													"statements": [
														{
															"nativeSrc": "638:38:14",
															"nodeType": "YulAssignment",
															"src": "638:38:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:14",
																				"nodeType": "YulLiteral",
																				"src": "663:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:14"
																		},
																		"nativeSrc": "652:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:14",
																				"nodeType": "YulLiteral",
																				"src": "672:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:14"
																		},
																		"nativeSrc": "668:7:14",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:14"
																},
																"nativeSrc": "648:28:14",
																"nodeType": "YulFunctionCall",
																"src": "648:28:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:14"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:14",
														"nodeType": "YulTypedName",
														"src": "611:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:14",
														"nodeType": "YulTypedName",
														"src": "621:6:14",
														"type": ""
													}
												],
												"src": "580:102:14"
											},
											{
												"body": {
													"nativeSrc": "716:152:14",
													"nodeType": "YulBlock",
													"src": "716:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:14",
																		"nodeType": "YulLiteral",
																		"src": "733:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:14",
																		"nodeType": "YulLiteral",
																		"src": "736:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:14"
																},
																"nativeSrc": "726:88:14",
																"nodeType": "YulFunctionCall",
																"src": "726:88:14"
															},
															"nativeSrc": "726:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:14",
																		"nodeType": "YulLiteral",
																		"src": "830:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:14",
																		"nodeType": "YulLiteral",
																		"src": "833:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:14"
																},
																"nativeSrc": "823:15:14",
																"nodeType": "YulFunctionCall",
																"src": "823:15:14"
															},
															"nativeSrc": "823:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:14",
																		"nodeType": "YulLiteral",
																		"src": "854:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:14",
																		"nodeType": "YulLiteral",
																		"src": "857:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:14"
																},
																"nativeSrc": "847:15:14",
																"nodeType": "YulFunctionCall",
																"src": "847:15:14"
															},
															"nativeSrc": "847:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:14"
											},
											{
												"body": {
													"nativeSrc": "917:238:14",
													"nodeType": "YulBlock",
													"src": "917:238:14",
													"statements": [
														{
															"nativeSrc": "927:58:14",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:14",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:14"
																		},
																		"nativeSrc": "957:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:14"
																},
																"nativeSrc": "945:40:14",
																"nodeType": "YulFunctionCall",
																"src": "945:40:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:14",
																	"nodeType": "YulTypedName",
																	"src": "931:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:14",
																"nodeType": "YulBlock",
																"src": "1096:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:14"
																			},
																			"nativeSrc": "1098:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:14"
																		},
																		"nativeSrc": "1098:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:14",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:14"
																		},
																		"nativeSrc": "1036:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:14"
																		},
																		"nativeSrc": "1072:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:14"
																},
																"nativeSrc": "1033:62:14",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:14"
															},
															"nativeSrc": "1030:88:14",
															"nodeType": "YulIf",
															"src": "1030:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:14"
																},
																"nativeSrc": "1127:22:14",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:14"
															},
															"nativeSrc": "1127:22:14",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:14"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:14",
														"nodeType": "YulTypedName",
														"src": "903:6:14",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:14",
														"nodeType": "YulTypedName",
														"src": "911:4:14",
														"type": ""
													}
												],
												"src": "874:281:14"
											},
											{
												"body": {
													"nativeSrc": "1202:88:14",
													"nodeType": "YulBlock",
													"src": "1202:88:14",
													"statements": [
														{
															"nativeSrc": "1212:30:14",
															"nodeType": "YulAssignment",
															"src": "1212:30:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:14"
																},
																"nativeSrc": "1222:20:14",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:14"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:14"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:14",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:14"
																},
																"nativeSrc": "1251:33:14",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:14"
															},
															"nativeSrc": "1251:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:14"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:14",
														"nodeType": "YulTypedName",
														"src": "1186:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:14",
														"nodeType": "YulTypedName",
														"src": "1195:6:14",
														"type": ""
													}
												],
												"src": "1161:129:14"
											},
											{
												"body": {
													"nativeSrc": "1363:241:14",
													"nodeType": "YulBlock",
													"src": "1363:241:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:14",
																"nodeType": "YulBlock",
																"src": "1468:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:14"
																			},
																			"nativeSrc": "1470:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:14"
																		},
																		"nativeSrc": "1470:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:14",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:14"
																},
																"nativeSrc": "1437:30:14",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:14"
															},
															"nativeSrc": "1434:56:14",
															"nodeType": "YulIf",
															"src": "1434:56:14"
														},
														{
															"nativeSrc": "1500:37:14",
															"nodeType": "YulAssignment",
															"src": "1500:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:14"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:14",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:14"
																},
																"nativeSrc": "1508:29:14",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:14"
																}
															]
														},
														{
															"nativeSrc": "1574:23:14",
															"nodeType": "YulAssignment",
															"src": "1574:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:14",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:14"
																},
																"nativeSrc": "1582:15:14",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:14",
														"nodeType": "YulTypedName",
														"src": "1347:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:14",
														"nodeType": "YulTypedName",
														"src": "1358:4:14",
														"type": ""
													}
												],
												"src": "1296:308:14"
											},
											{
												"body": {
													"nativeSrc": "1672:184:14",
													"nodeType": "YulBlock",
													"src": "1672:184:14",
													"statements": [
														{
															"nativeSrc": "1682:10:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:14",
															"value": {
																"kind": "number",
																"nativeSrc": "1691:1:14",
																"nodeType": "YulLiteral",
																"src": "1691:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1686:1:14",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1751:63:14",
																"nodeType": "YulBlock",
																"src": "1751:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1776:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:14"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1781:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1772:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:14"
																					},
																					"nativeSrc": "1772:11:14",
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1795:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:14"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1800:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1791:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:14"
																							},
																							"nativeSrc": "1791:11:14",
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1785:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:14"
																					},
																					"nativeSrc": "1785:18:14",
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1765:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:14"
																			},
																			"nativeSrc": "1765:39:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:14"
																		},
																		"nativeSrc": "1765:39:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1712:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1715:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1709:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:14"
																},
																"nativeSrc": "1709:13:14",
																"nodeType": "YulFunctionCall",
																"src": "1709:13:14"
															},
															"nativeSrc": "1701:113:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1723:19:14",
																"nodeType": "YulBlock",
																"src": "1723:19:14",
																"statements": [
																	{
																		"nativeSrc": "1725:15:14",
																		"nodeType": "YulAssignment",
																		"src": "1725:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1734:1:14",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1737:2:14",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1730:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:14"
																			},
																			"nativeSrc": "1730:10:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1725:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1705:3:14",
																"nodeType": "YulBlock",
																"src": "1705:3:14",
																"statements": []
															},
															"src": "1701:113:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1834:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1839:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1830:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:14"
																		},
																		"nativeSrc": "1830:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1848:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1823:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:14"
																},
																"nativeSrc": "1823:27:14",
																"nodeType": "YulFunctionCall",
																"src": "1823:27:14"
															},
															"nativeSrc": "1823:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:14"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:246:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:14",
														"nodeType": "YulTypedName",
														"src": "1654:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:14",
														"nodeType": "YulTypedName",
														"src": "1659:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:14",
														"nodeType": "YulTypedName",
														"src": "1664:6:14",
														"type": ""
													}
												],
												"src": "1610:246:14"
											},
											{
												"body": {
													"nativeSrc": "1957:339:14",
													"nodeType": "YulBlock",
													"src": "1957:339:14",
													"statements": [
														{
															"nativeSrc": "1967:75:14",
															"nodeType": "YulAssignment",
															"src": "1967:75:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2034:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1992:41:14",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:14"
																		},
																		"nativeSrc": "1992:49:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1976:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:14"
																},
																"nativeSrc": "1976:66:14",
																"nodeType": "YulFunctionCall",
																"src": "1976:66:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1967:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2058:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2065:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2051:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:14"
																},
																"nativeSrc": "2051:21:14",
																"nodeType": "YulFunctionCall",
																"src": "2051:21:14"
															},
															"nativeSrc": "2051:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:14"
														},
														{
															"nativeSrc": "2081:27:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2096:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2103:4:14",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2092:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:14"
																},
																"nativeSrc": "2092:16:14",
																"nodeType": "YulFunctionCall",
																"src": "2092:16:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2085:3:14",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2146:83:14",
																"nodeType": "YulBlock",
																"src": "2146:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2148:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:14"
																			},
																			"nativeSrc": "2148:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:14"
																		},
																		"nativeSrc": "2148:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2127:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2132:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2123:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:14"
																		},
																		"nativeSrc": "2123:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2141:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2120:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:14"
																},
																"nativeSrc": "2120:25:14",
																"nodeType": "YulFunctionCall",
																"src": "2120:25:14"
															},
															"nativeSrc": "2117:112:14",
															"nodeType": "YulIf",
															"src": "2117:112:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2273:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:14"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2278:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2283:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2238:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:14"
																},
																"nativeSrc": "2238:52:14",
																"nodeType": "YulFunctionCall",
																"src": "2238:52:14"
															},
															"nativeSrc": "2238:52:14",
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1862:434:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1930:3:14",
														"nodeType": "YulTypedName",
														"src": "1930:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1935:6:14",
														"nodeType": "YulTypedName",
														"src": "1935:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1943:3:14",
														"nodeType": "YulTypedName",
														"src": "1943:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1951:5:14",
														"nodeType": "YulTypedName",
														"src": "1951:5:14",
														"type": ""
													}
												],
												"src": "1862:434:14"
											},
											{
												"body": {
													"nativeSrc": "2389:282:14",
													"nodeType": "YulBlock",
													"src": "2389:282:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2438:83:14",
																"nodeType": "YulBlock",
																"src": "2438:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2440:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:14"
																			},
																			"nativeSrc": "2440:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:14"
																		},
																		"nativeSrc": "2440:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2417:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2425:4:14",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2413:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:14"
																				},
																				"nativeSrc": "2413:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2432:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2409:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:14"
																		},
																		"nativeSrc": "2409:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2402:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:14"
																},
																"nativeSrc": "2402:35:14",
																"nodeType": "YulFunctionCall",
																"src": "2402:35:14"
															},
															"nativeSrc": "2399:122:14",
															"nodeType": "YulIf",
															"src": "2399:122:14"
														},
														{
															"nativeSrc": "2530:27:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2550:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2544:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:14"
																},
																"nativeSrc": "2544:13:14",
																"nodeType": "YulFunctionCall",
																"src": "2544:13:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2534:6:14",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2566:99:14",
															"nodeType": "YulAssignment",
															"src": "2566:99:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2638:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2646:4:14",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2634:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:14"
																		},
																		"nativeSrc": "2634:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2653:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2661:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2575:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:14"
																},
																"nativeSrc": "2575:90:14",
																"nodeType": "YulFunctionCall",
																"src": "2575:90:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2566:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2316:355:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2367:6:14",
														"nodeType": "YulTypedName",
														"src": "2367:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2375:3:14",
														"nodeType": "YulTypedName",
														"src": "2375:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2383:5:14",
														"nodeType": "YulTypedName",
														"src": "2383:5:14",
														"type": ""
													}
												],
												"src": "2316:355:14"
											},
											{
												"body": {
													"nativeSrc": "2791:739:14",
													"nodeType": "YulBlock",
													"src": "2791:739:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2837:83:14",
																"nodeType": "YulBlock",
																"src": "2837:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2839:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "2839:77:14"
																			},
																			"nativeSrc": "2839:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2839:79:14"
																		},
																		"nativeSrc": "2839:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2839:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2812:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2812:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2821:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2821:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2808:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:14"
																		},
																		"nativeSrc": "2808:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2808:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2833:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2804:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:14"
																},
																"nativeSrc": "2804:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2804:32:14"
															},
															"nativeSrc": "2801:119:14",
															"nodeType": "YulIf",
															"src": "2801:119:14"
														},
														{
															"nativeSrc": "2930:291:14",
															"nodeType": "YulBlock",
															"src": "2930:291:14",
															"statements": [
																{
																	"nativeSrc": "2945:38:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2945:38:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2969:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "2969:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2980:1:14",
																						"nodeType": "YulLiteral",
																						"src": "2980:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2965:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2965:3:14"
																				},
																				"nativeSrc": "2965:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2965:17:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2959:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "2959:5:14"
																		},
																		"nativeSrc": "2959:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2959:24:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2949:6:14",
																			"nodeType": "YulTypedName",
																			"src": "2949:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3030:83:14",
																		"nodeType": "YulBlock",
																		"src": "3030:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3032:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "3032:77:14"
																					},
																					"nativeSrc": "3032:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "3032:79:14"
																				},
																				"nativeSrc": "3032:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "3032:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3002:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3010:18:14",
																				"nodeType": "YulLiteral",
																				"src": "3010:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2999:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:14"
																		},
																		"nativeSrc": "2999:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2999:30:14"
																	},
																	"nativeSrc": "2996:117:14",
																	"nodeType": "YulIf",
																	"src": "2996:117:14"
																},
																{
																	"nativeSrc": "3127:84:14",
																	"nodeType": "YulAssignment",
																	"src": "3127:84:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3183:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "3183:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3194:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "3194:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3179:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3179:3:14"
																				},
																				"nativeSrc": "3179:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3179:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3203:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3203:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3137:41:14",
																			"nodeType": "YulIdentifier",
																			"src": "3137:41:14"
																		},
																		"nativeSrc": "3137:74:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3137:74:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3127:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "3127:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3231:292:14",
															"nodeType": "YulBlock",
															"src": "3231:292:14",
															"statements": [
																{
																	"nativeSrc": "3246:39:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3246:39:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3270:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "3270:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3281:2:14",
																						"nodeType": "YulLiteral",
																						"src": "3281:2:14",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3266:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:14"
																				},
																				"nativeSrc": "3266:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3266:18:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3260:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:14"
																		},
																		"nativeSrc": "3260:25:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3260:25:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3250:6:14",
																			"nodeType": "YulTypedName",
																			"src": "3250:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3332:83:14",
																		"nodeType": "YulBlock",
																		"src": "3332:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3334:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "3334:77:14"
																					},
																					"nativeSrc": "3334:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "3334:79:14"
																				},
																				"nativeSrc": "3334:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "3334:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3304:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3304:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3312:18:14",
																				"nodeType": "YulLiteral",
																				"src": "3312:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3301:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "3301:2:14"
																		},
																		"nativeSrc": "3301:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3301:30:14"
																	},
																	"nativeSrc": "3298:117:14",
																	"nodeType": "YulIf",
																	"src": "3298:117:14"
																},
																{
																	"nativeSrc": "3429:84:14",
																	"nodeType": "YulAssignment",
																	"src": "3429:84:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3485:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "3485:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3496:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "3496:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3481:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:14"
																				},
																				"nativeSrc": "3481:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3481:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3505:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3505:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3439:41:14",
																			"nodeType": "YulIdentifier",
																			"src": "3439:41:14"
																		},
																		"nativeSrc": "3439:74:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3439:74:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3429:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "3429:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "2677:853:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2753:9:14",
														"nodeType": "YulTypedName",
														"src": "2753:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2764:7:14",
														"nodeType": "YulTypedName",
														"src": "2764:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2776:6:14",
														"nodeType": "YulTypedName",
														"src": "2776:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2784:6:14",
														"nodeType": "YulTypedName",
														"src": "2784:6:14",
														"type": ""
													}
												],
												"src": "2677:853:14"
											},
											{
												"body": {
													"nativeSrc": "3595:40:14",
													"nodeType": "YulBlock",
													"src": "3595:40:14",
													"statements": [
														{
															"nativeSrc": "3606:22:14",
															"nodeType": "YulAssignment",
															"src": "3606:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3622:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "3622:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3616:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "3616:5:14"
																},
																"nativeSrc": "3616:12:14",
																"nodeType": "YulFunctionCall",
																"src": "3616:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3606:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3536:99:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3578:5:14",
														"nodeType": "YulTypedName",
														"src": "3578:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3588:6:14",
														"nodeType": "YulTypedName",
														"src": "3588:6:14",
														"type": ""
													}
												],
												"src": "3536:99:14"
											},
											{
												"body": {
													"nativeSrc": "3669:152:14",
													"nodeType": "YulBlock",
													"src": "3669:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3686:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3686:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3689:77:14",
																		"nodeType": "YulLiteral",
																		"src": "3689:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3679:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:14"
																},
																"nativeSrc": "3679:88:14",
																"nodeType": "YulFunctionCall",
																"src": "3679:88:14"
															},
															"nativeSrc": "3679:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "3679:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3783:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3786:4:14",
																		"nodeType": "YulLiteral",
																		"src": "3786:4:14",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3776:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:14"
																},
																"nativeSrc": "3776:15:14",
																"nodeType": "YulFunctionCall",
																"src": "3776:15:14"
															},
															"nativeSrc": "3776:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "3776:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3807:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3807:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3810:4:14",
																		"nodeType": "YulLiteral",
																		"src": "3810:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3800:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:14"
																},
																"nativeSrc": "3800:15:14",
																"nodeType": "YulFunctionCall",
																"src": "3800:15:14"
															},
															"nativeSrc": "3800:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "3800:15:14"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3641:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "3641:180:14"
											},
											{
												"body": {
													"nativeSrc": "3878:269:14",
													"nodeType": "YulBlock",
													"src": "3878:269:14",
													"statements": [
														{
															"nativeSrc": "3888:22:14",
															"nodeType": "YulAssignment",
															"src": "3888:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3902:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "3902:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3908:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3898:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:14"
																},
																"nativeSrc": "3898:12:14",
																"nodeType": "YulFunctionCall",
																"src": "3898:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3888:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:14"
																}
															]
														},
														{
															"nativeSrc": "3919:38:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3919:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3949:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "3949:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3955:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3955:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3945:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:14"
																},
																"nativeSrc": "3945:12:14",
																"nodeType": "YulFunctionCall",
																"src": "3945:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3923:18:14",
																	"nodeType": "YulTypedName",
																	"src": "3923:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3996:51:14",
																"nodeType": "YulBlock",
																"src": "3996:51:14",
																"statements": [
																	{
																		"nativeSrc": "4010:27:14",
																		"nodeType": "YulAssignment",
																		"src": "4010:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4024:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "4024:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4032:4:14",
																					"nodeType": "YulLiteral",
																					"src": "4032:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4020:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "4020:3:14"
																			},
																			"nativeSrc": "4020:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4020:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4010:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3976:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "3976:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3969:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3969:6:14"
																},
																"nativeSrc": "3969:26:14",
																"nodeType": "YulFunctionCall",
																"src": "3969:26:14"
															},
															"nativeSrc": "3966:81:14",
															"nodeType": "YulIf",
															"src": "3966:81:14"
														},
														{
															"body": {
																"nativeSrc": "4099:42:14",
																"nodeType": "YulBlock",
																"src": "4099:42:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4113:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "4113:16:14"
																			},
																			"nativeSrc": "4113:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4113:18:14"
																		},
																		"nativeSrc": "4113:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4063:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "4063:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4086:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4086:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4094:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4083:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "4083:2:14"
																		},
																		"nativeSrc": "4083:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4083:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4060:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "4060:2:14"
																},
																"nativeSrc": "4060:38:14",
																"nodeType": "YulFunctionCall",
																"src": "4060:38:14"
															},
															"nativeSrc": "4057:84:14",
															"nodeType": "YulIf",
															"src": "4057:84:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3827:320:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3862:4:14",
														"nodeType": "YulTypedName",
														"src": "3862:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3871:6:14",
														"nodeType": "YulTypedName",
														"src": "3871:6:14",
														"type": ""
													}
												],
												"src": "3827:320:14"
											},
											{
												"body": {
													"nativeSrc": "4207:87:14",
													"nodeType": "YulBlock",
													"src": "4207:87:14",
													"statements": [
														{
															"nativeSrc": "4217:11:14",
															"nodeType": "YulAssignment",
															"src": "4217:11:14",
															"value": {
																"name": "ptr",
																"nativeSrc": "4225:3:14",
																"nodeType": "YulIdentifier",
																"src": "4225:3:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4217:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4217:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4245:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4245:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4248:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4238:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:14"
																},
																"nativeSrc": "4238:14:14",
																"nodeType": "YulFunctionCall",
																"src": "4238:14:14"
															},
															"nativeSrc": "4238:14:14",
															"nodeType": "YulExpressionStatement",
															"src": "4238:14:14"
														},
														{
															"nativeSrc": "4261:26:14",
															"nodeType": "YulAssignment",
															"src": "4261:26:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4279:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4279:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4282:4:14",
																		"nodeType": "YulLiteral",
																		"src": "4282:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4269:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "4269:9:14"
																},
																"nativeSrc": "4269:18:14",
																"nodeType": "YulFunctionCall",
																"src": "4269:18:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4261:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4261:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4153:141:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4194:3:14",
														"nodeType": "YulTypedName",
														"src": "4194:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4202:4:14",
														"nodeType": "YulTypedName",
														"src": "4202:4:14",
														"type": ""
													}
												],
												"src": "4153:141:14"
											},
											{
												"body": {
													"nativeSrc": "4344:49:14",
													"nodeType": "YulBlock",
													"src": "4344:49:14",
													"statements": [
														{
															"nativeSrc": "4354:33:14",
															"nodeType": "YulAssignment",
															"src": "4354:33:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4372:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "4372:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4379:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4379:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4368:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:14"
																		},
																		"nativeSrc": "4368:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4368:14:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4384:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4364:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4364:3:14"
																},
																"nativeSrc": "4364:23:14",
																"nodeType": "YulFunctionCall",
																"src": "4364:23:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4354:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:14"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4300:93:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4327:5:14",
														"nodeType": "YulTypedName",
														"src": "4327:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4337:6:14",
														"nodeType": "YulTypedName",
														"src": "4337:6:14",
														"type": ""
													}
												],
												"src": "4300:93:14"
											},
											{
												"body": {
													"nativeSrc": "4452:54:14",
													"nodeType": "YulBlock",
													"src": "4452:54:14",
													"statements": [
														{
															"nativeSrc": "4462:37:14",
															"nodeType": "YulAssignment",
															"src": "4462:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4487:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "4487:4:14"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4493:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:14"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4483:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:14"
																},
																"nativeSrc": "4483:16:14",
																"nodeType": "YulFunctionCall",
																"src": "4483:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4462:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "4462:8:14"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4399:107:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4427:4:14",
														"nodeType": "YulTypedName",
														"src": "4427:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4433:5:14",
														"nodeType": "YulTypedName",
														"src": "4433:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4443:8:14",
														"nodeType": "YulTypedName",
														"src": "4443:8:14",
														"type": ""
													}
												],
												"src": "4399:107:14"
											},
											{
												"body": {
													"nativeSrc": "4588:317:14",
													"nodeType": "YulBlock",
													"src": "4588:317:14",
													"statements": [
														{
															"nativeSrc": "4598:35:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4598:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4619:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "4619:10:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4631:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:14",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4615:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:14"
																},
																"nativeSrc": "4615:18:14",
																"nodeType": "YulFunctionCall",
																"src": "4615:18:14"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4602:9:14",
																	"nodeType": "YulTypedName",
																	"src": "4602:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4642:109:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4642:109:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4673:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4684:66:14",
																		"nodeType": "YulLiteral",
																		"src": "4684:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4654:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "4654:18:14"
																},
																"nativeSrc": "4654:97:14",
																"nodeType": "YulFunctionCall",
																"src": "4654:97:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4646:4:14",
																	"nodeType": "YulTypedName",
																	"src": "4646:4:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4760:51:14",
															"nodeType": "YulAssignment",
															"src": "4760:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4791:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:14"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "4802:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "4802:8:14"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4772:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "4772:18:14"
																},
																"nativeSrc": "4772:39:14",
																"nodeType": "YulFunctionCall",
																"src": "4772:39:14"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "4760:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "4760:8:14"
																}
															]
														},
														{
															"nativeSrc": "4820:30:14",
															"nodeType": "YulAssignment",
															"src": "4820:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4833:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "4833:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "4844:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "4844:4:14"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4840:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:14"
																		},
																		"nativeSrc": "4840:9:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4840:9:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4829:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:14"
																},
																"nativeSrc": "4829:21:14",
																"nodeType": "YulFunctionCall",
																"src": "4829:21:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4820:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "4820:5:14"
																}
															]
														},
														{
															"nativeSrc": "4859:40:14",
															"nodeType": "YulAssignment",
															"src": "4859:40:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4872:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "4872:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "4883:8:14",
																				"nodeType": "YulIdentifier",
																				"src": "4883:8:14"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "4893:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "4893:4:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4879:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:14"
																		},
																		"nativeSrc": "4879:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4879:19:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4869:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:14"
																},
																"nativeSrc": "4869:30:14",
																"nodeType": "YulFunctionCall",
																"src": "4869:30:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4859:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:14"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4512:393:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4549:5:14",
														"nodeType": "YulTypedName",
														"src": "4549:5:14",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4556:10:14",
														"nodeType": "YulTypedName",
														"src": "4556:10:14",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4568:8:14",
														"nodeType": "YulTypedName",
														"src": "4568:8:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4581:6:14",
														"nodeType": "YulTypedName",
														"src": "4581:6:14",
														"type": ""
													}
												],
												"src": "4512:393:14"
											},
											{
												"body": {
													"nativeSrc": "4956:32:14",
													"nodeType": "YulBlock",
													"src": "4956:32:14",
													"statements": [
														{
															"nativeSrc": "4966:16:14",
															"nodeType": "YulAssignment",
															"src": "4966:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "4977:5:14",
																"nodeType": "YulIdentifier",
																"src": "4977:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4966:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "4966:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4911:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4938:5:14",
														"nodeType": "YulTypedName",
														"src": "4938:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4948:7:14",
														"nodeType": "YulTypedName",
														"src": "4948:7:14",
														"type": ""
													}
												],
												"src": "4911:77:14"
											},
											{
												"body": {
													"nativeSrc": "5026:28:14",
													"nodeType": "YulBlock",
													"src": "5026:28:14",
													"statements": [
														{
															"nativeSrc": "5036:12:14",
															"nodeType": "YulAssignment",
															"src": "5036:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "5043:5:14",
																"nodeType": "YulIdentifier",
																"src": "5043:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5036:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:14"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4994:60:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5012:5:14",
														"nodeType": "YulTypedName",
														"src": "5012:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5022:3:14",
														"nodeType": "YulTypedName",
														"src": "5022:3:14",
														"type": ""
													}
												],
												"src": "4994:60:14"
											},
											{
												"body": {
													"nativeSrc": "5120:82:14",
													"nodeType": "YulBlock",
													"src": "5120:82:14",
													"statements": [
														{
															"nativeSrc": "5130:66:14",
															"nodeType": "YulAssignment",
															"src": "5130:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5188:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "5188:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5170:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "5170:17:14"
																				},
																				"nativeSrc": "5170:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5170:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5161:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "5161:8:14"
																		},
																		"nativeSrc": "5161:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5161:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5143:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "5143:17:14"
																},
																"nativeSrc": "5143:53:14",
																"nodeType": "YulFunctionCall",
																"src": "5143:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5130:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "5130:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5060:142:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5100:5:14",
														"nodeType": "YulTypedName",
														"src": "5100:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5110:9:14",
														"nodeType": "YulTypedName",
														"src": "5110:9:14",
														"type": ""
													}
												],
												"src": "5060:142:14"
											},
											{
												"body": {
													"nativeSrc": "5255:28:14",
													"nodeType": "YulBlock",
													"src": "5255:28:14",
													"statements": [
														{
															"nativeSrc": "5265:12:14",
															"nodeType": "YulAssignment",
															"src": "5265:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "5272:5:14",
																"nodeType": "YulIdentifier",
																"src": "5272:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5265:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5265:3:14"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5208:75:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5241:5:14",
														"nodeType": "YulTypedName",
														"src": "5241:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5251:3:14",
														"nodeType": "YulTypedName",
														"src": "5251:3:14",
														"type": ""
													}
												],
												"src": "5208:75:14"
											},
											{
												"body": {
													"nativeSrc": "5365:193:14",
													"nodeType": "YulBlock",
													"src": "5365:193:14",
													"statements": [
														{
															"nativeSrc": "5375:63:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5375:63:14",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5430:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "5430:7:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5399:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "5399:30:14"
																},
																"nativeSrc": "5399:39:14",
																"nodeType": "YulFunctionCall",
																"src": "5399:39:14"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5379:16:14",
																	"nodeType": "YulTypedName",
																	"src": "5379:16:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5454:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "5454:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5494:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "5494:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5488:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "5488:5:14"
																				},
																				"nativeSrc": "5488:11:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5488:11:14"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5501:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5501:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5533:16:14",
																						"nodeType": "YulIdentifier",
																						"src": "5533:16:14"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5509:23:14",
																					"nodeType": "YulIdentifier",
																					"src": "5509:23:14"
																				},
																				"nativeSrc": "5509:41:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5509:41:14"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5460:27:14",
																			"nodeType": "YulIdentifier",
																			"src": "5460:27:14"
																		},
																		"nativeSrc": "5460:91:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5460:91:14"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5447:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5447:6:14"
																},
																"nativeSrc": "5447:105:14",
																"nodeType": "YulFunctionCall",
																"src": "5447:105:14"
															},
															"nativeSrc": "5447:105:14",
															"nodeType": "YulExpressionStatement",
															"src": "5447:105:14"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5289:269:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5342:4:14",
														"nodeType": "YulTypedName",
														"src": "5342:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5348:6:14",
														"nodeType": "YulTypedName",
														"src": "5348:6:14",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5356:7:14",
														"nodeType": "YulTypedName",
														"src": "5356:7:14",
														"type": ""
													}
												],
												"src": "5289:269:14"
											},
											{
												"body": {
													"nativeSrc": "5613:24:14",
													"nodeType": "YulBlock",
													"src": "5613:24:14",
													"statements": [
														{
															"nativeSrc": "5623:8:14",
															"nodeType": "YulAssignment",
															"src": "5623:8:14",
															"value": {
																"kind": "number",
																"nativeSrc": "5630:1:14",
																"nodeType": "YulLiteral",
																"src": "5630:1:14",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5623:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5623:3:14"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5564:73:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5609:3:14",
														"nodeType": "YulTypedName",
														"src": "5609:3:14",
														"type": ""
													}
												],
												"src": "5564:73:14"
											},
											{
												"body": {
													"nativeSrc": "5696:136:14",
													"nodeType": "YulBlock",
													"src": "5696:136:14",
													"statements": [
														{
															"nativeSrc": "5706:46:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5706:46:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "5720:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "5720:30:14"
																},
																"nativeSrc": "5720:32:14",
																"nodeType": "YulFunctionCall",
																"src": "5720:32:14"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "5710:6:14",
																	"nodeType": "YulTypedName",
																	"src": "5710:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5805:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "5805:4:14"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5811:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5811:6:14"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "5819:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5819:6:14"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "5761:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "5761:43:14"
																},
																"nativeSrc": "5761:65:14",
																"nodeType": "YulFunctionCall",
																"src": "5761:65:14"
															},
															"nativeSrc": "5761:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "5761:65:14"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5643:189:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5682:4:14",
														"nodeType": "YulTypedName",
														"src": "5682:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5688:6:14",
														"nodeType": "YulTypedName",
														"src": "5688:6:14",
														"type": ""
													}
												],
												"src": "5643:189:14"
											},
											{
												"body": {
													"nativeSrc": "5888:136:14",
													"nodeType": "YulBlock",
													"src": "5888:136:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "5955:63:14",
																"nodeType": "YulBlock",
																"src": "5955:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5999:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "5999:5:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6006:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6006:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "5969:29:14",
																				"nodeType": "YulIdentifier",
																				"src": "5969:29:14"
																			},
																			"nativeSrc": "5969:39:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5969:39:14"
																		},
																		"nativeSrc": "5969:39:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5969:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "5908:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5908:5:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5915:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "5915:3:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5905:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "5905:2:14"
																},
																"nativeSrc": "5905:14:14",
																"nodeType": "YulFunctionCall",
																"src": "5905:14:14"
															},
															"nativeSrc": "5898:120:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5920:26:14",
																"nodeType": "YulBlock",
																"src": "5920:26:14",
																"statements": [
																	{
																		"nativeSrc": "5922:22:14",
																		"nodeType": "YulAssignment",
																		"src": "5922:22:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5935:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "5935:5:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5942:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5942:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5931:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "5931:3:14"
																			},
																			"nativeSrc": "5931:13:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5931:13:14"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "5922:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5922:5:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5902:2:14",
																"nodeType": "YulBlock",
																"src": "5902:2:14",
																"statements": []
															},
															"src": "5898:120:14"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "5838:186:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "5876:5:14",
														"nodeType": "YulTypedName",
														"src": "5876:5:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5883:3:14",
														"nodeType": "YulTypedName",
														"src": "5883:3:14",
														"type": ""
													}
												],
												"src": "5838:186:14"
											},
											{
												"body": {
													"nativeSrc": "6109:464:14",
													"nodeType": "YulBlock",
													"src": "6109:464:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "6135:431:14",
																"nodeType": "YulBlock",
																"src": "6135:431:14",
																"statements": [
																	{
																		"nativeSrc": "6149:54:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6149:54:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6197:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "6197:5:14"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6165:31:14",
																				"nodeType": "YulIdentifier",
																				"src": "6165:31:14"
																			},
																			"nativeSrc": "6165:38:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6165:38:14"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6153:8:14",
																				"nodeType": "YulTypedName",
																				"src": "6153:8:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6216:63:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6216:63:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6239:8:14",
																					"nodeType": "YulIdentifier",
																					"src": "6239:8:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6267:10:14",
																							"nodeType": "YulIdentifier",
																							"src": "6267:10:14"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6249:17:14",
																						"nodeType": "YulIdentifier",
																						"src": "6249:17:14"
																					},
																					"nativeSrc": "6249:29:14",
																					"nodeType": "YulFunctionCall",
																					"src": "6249:29:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6235:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "6235:3:14"
																			},
																			"nativeSrc": "6235:44:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6235:44:14"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6220:11:14",
																				"nodeType": "YulTypedName",
																				"src": "6220:11:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6436:27:14",
																			"nodeType": "YulBlock",
																			"src": "6436:27:14",
																			"statements": [
																				{
																					"nativeSrc": "6438:23:14",
																					"nodeType": "YulAssignment",
																					"src": "6438:23:14",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6453:8:14",
																						"nodeType": "YulIdentifier",
																						"src": "6453:8:14"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6438:11:14",
																							"nodeType": "YulIdentifier",
																							"src": "6438:11:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6420:10:14",
																					"nodeType": "YulIdentifier",
																					"src": "6420:10:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6432:2:14",
																					"nodeType": "YulLiteral",
																					"src": "6432:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6417:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "6417:2:14"
																			},
																			"nativeSrc": "6417:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6417:18:14"
																		},
																		"nativeSrc": "6414:49:14",
																		"nodeType": "YulIf",
																		"src": "6414:49:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6505:11:14",
																					"nodeType": "YulIdentifier",
																					"src": "6505:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6522:8:14",
																							"nodeType": "YulIdentifier",
																							"src": "6522:8:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6550:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "6550:3:14"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6532:17:14",
																								"nodeType": "YulIdentifier",
																								"src": "6532:17:14"
																							},
																							"nativeSrc": "6532:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "6532:22:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6518:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "6518:3:14"
																					},
																					"nativeSrc": "6518:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "6518:37:14"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6476:28:14",
																				"nodeType": "YulIdentifier",
																				"src": "6476:28:14"
																			},
																			"nativeSrc": "6476:80:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6476:80:14"
																		},
																		"nativeSrc": "6476:80:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6476:80:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6126:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6126:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6131:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6131:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6123:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "6123:2:14"
																},
																"nativeSrc": "6123:11:14",
																"nodeType": "YulFunctionCall",
																"src": "6123:11:14"
															},
															"nativeSrc": "6120:446:14",
															"nodeType": "YulIf",
															"src": "6120:446:14"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6030:543:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6085:5:14",
														"nodeType": "YulTypedName",
														"src": "6085:5:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6092:3:14",
														"nodeType": "YulTypedName",
														"src": "6092:3:14",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6097:10:14",
														"nodeType": "YulTypedName",
														"src": "6097:10:14",
														"type": ""
													}
												],
												"src": "6030:543:14"
											},
											{
												"body": {
													"nativeSrc": "6642:54:14",
													"nodeType": "YulBlock",
													"src": "6642:54:14",
													"statements": [
														{
															"nativeSrc": "6652:37:14",
															"nodeType": "YulAssignment",
															"src": "6652:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6677:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "6677:4:14"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6683:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "6683:5:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6673:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6673:3:14"
																},
																"nativeSrc": "6673:16:14",
																"nodeType": "YulFunctionCall",
																"src": "6673:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6652:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "6652:8:14"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6579:117:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6617:4:14",
														"nodeType": "YulTypedName",
														"src": "6617:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6623:5:14",
														"nodeType": "YulTypedName",
														"src": "6623:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6633:8:14",
														"nodeType": "YulTypedName",
														"src": "6633:8:14",
														"type": ""
													}
												],
												"src": "6579:117:14"
											},
											{
												"body": {
													"nativeSrc": "6753:118:14",
													"nodeType": "YulBlock",
													"src": "6753:118:14",
													"statements": [
														{
															"nativeSrc": "6763:68:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6763:68:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6812:1:14",
																						"nodeType": "YulLiteral",
																						"src": "6812:1:14",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "6815:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "6815:5:14"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6808:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6808:3:14"
																				},
																				"nativeSrc": "6808:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6808:13:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6827:1:14",
																						"nodeType": "YulLiteral",
																						"src": "6827:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6823:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6823:3:14"
																				},
																				"nativeSrc": "6823:6:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6823:6:14"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "6779:28:14",
																			"nodeType": "YulIdentifier",
																			"src": "6779:28:14"
																		},
																		"nativeSrc": "6779:51:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6779:51:14"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "6775:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:14"
																},
																"nativeSrc": "6775:56:14",
																"nodeType": "YulFunctionCall",
																"src": "6775:56:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6767:4:14",
																	"nodeType": "YulTypedName",
																	"src": "6767:4:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6840:25:14",
															"nodeType": "YulAssignment",
															"src": "6840:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6854:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "6854:4:14"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "6860:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "6860:4:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6850:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6850:3:14"
																},
																"nativeSrc": "6850:15:14",
																"nodeType": "YulFunctionCall",
																"src": "6850:15:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6840:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:14"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "6702:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6730:4:14",
														"nodeType": "YulTypedName",
														"src": "6730:4:14",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "6736:5:14",
														"nodeType": "YulTypedName",
														"src": "6736:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6746:6:14",
														"nodeType": "YulTypedName",
														"src": "6746:6:14",
														"type": ""
													}
												],
												"src": "6702:169:14"
											},
											{
												"body": {
													"nativeSrc": "6957:214:14",
													"nodeType": "YulBlock",
													"src": "6957:214:14",
													"statements": [
														{
															"nativeSrc": "7090:37:14",
															"nodeType": "YulAssignment",
															"src": "7090:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7117:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "7117:4:14"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7123:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7123:3:14"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7098:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "7098:18:14"
																},
																"nativeSrc": "7098:29:14",
																"nodeType": "YulFunctionCall",
																"src": "7098:29:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7090:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7090:4:14"
																}
															]
														},
														{
															"nativeSrc": "7136:29:14",
															"nodeType": "YulAssignment",
															"src": "7136:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7147:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "7147:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7157:1:14",
																				"nodeType": "YulLiteral",
																				"src": "7157:1:14",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7160:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "7160:3:14"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7153:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:14"
																		},
																		"nativeSrc": "7153:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7153:11:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7144:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "7144:2:14"
																},
																"nativeSrc": "7144:21:14",
																"nodeType": "YulFunctionCall",
																"src": "7144:21:14"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7136:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7136:4:14"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "6876:295:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6938:4:14",
														"nodeType": "YulTypedName",
														"src": "6938:4:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6944:3:14",
														"nodeType": "YulTypedName",
														"src": "6944:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6952:4:14",
														"nodeType": "YulTypedName",
														"src": "6952:4:14",
														"type": ""
													}
												],
												"src": "6876:295:14"
											},
											{
												"body": {
													"nativeSrc": "7268:1303:14",
													"nodeType": "YulBlock",
													"src": "7268:1303:14",
													"statements": [
														{
															"nativeSrc": "7279:51:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7279:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7326:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7326:3:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7293:32:14",
																	"nodeType": "YulIdentifier",
																	"src": "7293:32:14"
																},
																"nativeSrc": "7293:37:14",
																"nodeType": "YulFunctionCall",
																"src": "7293:37:14"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7283:6:14",
																	"nodeType": "YulTypedName",
																	"src": "7283:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7415:22:14",
																"nodeType": "YulBlock",
																"src": "7415:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7417:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "7417:16:14"
																			},
																			"nativeSrc": "7417:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7417:18:14"
																		},
																		"nativeSrc": "7417:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7387:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7395:18:14",
																		"nodeType": "YulLiteral",
																		"src": "7395:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7384:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "7384:2:14"
																},
																"nativeSrc": "7384:30:14",
																"nodeType": "YulFunctionCall",
																"src": "7384:30:14"
															},
															"nativeSrc": "7381:56:14",
															"nodeType": "YulIf",
															"src": "7381:56:14"
														},
														{
															"nativeSrc": "7447:52:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7447:52:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7493:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "7493:4:14"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7487:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "7487:5:14"
																		},
																		"nativeSrc": "7487:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7487:11:14"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7461:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "7461:25:14"
																},
																"nativeSrc": "7461:38:14",
																"nodeType": "YulFunctionCall",
																"src": "7461:38:14"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7451:6:14",
																	"nodeType": "YulTypedName",
																	"src": "7451:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7592:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "7592:4:14"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7598:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7598:6:14"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7606:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7606:6:14"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7546:45:14",
																	"nodeType": "YulIdentifier",
																	"src": "7546:45:14"
																},
																"nativeSrc": "7546:67:14",
																"nodeType": "YulFunctionCall",
																"src": "7546:67:14"
															},
															"nativeSrc": "7546:67:14",
															"nodeType": "YulExpressionStatement",
															"src": "7546:67:14"
														},
														{
															"nativeSrc": "7623:18:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7623:18:14",
															"value": {
																"kind": "number",
																"nativeSrc": "7640:1:14",
																"nodeType": "YulLiteral",
																"src": "7640:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7627:9:14",
																	"nodeType": "YulTypedName",
																	"src": "7627:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7651:17:14",
															"nodeType": "YulAssignment",
															"src": "7651:17:14",
															"value": {
																"kind": "number",
																"nativeSrc": "7664:4:14",
																"nodeType": "YulLiteral",
																"src": "7664:4:14",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7651:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "7651:9:14"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7715:611:14",
																		"nodeType": "YulBlock",
																		"src": "7715:611:14",
																		"statements": [
																			{
																				"nativeSrc": "7729:37:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7729:37:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "7748:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "7748:6:14"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7760:4:14",
																									"nodeType": "YulLiteral",
																									"src": "7760:4:14",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7756:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "7756:3:14"
																							},
																							"nativeSrc": "7756:9:14",
																							"nodeType": "YulFunctionCall",
																							"src": "7756:9:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7744:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "7744:3:14"
																					},
																					"nativeSrc": "7744:22:14",
																					"nodeType": "YulFunctionCall",
																					"src": "7744:22:14"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7733:7:14",
																						"nodeType": "YulTypedName",
																						"src": "7733:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7780:51:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7780:51:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7826:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "7826:4:14"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "7794:31:14",
																						"nodeType": "YulIdentifier",
																						"src": "7794:31:14"
																					},
																					"nativeSrc": "7794:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "7794:37:14"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "7784:6:14",
																						"nodeType": "YulTypedName",
																						"src": "7784:6:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7844:10:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7844:10:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7853:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7853:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7848:1:14",
																						"nodeType": "YulTypedName",
																						"src": "7848:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7912:163:14",
																					"nodeType": "YulBlock",
																					"src": "7912:163:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7937:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "7937:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7955:3:14",
																														"nodeType": "YulIdentifier",
																														"src": "7955:3:14"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7960:9:14",
																														"nodeType": "YulIdentifier",
																														"src": "7960:9:14"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7951:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "7951:3:14"
																												},
																												"nativeSrc": "7951:19:14",
																												"nodeType": "YulFunctionCall",
																												"src": "7951:19:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7945:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "7945:5:14"
																										},
																										"nativeSrc": "7945:26:14",
																										"nodeType": "YulFunctionCall",
																										"src": "7945:26:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7930:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "7930:6:14"
																								},
																								"nativeSrc": "7930:42:14",
																								"nodeType": "YulFunctionCall",
																								"src": "7930:42:14"
																							},
																							"nativeSrc": "7930:42:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "7930:42:14"
																						},
																						{
																							"nativeSrc": "7989:24:14",
																							"nodeType": "YulAssignment",
																							"src": "7989:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8003:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "8003:6:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8011:1:14",
																										"nodeType": "YulLiteral",
																										"src": "8011:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7999:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "7999:3:14"
																								},
																								"nativeSrc": "7999:14:14",
																								"nodeType": "YulFunctionCall",
																								"src": "7999:14:14"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7989:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "7989:6:14"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8030:31:14",
																							"nodeType": "YulAssignment",
																							"src": "8030:31:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8047:9:14",
																										"nodeType": "YulIdentifier",
																										"src": "8047:9:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8058:2:14",
																										"nodeType": "YulLiteral",
																										"src": "8058:2:14",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8043:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "8043:3:14"
																								},
																								"nativeSrc": "8043:18:14",
																								"nodeType": "YulFunctionCall",
																								"src": "8043:18:14"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8030:9:14",
																									"nodeType": "YulIdentifier",
																									"src": "8030:9:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "7878:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "7878:1:14"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7881:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "7881:7:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7875:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "7875:2:14"
																					},
																					"nativeSrc": "7875:14:14",
																					"nodeType": "YulFunctionCall",
																					"src": "7875:14:14"
																				},
																				"nativeSrc": "7867:208:14",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7890:21:14",
																					"nodeType": "YulBlock",
																					"src": "7890:21:14",
																					"statements": [
																						{
																							"nativeSrc": "7892:17:14",
																							"nodeType": "YulAssignment",
																							"src": "7892:17:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "7901:1:14",
																										"nodeType": "YulIdentifier",
																										"src": "7901:1:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7904:4:14",
																										"nodeType": "YulLiteral",
																										"src": "7904:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7897:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "7897:3:14"
																								},
																								"nativeSrc": "7897:12:14",
																								"nodeType": "YulFunctionCall",
																								"src": "7897:12:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "7892:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "7892:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7871:3:14",
																					"nodeType": "YulBlock",
																					"src": "7871:3:14",
																					"statements": []
																				},
																				"src": "7867:208:14"
																			},
																			{
																				"body": {
																					"nativeSrc": "8111:156:14",
																					"nodeType": "YulBlock",
																					"src": "8111:156:14",
																					"statements": [
																						{
																							"nativeSrc": "8129:43:14",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8129:43:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8156:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "8156:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8161:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "8161:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8152:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "8152:3:14"
																										},
																										"nativeSrc": "8152:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "8152:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8146:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "8146:5:14"
																								},
																								"nativeSrc": "8146:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "8146:26:14"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8133:9:14",
																									"nodeType": "YulTypedName",
																									"src": "8133:9:14",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8196:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "8196:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8223:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "8223:9:14"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8238:6:14",
																														"nodeType": "YulIdentifier",
																														"src": "8238:6:14"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8246:4:14",
																														"nodeType": "YulLiteral",
																														"src": "8246:4:14",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8234:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "8234:3:14"
																												},
																												"nativeSrc": "8234:17:14",
																												"nodeType": "YulFunctionCall",
																												"src": "8234:17:14"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8204:18:14",
																											"nodeType": "YulIdentifier",
																											"src": "8204:18:14"
																										},
																										"nativeSrc": "8204:48:14",
																										"nodeType": "YulFunctionCall",
																										"src": "8204:48:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8189:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "8189:6:14"
																								},
																								"nativeSrc": "8189:64:14",
																								"nodeType": "YulFunctionCall",
																								"src": "8189:64:14"
																							},
																							"nativeSrc": "8189:64:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "8189:64:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8094:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "8094:7:14"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8103:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "8103:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8091:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "8091:2:14"
																					},
																					"nativeSrc": "8091:19:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8091:19:14"
																				},
																				"nativeSrc": "8088:179:14",
																				"nodeType": "YulIf",
																				"src": "8088:179:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8287:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "8287:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8301:6:14",
																											"nodeType": "YulIdentifier",
																											"src": "8301:6:14"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8309:1:14",
																											"nodeType": "YulLiteral",
																											"src": "8309:1:14",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8297:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "8297:3:14"
																									},
																									"nativeSrc": "8297:14:14",
																									"nodeType": "YulFunctionCall",
																									"src": "8297:14:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8313:1:14",
																									"nodeType": "YulLiteral",
																									"src": "8313:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8293:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "8293:3:14"
																							},
																							"nativeSrc": "8293:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "8293:22:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8280:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "8280:6:14"
																					},
																					"nativeSrc": "8280:36:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8280:36:14"
																				},
																				"nativeSrc": "8280:36:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "8280:36:14"
																			}
																		]
																	},
																	"nativeSrc": "7708:618:14",
																	"nodeType": "YulCase",
																	"src": "7708:618:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7713:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7713:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8343:222:14",
																		"nodeType": "YulBlock",
																		"src": "8343:222:14",
																		"statements": [
																			{
																				"nativeSrc": "8357:14:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8357:14:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8370:1:14",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8361:5:14",
																						"nodeType": "YulTypedName",
																						"src": "8361:5:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8394:67:14",
																					"nodeType": "YulBlock",
																					"src": "8394:67:14",
																					"statements": [
																						{
																							"nativeSrc": "8412:35:14",
																							"nodeType": "YulAssignment",
																							"src": "8412:35:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8431:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "8431:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8436:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "8436:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8427:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "8427:3:14"
																										},
																										"nativeSrc": "8427:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "8427:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8421:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "8421:5:14"
																								},
																								"nativeSrc": "8421:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "8421:26:14"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8412:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "8412:5:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8387:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "8387:6:14"
																				},
																				"nativeSrc": "8384:77:14",
																				"nodeType": "YulIf",
																				"src": "8384:77:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8481:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "8481:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8540:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "8540:5:14"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8547:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "8547:6:14"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8487:52:14",
																								"nodeType": "YulIdentifier",
																								"src": "8487:52:14"
																							},
																							"nativeSrc": "8487:67:14",
																							"nodeType": "YulFunctionCall",
																							"src": "8487:67:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8474:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "8474:6:14"
																					},
																					"nativeSrc": "8474:81:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8474:81:14"
																				},
																				"nativeSrc": "8474:81:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "8474:81:14"
																			}
																		]
																	},
																	"nativeSrc": "8335:230:14",
																	"nodeType": "YulCase",
																	"src": "8335:230:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7688:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7688:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7696:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7685:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "7685:2:14"
																},
																"nativeSrc": "7685:14:14",
																"nodeType": "YulFunctionCall",
																"src": "7685:14:14"
															},
															"nativeSrc": "7678:887:14",
															"nodeType": "YulSwitch",
															"src": "7678:887:14"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7176:1395:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7257:4:14",
														"nodeType": "YulTypedName",
														"src": "7257:4:14",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7263:3:14",
														"nodeType": "YulTypedName",
														"src": "7263:3:14",
														"type": ""
													}
												],
												"src": "7176:1395:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162001756380380620017568339818101604052810190620000369190620001e7565b8160039081620000479190620004a1565b508060049081620000599190620004a1565b50505062000585565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620000c3826200007b565b810181811067ffffffffffffffff82111715620000e557620000e46200008b565b5b80604052505050565b5f620000f962000062565b9050620001078282620000b8565b919050565b5f67ffffffffffffffff8211156200012957620001286200008b565b5b62000134826200007b565b9050602081019050919050565b5f5b838110156200016057808201518184015260208101905062000143565b5f8484015250505050565b5f620001816200017b846200010c565b620000ee565b905082815260208101848484011115620001a0576200019f62000077565b5b620001ad84828562000141565b509392505050565b5f82601f830112620001cc57620001cb62000073565b5b8151620001de8482602086016200016b565b91505092915050565b5f80604083850312156200020057620001ff6200006b565b5b5f83015167ffffffffffffffff81111562000220576200021f6200006f565b5b6200022e85828601620001b5565b925050602083015167ffffffffffffffff8111156200025257620002516200006f565b5b6200026085828601620001b5565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620002b957607f821691505b602082108103620002cf57620002ce62000274565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620003337fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002f6565b6200033f8683620002f6565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f62000389620003836200037d8462000357565b62000360565b62000357565b9050919050565b5f819050919050565b620003a48362000369565b620003bc620003b38262000390565b84845462000302565b825550505050565b5f90565b620003d2620003c4565b620003df81848462000399565b505050565b5b818110156200040657620003fa5f82620003c8565b600181019050620003e5565b5050565b601f82111562000455576200041f81620002d5565b6200042a84620002e7565b810160208510156200043a578190505b620004526200044985620002e7565b830182620003e4565b50505b505050565b5f82821c905092915050565b5f620004775f19846008026200045a565b1980831691505092915050565b5f62000491838362000466565b9150826002028217905092915050565b620004ac826200026a565b67ffffffffffffffff811115620004c857620004c76200008b565b5b620004d48254620002a1565b620004e18282856200040a565b5f60209050601f83116001811462000517575f841562000502578287015190505b6200050e858262000484565b8655506200057d565b601f1984166200052786620002d5565b5f5b82811015620005505784890151825560018201915060208501945060208101905062000529565b868310156200057057848901516200056c601f89168262000466565b8355505b6001600288020188555050505b505050505050565b6111c380620005935f395ff3fe608060405234801561000f575f80fd5b50600436106100a7575f3560e01c8063395093511161006f578063395093511461016557806370a082311461019557806395d89b41146101c5578063a457c2d7146101e3578063a9059cbb14610213578063dd62ed3e14610243576100a7565b806306fdde03146100ab578063095ea7b3146100c957806318160ddd146100f957806323b872dd14610117578063313ce56714610147575b5f80fd5b6100b3610273565b6040516100c09190610add565b60405180910390f35b6100e360048036038101906100de9190610b8e565b610303565b6040516100f09190610be6565b60405180910390f35b610101610325565b60405161010e9190610c0e565b60405180910390f35b610131600480360381019061012c9190610c27565b61032e565b60405161013e9190610be6565b60405180910390f35b61014f61035c565b60405161015c9190610c92565b60405180910390f35b61017f600480360381019061017a9190610b8e565b610364565b60405161018c9190610be6565b60405180910390f35b6101af60048036038101906101aa9190610cab565b61039a565b6040516101bc9190610c0e565b60405180910390f35b6101cd6103df565b6040516101da9190610add565b60405180910390f35b6101fd60048036038101906101f89190610b8e565b61046f565b60405161020a9190610be6565b60405180910390f35b61022d60048036038101906102289190610b8e565b6104e4565b60405161023a9190610be6565b60405180910390f35b61025d60048036038101906102589190610cd6565b610506565b60405161026a9190610c0e565b60405180910390f35b60606003805461028290610d41565b80601f01602080910402602001604051908101604052809291908181526020018280546102ae90610d41565b80156102f95780601f106102d0576101008083540402835291602001916102f9565b820191905f5260205f20905b8154815290600101906020018083116102dc57829003601f168201915b5050505050905090565b5f8061030d610588565b905061031a81858561058f565b600191505092915050565b5f600254905090565b5f80610338610588565b9050610345858285610752565b6103508585856107dd565b60019150509392505050565b5f6012905090565b5f8061036e610588565b905061038f8185856103808589610506565b61038a9190610d9e565b61058f565b600191505092915050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600480546103ee90610d41565b80601f016020809104026020016040519081016040528092919081815260200182805461041a90610d41565b80156104655780601f1061043c57610100808354040283529160200191610465565b820191905f5260205f20905b81548152906001019060200180831161044857829003601f168201915b5050505050905090565b5f80610479610588565b90505f6104868286610506565b9050838110156104cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c290610e41565b60405180910390fd5b6104d8828686840361058f565b60019250505092915050565b5f806104ee610588565b90506104fb8185856107dd565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f490610ecf565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361066b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066290610f5d565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107459190610c0e565b60405180910390a3505050565b5f61075d8484610506565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107d757818110156107c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c090610fc5565b60405180910390fd5b6107d6848484840361058f565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361084b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084290611053565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b0906110e1565b60405180910390fd5b6108c4838383610a49565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610947576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093e9061116f565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a309190610c0e565b60405180910390a3610a43848484610a4e565b50505050565b505050565b505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610a8a578082015181840152602081019050610a6f565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610aaf82610a53565b610ab98185610a5d565b9350610ac9818560208601610a6d565b610ad281610a95565b840191505092915050565b5f6020820190508181035f830152610af58184610aa5565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b2a82610b01565b9050919050565b610b3a81610b20565b8114610b44575f80fd5b50565b5f81359050610b5581610b31565b92915050565b5f819050919050565b610b6d81610b5b565b8114610b77575f80fd5b50565b5f81359050610b8881610b64565b92915050565b5f8060408385031215610ba457610ba3610afd565b5b5f610bb185828601610b47565b9250506020610bc285828601610b7a565b9150509250929050565b5f8115159050919050565b610be081610bcc565b82525050565b5f602082019050610bf95f830184610bd7565b92915050565b610c0881610b5b565b82525050565b5f602082019050610c215f830184610bff565b92915050565b5f805f60608486031215610c3e57610c3d610afd565b5b5f610c4b86828701610b47565b9350506020610c5c86828701610b47565b9250506040610c6d86828701610b7a565b9150509250925092565b5f60ff82169050919050565b610c8c81610c77565b82525050565b5f602082019050610ca55f830184610c83565b92915050565b5f60208284031215610cc057610cbf610afd565b5b5f610ccd84828501610b47565b91505092915050565b5f8060408385031215610cec57610ceb610afd565b5b5f610cf985828601610b47565b9250506020610d0a85828601610b47565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610d5857607f821691505b602082108103610d6b57610d6a610d14565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610da882610b5b565b9150610db383610b5b565b9250828201905080821115610dcb57610dca610d71565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f775f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f610e2b602583610a5d565b9150610e3682610dd1565b604082019050919050565b5f6020820190508181035f830152610e5881610e1f565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f610eb9602483610a5d565b9150610ec482610e5f565b604082019050919050565b5f6020820190508181035f830152610ee681610ead565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f610f47602283610a5d565b9150610f5282610eed565b604082019050919050565b5f6020820190508181035f830152610f7481610f3b565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000005f82015250565b5f610faf601d83610a5d565b9150610fba82610f7b565b602082019050919050565b5f6020820190508181035f830152610fdc81610fa3565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f61103d602583610a5d565b915061104882610fe3565b604082019050919050565b5f6020820190508181035f83015261106a81611031565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f6110cb602383610a5d565b91506110d682611071565b604082019050919050565b5f6020820190508181035f8301526110f8816110bf565b9050919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320625f8201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b5f611159602683610a5d565b9150611164826110ff565b604082019050919050565b5f6020820190508181035f8301526111868161114d565b905091905056fea2646970667358221220e92046f2770e7ff9340495085a05a1a48dff6b719da36263910aa1ac8cca954964736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1756 CODESIZE SUB DUP1 PUSH3 0x1756 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x1E7 JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x47 SWAP2 SWAP1 PUSH3 0x4A1 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x59 SWAP2 SWAP1 PUSH3 0x4A1 JUMP JUMPDEST POP POP POP PUSH3 0x585 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0xC3 DUP3 PUSH3 0x7B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xE5 JUMPI PUSH3 0xE4 PUSH3 0x8B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0xF9 PUSH3 0x62 JUMP JUMPDEST SWAP1 POP PUSH3 0x107 DUP3 DUP3 PUSH3 0xB8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x129 JUMPI PUSH3 0x128 PUSH3 0x8B JUMP JUMPDEST JUMPDEST PUSH3 0x134 DUP3 PUSH3 0x7B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x160 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x143 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x181 PUSH3 0x17B DUP5 PUSH3 0x10C JUMP JUMPDEST PUSH3 0xEE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1A0 JUMPI PUSH3 0x19F PUSH3 0x77 JUMP JUMPDEST JUMPDEST PUSH3 0x1AD DUP5 DUP3 DUP6 PUSH3 0x141 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1CC JUMPI PUSH3 0x1CB PUSH3 0x73 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1DE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x16B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x200 JUMPI PUSH3 0x1FF PUSH3 0x6B JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x220 JUMPI PUSH3 0x21F PUSH3 0x6F JUMP JUMPDEST JUMPDEST PUSH3 0x22E DUP6 DUP3 DUP7 ADD PUSH3 0x1B5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x252 JUMPI PUSH3 0x251 PUSH3 0x6F JUMP JUMPDEST JUMPDEST PUSH3 0x260 DUP6 DUP3 DUP7 ADD PUSH3 0x1B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2B9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2CF JUMPI PUSH3 0x2CE PUSH3 0x274 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x333 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2F6 JUMP JUMPDEST PUSH3 0x33F DUP7 DUP4 PUSH3 0x2F6 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x389 PUSH3 0x383 PUSH3 0x37D DUP5 PUSH3 0x357 JUMP JUMPDEST PUSH3 0x360 JUMP JUMPDEST PUSH3 0x357 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3A4 DUP4 PUSH3 0x369 JUMP JUMPDEST PUSH3 0x3BC PUSH3 0x3B3 DUP3 PUSH3 0x390 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x302 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x3D2 PUSH3 0x3C4 JUMP JUMPDEST PUSH3 0x3DF DUP2 DUP5 DUP5 PUSH3 0x399 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x406 JUMPI PUSH3 0x3FA PUSH0 DUP3 PUSH3 0x3C8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3E5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x455 JUMPI PUSH3 0x41F DUP2 PUSH3 0x2D5 JUMP JUMPDEST PUSH3 0x42A DUP5 PUSH3 0x2E7 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x43A JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x452 PUSH3 0x449 DUP6 PUSH3 0x2E7 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3E4 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x477 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x45A JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x491 DUP4 DUP4 PUSH3 0x466 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4AC DUP3 PUSH3 0x26A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4C8 JUMPI PUSH3 0x4C7 PUSH3 0x8B JUMP JUMPDEST JUMPDEST PUSH3 0x4D4 DUP3 SLOAD PUSH3 0x2A1 JUMP JUMPDEST PUSH3 0x4E1 DUP3 DUP3 DUP6 PUSH3 0x40A JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x517 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x502 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x50E DUP6 DUP3 PUSH3 0x484 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x57D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x527 DUP7 PUSH3 0x2D5 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x550 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x529 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x570 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x56C PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x466 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x11C3 DUP1 PUSH3 0x593 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x243 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x147 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB3 PUSH2 0x273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xADD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x325 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xC27 JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xC92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0xCAB JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CD PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0xADD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x258 SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x282 SWAP1 PUSH2 0xD41 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AE SWAP1 PUSH2 0xD41 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x30D PUSH2 0x588 JUMP JUMPDEST SWAP1 POP PUSH2 0x31A DUP2 DUP6 DUP6 PUSH2 0x58F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x338 PUSH2 0x588 JUMP JUMPDEST SWAP1 POP PUSH2 0x345 DUP6 DUP3 DUP6 PUSH2 0x752 JUMP JUMPDEST PUSH2 0x350 DUP6 DUP6 DUP6 PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x36E PUSH2 0x588 JUMP JUMPDEST SWAP1 POP PUSH2 0x38F DUP2 DUP6 DUP6 PUSH2 0x380 DUP6 DUP10 PUSH2 0x506 JUMP JUMPDEST PUSH2 0x38A SWAP2 SWAP1 PUSH2 0xD9E JUMP JUMPDEST PUSH2 0x58F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3EE SWAP1 PUSH2 0xD41 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x41A SWAP1 PUSH2 0xD41 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x465 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x43C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x465 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x448 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x479 PUSH2 0x588 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x486 DUP3 DUP7 PUSH2 0x506 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C2 SWAP1 PUSH2 0xE41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4D8 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x58F JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4EE PUSH2 0x588 JUMP JUMPDEST SWAP1 POP PUSH2 0x4FB DUP2 DUP6 DUP6 PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F4 SWAP1 PUSH2 0xECF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x66B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x662 SWAP1 PUSH2 0xF5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x745 SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x75D DUP5 DUP5 PUSH2 0x506 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7D7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C0 SWAP1 PUSH2 0xFC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D6 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x58F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x84B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x842 SWAP1 PUSH2 0x1053 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B0 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C4 DUP4 DUP4 DUP4 PUSH2 0xA49 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x947 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93E SWAP1 PUSH2 0x116F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA30 SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA43 DUP5 DUP5 DUP5 PUSH2 0xA4E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA8A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA6F JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAAF DUP3 PUSH2 0xA53 JUMP JUMPDEST PUSH2 0xAB9 DUP2 DUP6 PUSH2 0xA5D JUMP JUMPDEST SWAP4 POP PUSH2 0xAC9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA6D JUMP JUMPDEST PUSH2 0xAD2 DUP2 PUSH2 0xA95 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAF5 DUP2 DUP5 PUSH2 0xAA5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB2A DUP3 PUSH2 0xB01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB3A DUP2 PUSH2 0xB20 JUMP JUMPDEST DUP2 EQ PUSH2 0xB44 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB55 DUP2 PUSH2 0xB31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6D DUP2 PUSH2 0xB5B JUMP JUMPDEST DUP2 EQ PUSH2 0xB77 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB88 DUP2 PUSH2 0xB64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBA4 JUMPI PUSH2 0xBA3 PUSH2 0xAFD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBB1 DUP6 DUP3 DUP7 ADD PUSH2 0xB47 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBC2 DUP6 DUP3 DUP7 ADD PUSH2 0xB7A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBE0 DUP2 PUSH2 0xBCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBF9 PUSH0 DUP4 ADD DUP5 PUSH2 0xBD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC08 DUP2 PUSH2 0xB5B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC21 PUSH0 DUP4 ADD DUP5 PUSH2 0xBFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC3E JUMPI PUSH2 0xC3D PUSH2 0xAFD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC4B DUP7 DUP3 DUP8 ADD PUSH2 0xB47 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC5C DUP7 DUP3 DUP8 ADD PUSH2 0xB47 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC6D DUP7 DUP3 DUP8 ADD PUSH2 0xB7A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC8C DUP2 PUSH2 0xC77 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCA5 PUSH0 DUP4 ADD DUP5 PUSH2 0xC83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC0 JUMPI PUSH2 0xCBF PUSH2 0xAFD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCCD DUP5 DUP3 DUP6 ADD PUSH2 0xB47 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCEC JUMPI PUSH2 0xCEB PUSH2 0xAFD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCF9 DUP6 DUP3 DUP7 ADD PUSH2 0xB47 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD0A DUP6 DUP3 DUP7 ADD PUSH2 0xB47 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD58 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD6B JUMPI PUSH2 0xD6A PUSH2 0xD14 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xDA8 DUP3 PUSH2 0xB5B JUMP JUMPDEST SWAP2 POP PUSH2 0xDB3 DUP4 PUSH2 0xB5B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xDCB JUMPI PUSH2 0xDCA PUSH2 0xD71 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE2B PUSH1 0x25 DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP PUSH2 0xE36 DUP3 PUSH2 0xDD1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE58 DUP2 PUSH2 0xE1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEB9 PUSH1 0x24 DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP PUSH2 0xEC4 DUP3 PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEE6 DUP2 PUSH2 0xEAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF47 PUSH1 0x22 DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP PUSH2 0xF52 DUP3 PUSH2 0xEED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF74 DUP2 PUSH2 0xF3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFAF PUSH1 0x1D DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP PUSH2 0xFBA DUP3 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFDC DUP2 PUSH2 0xFA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x103D PUSH1 0x25 DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP PUSH2 0x1048 DUP3 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x106A DUP2 PUSH2 0x1031 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10CB PUSH1 0x23 DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP PUSH2 0x10D6 DUP3 PUSH2 0x1071 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10F8 DUP2 PUSH2 0x10BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1159 PUSH1 0x26 DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP PUSH2 0x1164 DUP3 PUSH2 0x10FF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1186 DUP2 PUSH2 0x114D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 KECCAK256 CHAINID CALLCODE PUSH24 0xE7FF9340495085A05A1A48DFF6B719DA36263910AA1AC8C 0xCA SWAP6 0x49 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "1401:11610:4:-:0;;;1976:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2050:5;2042;:13;;;;;;:::i;:::-;;2075:7;2065;:17;;;;;;:::i;:::-;;1976:113;;1401:11610;;7:75:14;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;1401:11610:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1195": {
									"entryPoint": 2638,
									"id": 1195,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1130": {
									"entryPoint": 1423,
									"id": 1130,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1184": {
									"entryPoint": 2633,
									"id": 1184,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_1355": {
									"entryPoint": 1416,
									"id": 1355,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1173": {
									"entryPoint": 1874,
									"id": 1173,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_956": {
									"entryPoint": 2013,
									"id": 956,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_751": {
									"entryPoint": 1286,
									"id": 751,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_776": {
									"entryPoint": 771,
									"id": 776,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_708": {
									"entryPoint": 922,
									"id": 708,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_684": {
									"entryPoint": 860,
									"id": 684,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_879": {
									"entryPoint": 1135,
									"id": 879,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_838": {
									"entryPoint": 868,
									"id": 838,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_664": {
									"entryPoint": 627,
									"id": 664,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_674": {
									"entryPoint": 991,
									"id": 674,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_694": {
									"entryPoint": 805,
									"id": 694,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_809": {
									"entryPoint": 814,
									"id": 809,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_733": {
									"entryPoint": 1252,
									"id": 733,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2958,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3615,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4179,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2669,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3441,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3348,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2813,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 4209,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029": {
									"entryPoint": 3821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe": {
									"entryPoint": 3963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6": {
									"entryPoint": 4351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 4067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208": {
									"entryPoint": 3679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8": {
									"entryPoint": 3537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13699:14",
										"nodeType": "YulBlock",
										"src": "0:13699:14",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:14",
													"nodeType": "YulBlock",
													"src": "66:40:14",
													"statements": [
														{
															"nativeSrc": "77:22:14",
															"nodeType": "YulAssignment",
															"src": "77:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:14"
																},
																"nativeSrc": "87:12:14",
																"nodeType": "YulFunctionCall",
																"src": "87:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:14",
														"nodeType": "YulTypedName",
														"src": "49:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:14",
														"nodeType": "YulTypedName",
														"src": "59:6:14",
														"type": ""
													}
												],
												"src": "7:99:14"
											},
											{
												"body": {
													"nativeSrc": "208:73:14",
													"nodeType": "YulBlock",
													"src": "208:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:14"
																},
																"nativeSrc": "218:19:14",
																"nodeType": "YulFunctionCall",
																"src": "218:19:14"
															},
															"nativeSrc": "218:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:14"
														},
														{
															"nativeSrc": "246:29:14",
															"nodeType": "YulAssignment",
															"src": "246:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:14",
																		"nodeType": "YulLiteral",
																		"src": "270:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:14"
																},
																"nativeSrc": "261:14:14",
																"nodeType": "YulFunctionCall",
																"src": "261:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:14",
														"nodeType": "YulTypedName",
														"src": "180:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:14",
														"nodeType": "YulTypedName",
														"src": "185:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:14",
														"nodeType": "YulTypedName",
														"src": "196:11:14",
														"type": ""
													}
												],
												"src": "112:169:14"
											},
											{
												"body": {
													"nativeSrc": "349:184:14",
													"nodeType": "YulBlock",
													"src": "349:184:14",
													"statements": [
														{
															"nativeSrc": "359:10:14",
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:14",
															"value": {
																"kind": "number",
																"nativeSrc": "368:1:14",
																"nodeType": "YulLiteral",
																"src": "368:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "363:1:14",
																	"nodeType": "YulTypedName",
																	"src": "363:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "428:63:14",
																"nodeType": "YulBlock",
																"src": "428:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "453:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:14"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "458:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "449:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:14"
																					},
																					"nativeSrc": "449:11:14",
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "472:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:14"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "477:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "468:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:14"
																							},
																							"nativeSrc": "468:11:14",
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "462:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:14"
																					},
																					"nativeSrc": "462:18:14",
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "442:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:14"
																			},
																			"nativeSrc": "442:39:14",
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:14"
																		},
																		"nativeSrc": "442:39:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "389:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "392:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "386:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:14"
																},
																"nativeSrc": "386:13:14",
																"nodeType": "YulFunctionCall",
																"src": "386:13:14"
															},
															"nativeSrc": "378:113:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "400:19:14",
																"nodeType": "YulBlock",
																"src": "400:19:14",
																"statements": [
																	{
																		"nativeSrc": "402:15:14",
																		"nodeType": "YulAssignment",
																		"src": "402:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "411:1:14",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:2:14",
																					"nodeType": "YulLiteral",
																					"src": "414:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "407:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:14"
																			},
																			"nativeSrc": "407:10:14",
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "402:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "382:3:14",
																"nodeType": "YulBlock",
																"src": "382:3:14",
																"statements": []
															},
															"src": "378:113:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "511:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "516:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "507:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:14"
																		},
																		"nativeSrc": "507:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "525:1:14",
																		"nodeType": "YulLiteral",
																		"src": "525:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "500:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:14"
																},
																"nativeSrc": "500:27:14",
																"nodeType": "YulFunctionCall",
																"src": "500:27:14"
															},
															"nativeSrc": "500:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "500:27:14"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:246:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:14",
														"nodeType": "YulTypedName",
														"src": "331:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:14",
														"nodeType": "YulTypedName",
														"src": "336:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:14",
														"nodeType": "YulTypedName",
														"src": "341:6:14",
														"type": ""
													}
												],
												"src": "287:246:14"
											},
											{
												"body": {
													"nativeSrc": "587:54:14",
													"nodeType": "YulBlock",
													"src": "587:54:14",
													"statements": [
														{
															"nativeSrc": "597:38:14",
															"nodeType": "YulAssignment",
															"src": "597:38:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "615:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "622:2:14",
																				"nodeType": "YulLiteral",
																				"src": "622:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "611:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:14"
																		},
																		"nativeSrc": "611:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "631:2:14",
																				"nodeType": "YulLiteral",
																				"src": "631:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "627:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:14"
																		},
																		"nativeSrc": "627:7:14",
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "607:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:14"
																},
																"nativeSrc": "607:28:14",
																"nodeType": "YulFunctionCall",
																"src": "607:28:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "597:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:14"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "539:102:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:14",
														"nodeType": "YulTypedName",
														"src": "570:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "580:6:14",
														"nodeType": "YulTypedName",
														"src": "580:6:14",
														"type": ""
													}
												],
												"src": "539:102:14"
											},
											{
												"body": {
													"nativeSrc": "739:285:14",
													"nodeType": "YulBlock",
													"src": "739:285:14",
													"statements": [
														{
															"nativeSrc": "749:53:14",
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "796:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "763:32:14",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:14"
																},
																"nativeSrc": "763:39:14",
																"nodeType": "YulFunctionCall",
																"src": "763:39:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "753:6:14",
																	"nodeType": "YulTypedName",
																	"src": "753:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "811:78:14",
															"nodeType": "YulAssignment",
															"src": "811:78:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "877:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "882:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "818:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:14"
																},
																"nativeSrc": "818:71:14",
																"nodeType": "YulFunctionCall",
																"src": "818:71:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "811:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "937:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "944:4:14",
																				"nodeType": "YulLiteral",
																				"src": "944:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "933:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:14"
																		},
																		"nativeSrc": "933:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "951:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "956:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "898:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:14"
																},
																"nativeSrc": "898:65:14",
																"nodeType": "YulFunctionCall",
																"src": "898:65:14"
															},
															"nativeSrc": "898:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "898:65:14"
														},
														{
															"nativeSrc": "972:46:14",
															"nodeType": "YulAssignment",
															"src": "972:46:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "983:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "988:21:14",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:14"
																		},
																		"nativeSrc": "988:29:14",
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "979:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:14"
																},
																"nativeSrc": "979:39:14",
																"nodeType": "YulFunctionCall",
																"src": "979:39:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "972:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "647:377:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "720:5:14",
														"nodeType": "YulTypedName",
														"src": "720:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "727:3:14",
														"nodeType": "YulTypedName",
														"src": "727:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "735:3:14",
														"nodeType": "YulTypedName",
														"src": "735:3:14",
														"type": ""
													}
												],
												"src": "647:377:14"
											},
											{
												"body": {
													"nativeSrc": "1148:195:14",
													"nodeType": "YulBlock",
													"src": "1148:195:14",
													"statements": [
														{
															"nativeSrc": "1158:26:14",
															"nodeType": "YulAssignment",
															"src": "1158:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1170:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1166:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:14"
																},
																"nativeSrc": "1166:18:14",
																"nodeType": "YulFunctionCall",
																"src": "1166:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1158:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1205:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1216:1:14",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1201:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:14"
																		},
																		"nativeSrc": "1201:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1224:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1230:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:14"
																		},
																		"nativeSrc": "1220:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:14"
																},
																"nativeSrc": "1194:47:14",
																"nodeType": "YulFunctionCall",
																"src": "1194:47:14"
															},
															"nativeSrc": "1194:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:14"
														},
														{
															"nativeSrc": "1250:86:14",
															"nodeType": "YulAssignment",
															"src": "1250:86:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1322:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1331:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1258:63:14",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:14"
																},
																"nativeSrc": "1258:78:14",
																"nodeType": "YulFunctionCall",
																"src": "1258:78:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1250:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1030:313:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1120:9:14",
														"nodeType": "YulTypedName",
														"src": "1120:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1132:6:14",
														"nodeType": "YulTypedName",
														"src": "1132:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1143:4:14",
														"nodeType": "YulTypedName",
														"src": "1143:4:14",
														"type": ""
													}
												],
												"src": "1030:313:14"
											},
											{
												"body": {
													"nativeSrc": "1389:35:14",
													"nodeType": "YulBlock",
													"src": "1389:35:14",
													"statements": [
														{
															"nativeSrc": "1399:19:14",
															"nodeType": "YulAssignment",
															"src": "1399:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1409:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:14"
																},
																"nativeSrc": "1409:9:14",
																"nodeType": "YulFunctionCall",
																"src": "1409:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1399:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1349:75:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1382:6:14",
														"nodeType": "YulTypedName",
														"src": "1382:6:14",
														"type": ""
													}
												],
												"src": "1349:75:14"
											},
											{
												"body": {
													"nativeSrc": "1519:28:14",
													"nodeType": "YulBlock",
													"src": "1519:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1536:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1539:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1529:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:14"
																},
																"nativeSrc": "1529:12:14",
																"nodeType": "YulFunctionCall",
																"src": "1529:12:14"
															},
															"nativeSrc": "1529:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1430:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:14"
											},
											{
												"body": {
													"nativeSrc": "1642:28:14",
													"nodeType": "YulBlock",
													"src": "1642:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:14"
																},
																"nativeSrc": "1652:12:14",
																"nodeType": "YulFunctionCall",
																"src": "1652:12:14"
															},
															"nativeSrc": "1652:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1553:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:14"
											},
											{
												"body": {
													"nativeSrc": "1721:81:14",
													"nodeType": "YulBlock",
													"src": "1721:81:14",
													"statements": [
														{
															"nativeSrc": "1731:65:14",
															"nodeType": "YulAssignment",
															"src": "1731:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1746:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:42:14",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1742:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:14"
																},
																"nativeSrc": "1742:54:14",
																"nodeType": "YulFunctionCall",
																"src": "1742:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1731:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1676:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1703:5:14",
														"nodeType": "YulTypedName",
														"src": "1703:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1713:7:14",
														"nodeType": "YulTypedName",
														"src": "1713:7:14",
														"type": ""
													}
												],
												"src": "1676:126:14"
											},
											{
												"body": {
													"nativeSrc": "1853:51:14",
													"nodeType": "YulBlock",
													"src": "1853:51:14",
													"statements": [
														{
															"nativeSrc": "1863:35:14",
															"nodeType": "YulAssignment",
															"src": "1863:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1874:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:14"
																},
																"nativeSrc": "1874:24:14",
																"nodeType": "YulFunctionCall",
																"src": "1874:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1863:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1808:96:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:14",
														"nodeType": "YulTypedName",
														"src": "1835:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1845:7:14",
														"nodeType": "YulTypedName",
														"src": "1845:7:14",
														"type": ""
													}
												],
												"src": "1808:96:14"
											},
											{
												"body": {
													"nativeSrc": "1953:79:14",
													"nodeType": "YulBlock",
													"src": "1953:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2010:16:14",
																"nodeType": "YulBlock",
																"src": "2010:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2019:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2022:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2012:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:14"
																			},
																			"nativeSrc": "2012:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:14"
																		},
																		"nativeSrc": "2012:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1976:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2001:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1983:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:14"
																				},
																				"nativeSrc": "1983:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1973:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:14"
																		},
																		"nativeSrc": "1973:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1966:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:14"
																},
																"nativeSrc": "1966:43:14",
																"nodeType": "YulFunctionCall",
																"src": "1966:43:14"
															},
															"nativeSrc": "1963:63:14",
															"nodeType": "YulIf",
															"src": "1963:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1910:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1946:5:14",
														"nodeType": "YulTypedName",
														"src": "1946:5:14",
														"type": ""
													}
												],
												"src": "1910:122:14"
											},
											{
												"body": {
													"nativeSrc": "2090:87:14",
													"nodeType": "YulBlock",
													"src": "2090:87:14",
													"statements": [
														{
															"nativeSrc": "2100:29:14",
															"nodeType": "YulAssignment",
															"src": "2100:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2122:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2109:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:14"
																},
																"nativeSrc": "2109:20:14",
																"nodeType": "YulFunctionCall",
																"src": "2109:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2100:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2165:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2138:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:14"
																},
																"nativeSrc": "2138:33:14",
																"nodeType": "YulFunctionCall",
																"src": "2138:33:14"
															},
															"nativeSrc": "2138:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:14"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2038:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2068:6:14",
														"nodeType": "YulTypedName",
														"src": "2068:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2076:3:14",
														"nodeType": "YulTypedName",
														"src": "2076:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2084:5:14",
														"nodeType": "YulTypedName",
														"src": "2084:5:14",
														"type": ""
													}
												],
												"src": "2038:139:14"
											},
											{
												"body": {
													"nativeSrc": "2228:32:14",
													"nodeType": "YulBlock",
													"src": "2228:32:14",
													"statements": [
														{
															"nativeSrc": "2238:16:14",
															"nodeType": "YulAssignment",
															"src": "2238:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "2249:5:14",
																"nodeType": "YulIdentifier",
																"src": "2249:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2238:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2183:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:14",
														"nodeType": "YulTypedName",
														"src": "2210:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2220:7:14",
														"nodeType": "YulTypedName",
														"src": "2220:7:14",
														"type": ""
													}
												],
												"src": "2183:77:14"
											},
											{
												"body": {
													"nativeSrc": "2309:79:14",
													"nodeType": "YulBlock",
													"src": "2309:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2366:16:14",
																"nodeType": "YulBlock",
																"src": "2366:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2368:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:14"
																			},
																			"nativeSrc": "2368:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:14"
																		},
																		"nativeSrc": "2368:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2332:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2357:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2339:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:14"
																				},
																				"nativeSrc": "2339:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2329:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:14"
																		},
																		"nativeSrc": "2329:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2322:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:14"
																},
																"nativeSrc": "2322:43:14",
																"nodeType": "YulFunctionCall",
																"src": "2322:43:14"
															},
															"nativeSrc": "2319:63:14",
															"nodeType": "YulIf",
															"src": "2319:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2266:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2302:5:14",
														"nodeType": "YulTypedName",
														"src": "2302:5:14",
														"type": ""
													}
												],
												"src": "2266:122:14"
											},
											{
												"body": {
													"nativeSrc": "2446:87:14",
													"nodeType": "YulBlock",
													"src": "2446:87:14",
													"statements": [
														{
															"nativeSrc": "2456:29:14",
															"nodeType": "YulAssignment",
															"src": "2456:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2478:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2465:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:14"
																},
																"nativeSrc": "2465:20:14",
																"nodeType": "YulFunctionCall",
																"src": "2465:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2456:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2521:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2494:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:14"
																},
																"nativeSrc": "2494:33:14",
																"nodeType": "YulFunctionCall",
																"src": "2494:33:14"
															},
															"nativeSrc": "2494:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2394:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2424:6:14",
														"nodeType": "YulTypedName",
														"src": "2424:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2432:3:14",
														"nodeType": "YulTypedName",
														"src": "2432:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2440:5:14",
														"nodeType": "YulTypedName",
														"src": "2440:5:14",
														"type": ""
													}
												],
												"src": "2394:139:14"
											},
											{
												"body": {
													"nativeSrc": "2622:391:14",
													"nodeType": "YulBlock",
													"src": "2622:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2668:83:14",
																"nodeType": "YulBlock",
																"src": "2668:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2670:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:14"
																			},
																			"nativeSrc": "2670:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:14"
																		},
																		"nativeSrc": "2670:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2643:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2652:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2639:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:14"
																		},
																		"nativeSrc": "2639:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2664:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2635:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:14"
																},
																"nativeSrc": "2635:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2635:32:14"
															},
															"nativeSrc": "2632:119:14",
															"nodeType": "YulIf",
															"src": "2632:119:14"
														},
														{
															"nativeSrc": "2761:117:14",
															"nodeType": "YulBlock",
															"src": "2761:117:14",
															"statements": [
																{
																	"nativeSrc": "2776:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2790:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2780:6:14",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2805:63:14",
																	"nodeType": "YulAssignment",
																	"src": "2805:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2840:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2851:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2836:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:14"
																				},
																				"nativeSrc": "2836:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2860:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2815:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:14"
																		},
																		"nativeSrc": "2815:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2805:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2888:118:14",
															"nodeType": "YulBlock",
															"src": "2888:118:14",
															"statements": [
																{
																	"nativeSrc": "2903:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2917:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2907:6:14",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2933:63:14",
																	"nodeType": "YulAssignment",
																	"src": "2933:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2968:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2979:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2964:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:14"
																				},
																				"nativeSrc": "2964:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2988:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2943:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:14"
																		},
																		"nativeSrc": "2943:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2933:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2539:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:14",
														"nodeType": "YulTypedName",
														"src": "2584:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2595:7:14",
														"nodeType": "YulTypedName",
														"src": "2595:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2607:6:14",
														"nodeType": "YulTypedName",
														"src": "2607:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2615:6:14",
														"nodeType": "YulTypedName",
														"src": "2615:6:14",
														"type": ""
													}
												],
												"src": "2539:474:14"
											},
											{
												"body": {
													"nativeSrc": "3061:48:14",
													"nodeType": "YulBlock",
													"src": "3061:48:14",
													"statements": [
														{
															"nativeSrc": "3071:32:14",
															"nodeType": "YulAssignment",
															"src": "3071:32:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3096:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3089:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:14"
																		},
																		"nativeSrc": "3089:13:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3082:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:14"
																},
																"nativeSrc": "3082:21:14",
																"nodeType": "YulFunctionCall",
																"src": "3082:21:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3071:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3019:90:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3043:5:14",
														"nodeType": "YulTypedName",
														"src": "3043:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3053:7:14",
														"nodeType": "YulTypedName",
														"src": "3053:7:14",
														"type": ""
													}
												],
												"src": "3019:90:14"
											},
											{
												"body": {
													"nativeSrc": "3174:50:14",
													"nodeType": "YulBlock",
													"src": "3174:50:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3191:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3211:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3196:14:14",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:14"
																		},
																		"nativeSrc": "3196:21:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:14"
																},
																"nativeSrc": "3184:34:14",
																"nodeType": "YulFunctionCall",
																"src": "3184:34:14"
															},
															"nativeSrc": "3184:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:14"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3115:109:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3162:5:14",
														"nodeType": "YulTypedName",
														"src": "3162:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3169:3:14",
														"nodeType": "YulTypedName",
														"src": "3169:3:14",
														"type": ""
													}
												],
												"src": "3115:109:14"
											},
											{
												"body": {
													"nativeSrc": "3322:118:14",
													"nodeType": "YulBlock",
													"src": "3322:118:14",
													"statements": [
														{
															"nativeSrc": "3332:26:14",
															"nodeType": "YulAssignment",
															"src": "3332:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3340:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:14"
																},
																"nativeSrc": "3340:18:14",
																"nodeType": "YulFunctionCall",
																"src": "3340:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3332:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3406:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3430:1:14",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3415:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:14"
																		},
																		"nativeSrc": "3415:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3368:37:14",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:14"
																},
																"nativeSrc": "3368:65:14",
																"nodeType": "YulFunctionCall",
																"src": "3368:65:14"
															},
															"nativeSrc": "3368:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3230:210:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:14",
														"nodeType": "YulTypedName",
														"src": "3294:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3306:6:14",
														"nodeType": "YulTypedName",
														"src": "3306:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3317:4:14",
														"nodeType": "YulTypedName",
														"src": "3317:4:14",
														"type": ""
													}
												],
												"src": "3230:210:14"
											},
											{
												"body": {
													"nativeSrc": "3511:53:14",
													"nodeType": "YulBlock",
													"src": "3511:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3528:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3551:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3533:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:14"
																		},
																		"nativeSrc": "3533:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3521:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:14"
																},
																"nativeSrc": "3521:37:14",
																"nodeType": "YulFunctionCall",
																"src": "3521:37:14"
															},
															"nativeSrc": "3521:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3446:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3499:5:14",
														"nodeType": "YulTypedName",
														"src": "3499:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3506:3:14",
														"nodeType": "YulTypedName",
														"src": "3506:3:14",
														"type": ""
													}
												],
												"src": "3446:118:14"
											},
											{
												"body": {
													"nativeSrc": "3668:124:14",
													"nodeType": "YulBlock",
													"src": "3668:124:14",
													"statements": [
														{
															"nativeSrc": "3678:26:14",
															"nodeType": "YulAssignment",
															"src": "3678:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3690:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3701:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3686:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:14"
																},
																"nativeSrc": "3686:18:14",
																"nodeType": "YulFunctionCall",
																"src": "3686:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3678:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3758:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:1:14",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:14"
																		},
																		"nativeSrc": "3767:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3714:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:14"
																},
																"nativeSrc": "3714:71:14",
																"nodeType": "YulFunctionCall",
																"src": "3714:71:14"
															},
															"nativeSrc": "3714:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3570:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3640:9:14",
														"nodeType": "YulTypedName",
														"src": "3640:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3652:6:14",
														"nodeType": "YulTypedName",
														"src": "3652:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3663:4:14",
														"nodeType": "YulTypedName",
														"src": "3663:4:14",
														"type": ""
													}
												],
												"src": "3570:222:14"
											},
											{
												"body": {
													"nativeSrc": "3898:519:14",
													"nodeType": "YulBlock",
													"src": "3898:519:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3944:83:14",
																"nodeType": "YulBlock",
																"src": "3944:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3946:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:14"
																			},
																			"nativeSrc": "3946:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:14"
																		},
																		"nativeSrc": "3946:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3915:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:14"
																		},
																		"nativeSrc": "3915:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3911:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:14"
																},
																"nativeSrc": "3911:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3911:32:14"
															},
															"nativeSrc": "3908:119:14",
															"nodeType": "YulIf",
															"src": "3908:119:14"
														},
														{
															"nativeSrc": "4037:117:14",
															"nodeType": "YulBlock",
															"src": "4037:117:14",
															"statements": [
																{
																	"nativeSrc": "4052:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4066:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4056:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4081:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4081:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4116:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4127:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4112:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:14"
																				},
																				"nativeSrc": "4112:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4136:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4091:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:14"
																		},
																		"nativeSrc": "4091:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4081:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4164:118:14",
															"nodeType": "YulBlock",
															"src": "4164:118:14",
															"statements": [
																{
																	"nativeSrc": "4179:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4193:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4183:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4209:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4209:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4244:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4255:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:14"
																				},
																				"nativeSrc": "4240:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4264:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4219:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:14"
																		},
																		"nativeSrc": "4219:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4209:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4292:118:14",
															"nodeType": "YulBlock",
															"src": "4292:118:14",
															"statements": [
																{
																	"nativeSrc": "4307:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4321:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4311:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4337:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4337:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4372:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4383:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4368:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:14"
																				},
																				"nativeSrc": "4368:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4392:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4347:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:14"
																		},
																		"nativeSrc": "4347:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4337:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3798:619:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3852:9:14",
														"nodeType": "YulTypedName",
														"src": "3852:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3863:7:14",
														"nodeType": "YulTypedName",
														"src": "3863:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3875:6:14",
														"nodeType": "YulTypedName",
														"src": "3875:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3883:6:14",
														"nodeType": "YulTypedName",
														"src": "3883:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3891:6:14",
														"nodeType": "YulTypedName",
														"src": "3891:6:14",
														"type": ""
													}
												],
												"src": "3798:619:14"
											},
											{
												"body": {
													"nativeSrc": "4466:43:14",
													"nodeType": "YulBlock",
													"src": "4466:43:14",
													"statements": [
														{
															"nativeSrc": "4476:27:14",
															"nodeType": "YulAssignment",
															"src": "4476:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4491:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4498:4:14",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:14",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4487:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:14"
																},
																"nativeSrc": "4487:16:14",
																"nodeType": "YulFunctionCall",
																"src": "4487:16:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4476:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4423:86:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4448:5:14",
														"nodeType": "YulTypedName",
														"src": "4448:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4458:7:14",
														"nodeType": "YulTypedName",
														"src": "4458:7:14",
														"type": ""
													}
												],
												"src": "4423:86:14"
											},
											{
												"body": {
													"nativeSrc": "4576:51:14",
													"nodeType": "YulBlock",
													"src": "4576:51:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4593:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4614:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4598:15:14",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:14"
																		},
																		"nativeSrc": "4598:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4586:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:14"
																},
																"nativeSrc": "4586:35:14",
																"nodeType": "YulFunctionCall",
																"src": "4586:35:14"
															},
															"nativeSrc": "4586:35:14",
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:14"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4515:112:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4564:5:14",
														"nodeType": "YulTypedName",
														"src": "4564:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4571:3:14",
														"nodeType": "YulTypedName",
														"src": "4571:3:14",
														"type": ""
													}
												],
												"src": "4515:112:14"
											},
											{
												"body": {
													"nativeSrc": "4727:120:14",
													"nodeType": "YulBlock",
													"src": "4727:120:14",
													"statements": [
														{
															"nativeSrc": "4737:26:14",
															"nodeType": "YulAssignment",
															"src": "4737:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4749:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4760:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4745:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:14"
																},
																"nativeSrc": "4745:18:14",
																"nodeType": "YulFunctionCall",
																"src": "4745:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4737:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4813:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4826:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4837:1:14",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4822:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:14"
																		},
																		"nativeSrc": "4822:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4773:39:14",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:14"
																},
																"nativeSrc": "4773:67:14",
																"nodeType": "YulFunctionCall",
																"src": "4773:67:14"
															},
															"nativeSrc": "4773:67:14",
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4633:214:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4699:9:14",
														"nodeType": "YulTypedName",
														"src": "4699:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4711:6:14",
														"nodeType": "YulTypedName",
														"src": "4711:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4722:4:14",
														"nodeType": "YulTypedName",
														"src": "4722:4:14",
														"type": ""
													}
												],
												"src": "4633:214:14"
											},
											{
												"body": {
													"nativeSrc": "4919:263:14",
													"nodeType": "YulBlock",
													"src": "4919:263:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4965:83:14",
																"nodeType": "YulBlock",
																"src": "4965:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4967:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:14"
																			},
																			"nativeSrc": "4967:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:14"
																		},
																		"nativeSrc": "4967:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4940:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4949:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4936:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:14"
																		},
																		"nativeSrc": "4936:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4961:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4932:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:14"
																},
																"nativeSrc": "4932:32:14",
																"nodeType": "YulFunctionCall",
																"src": "4932:32:14"
															},
															"nativeSrc": "4929:119:14",
															"nodeType": "YulIf",
															"src": "4929:119:14"
														},
														{
															"nativeSrc": "5058:117:14",
															"nodeType": "YulBlock",
															"src": "5058:117:14",
															"statements": [
																{
																	"nativeSrc": "5073:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5087:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5077:6:14",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5102:63:14",
																	"nodeType": "YulAssignment",
																	"src": "5102:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5137:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5148:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5133:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:14"
																				},
																				"nativeSrc": "5133:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5157:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5112:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:14"
																		},
																		"nativeSrc": "5112:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5102:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4853:329:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4889:9:14",
														"nodeType": "YulTypedName",
														"src": "4889:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4900:7:14",
														"nodeType": "YulTypedName",
														"src": "4900:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4912:6:14",
														"nodeType": "YulTypedName",
														"src": "4912:6:14",
														"type": ""
													}
												],
												"src": "4853:329:14"
											},
											{
												"body": {
													"nativeSrc": "5271:391:14",
													"nodeType": "YulBlock",
													"src": "5271:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "5317:83:14",
																"nodeType": "YulBlock",
																"src": "5317:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5319:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "5319:77:14"
																			},
																			"nativeSrc": "5319:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5319:79:14"
																		},
																		"nativeSrc": "5319:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5319:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5292:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5292:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5301:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5301:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5288:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5288:3:14"
																		},
																		"nativeSrc": "5288:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5288:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5313:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5313:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5284:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5284:3:14"
																},
																"nativeSrc": "5284:32:14",
																"nodeType": "YulFunctionCall",
																"src": "5284:32:14"
															},
															"nativeSrc": "5281:119:14",
															"nodeType": "YulIf",
															"src": "5281:119:14"
														},
														{
															"nativeSrc": "5410:117:14",
															"nodeType": "YulBlock",
															"src": "5410:117:14",
															"statements": [
																{
																	"nativeSrc": "5425:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5425:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5439:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5439:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5429:6:14",
																			"nodeType": "YulTypedName",
																			"src": "5429:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5454:63:14",
																	"nodeType": "YulAssignment",
																	"src": "5454:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5489:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5489:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5500:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "5500:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5485:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5485:3:14"
																				},
																				"nativeSrc": "5485:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5485:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5509:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5509:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5464:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "5464:20:14"
																		},
																		"nativeSrc": "5464:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5464:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5454:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5454:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5537:118:14",
															"nodeType": "YulBlock",
															"src": "5537:118:14",
															"statements": [
																{
																	"nativeSrc": "5552:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5552:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5566:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5566:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5556:6:14",
																			"nodeType": "YulTypedName",
																			"src": "5556:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5582:63:14",
																	"nodeType": "YulAssignment",
																	"src": "5582:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5617:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5617:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5628:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "5628:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5613:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5613:3:14"
																				},
																				"nativeSrc": "5613:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5613:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5637:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5637:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5592:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "5592:20:14"
																		},
																		"nativeSrc": "5592:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5592:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5582:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5582:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5188:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5233:9:14",
														"nodeType": "YulTypedName",
														"src": "5233:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5244:7:14",
														"nodeType": "YulTypedName",
														"src": "5244:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5256:6:14",
														"nodeType": "YulTypedName",
														"src": "5256:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5264:6:14",
														"nodeType": "YulTypedName",
														"src": "5264:6:14",
														"type": ""
													}
												],
												"src": "5188:474:14"
											},
											{
												"body": {
													"nativeSrc": "5696:152:14",
													"nodeType": "YulBlock",
													"src": "5696:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5713:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5713:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5716:77:14",
																		"nodeType": "YulLiteral",
																		"src": "5716:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5706:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5706:6:14"
																},
																"nativeSrc": "5706:88:14",
																"nodeType": "YulFunctionCall",
																"src": "5706:88:14"
															},
															"nativeSrc": "5706:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "5706:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5810:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5810:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5813:4:14",
																		"nodeType": "YulLiteral",
																		"src": "5813:4:14",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5803:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5803:6:14"
																},
																"nativeSrc": "5803:15:14",
																"nodeType": "YulFunctionCall",
																"src": "5803:15:14"
															},
															"nativeSrc": "5803:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "5803:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5834:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5834:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5837:4:14",
																		"nodeType": "YulLiteral",
																		"src": "5837:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5827:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5827:6:14"
																},
																"nativeSrc": "5827:15:14",
																"nodeType": "YulFunctionCall",
																"src": "5827:15:14"
															},
															"nativeSrc": "5827:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "5827:15:14"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5668:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "5668:180:14"
											},
											{
												"body": {
													"nativeSrc": "5905:269:14",
													"nodeType": "YulBlock",
													"src": "5905:269:14",
													"statements": [
														{
															"nativeSrc": "5915:22:14",
															"nodeType": "YulAssignment",
															"src": "5915:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5929:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "5929:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5935:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5935:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5925:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5925:3:14"
																},
																"nativeSrc": "5925:12:14",
																"nodeType": "YulFunctionCall",
																"src": "5925:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5915:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5915:6:14"
																}
															]
														},
														{
															"nativeSrc": "5946:38:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5946:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5976:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "5976:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5982:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5982:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5972:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5972:3:14"
																},
																"nativeSrc": "5972:12:14",
																"nodeType": "YulFunctionCall",
																"src": "5972:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5950:18:14",
																	"nodeType": "YulTypedName",
																	"src": "5950:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6023:51:14",
																"nodeType": "YulBlock",
																"src": "6023:51:14",
																"statements": [
																	{
																		"nativeSrc": "6037:27:14",
																		"nodeType": "YulAssignment",
																		"src": "6037:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6051:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "6051:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6059:4:14",
																					"nodeType": "YulLiteral",
																					"src": "6059:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6047:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "6047:3:14"
																			},
																			"nativeSrc": "6047:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6047:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6037:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6037:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6003:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "6003:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5996:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5996:6:14"
																},
																"nativeSrc": "5996:26:14",
																"nodeType": "YulFunctionCall",
																"src": "5996:26:14"
															},
															"nativeSrc": "5993:81:14",
															"nodeType": "YulIf",
															"src": "5993:81:14"
														},
														{
															"body": {
																"nativeSrc": "6126:42:14",
																"nodeType": "YulBlock",
																"src": "6126:42:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6140:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "6140:16:14"
																			},
																			"nativeSrc": "6140:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6140:18:14"
																		},
																		"nativeSrc": "6140:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6140:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6090:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "6090:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6113:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6113:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6121:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6121:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6110:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "6110:2:14"
																		},
																		"nativeSrc": "6110:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6110:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6087:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "6087:2:14"
																},
																"nativeSrc": "6087:38:14",
																"nodeType": "YulFunctionCall",
																"src": "6087:38:14"
															},
															"nativeSrc": "6084:84:14",
															"nodeType": "YulIf",
															"src": "6084:84:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5854:320:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5889:4:14",
														"nodeType": "YulTypedName",
														"src": "5889:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5898:6:14",
														"nodeType": "YulTypedName",
														"src": "5898:6:14",
														"type": ""
													}
												],
												"src": "5854:320:14"
											},
											{
												"body": {
													"nativeSrc": "6208:152:14",
													"nodeType": "YulBlock",
													"src": "6208:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6225:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6225:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6228:77:14",
																		"nodeType": "YulLiteral",
																		"src": "6228:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6218:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6218:6:14"
																},
																"nativeSrc": "6218:88:14",
																"nodeType": "YulFunctionCall",
																"src": "6218:88:14"
															},
															"nativeSrc": "6218:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "6218:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6322:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6322:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6325:4:14",
																		"nodeType": "YulLiteral",
																		"src": "6325:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6315:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6315:6:14"
																},
																"nativeSrc": "6315:15:14",
																"nodeType": "YulFunctionCall",
																"src": "6315:15:14"
															},
															"nativeSrc": "6315:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "6315:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6346:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6346:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6349:4:14",
																		"nodeType": "YulLiteral",
																		"src": "6349:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6339:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6339:6:14"
																},
																"nativeSrc": "6339:15:14",
																"nodeType": "YulFunctionCall",
																"src": "6339:15:14"
															},
															"nativeSrc": "6339:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "6339:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6180:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "6180:180:14"
											},
											{
												"body": {
													"nativeSrc": "6410:147:14",
													"nodeType": "YulBlock",
													"src": "6410:147:14",
													"statements": [
														{
															"nativeSrc": "6420:25:14",
															"nodeType": "YulAssignment",
															"src": "6420:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6443:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "6443:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6425:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "6425:17:14"
																},
																"nativeSrc": "6425:20:14",
																"nodeType": "YulFunctionCall",
																"src": "6425:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6420:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "6420:1:14"
																}
															]
														},
														{
															"nativeSrc": "6454:25:14",
															"nodeType": "YulAssignment",
															"src": "6454:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6477:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "6477:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6459:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "6459:17:14"
																},
																"nativeSrc": "6459:20:14",
																"nodeType": "YulFunctionCall",
																"src": "6459:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6454:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "6454:1:14"
																}
															]
														},
														{
															"nativeSrc": "6488:16:14",
															"nodeType": "YulAssignment",
															"src": "6488:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6499:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "6499:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6502:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "6502:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6495:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6495:3:14"
																},
																"nativeSrc": "6495:9:14",
																"nodeType": "YulFunctionCall",
																"src": "6495:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6488:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6488:3:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6528:22:14",
																"nodeType": "YulBlock",
																"src": "6528:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6530:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "6530:16:14"
																			},
																			"nativeSrc": "6530:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6530:18:14"
																		},
																		"nativeSrc": "6530:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6530:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6520:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "6520:1:14"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6523:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6523:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6517:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "6517:2:14"
																},
																"nativeSrc": "6517:10:14",
																"nodeType": "YulFunctionCall",
																"src": "6517:10:14"
															},
															"nativeSrc": "6514:36:14",
															"nodeType": "YulIf",
															"src": "6514:36:14"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6366:191:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6397:1:14",
														"nodeType": "YulTypedName",
														"src": "6397:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6400:1:14",
														"nodeType": "YulTypedName",
														"src": "6400:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6406:3:14",
														"nodeType": "YulTypedName",
														"src": "6406:3:14",
														"type": ""
													}
												],
												"src": "6366:191:14"
											},
											{
												"body": {
													"nativeSrc": "6669:118:14",
													"nodeType": "YulBlock",
													"src": "6669:118:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6691:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6691:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6699:1:14",
																				"nodeType": "YulLiteral",
																				"src": "6699:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6687:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6687:3:14"
																		},
																		"nativeSrc": "6687:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6687:14:14"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "6703:34:14",
																		"nodeType": "YulLiteral",
																		"src": "6703:34:14",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6680:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6680:6:14"
																},
																"nativeSrc": "6680:58:14",
																"nodeType": "YulFunctionCall",
																"src": "6680:58:14"
															},
															"nativeSrc": "6680:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "6680:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6759:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6759:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6767:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6767:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6755:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6755:3:14"
																		},
																		"nativeSrc": "6755:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6755:15:14"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "6772:7:14",
																		"nodeType": "YulLiteral",
																		"src": "6772:7:14",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6748:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6748:6:14"
																},
																"nativeSrc": "6748:32:14",
																"nodeType": "YulFunctionCall",
																"src": "6748:32:14"
															},
															"nativeSrc": "6748:32:14",
															"nodeType": "YulExpressionStatement",
															"src": "6748:32:14"
														}
													]
												},
												"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
												"nativeSrc": "6563:224:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6661:6:14",
														"nodeType": "YulTypedName",
														"src": "6661:6:14",
														"type": ""
													}
												],
												"src": "6563:224:14"
											},
											{
												"body": {
													"nativeSrc": "6939:220:14",
													"nodeType": "YulBlock",
													"src": "6939:220:14",
													"statements": [
														{
															"nativeSrc": "6949:74:14",
															"nodeType": "YulAssignment",
															"src": "6949:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7015:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7015:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7020:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7020:2:14",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6956:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "6956:58:14"
																},
																"nativeSrc": "6956:67:14",
																"nodeType": "YulFunctionCall",
																"src": "6956:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6949:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6949:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7121:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7121:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																	"nativeSrc": "7032:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "7032:88:14"
																},
																"nativeSrc": "7032:93:14",
																"nodeType": "YulFunctionCall",
																"src": "7032:93:14"
															},
															"nativeSrc": "7032:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "7032:93:14"
														},
														{
															"nativeSrc": "7134:19:14",
															"nodeType": "YulAssignment",
															"src": "7134:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7145:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7145:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7150:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7150:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7141:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7141:3:14"
																},
																"nativeSrc": "7141:12:14",
																"nodeType": "YulFunctionCall",
																"src": "7141:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7134:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7134:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6793:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6927:3:14",
														"nodeType": "YulTypedName",
														"src": "6927:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6935:3:14",
														"nodeType": "YulTypedName",
														"src": "6935:3:14",
														"type": ""
													}
												],
												"src": "6793:366:14"
											},
											{
												"body": {
													"nativeSrc": "7336:248:14",
													"nodeType": "YulBlock",
													"src": "7336:248:14",
													"statements": [
														{
															"nativeSrc": "7346:26:14",
															"nodeType": "YulAssignment",
															"src": "7346:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7358:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "7358:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7369:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7369:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7354:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7354:3:14"
																},
																"nativeSrc": "7354:18:14",
																"nodeType": "YulFunctionCall",
																"src": "7354:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7346:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7346:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7393:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7393:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7404:1:14",
																				"nodeType": "YulLiteral",
																				"src": "7404:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7389:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7389:3:14"
																		},
																		"nativeSrc": "7389:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7389:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7412:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "7412:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7418:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7418:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7408:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7408:3:14"
																		},
																		"nativeSrc": "7408:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7408:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7382:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7382:6:14"
																},
																"nativeSrc": "7382:47:14",
																"nodeType": "YulFunctionCall",
																"src": "7382:47:14"
															},
															"nativeSrc": "7382:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "7382:47:14"
														},
														{
															"nativeSrc": "7438:139:14",
															"nodeType": "YulAssignment",
															"src": "7438:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7572:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "7572:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7446:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "7446:124:14"
																},
																"nativeSrc": "7446:131:14",
																"nodeType": "YulFunctionCall",
																"src": "7446:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7438:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7438:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7165:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7316:9:14",
														"nodeType": "YulTypedName",
														"src": "7316:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7331:4:14",
														"nodeType": "YulTypedName",
														"src": "7331:4:14",
														"type": ""
													}
												],
												"src": "7165:419:14"
											},
											{
												"body": {
													"nativeSrc": "7696:117:14",
													"nodeType": "YulBlock",
													"src": "7696:117:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7718:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7718:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7726:1:14",
																				"nodeType": "YulLiteral",
																				"src": "7726:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7714:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7714:3:14"
																		},
																		"nativeSrc": "7714:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7714:14:14"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "7730:34:14",
																		"nodeType": "YulLiteral",
																		"src": "7730:34:14",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7707:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:14"
																},
																"nativeSrc": "7707:58:14",
																"nodeType": "YulFunctionCall",
																"src": "7707:58:14"
															},
															"nativeSrc": "7707:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "7707:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7786:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7786:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7794:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7794:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7782:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7782:3:14"
																		},
																		"nativeSrc": "7782:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7782:15:14"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "7799:6:14",
																		"nodeType": "YulLiteral",
																		"src": "7799:6:14",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7775:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7775:6:14"
																},
																"nativeSrc": "7775:31:14",
																"nodeType": "YulFunctionCall",
																"src": "7775:31:14"
															},
															"nativeSrc": "7775:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "7775:31:14"
														}
													]
												},
												"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
												"nativeSrc": "7590:223:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7688:6:14",
														"nodeType": "YulTypedName",
														"src": "7688:6:14",
														"type": ""
													}
												],
												"src": "7590:223:14"
											},
											{
												"body": {
													"nativeSrc": "7965:220:14",
													"nodeType": "YulBlock",
													"src": "7965:220:14",
													"statements": [
														{
															"nativeSrc": "7975:74:14",
															"nodeType": "YulAssignment",
															"src": "7975:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8041:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8041:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8046:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8046:2:14",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7982:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "7982:58:14"
																},
																"nativeSrc": "7982:67:14",
																"nodeType": "YulFunctionCall",
																"src": "7982:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7975:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7975:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8147:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8147:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																	"nativeSrc": "8058:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "8058:88:14"
																},
																"nativeSrc": "8058:93:14",
																"nodeType": "YulFunctionCall",
																"src": "8058:93:14"
															},
															"nativeSrc": "8058:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "8058:93:14"
														},
														{
															"nativeSrc": "8160:19:14",
															"nodeType": "YulAssignment",
															"src": "8160:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8171:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8171:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8176:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8176:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8167:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8167:3:14"
																},
																"nativeSrc": "8167:12:14",
																"nodeType": "YulFunctionCall",
																"src": "8167:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8160:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8160:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7819:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7953:3:14",
														"nodeType": "YulTypedName",
														"src": "7953:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7961:3:14",
														"nodeType": "YulTypedName",
														"src": "7961:3:14",
														"type": ""
													}
												],
												"src": "7819:366:14"
											},
											{
												"body": {
													"nativeSrc": "8362:248:14",
													"nodeType": "YulBlock",
													"src": "8362:248:14",
													"statements": [
														{
															"nativeSrc": "8372:26:14",
															"nodeType": "YulAssignment",
															"src": "8372:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8384:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8384:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8395:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8395:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8380:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8380:3:14"
																},
																"nativeSrc": "8380:18:14",
																"nodeType": "YulFunctionCall",
																"src": "8380:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8372:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8372:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8419:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8419:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8430:1:14",
																				"nodeType": "YulLiteral",
																				"src": "8430:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8415:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8415:3:14"
																		},
																		"nativeSrc": "8415:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8415:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8438:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "8438:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8444:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8444:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8434:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8434:3:14"
																		},
																		"nativeSrc": "8434:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8434:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8408:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8408:6:14"
																},
																"nativeSrc": "8408:47:14",
																"nodeType": "YulFunctionCall",
																"src": "8408:47:14"
															},
															"nativeSrc": "8408:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "8408:47:14"
														},
														{
															"nativeSrc": "8464:139:14",
															"nodeType": "YulAssignment",
															"src": "8464:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8598:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "8598:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8472:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "8472:124:14"
																},
																"nativeSrc": "8472:131:14",
																"nodeType": "YulFunctionCall",
																"src": "8472:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8464:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8464:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8191:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8342:9:14",
														"nodeType": "YulTypedName",
														"src": "8342:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8357:4:14",
														"nodeType": "YulTypedName",
														"src": "8357:4:14",
														"type": ""
													}
												],
												"src": "8191:419:14"
											},
											{
												"body": {
													"nativeSrc": "8722:115:14",
													"nodeType": "YulBlock",
													"src": "8722:115:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8744:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8744:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8752:1:14",
																				"nodeType": "YulLiteral",
																				"src": "8752:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8740:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8740:3:14"
																		},
																		"nativeSrc": "8740:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8740:14:14"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "8756:34:14",
																		"nodeType": "YulLiteral",
																		"src": "8756:34:14",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8733:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8733:6:14"
																},
																"nativeSrc": "8733:58:14",
																"nodeType": "YulFunctionCall",
																"src": "8733:58:14"
															},
															"nativeSrc": "8733:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "8733:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8812:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8812:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8820:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8820:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8808:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8808:3:14"
																		},
																		"nativeSrc": "8808:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8808:15:14"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "8825:4:14",
																		"nodeType": "YulLiteral",
																		"src": "8825:4:14",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8801:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8801:6:14"
																},
																"nativeSrc": "8801:29:14",
																"nodeType": "YulFunctionCall",
																"src": "8801:29:14"
															},
															"nativeSrc": "8801:29:14",
															"nodeType": "YulExpressionStatement",
															"src": "8801:29:14"
														}
													]
												},
												"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
												"nativeSrc": "8616:221:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8714:6:14",
														"nodeType": "YulTypedName",
														"src": "8714:6:14",
														"type": ""
													}
												],
												"src": "8616:221:14"
											},
											{
												"body": {
													"nativeSrc": "8989:220:14",
													"nodeType": "YulBlock",
													"src": "8989:220:14",
													"statements": [
														{
															"nativeSrc": "8999:74:14",
															"nodeType": "YulAssignment",
															"src": "8999:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9065:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9065:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9070:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9070:2:14",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9006:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "9006:58:14"
																},
																"nativeSrc": "9006:67:14",
																"nodeType": "YulFunctionCall",
																"src": "9006:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8999:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8999:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9171:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9171:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																	"nativeSrc": "9082:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "9082:88:14"
																},
																"nativeSrc": "9082:93:14",
																"nodeType": "YulFunctionCall",
																"src": "9082:93:14"
															},
															"nativeSrc": "9082:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "9082:93:14"
														},
														{
															"nativeSrc": "9184:19:14",
															"nodeType": "YulAssignment",
															"src": "9184:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9195:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9195:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9200:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9200:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9191:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9191:3:14"
																},
																"nativeSrc": "9191:12:14",
																"nodeType": "YulFunctionCall",
																"src": "9191:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9184:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9184:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8843:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8977:3:14",
														"nodeType": "YulTypedName",
														"src": "8977:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8985:3:14",
														"nodeType": "YulTypedName",
														"src": "8985:3:14",
														"type": ""
													}
												],
												"src": "8843:366:14"
											},
											{
												"body": {
													"nativeSrc": "9386:248:14",
													"nodeType": "YulBlock",
													"src": "9386:248:14",
													"statements": [
														{
															"nativeSrc": "9396:26:14",
															"nodeType": "YulAssignment",
															"src": "9396:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9408:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9408:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9419:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9419:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9404:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9404:3:14"
																},
																"nativeSrc": "9404:18:14",
																"nodeType": "YulFunctionCall",
																"src": "9404:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9396:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9396:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9443:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9443:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9454:1:14",
																				"nodeType": "YulLiteral",
																				"src": "9454:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9439:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9439:3:14"
																		},
																		"nativeSrc": "9439:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9439:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9462:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "9462:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9468:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9468:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9458:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9458:3:14"
																		},
																		"nativeSrc": "9458:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9458:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9432:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9432:6:14"
																},
																"nativeSrc": "9432:47:14",
																"nodeType": "YulFunctionCall",
																"src": "9432:47:14"
															},
															"nativeSrc": "9432:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "9432:47:14"
														},
														{
															"nativeSrc": "9488:139:14",
															"nodeType": "YulAssignment",
															"src": "9488:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9622:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "9622:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9496:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "9496:124:14"
																},
																"nativeSrc": "9496:131:14",
																"nodeType": "YulFunctionCall",
																"src": "9496:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9488:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9488:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9215:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9366:9:14",
														"nodeType": "YulTypedName",
														"src": "9366:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9381:4:14",
														"nodeType": "YulTypedName",
														"src": "9381:4:14",
														"type": ""
													}
												],
												"src": "9215:419:14"
											},
											{
												"body": {
													"nativeSrc": "9746:73:14",
													"nodeType": "YulBlock",
													"src": "9746:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9768:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9768:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9776:1:14",
																				"nodeType": "YulLiteral",
																				"src": "9776:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9764:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9764:3:14"
																		},
																		"nativeSrc": "9764:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9764:14:14"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "9780:31:14",
																		"nodeType": "YulLiteral",
																		"src": "9780:31:14",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9757:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9757:6:14"
																},
																"nativeSrc": "9757:55:14",
																"nodeType": "YulFunctionCall",
																"src": "9757:55:14"
															},
															"nativeSrc": "9757:55:14",
															"nodeType": "YulExpressionStatement",
															"src": "9757:55:14"
														}
													]
												},
												"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
												"nativeSrc": "9640:179:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9738:6:14",
														"nodeType": "YulTypedName",
														"src": "9738:6:14",
														"type": ""
													}
												],
												"src": "9640:179:14"
											},
											{
												"body": {
													"nativeSrc": "9971:220:14",
													"nodeType": "YulBlock",
													"src": "9971:220:14",
													"statements": [
														{
															"nativeSrc": "9981:74:14",
															"nodeType": "YulAssignment",
															"src": "9981:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10047:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "10047:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10052:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10052:2:14",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9988:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "9988:58:14"
																},
																"nativeSrc": "9988:67:14",
																"nodeType": "YulFunctionCall",
																"src": "9988:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9981:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9981:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10153:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "10153:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																	"nativeSrc": "10064:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "10064:88:14"
																},
																"nativeSrc": "10064:93:14",
																"nodeType": "YulFunctionCall",
																"src": "10064:93:14"
															},
															"nativeSrc": "10064:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "10064:93:14"
														},
														{
															"nativeSrc": "10166:19:14",
															"nodeType": "YulAssignment",
															"src": "10166:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10177:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "10177:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10182:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10182:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10173:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10173:3:14"
																},
																"nativeSrc": "10173:12:14",
																"nodeType": "YulFunctionCall",
																"src": "10173:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10166:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10166:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9825:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9959:3:14",
														"nodeType": "YulTypedName",
														"src": "9959:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9967:3:14",
														"nodeType": "YulTypedName",
														"src": "9967:3:14",
														"type": ""
													}
												],
												"src": "9825:366:14"
											},
											{
												"body": {
													"nativeSrc": "10368:248:14",
													"nodeType": "YulBlock",
													"src": "10368:248:14",
													"statements": [
														{
															"nativeSrc": "10378:26:14",
															"nodeType": "YulAssignment",
															"src": "10378:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10390:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "10390:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10401:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10401:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10386:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10386:3:14"
																},
																"nativeSrc": "10386:18:14",
																"nodeType": "YulFunctionCall",
																"src": "10386:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10378:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "10378:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10425:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10425:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10436:1:14",
																				"nodeType": "YulLiteral",
																				"src": "10436:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10421:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10421:3:14"
																		},
																		"nativeSrc": "10421:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10421:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10444:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "10444:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10450:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10450:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10440:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10440:3:14"
																		},
																		"nativeSrc": "10440:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10440:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10414:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10414:6:14"
																},
																"nativeSrc": "10414:47:14",
																"nodeType": "YulFunctionCall",
																"src": "10414:47:14"
															},
															"nativeSrc": "10414:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "10414:47:14"
														},
														{
															"nativeSrc": "10470:139:14",
															"nodeType": "YulAssignment",
															"src": "10470:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10604:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "10604:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10478:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "10478:124:14"
																},
																"nativeSrc": "10478:131:14",
																"nodeType": "YulFunctionCall",
																"src": "10478:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10470:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "10470:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10197:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10348:9:14",
														"nodeType": "YulTypedName",
														"src": "10348:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10363:4:14",
														"nodeType": "YulTypedName",
														"src": "10363:4:14",
														"type": ""
													}
												],
												"src": "10197:419:14"
											},
											{
												"body": {
													"nativeSrc": "10728:118:14",
													"nodeType": "YulBlock",
													"src": "10728:118:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10750:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10750:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10758:1:14",
																				"nodeType": "YulLiteral",
																				"src": "10758:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10746:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10746:3:14"
																		},
																		"nativeSrc": "10746:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10746:14:14"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "10762:34:14",
																		"nodeType": "YulLiteral",
																		"src": "10762:34:14",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10739:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10739:6:14"
																},
																"nativeSrc": "10739:58:14",
																"nodeType": "YulFunctionCall",
																"src": "10739:58:14"
															},
															"nativeSrc": "10739:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "10739:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10818:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10818:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10826:2:14",
																				"nodeType": "YulLiteral",
																				"src": "10826:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10814:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10814:3:14"
																		},
																		"nativeSrc": "10814:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10814:15:14"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "10831:7:14",
																		"nodeType": "YulLiteral",
																		"src": "10831:7:14",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10807:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10807:6:14"
																},
																"nativeSrc": "10807:32:14",
																"nodeType": "YulFunctionCall",
																"src": "10807:32:14"
															},
															"nativeSrc": "10807:32:14",
															"nodeType": "YulExpressionStatement",
															"src": "10807:32:14"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nativeSrc": "10622:224:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10720:6:14",
														"nodeType": "YulTypedName",
														"src": "10720:6:14",
														"type": ""
													}
												],
												"src": "10622:224:14"
											},
											{
												"body": {
													"nativeSrc": "10998:220:14",
													"nodeType": "YulBlock",
													"src": "10998:220:14",
													"statements": [
														{
															"nativeSrc": "11008:74:14",
															"nodeType": "YulAssignment",
															"src": "11008:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11074:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "11074:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11079:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11079:2:14",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11015:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "11015:58:14"
																},
																"nativeSrc": "11015:67:14",
																"nodeType": "YulFunctionCall",
																"src": "11015:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11008:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11008:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11180:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "11180:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nativeSrc": "11091:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "11091:88:14"
																},
																"nativeSrc": "11091:93:14",
																"nodeType": "YulFunctionCall",
																"src": "11091:93:14"
															},
															"nativeSrc": "11091:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "11091:93:14"
														},
														{
															"nativeSrc": "11193:19:14",
															"nodeType": "YulAssignment",
															"src": "11193:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11204:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "11204:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11209:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11209:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11200:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11200:3:14"
																},
																"nativeSrc": "11200:12:14",
																"nodeType": "YulFunctionCall",
																"src": "11200:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11193:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11193:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10852:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10986:3:14",
														"nodeType": "YulTypedName",
														"src": "10986:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10994:3:14",
														"nodeType": "YulTypedName",
														"src": "10994:3:14",
														"type": ""
													}
												],
												"src": "10852:366:14"
											},
											{
												"body": {
													"nativeSrc": "11395:248:14",
													"nodeType": "YulBlock",
													"src": "11395:248:14",
													"statements": [
														{
															"nativeSrc": "11405:26:14",
															"nodeType": "YulAssignment",
															"src": "11405:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11417:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "11417:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11428:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11428:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11413:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11413:3:14"
																},
																"nativeSrc": "11413:18:14",
																"nodeType": "YulFunctionCall",
																"src": "11413:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11405:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "11405:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11452:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11452:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11463:1:14",
																				"nodeType": "YulLiteral",
																				"src": "11463:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11448:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11448:3:14"
																		},
																		"nativeSrc": "11448:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11448:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11471:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "11471:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11477:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11477:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11467:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11467:3:14"
																		},
																		"nativeSrc": "11467:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11467:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11441:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11441:6:14"
																},
																"nativeSrc": "11441:47:14",
																"nodeType": "YulFunctionCall",
																"src": "11441:47:14"
															},
															"nativeSrc": "11441:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "11441:47:14"
														},
														{
															"nativeSrc": "11497:139:14",
															"nodeType": "YulAssignment",
															"src": "11497:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11631:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "11631:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11505:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "11505:124:14"
																},
																"nativeSrc": "11505:131:14",
																"nodeType": "YulFunctionCall",
																"src": "11505:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11497:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "11497:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11224:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11375:9:14",
														"nodeType": "YulTypedName",
														"src": "11375:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11390:4:14",
														"nodeType": "YulTypedName",
														"src": "11390:4:14",
														"type": ""
													}
												],
												"src": "11224:419:14"
											},
											{
												"body": {
													"nativeSrc": "11755:116:14",
													"nodeType": "YulBlock",
													"src": "11755:116:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11777:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "11777:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11785:1:14",
																				"nodeType": "YulLiteral",
																				"src": "11785:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11773:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11773:3:14"
																		},
																		"nativeSrc": "11773:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11773:14:14"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "11789:34:14",
																		"nodeType": "YulLiteral",
																		"src": "11789:34:14",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11766:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11766:6:14"
																},
																"nativeSrc": "11766:58:14",
																"nodeType": "YulFunctionCall",
																"src": "11766:58:14"
															},
															"nativeSrc": "11766:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "11766:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11845:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "11845:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11853:2:14",
																				"nodeType": "YulLiteral",
																				"src": "11853:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11841:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11841:3:14"
																		},
																		"nativeSrc": "11841:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11841:15:14"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "11858:5:14",
																		"nodeType": "YulLiteral",
																		"src": "11858:5:14",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11834:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11834:6:14"
																},
																"nativeSrc": "11834:30:14",
																"nodeType": "YulFunctionCall",
																"src": "11834:30:14"
															},
															"nativeSrc": "11834:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "11834:30:14"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nativeSrc": "11649:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11747:6:14",
														"nodeType": "YulTypedName",
														"src": "11747:6:14",
														"type": ""
													}
												],
												"src": "11649:222:14"
											},
											{
												"body": {
													"nativeSrc": "12023:220:14",
													"nodeType": "YulBlock",
													"src": "12023:220:14",
													"statements": [
														{
															"nativeSrc": "12033:74:14",
															"nodeType": "YulAssignment",
															"src": "12033:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12099:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12099:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12104:2:14",
																		"nodeType": "YulLiteral",
																		"src": "12104:2:14",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12040:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "12040:58:14"
																},
																"nativeSrc": "12040:67:14",
																"nodeType": "YulFunctionCall",
																"src": "12040:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12033:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12033:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12205:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12205:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nativeSrc": "12116:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "12116:88:14"
																},
																"nativeSrc": "12116:93:14",
																"nodeType": "YulFunctionCall",
																"src": "12116:93:14"
															},
															"nativeSrc": "12116:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "12116:93:14"
														},
														{
															"nativeSrc": "12218:19:14",
															"nodeType": "YulAssignment",
															"src": "12218:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12229:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12229:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12234:2:14",
																		"nodeType": "YulLiteral",
																		"src": "12234:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12225:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12225:3:14"
																},
																"nativeSrc": "12225:12:14",
																"nodeType": "YulFunctionCall",
																"src": "12225:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12218:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12218:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11877:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12011:3:14",
														"nodeType": "YulTypedName",
														"src": "12011:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12019:3:14",
														"nodeType": "YulTypedName",
														"src": "12019:3:14",
														"type": ""
													}
												],
												"src": "11877:366:14"
											},
											{
												"body": {
													"nativeSrc": "12420:248:14",
													"nodeType": "YulBlock",
													"src": "12420:248:14",
													"statements": [
														{
															"nativeSrc": "12430:26:14",
															"nodeType": "YulAssignment",
															"src": "12430:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12442:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "12442:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12453:2:14",
																		"nodeType": "YulLiteral",
																		"src": "12453:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12438:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12438:3:14"
																},
																"nativeSrc": "12438:18:14",
																"nodeType": "YulFunctionCall",
																"src": "12438:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12430:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "12430:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12477:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "12477:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12488:1:14",
																				"nodeType": "YulLiteral",
																				"src": "12488:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12473:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12473:3:14"
																		},
																		"nativeSrc": "12473:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12473:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12496:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "12496:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12502:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "12502:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12492:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12492:3:14"
																		},
																		"nativeSrc": "12492:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12492:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12466:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12466:6:14"
																},
																"nativeSrc": "12466:47:14",
																"nodeType": "YulFunctionCall",
																"src": "12466:47:14"
															},
															"nativeSrc": "12466:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "12466:47:14"
														},
														{
															"nativeSrc": "12522:139:14",
															"nodeType": "YulAssignment",
															"src": "12522:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12656:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "12656:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12530:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "12530:124:14"
																},
																"nativeSrc": "12530:131:14",
																"nodeType": "YulFunctionCall",
																"src": "12530:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12522:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "12522:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12249:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12400:9:14",
														"nodeType": "YulTypedName",
														"src": "12400:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12415:4:14",
														"nodeType": "YulTypedName",
														"src": "12415:4:14",
														"type": ""
													}
												],
												"src": "12249:419:14"
											},
											{
												"body": {
													"nativeSrc": "12780:119:14",
													"nodeType": "YulBlock",
													"src": "12780:119:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12802:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12802:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12810:1:14",
																				"nodeType": "YulLiteral",
																				"src": "12810:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12798:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12798:3:14"
																		},
																		"nativeSrc": "12798:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12798:14:14"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "12814:34:14",
																		"nodeType": "YulLiteral",
																		"src": "12814:34:14",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12791:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12791:6:14"
																},
																"nativeSrc": "12791:58:14",
																"nodeType": "YulFunctionCall",
																"src": "12791:58:14"
															},
															"nativeSrc": "12791:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "12791:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12870:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12870:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12878:2:14",
																				"nodeType": "YulLiteral",
																				"src": "12878:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12866:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12866:3:14"
																		},
																		"nativeSrc": "12866:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12866:15:14"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "12883:8:14",
																		"nodeType": "YulLiteral",
																		"src": "12883:8:14",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12859:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12859:6:14"
																},
																"nativeSrc": "12859:33:14",
																"nodeType": "YulFunctionCall",
																"src": "12859:33:14"
															},
															"nativeSrc": "12859:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "12859:33:14"
														}
													]
												},
												"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
												"nativeSrc": "12674:225:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12772:6:14",
														"nodeType": "YulTypedName",
														"src": "12772:6:14",
														"type": ""
													}
												],
												"src": "12674:225:14"
											},
											{
												"body": {
													"nativeSrc": "13051:220:14",
													"nodeType": "YulBlock",
													"src": "13051:220:14",
													"statements": [
														{
															"nativeSrc": "13061:74:14",
															"nodeType": "YulAssignment",
															"src": "13061:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13127:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "13127:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13132:2:14",
																		"nodeType": "YulLiteral",
																		"src": "13132:2:14",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13068:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "13068:58:14"
																},
																"nativeSrc": "13068:67:14",
																"nodeType": "YulFunctionCall",
																"src": "13068:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13061:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13061:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13233:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "13233:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"nativeSrc": "13144:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "13144:88:14"
																},
																"nativeSrc": "13144:93:14",
																"nodeType": "YulFunctionCall",
																"src": "13144:93:14"
															},
															"nativeSrc": "13144:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "13144:93:14"
														},
														{
															"nativeSrc": "13246:19:14",
															"nodeType": "YulAssignment",
															"src": "13246:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13257:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "13257:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13262:2:14",
																		"nodeType": "YulLiteral",
																		"src": "13262:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13253:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13253:3:14"
																},
																"nativeSrc": "13253:12:14",
																"nodeType": "YulFunctionCall",
																"src": "13253:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13246:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13246:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12905:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13039:3:14",
														"nodeType": "YulTypedName",
														"src": "13039:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13047:3:14",
														"nodeType": "YulTypedName",
														"src": "13047:3:14",
														"type": ""
													}
												],
												"src": "12905:366:14"
											},
											{
												"body": {
													"nativeSrc": "13448:248:14",
													"nodeType": "YulBlock",
													"src": "13448:248:14",
													"statements": [
														{
															"nativeSrc": "13458:26:14",
															"nodeType": "YulAssignment",
															"src": "13458:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13470:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "13470:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13481:2:14",
																		"nodeType": "YulLiteral",
																		"src": "13481:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13466:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13466:3:14"
																},
																"nativeSrc": "13466:18:14",
																"nodeType": "YulFunctionCall",
																"src": "13466:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13458:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "13458:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13505:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13505:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13516:1:14",
																				"nodeType": "YulLiteral",
																				"src": "13516:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13501:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13501:3:14"
																		},
																		"nativeSrc": "13501:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13501:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13524:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "13524:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13530:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13530:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13520:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13520:3:14"
																		},
																		"nativeSrc": "13520:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13520:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13494:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "13494:6:14"
																},
																"nativeSrc": "13494:47:14",
																"nodeType": "YulFunctionCall",
																"src": "13494:47:14"
															},
															"nativeSrc": "13494:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "13494:47:14"
														},
														{
															"nativeSrc": "13550:139:14",
															"nodeType": "YulAssignment",
															"src": "13550:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13684:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "13684:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13558:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "13558:124:14"
																},
																"nativeSrc": "13558:131:14",
																"nodeType": "YulFunctionCall",
																"src": "13558:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13550:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "13550:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13277:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13428:9:14",
														"nodeType": "YulTypedName",
														"src": "13428:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13443:4:14",
														"nodeType": "YulTypedName",
														"src": "13443:4:14",
														"type": ""
													}
												],
												"src": "13277:419:14"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a7575f3560e01c8063395093511161006f578063395093511461016557806370a082311461019557806395d89b41146101c5578063a457c2d7146101e3578063a9059cbb14610213578063dd62ed3e14610243576100a7565b806306fdde03146100ab578063095ea7b3146100c957806318160ddd146100f957806323b872dd14610117578063313ce56714610147575b5f80fd5b6100b3610273565b6040516100c09190610add565b60405180910390f35b6100e360048036038101906100de9190610b8e565b610303565b6040516100f09190610be6565b60405180910390f35b610101610325565b60405161010e9190610c0e565b60405180910390f35b610131600480360381019061012c9190610c27565b61032e565b60405161013e9190610be6565b60405180910390f35b61014f61035c565b60405161015c9190610c92565b60405180910390f35b61017f600480360381019061017a9190610b8e565b610364565b60405161018c9190610be6565b60405180910390f35b6101af60048036038101906101aa9190610cab565b61039a565b6040516101bc9190610c0e565b60405180910390f35b6101cd6103df565b6040516101da9190610add565b60405180910390f35b6101fd60048036038101906101f89190610b8e565b61046f565b60405161020a9190610be6565b60405180910390f35b61022d60048036038101906102289190610b8e565b6104e4565b60405161023a9190610be6565b60405180910390f35b61025d60048036038101906102589190610cd6565b610506565b60405161026a9190610c0e565b60405180910390f35b60606003805461028290610d41565b80601f01602080910402602001604051908101604052809291908181526020018280546102ae90610d41565b80156102f95780601f106102d0576101008083540402835291602001916102f9565b820191905f5260205f20905b8154815290600101906020018083116102dc57829003601f168201915b5050505050905090565b5f8061030d610588565b905061031a81858561058f565b600191505092915050565b5f600254905090565b5f80610338610588565b9050610345858285610752565b6103508585856107dd565b60019150509392505050565b5f6012905090565b5f8061036e610588565b905061038f8185856103808589610506565b61038a9190610d9e565b61058f565b600191505092915050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600480546103ee90610d41565b80601f016020809104026020016040519081016040528092919081815260200182805461041a90610d41565b80156104655780601f1061043c57610100808354040283529160200191610465565b820191905f5260205f20905b81548152906001019060200180831161044857829003601f168201915b5050505050905090565b5f80610479610588565b90505f6104868286610506565b9050838110156104cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c290610e41565b60405180910390fd5b6104d8828686840361058f565b60019250505092915050565b5f806104ee610588565b90506104fb8185856107dd565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f490610ecf565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361066b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066290610f5d565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107459190610c0e565b60405180910390a3505050565b5f61075d8484610506565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107d757818110156107c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c090610fc5565b60405180910390fd5b6107d6848484840361058f565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361084b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084290611053565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b0906110e1565b60405180910390fd5b6108c4838383610a49565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610947576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093e9061116f565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a309190610c0e565b60405180910390a3610a43848484610a4e565b50505050565b505050565b505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610a8a578082015181840152602081019050610a6f565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610aaf82610a53565b610ab98185610a5d565b9350610ac9818560208601610a6d565b610ad281610a95565b840191505092915050565b5f6020820190508181035f830152610af58184610aa5565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b2a82610b01565b9050919050565b610b3a81610b20565b8114610b44575f80fd5b50565b5f81359050610b5581610b31565b92915050565b5f819050919050565b610b6d81610b5b565b8114610b77575f80fd5b50565b5f81359050610b8881610b64565b92915050565b5f8060408385031215610ba457610ba3610afd565b5b5f610bb185828601610b47565b9250506020610bc285828601610b7a565b9150509250929050565b5f8115159050919050565b610be081610bcc565b82525050565b5f602082019050610bf95f830184610bd7565b92915050565b610c0881610b5b565b82525050565b5f602082019050610c215f830184610bff565b92915050565b5f805f60608486031215610c3e57610c3d610afd565b5b5f610c4b86828701610b47565b9350506020610c5c86828701610b47565b9250506040610c6d86828701610b7a565b9150509250925092565b5f60ff82169050919050565b610c8c81610c77565b82525050565b5f602082019050610ca55f830184610c83565b92915050565b5f60208284031215610cc057610cbf610afd565b5b5f610ccd84828501610b47565b91505092915050565b5f8060408385031215610cec57610ceb610afd565b5b5f610cf985828601610b47565b9250506020610d0a85828601610b47565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610d5857607f821691505b602082108103610d6b57610d6a610d14565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610da882610b5b565b9150610db383610b5b565b9250828201905080821115610dcb57610dca610d71565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f775f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f610e2b602583610a5d565b9150610e3682610dd1565b604082019050919050565b5f6020820190508181035f830152610e5881610e1f565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f610eb9602483610a5d565b9150610ec482610e5f565b604082019050919050565b5f6020820190508181035f830152610ee681610ead565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f610f47602283610a5d565b9150610f5282610eed565b604082019050919050565b5f6020820190508181035f830152610f7481610f3b565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000005f82015250565b5f610faf601d83610a5d565b9150610fba82610f7b565b602082019050919050565b5f6020820190508181035f830152610fdc81610fa3565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f61103d602583610a5d565b915061104882610fe3565b604082019050919050565b5f6020820190508181035f83015261106a81611031565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f6110cb602383610a5d565b91506110d682611071565b604082019050919050565b5f6020820190508181035f8301526110f8816110bf565b9050919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320625f8201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b5f611159602683610a5d565b9150611164826110ff565b604082019050919050565b5f6020820190508181035f8301526111868161114d565b905091905056fea2646970667358221220e92046f2770e7ff9340495085a05a1a48dff6b719da36263910aa1ac8cca954964736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x243 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x147 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB3 PUSH2 0x273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xADD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x325 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xC27 JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xC92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0xCAB JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CD PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0xADD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x258 SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x282 SWAP1 PUSH2 0xD41 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AE SWAP1 PUSH2 0xD41 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x30D PUSH2 0x588 JUMP JUMPDEST SWAP1 POP PUSH2 0x31A DUP2 DUP6 DUP6 PUSH2 0x58F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x338 PUSH2 0x588 JUMP JUMPDEST SWAP1 POP PUSH2 0x345 DUP6 DUP3 DUP6 PUSH2 0x752 JUMP JUMPDEST PUSH2 0x350 DUP6 DUP6 DUP6 PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x36E PUSH2 0x588 JUMP JUMPDEST SWAP1 POP PUSH2 0x38F DUP2 DUP6 DUP6 PUSH2 0x380 DUP6 DUP10 PUSH2 0x506 JUMP JUMPDEST PUSH2 0x38A SWAP2 SWAP1 PUSH2 0xD9E JUMP JUMPDEST PUSH2 0x58F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3EE SWAP1 PUSH2 0xD41 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x41A SWAP1 PUSH2 0xD41 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x465 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x43C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x465 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x448 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x479 PUSH2 0x588 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x486 DUP3 DUP7 PUSH2 0x506 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C2 SWAP1 PUSH2 0xE41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4D8 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x58F JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4EE PUSH2 0x588 JUMP JUMPDEST SWAP1 POP PUSH2 0x4FB DUP2 DUP6 DUP6 PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F4 SWAP1 PUSH2 0xECF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x66B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x662 SWAP1 PUSH2 0xF5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x745 SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x75D DUP5 DUP5 PUSH2 0x506 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7D7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C0 SWAP1 PUSH2 0xFC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D6 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x58F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x84B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x842 SWAP1 PUSH2 0x1053 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B0 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C4 DUP4 DUP4 DUP4 PUSH2 0xA49 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x947 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93E SWAP1 PUSH2 0x116F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA30 SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA43 DUP5 DUP5 DUP5 PUSH2 0xA4E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA8A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA6F JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAAF DUP3 PUSH2 0xA53 JUMP JUMPDEST PUSH2 0xAB9 DUP2 DUP6 PUSH2 0xA5D JUMP JUMPDEST SWAP4 POP PUSH2 0xAC9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA6D JUMP JUMPDEST PUSH2 0xAD2 DUP2 PUSH2 0xA95 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAF5 DUP2 DUP5 PUSH2 0xAA5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB2A DUP3 PUSH2 0xB01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB3A DUP2 PUSH2 0xB20 JUMP JUMPDEST DUP2 EQ PUSH2 0xB44 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB55 DUP2 PUSH2 0xB31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6D DUP2 PUSH2 0xB5B JUMP JUMPDEST DUP2 EQ PUSH2 0xB77 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB88 DUP2 PUSH2 0xB64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBA4 JUMPI PUSH2 0xBA3 PUSH2 0xAFD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBB1 DUP6 DUP3 DUP7 ADD PUSH2 0xB47 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBC2 DUP6 DUP3 DUP7 ADD PUSH2 0xB7A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBE0 DUP2 PUSH2 0xBCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBF9 PUSH0 DUP4 ADD DUP5 PUSH2 0xBD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC08 DUP2 PUSH2 0xB5B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC21 PUSH0 DUP4 ADD DUP5 PUSH2 0xBFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC3E JUMPI PUSH2 0xC3D PUSH2 0xAFD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC4B DUP7 DUP3 DUP8 ADD PUSH2 0xB47 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC5C DUP7 DUP3 DUP8 ADD PUSH2 0xB47 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC6D DUP7 DUP3 DUP8 ADD PUSH2 0xB7A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC8C DUP2 PUSH2 0xC77 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCA5 PUSH0 DUP4 ADD DUP5 PUSH2 0xC83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC0 JUMPI PUSH2 0xCBF PUSH2 0xAFD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCCD DUP5 DUP3 DUP6 ADD PUSH2 0xB47 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCEC JUMPI PUSH2 0xCEB PUSH2 0xAFD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCF9 DUP6 DUP3 DUP7 ADD PUSH2 0xB47 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD0A DUP6 DUP3 DUP7 ADD PUSH2 0xB47 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD58 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD6B JUMPI PUSH2 0xD6A PUSH2 0xD14 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xDA8 DUP3 PUSH2 0xB5B JUMP JUMPDEST SWAP2 POP PUSH2 0xDB3 DUP4 PUSH2 0xB5B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xDCB JUMPI PUSH2 0xDCA PUSH2 0xD71 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE2B PUSH1 0x25 DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP PUSH2 0xE36 DUP3 PUSH2 0xDD1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE58 DUP2 PUSH2 0xE1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEB9 PUSH1 0x24 DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP PUSH2 0xEC4 DUP3 PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEE6 DUP2 PUSH2 0xEAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF47 PUSH1 0x22 DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP PUSH2 0xF52 DUP3 PUSH2 0xEED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF74 DUP2 PUSH2 0xF3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFAF PUSH1 0x1D DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP PUSH2 0xFBA DUP3 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFDC DUP2 PUSH2 0xFA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x103D PUSH1 0x25 DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP PUSH2 0x1048 DUP3 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x106A DUP2 PUSH2 0x1031 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10CB PUSH1 0x23 DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP PUSH2 0x10D6 DUP3 PUSH2 0x1071 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10F8 DUP2 PUSH2 0x10BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1159 PUSH1 0x26 DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP PUSH2 0x1164 DUP3 PUSH2 0x10FF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1186 DUP2 PUSH2 0x114D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 KECCAK256 CHAINID CALLCODE PUSH24 0xE7FF9340495085A05A1A48DFF6B719DA36263910AA1AC8C 0xCA SWAP6 0x49 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "1401:11610:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3242:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5190:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3091:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5871:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3406:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6592:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3727:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3974:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2154:98;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;4530:13;4546:12;:10;:12::i;:::-;4530:28;;4568:32;4577:5;4584:7;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;:::o;3242:106::-;3303:7;3329:12;;3322:19;;3242:106;:::o;5190:286::-;5317:4;5333:15;5351:12;:10;:12::i;:::-;5333:30;;5373:38;5389:4;5395:7;5404:6;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;5465:4;5458:11;;;5190:286;;;;;:::o;3091:91::-;3149:5;3173:2;3166:9;;3091:91;:::o;5871:234::-;5959:4;5975:13;5991:12;:10;:12::i;:::-;5975:28;;6013:64;6022:5;6029:7;6066:10;6038:25;6048:5;6055:7;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;:::-;6094:4;6087:11;;;5871:234;;;;:::o;3406:125::-;3480:7;3506:9;:18;3516:7;3506:18;;;;;;;;;;;;;;;;3499:25;;3406:125;;;:::o;2365:102::-;2421:13;2453:7;2446:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:102;:::o;6592:427::-;6685:4;6701:13;6717:12;:10;:12::i;:::-;6701:28;;6739:24;6766:25;6776:5;6783:7;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;:::-;7008:4;7001:11;;;;6592:427;;;;:::o;3727:189::-;3806:4;3822:13;3838:12;:10;:12::i;:::-;3822:28;;3860;3870:5;3877:2;3881:6;3860:9;:28::i;:::-;3905:4;3898:11;;;3727:189;;;;:::o;3974:149::-;4063:7;4089:11;:18;4101:5;4089:18;;;;;;;;;;;;;;;:27;4108:7;4089:27;;;;;;;;;;;;;;;;4082:34;;3974:149;;;;:::o;640:96:8:-;693:7;719:10;712:17;;640:96;:::o;10504:370:4:-;10652:1;10635:19;;:5;:19;;;10627:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10732:1;10713:21;;:7;:21;;;10705:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10814:6;10784:11;:18;10796:5;10784:18;;;;;;;;;;;;;;;:27;10803:7;10784:27;;;;;;;;;;;;;;;:36;;;;10851:7;10835:32;;10844:5;10835:32;;;10860:6;10835:32;;;;;;:::i;:::-;;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;11371:17;11351:16;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11347:243;11275:321;11155:441;;;:::o;7473:818::-;7615:1;7599:18;;:4;:18;;;7591:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7691:1;7677:16;;:2;:16;;;7669:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7744:38;7765:4;7771:2;7775:6;7744:20;:38::i;:::-;7793:19;7815:9;:15;7825:4;7815:15;;;;;;;;;;;;;;;;7793:37;;7863:6;7848:11;:21;;7840:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7978:6;7964:11;:20;7946:9;:15;7956:4;7946:15;;;;;;;;;;;;;;;:38;;;;8178:6;8161:9;:13;8171:2;8161:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8225:2;8210:26;;8219:4;8210:26;;;8229:6;8210:26;;;;;;:::i;:::-;;;;;;;;8247:37;8267:4;8273:2;8277:6;8247:19;:37::i;:::-;7581:710;7473:818;;;:::o;12180:121::-;;;;:::o;12889:120::-;;;;:::o;7:99:14:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:180::-;6228:77;6225:1;6218:88;6325:4;6322:1;6315:15;6349:4;6346:1;6339:15;6366:191;6406:3;6425:20;6443:1;6425:20;:::i;:::-;6420:25;;6459:20;6477:1;6459:20;:::i;:::-;6454:25;;6502:1;6499;6495:9;6488:16;;6523:3;6520:1;6517:10;6514:36;;;6530:18;;:::i;:::-;6514:36;6366:191;;;;:::o;6563:224::-;6703:34;6699:1;6691:6;6687:14;6680:58;6772:7;6767:2;6759:6;6755:15;6748:32;6563:224;:::o;6793:366::-;6935:3;6956:67;7020:2;7015:3;6956:67;:::i;:::-;6949:74;;7032:93;7121:3;7032:93;:::i;:::-;7150:2;7145:3;7141:12;7134:19;;6793:366;;;:::o;7165:419::-;7331:4;7369:2;7358:9;7354:18;7346:26;;7418:9;7412:4;7408:20;7404:1;7393:9;7389:17;7382:47;7446:131;7572:4;7446:131;:::i;:::-;7438:139;;7165:419;;;:::o;7590:223::-;7730:34;7726:1;7718:6;7714:14;7707:58;7799:6;7794:2;7786:6;7782:15;7775:31;7590:223;:::o;7819:366::-;7961:3;7982:67;8046:2;8041:3;7982:67;:::i;:::-;7975:74;;8058:93;8147:3;8058:93;:::i;:::-;8176:2;8171:3;8167:12;8160:19;;7819:366;;;:::o;8191:419::-;8357:4;8395:2;8384:9;8380:18;8372:26;;8444:9;8438:4;8434:20;8430:1;8419:9;8415:17;8408:47;8472:131;8598:4;8472:131;:::i;:::-;8464:139;;8191:419;;;:::o;8616:221::-;8756:34;8752:1;8744:6;8740:14;8733:58;8825:4;8820:2;8812:6;8808:15;8801:29;8616:221;:::o;8843:366::-;8985:3;9006:67;9070:2;9065:3;9006:67;:::i;:::-;8999:74;;9082:93;9171:3;9082:93;:::i;:::-;9200:2;9195:3;9191:12;9184:19;;8843:366;;;:::o;9215:419::-;9381:4;9419:2;9408:9;9404:18;9396:26;;9468:9;9462:4;9458:20;9454:1;9443:9;9439:17;9432:47;9496:131;9622:4;9496:131;:::i;:::-;9488:139;;9215:419;;;:::o;9640:179::-;9780:31;9776:1;9768:6;9764:14;9757:55;9640:179;:::o;9825:366::-;9967:3;9988:67;10052:2;10047:3;9988:67;:::i;:::-;9981:74;;10064:93;10153:3;10064:93;:::i;:::-;10182:2;10177:3;10173:12;10166:19;;9825:366;;;:::o;10197:419::-;10363:4;10401:2;10390:9;10386:18;10378:26;;10450:9;10444:4;10440:20;10436:1;10425:9;10421:17;10414:47;10478:131;10604:4;10478:131;:::i;:::-;10470:139;;10197:419;;;:::o;10622:224::-;10762:34;10758:1;10750:6;10746:14;10739:58;10831:7;10826:2;10818:6;10814:15;10807:32;10622:224;:::o;10852:366::-;10994:3;11015:67;11079:2;11074:3;11015:67;:::i;:::-;11008:74;;11091:93;11180:3;11091:93;:::i;:::-;11209:2;11204:3;11200:12;11193:19;;10852:366;;;:::o;11224:419::-;11390:4;11428:2;11417:9;11413:18;11405:26;;11477:9;11471:4;11467:20;11463:1;11452:9;11448:17;11441:47;11505:131;11631:4;11505:131;:::i;:::-;11497:139;;11224:419;;;:::o;11649:222::-;11789:34;11785:1;11777:6;11773:14;11766:58;11858:5;11853:2;11845:6;11841:15;11834:30;11649:222;:::o;11877:366::-;12019:3;12040:67;12104:2;12099:3;12040:67;:::i;:::-;12033:74;;12116:93;12205:3;12116:93;:::i;:::-;12234:2;12229:3;12225:12;12218:19;;11877:366;;;:::o;12249:419::-;12415:4;12453:2;12442:9;12438:18;12430:26;;12502:9;12496:4;12492:20;12488:1;12477:9;12473:17;12466:47;12530:131;12656:4;12530:131;:::i;:::-;12522:139;;12249:419;;;:::o;12674:225::-;12814:34;12810:1;12802:6;12798:14;12791:58;12883:8;12878:2;12870:6;12866:15;12859:33;12674:225;:::o;12905:366::-;13047:3;13068:67;13132:2;13127:3;13068:67;:::i;:::-;13061:74;;13144:93;13233:3;13144:93;:::i;:::-;13262:2;13257:3;13253:12;13246:19;;12905:366;;;:::o;13277:419::-;13443:4;13481:2;13470:9;13466:18;13458:26;;13530:9;13524:4;13520:20;13516:1;13505:9;13501:17;13494:47;13558:131;13684:4;13558:131;:::i;:::-;13550:139;;13277:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "909400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2851",
								"decimals()": "427",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "15",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1976,
									"end": 2089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2050,
									"end": 2055,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2042,
									"end": 2047,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 2042,
									"end": 2055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2075,
									"end": 2082,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2065,
									"end": 2072,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 2065,
									"end": 2082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 14,
									"value": "15"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 14,
									"value": "16"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 14,
									"value": "17"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "51"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 14,
									"value": "51"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "16"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 14,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 14,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 14,
									"value": "18"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 14,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "56"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "17"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 14,
									"value": "56"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "16"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 14,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 14,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "60"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "15"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 14,
									"value": "60"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 14,
									"value": "62"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "62"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 14,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 14,
									"value": "21"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "66"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "67"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 14,
									"value": "67"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "18"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 14,
									"value": "66"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "68"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "69"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 14,
									"value": "69"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 14,
									"value": "68"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "70"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 14,
									"value": "70"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "72"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 14,
									"value": "72"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "74"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "21"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 14,
									"value": "74"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "tag",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2776,
									"end": 2782,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 2833,
									"end": 2835,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 2821,
									"end": 2830,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2812,
									"end": 2819,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 2808,
									"end": 2831,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 2804,
									"end": 2836,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "76"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "77"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 2839,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "tag",
									"source": 14,
									"value": "77"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "tag",
									"source": 14,
									"value": "76"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2980,
									"end": 2981,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2965,
									"end": 2982,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2959,
									"end": 2983,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2999,
									"end": 3029,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "78"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "79"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 3032,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "tag",
									"source": 14,
									"value": "79"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "tag",
									"source": 14,
									"value": "78"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 3203,
									"end": 3210,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 3194,
									"end": 3200,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3183,
									"end": 3192,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 3179,
									"end": 3201,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 3137,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "tag",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2930,
									"end": 3221,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3281,
									"end": 3283,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3270,
									"end": 3279,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3266,
									"end": 3284,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3260,
									"end": 3285,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 3312,
									"end": 3330,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3304,
									"end": 3310,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3301,
									"end": 3331,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "81"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "82"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 3334,
									"end": 3413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "tag",
									"source": 14,
									"value": "82"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "tag",
									"source": 14,
									"value": "81"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "83"
								},
								{
									"begin": 3505,
									"end": 3512,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 3496,
									"end": 3502,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 3481,
									"end": 3503,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 3439,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "tag",
									"source": 14,
									"value": "83"
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3231,
									"end": 3523,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2677,
									"end": 3530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "tag",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3588,
									"end": 3594,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3627,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3536,
									"end": 3635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "tag",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3689,
									"end": 3766,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3686,
									"end": 3687,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3679,
									"end": 3767,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3786,
									"end": 3790,
									"name": "PUSH",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 3783,
									"end": 3784,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 3776,
									"end": 3791,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 3807,
									"end": 3808,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3800,
									"end": 3815,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "tag",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3871,
									"end": 3877,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3909,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 3902,
									"end": 3906,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3898,
									"end": 3910,
									"name": "DIV",
									"source": 14
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3955,
									"end": 3956,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 3949,
									"end": 3953,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3945,
									"end": 3957,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 3976,
									"end": 3994,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "87"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4032,
									"end": 4036,
									"name": "PUSH",
									"source": 14,
									"value": "7F"
								},
								{
									"begin": 4024,
									"end": 4030,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4020,
									"end": 4037,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "tag",
									"source": 14,
									"value": "87"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4094,
									"end": 4096,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4086,
									"end": 4092,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4083,
									"end": 4097,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 4063,
									"end": 4081,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4060,
									"end": 4098,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "88"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "89"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 4113,
									"end": 4131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "tag",
									"source": 14,
									"value": "89"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "tag",
									"source": 14,
									"value": "88"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3878,
									"end": 4147,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3827,
									"end": 4147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "tag",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4225,
									"end": 4228,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4248,
									"end": 4251,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4245,
									"end": 4246,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4238,
									"end": 4252,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 4282,
									"end": 4286,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4279,
									"end": 4280,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4153,
									"end": 4294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "tag",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4337,
									"end": 4343,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4384,
									"end": 4386,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4379,
									"end": 4381,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4368,
									"end": 4382,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4364,
									"end": 4387,
									"name": "DIV",
									"source": 14
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4300,
									"end": 4393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "tag",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4493,
									"end": 4498,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4487,
									"end": 4491,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4483,
									"end": 4499,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4399,
									"end": 4506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "tag",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4581,
									"end": 4587,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4632,
									"name": "PUSH",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 4619,
									"end": 4629,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4615,
									"end": 4633,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "94"
								},
								{
									"begin": 4684,
									"end": 4750,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4673,
									"end": 4682,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 4654,
									"end": 4751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "tag",
									"source": 14,
									"value": "94"
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "95"
								},
								{
									"begin": 4802,
									"end": 4810,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 4791,
									"end": 4800,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 4772,
									"end": 4811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "tag",
									"source": 14,
									"value": "95"
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "SWAP6",
									"source": 14
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4844,
									"end": 4848,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 4840,
									"end": 4849,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 4833,
									"end": 4838,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 4829,
									"end": 4850,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4893,
									"end": 4897,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 4883,
									"end": 4891,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 4879,
									"end": 4898,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 4872,
									"end": 4877,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 4869,
									"end": 4899,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4512,
									"end": 4905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "tag",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4948,
									"end": 4955,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4977,
									"end": 4982,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4911,
									"end": 4988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "tag",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5022,
									"end": 5025,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5043,
									"end": 5048,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4994,
									"end": 5054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "tag",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5110,
									"end": 5119,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "99"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "101"
								},
								{
									"begin": 5188,
									"end": 5193,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 5170,
									"end": 5194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "tag",
									"source": 14,
									"value": "101"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 5161,
									"end": 5195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "tag",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 5143,
									"end": 5196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "tag",
									"source": 14,
									"value": "99"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5060,
									"end": 5202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "tag",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5251,
									"end": 5254,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5277,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5208,
									"end": 5283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "tag",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "104"
								},
								{
									"begin": 5430,
									"end": 5437,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 5399,
									"end": 5438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "tag",
									"source": 14,
									"value": "104"
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "105"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "106"
								},
								{
									"begin": 5533,
									"end": 5549,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 5509,
									"end": 5550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "tag",
									"source": 14,
									"value": "106"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5501,
									"end": 5507,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 5494,
									"end": 5498,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 5488,
									"end": 5499,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 5460,
									"end": 5551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "tag",
									"source": 14,
									"value": "105"
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5454,
									"end": 5458,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5447,
									"end": 5552,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 5365,
									"end": 5558,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5289,
									"end": 5558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "tag",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5609,
									"end": 5612,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5564,
									"end": 5637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "tag",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "109"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 5720,
									"end": 5752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "tag",
									"source": 14,
									"value": "109"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "110"
								},
								{
									"begin": 5819,
									"end": 5825,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5811,
									"end": 5817,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 5761,
									"end": 5826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "tag",
									"source": 14,
									"value": "110"
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5696,
									"end": 5832,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5643,
									"end": 5832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "tag",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 14,
									"value": "112"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5915,
									"end": 5918,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5908,
									"end": 5913,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5905,
									"end": 5919,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "115"
								},
								{
									"begin": 6006,
									"end": 6007,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5999,
									"end": 6004,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 5969,
									"end": 6008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "tag",
									"source": 14,
									"value": "115"
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5942,
									"end": 5943,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 5935,
									"end": 5940,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5931,
									"end": 5944,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "112"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 14,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5838,
									"end": 6024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "tag",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6131,
									"end": 6133,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 6126,
									"end": 6129,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6123,
									"end": 6134,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "117"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "118"
								},
								{
									"begin": 6197,
									"end": 6202,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 6165,
									"end": 6203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "tag",
									"source": 14,
									"value": "118"
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "119"
								},
								{
									"begin": 6267,
									"end": 6277,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 6249,
									"end": 6278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "tag",
									"source": 14,
									"value": "119"
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6239,
									"end": 6247,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6235,
									"end": 6279,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6432,
									"end": 6434,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 6420,
									"end": 6430,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 6417,
									"end": 6435,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "120"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 6453,
									"end": 6461,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "tag",
									"source": 14,
									"value": "120"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "121"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "122"
								},
								{
									"begin": 6550,
									"end": 6553,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 6532,
									"end": 6554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "tag",
									"source": 14,
									"value": "122"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6522,
									"end": 6530,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 6518,
									"end": 6555,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6505,
									"end": 6516,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 6476,
									"end": 6556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "tag",
									"source": 14,
									"value": "121"
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "tag",
									"source": 14,
									"value": "117"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6030,
									"end": 6573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "tag",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6633,
									"end": 6641,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 6683,
									"end": 6688,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6673,
									"end": 6689,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6579,
									"end": 6696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "tag",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6746,
									"end": 6752,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "125"
								},
								{
									"begin": 6827,
									"end": 6828,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 6823,
									"end": 6829,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 6815,
									"end": 6820,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6812,
									"end": 6813,
									"name": "PUSH",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 6808,
									"end": 6821,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 6779,
									"end": 6830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "tag",
									"source": 14,
									"value": "125"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6775,
									"end": 6831,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 6860,
									"end": 6864,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 6854,
									"end": 6858,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 6850,
									"end": 6865,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6753,
									"end": 6871,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6702,
									"end": 6871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "tag",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6952,
									"end": 6956,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "127"
								},
								{
									"begin": 7123,
									"end": 7126,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 7117,
									"end": 7121,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 7098,
									"end": 7127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "tag",
									"source": 14,
									"value": "127"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7160,
									"end": 7163,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7157,
									"end": 7158,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 7147,
									"end": 7151,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7144,
									"end": 7165,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6876,
									"end": 7171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "tag",
									"source": 14,
									"value": "7"
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "129"
								},
								{
									"begin": 7326,
									"end": 7329,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 7293,
									"end": 7330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "tag",
									"source": 14,
									"value": "129"
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7387,
									"end": 7393,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 7384,
									"end": 7414,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "130"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "131"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "16"
								},
								{
									"begin": 7417,
									"end": 7435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "tag",
									"source": 14,
									"value": "131"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "tag",
									"source": 14,
									"value": "130"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "132"
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7487,
									"end": 7498,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 7461,
									"end": 7499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "tag",
									"source": 14,
									"value": "132"
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "133"
								},
								{
									"begin": 7606,
									"end": 7612,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7598,
									"end": 7604,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7592,
									"end": 7596,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 7546,
									"end": 7613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "tag",
									"source": 14,
									"value": "133"
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 7664,
									"end": 7668,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7696,
									"end": 7698,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 7688,
									"end": 7694,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 7685,
									"end": 7699,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 7713,
									"end": 7714,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "135"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8393,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "136"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 8436,
									"end": 8445,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8431,
									"end": 8434,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 8427,
									"end": 8446,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8421,
									"end": 8447,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "tag",
									"source": 14,
									"value": "136"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "137"
								},
								{
									"begin": 8547,
									"end": 8553,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 8540,
									"end": 8545,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 8487,
									"end": 8554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "tag",
									"source": 14,
									"value": "137"
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8481,
									"end": 8485,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 8474,
									"end": 8555,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 8343,
									"end": 8565,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "134"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "tag",
									"source": 14,
									"value": "135"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7760,
									"end": 7764,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 7756,
									"end": 7765,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 7748,
									"end": 7754,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 7744,
									"end": 7766,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "138"
								},
								{
									"begin": 7826,
									"end": 7830,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 7794,
									"end": 7831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "tag",
									"source": 14,
									"value": "138"
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7853,
									"end": 7854,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 14,
									"value": "139"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7881,
									"end": 7888,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7878,
									"end": 7879,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 7875,
									"end": 7889,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 7960,
									"end": 7969,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 7955,
									"end": 7958,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 7951,
									"end": 7970,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 7945,
									"end": 7971,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 7937,
									"end": 7943,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7930,
									"end": 7972,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 8011,
									"end": 8012,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 8003,
									"end": 8009,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7999,
									"end": 8013,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8058,
									"end": 8060,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 8047,
									"end": 8056,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 8043,
									"end": 8061,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7904,
									"end": 7908,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 7897,
									"end": 7909,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "139"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 14,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8103,
									"end": 8109,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 8094,
									"end": 8101,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 8091,
									"end": 8110,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "142"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 8161,
									"end": 8170,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 8156,
									"end": 8159,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 8152,
									"end": 8171,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8146,
									"end": 8172,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "143"
								},
								{
									"begin": 8246,
									"end": 8250,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 8234,
									"end": 8251,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 8223,
									"end": 8232,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 8204,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "tag",
									"source": 14,
									"value": "143"
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8196,
									"end": 8202,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 8189,
									"end": 8253,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 8111,
									"end": 8267,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "tag",
									"source": 14,
									"value": "142"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8313,
									"end": 8314,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 8309,
									"end": 8310,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 8301,
									"end": 8307,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 8297,
									"end": 8311,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 8293,
									"end": 8315,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8287,
									"end": 8291,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 8280,
									"end": 8316,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "tag",
									"source": 14,
									"value": "134"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7176,
									"end": 8571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e92046f2770e7ff9340495085a05a1a48dff6b719da36263910aa1ac8cca954964736f6c63430008150033",
									".code": [
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 4,
											"value": "A457C2D7"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 4,
											"value": "DD62ED3E"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2154,
											"end": 2252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2154,
											"end": 2252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 4431,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4431,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4431,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3242,
											"end": 3348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3242,
											"end": 3348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 5190,
											"end": 5476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5190,
											"end": 5476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5190,
											"end": 5476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3091,
											"end": 3182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3091,
											"end": 3182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 5871,
											"end": 6105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 6105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5871,
											"end": 6105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3406,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3406,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3406,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2365,
											"end": 2467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2365,
											"end": 2467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 6592,
											"end": 7019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 6592,
											"end": 7019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6592,
											"end": 7019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3727,
											"end": 3916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3727,
											"end": 3916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3727,
											"end": 3916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3974,
											"end": 4123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3974,
											"end": 4123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3974,
											"end": 4123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2208,
											"end": 2221,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2240,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2233,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2233,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4514,
											"end": 4518,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4530,
											"end": 4543,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4546,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4546,
											"end": 4556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4546,
											"end": 4558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4546,
											"end": 4558,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4546,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4530,
											"end": 4558,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4530,
											"end": 4558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4577,
											"end": 4582,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4584,
											"end": 4591,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4593,
											"end": 4599,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4568,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 4568,
											"end": 4600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4617,
											"end": 4621,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4610,
											"end": 4621,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4621,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4621,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3322,
											"end": 3341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3322,
											"end": 3341,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5317,
											"end": 5321,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5333,
											"end": 5348,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5351,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 5351,
											"end": 5361,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 5351,
											"end": 5363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5351,
											"end": 5363,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 5351,
											"end": 5363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5333,
											"end": 5363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5333,
											"end": 5363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 5389,
											"end": 5393,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5395,
											"end": 5402,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5404,
											"end": 5410,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5373,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 5373,
											"end": 5411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5431,
											"end": 5435,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5437,
											"end": 5439,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5441,
											"end": 5447,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 5421,
											"end": 5448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5465,
											"end": 5469,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5458,
											"end": 5469,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5458,
											"end": 5469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5458,
											"end": 5469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3149,
											"end": 3154,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3175,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3166,
											"end": 3175,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3166,
											"end": 3175,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5959,
											"end": 5963,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5975,
											"end": 5988,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6003,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 5991,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 5991,
											"end": 6003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6003,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 5991,
											"end": 6003,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5975,
											"end": 6003,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5975,
											"end": 6003,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 6022,
											"end": 6027,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6029,
											"end": 6036,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6066,
											"end": 6076,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 6048,
											"end": 6053,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6055,
											"end": 6062,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 6038,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 6038,
											"end": 6063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 6038,
											"end": 6076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6013,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 6013,
											"end": 6077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6094,
											"end": 6098,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6087,
											"end": 6098,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6087,
											"end": 6098,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6087,
											"end": 6098,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3487,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3515,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3516,
											"end": 3523,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3524,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2421,
											"end": 2434,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2453,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2446,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2446,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6685,
											"end": 6689,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6701,
											"end": 6714,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6717,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 6717,
											"end": 6727,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 6717,
											"end": 6729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6717,
											"end": 6729,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 6717,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6739,
											"end": 6763,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 6776,
											"end": 6781,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6783,
											"end": 6790,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6766,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 6766,
											"end": 6791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6739,
											"end": 6791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6739,
											"end": 6791,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6829,
											"end": 6844,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6809,
											"end": 6825,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6809,
											"end": 6844,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6809,
											"end": 6844,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 6801,
											"end": 6886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 6929,
											"end": 6934,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6936,
											"end": 6943,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6945,
											"end": 6961,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6945,
											"end": 6979,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6920,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 6920,
											"end": 6980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7008,
											"end": 7012,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7001,
											"end": 7012,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7001,
											"end": 7012,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7001,
											"end": 7012,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7001,
											"end": 7012,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3806,
											"end": 3810,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3822,
											"end": 3835,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3838,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3838,
											"end": 3850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3822,
											"end": 3850,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3822,
											"end": 3850,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3870,
											"end": 3875,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3877,
											"end": 3879,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3881,
											"end": 3887,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3860,
											"end": 3888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3905,
											"end": 3909,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3898,
											"end": 3909,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3898,
											"end": 3909,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3898,
											"end": 3909,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4063,
											"end": 4070,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4100,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4101,
											"end": 4106,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4115,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4082,
											"end": 4116,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4082,
											"end": 4116,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10652,
											"end": 10653,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10635,
											"end": 10640,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 10627,
											"end": 10695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10732,
											"end": 10733,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10713,
											"end": 10720,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 10705,
											"end": 10773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10814,
											"end": 10820,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10795,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10796,
											"end": 10801,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10810,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10851,
											"end": 10858,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10849,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10860,
											"end": 10866,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 10835,
											"end": 10867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10504,
											"end": 10874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11285,
											"end": 11309,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 11322,
											"end": 11327,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11329,
											"end": 11336,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11312,
											"end": 11321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 11312,
											"end": 11337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11285,
											"end": 11337,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11285,
											"end": 11337,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11371,
											"end": 11388,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11351,
											"end": 11367,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11351,
											"end": 11388,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11432,
											"end": 11438,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11412,
											"end": 11428,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11412,
											"end": 11438,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11412,
											"end": 11438,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 11404,
											"end": 11472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 11523,
											"end": 11528,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11530,
											"end": 11537,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11558,
											"end": 11564,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11539,
											"end": 11555,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11539,
											"end": 11564,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11514,
											"end": 11522,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 11514,
											"end": 11565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11275,
											"end": 11596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11155,
											"end": 11596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7615,
											"end": 7616,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7599,
											"end": 7603,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 7591,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7691,
											"end": 7692,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7677,
											"end": 7679,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 7669,
											"end": 7733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 7765,
											"end": 7769,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7771,
											"end": 7773,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7775,
											"end": 7781,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7744,
											"end": 7764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 7744,
											"end": 7782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7793,
											"end": 7812,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7824,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7825,
											"end": 7829,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7793,
											"end": 7830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7793,
											"end": 7830,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7863,
											"end": 7869,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7848,
											"end": 7859,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 7840,
											"end": 7912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7978,
											"end": 7984,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7964,
											"end": 7975,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7964,
											"end": 7984,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7955,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7956,
											"end": 7960,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8178,
											"end": 8184,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8170,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8171,
											"end": 8173,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8225,
											"end": 8227,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8219,
											"end": 8223,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8229,
											"end": 8235,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 8210,
											"end": 8236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 8247,
											"end": 8284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 8267,
											"end": 8271,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8273,
											"end": 8275,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8277,
											"end": 8283,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8247,
											"end": 8266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 8247,
											"end": 8284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8247,
											"end": 8284,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 8247,
											"end": 8284,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7581,
											"end": 8291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7473,
											"end": 8291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12180,
											"end": 12301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12889,
											"end": 13009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 14,
											"value": "140"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 14,
											"value": "141"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 14,
											"value": "180"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "180"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 14,
											"value": "143"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 14,
											"value": "144"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "140"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "186"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "141"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 14,
											"value": "186"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "187"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 14,
											"value": "187"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "188"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "143"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 14,
											"value": "188"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "190"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "144"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 14,
											"value": "190"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 14,
											"value": "146"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 14,
											"value": "148"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 14,
											"value": "149"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "196"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "148"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 14,
											"value": "196"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 14,
											"value": "150"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "198"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "149"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 14,
											"value": "198"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "199"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 14,
											"value": "199"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 14,
											"value": "151"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "201"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "150"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 14,
											"value": "201"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 14,
											"value": "153"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "204"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 14,
											"value": "204"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "205"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 14,
											"value": "205"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 14,
											"value": "154"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "207"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "153"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 14,
											"value": "207"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "209"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "210"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "146"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 14,
											"value": "210"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 14,
											"value": "209"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "211"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "151"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 14,
											"value": "211"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "212"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "154"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 14,
											"value": "212"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "215"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 14,
											"value": "215"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "217"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 14,
											"value": "217"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 14,
											"value": "157"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "219"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 14,
											"value": "219"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "221"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "157"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 14,
											"value": "221"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "224"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "146"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 14,
											"value": "224"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "225"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "151"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 14,
											"value": "225"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "226"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "151"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 14,
											"value": "226"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "227"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "154"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 14,
											"value": "227"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 14,
											"value": "158"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 14,
											"value": "159"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "230"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "158"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 14,
											"value": "230"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 14,
											"value": "37"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "232"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "159"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 14,
											"value": "232"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "234"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "235"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "146"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 14,
											"value": "235"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 14,
											"value": "234"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "236"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "151"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 14,
											"value": "236"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "tag",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5256,
											"end": 5262,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5264,
											"end": 5270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5313,
											"end": 5315,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5301,
											"end": 5310,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5292,
											"end": 5299,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5311,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5284,
											"end": 5316,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "238"
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "239"
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "146"
										},
										{
											"begin": 5319,
											"end": 5398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "tag",
											"source": 14,
											"value": "239"
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "tag",
											"source": 14,
											"value": "238"
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5439,
											"end": 5440,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "240"
										},
										{
											"begin": 5509,
											"end": 5516,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5500,
											"end": 5506,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5489,
											"end": 5498,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5485,
											"end": 5507,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "151"
										},
										{
											"begin": 5464,
											"end": 5517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "tag",
											"source": 14,
											"value": "240"
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5454,
											"end": 5517,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5454,
											"end": 5517,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5410,
											"end": 5527,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5566,
											"end": 5568,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "241"
										},
										{
											"begin": 5637,
											"end": 5644,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5628,
											"end": 5634,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5617,
											"end": 5626,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5613,
											"end": 5635,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "151"
										},
										{
											"begin": 5592,
											"end": 5645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "tag",
											"source": 14,
											"value": "241"
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5582,
											"end": 5645,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5582,
											"end": 5645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5655,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5188,
											"end": 5662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5848,
											"name": "tag",
											"source": 14,
											"value": "160"
										},
										{
											"begin": 5668,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5716,
											"end": 5793,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5713,
											"end": 5714,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5706,
											"end": 5794,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5813,
											"end": 5817,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 5810,
											"end": 5811,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5803,
											"end": 5818,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5837,
											"end": 5841,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5834,
											"end": 5835,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5827,
											"end": 5842,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "tag",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5898,
											"end": 5904,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5935,
											"end": 5936,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 5929,
											"end": 5933,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5925,
											"end": 5937,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 5915,
											"end": 5937,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5915,
											"end": 5937,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 5983,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 5976,
											"end": 5980,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5972,
											"end": 5984,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6003,
											"end": 6021,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "244"
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6059,
											"end": 6063,
											"name": "PUSH",
											"source": 14,
											"value": "7F"
										},
										{
											"begin": 6051,
											"end": 6057,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6047,
											"end": 6064,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6037,
											"end": 6064,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6037,
											"end": 6064,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "tag",
											"source": 14,
											"value": "244"
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6121,
											"end": 6123,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6113,
											"end": 6119,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6110,
											"end": 6124,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6087,
											"end": 6125,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "245"
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "160"
										},
										{
											"begin": 6140,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "tag",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "tag",
											"source": 14,
											"value": "245"
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5905,
											"end": 6174,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5854,
											"end": 6174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6180,
											"end": 6360,
											"name": "tag",
											"source": 14,
											"value": "161"
										},
										{
											"begin": 6180,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6228,
											"end": 6305,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6226,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6218,
											"end": 6306,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6325,
											"end": 6329,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 6322,
											"end": 6323,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6349,
											"end": 6353,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6346,
											"end": 6347,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6339,
											"end": 6354,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "tag",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6406,
											"end": 6409,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6425,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "249"
										},
										{
											"begin": 6443,
											"end": 6444,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6425,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 6425,
											"end": 6445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6425,
											"end": 6445,
											"name": "tag",
											"source": 14,
											"value": "249"
										},
										{
											"begin": 6425,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6420,
											"end": 6445,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6420,
											"end": 6445,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6459,
											"end": 6479,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "250"
										},
										{
											"begin": 6477,
											"end": 6478,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6459,
											"end": 6479,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 6459,
											"end": 6479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6459,
											"end": 6479,
											"name": "tag",
											"source": 14,
											"value": "250"
										},
										{
											"begin": 6459,
											"end": 6479,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6454,
											"end": 6479,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6454,
											"end": 6479,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6502,
											"end": 6503,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6499,
											"end": 6500,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6495,
											"end": 6504,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6488,
											"end": 6504,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6488,
											"end": 6504,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6526,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6520,
											"end": 6521,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6517,
											"end": 6527,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "161"
										},
										{
											"begin": 6530,
											"end": 6548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "tag",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "tag",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6366,
											"end": 6557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6563,
											"end": 6787,
											"name": "tag",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 6563,
											"end": 6787,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6703,
											"end": 6737,
											"name": "PUSH",
											"source": 14,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 6699,
											"end": 6700,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6691,
											"end": 6697,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6687,
											"end": 6701,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6680,
											"end": 6738,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6772,
											"end": 6779,
											"name": "PUSH",
											"source": 14,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6767,
											"end": 6769,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6759,
											"end": 6765,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6755,
											"end": 6770,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6748,
											"end": 6780,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6563,
											"end": 6787,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6563,
											"end": 6787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6793,
											"end": 7159,
											"name": "tag",
											"source": 14,
											"value": "163"
										},
										{
											"begin": 6793,
											"end": 7159,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6935,
											"end": 6938,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6956,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 7020,
											"end": 7022,
											"name": "PUSH",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 7015,
											"end": 7018,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6956,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "141"
										},
										{
											"begin": 6956,
											"end": 7023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6956,
											"end": 7023,
											"name": "tag",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 6956,
											"end": 7023,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6949,
											"end": 7023,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6949,
											"end": 7023,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7032,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "256"
										},
										{
											"begin": 7121,
											"end": 7124,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7032,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 7032,
											"end": 7125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7032,
											"end": 7125,
											"name": "tag",
											"source": 14,
											"value": "256"
										},
										{
											"begin": 7032,
											"end": 7125,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7150,
											"end": 7152,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7145,
											"end": 7148,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7141,
											"end": 7153,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7134,
											"end": 7153,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7134,
											"end": 7153,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6793,
											"end": 7159,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6793,
											"end": 7159,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6793,
											"end": 7159,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6793,
											"end": 7159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7165,
											"end": 7584,
											"name": "tag",
											"source": 14,
											"value": "101"
										},
										{
											"begin": 7165,
											"end": 7584,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7331,
											"end": 7335,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7369,
											"end": 7371,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7358,
											"end": 7367,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7354,
											"end": 7372,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7346,
											"end": 7372,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7346,
											"end": 7372,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7418,
											"end": 7427,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7412,
											"end": 7416,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7408,
											"end": 7428,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7404,
											"end": 7405,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7393,
											"end": 7402,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7389,
											"end": 7406,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7382,
											"end": 7429,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7446,
											"end": 7577,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 7572,
											"end": 7576,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7446,
											"end": 7577,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "163"
										},
										{
											"begin": 7446,
											"end": 7577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7446,
											"end": 7577,
											"name": "tag",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 7446,
											"end": 7577,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7438,
											"end": 7577,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7438,
											"end": 7577,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7165,
											"end": 7584,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7165,
											"end": 7584,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7165,
											"end": 7584,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7165,
											"end": 7584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7590,
											"end": 7813,
											"name": "tag",
											"source": 14,
											"value": "164"
										},
										{
											"begin": 7590,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7730,
											"end": 7764,
											"name": "PUSH",
											"source": 14,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 7726,
											"end": 7727,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7718,
											"end": 7724,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7714,
											"end": 7728,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7707,
											"end": 7765,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7799,
											"end": 7805,
											"name": "PUSH",
											"source": 14,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7794,
											"end": 7796,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7786,
											"end": 7792,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7782,
											"end": 7797,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7775,
											"end": 7806,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7590,
											"end": 7813,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7590,
											"end": 7813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7819,
											"end": 8185,
											"name": "tag",
											"source": 14,
											"value": "165"
										},
										{
											"begin": 7819,
											"end": 8185,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7961,
											"end": 7964,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7982,
											"end": 8049,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "261"
										},
										{
											"begin": 8046,
											"end": 8048,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8041,
											"end": 8044,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7982,
											"end": 8049,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "141"
										},
										{
											"begin": 7982,
											"end": 8049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7982,
											"end": 8049,
											"name": "tag",
											"source": 14,
											"value": "261"
										},
										{
											"begin": 7982,
											"end": 8049,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7975,
											"end": 8049,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7975,
											"end": 8049,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8058,
											"end": 8151,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 8147,
											"end": 8150,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8058,
											"end": 8151,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "164"
										},
										{
											"begin": 8058,
											"end": 8151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8058,
											"end": 8151,
											"name": "tag",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 8058,
											"end": 8151,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8176,
											"end": 8178,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8167,
											"end": 8179,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8160,
											"end": 8179,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8160,
											"end": 8179,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7819,
											"end": 8185,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7819,
											"end": 8185,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7819,
											"end": 8185,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7819,
											"end": 8185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8191,
											"end": 8610,
											"name": "tag",
											"source": 14,
											"value": "111"
										},
										{
											"begin": 8191,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8357,
											"end": 8361,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8395,
											"end": 8397,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8384,
											"end": 8393,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8380,
											"end": 8398,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8372,
											"end": 8398,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8372,
											"end": 8398,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8444,
											"end": 8453,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8438,
											"end": 8442,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8434,
											"end": 8454,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8430,
											"end": 8431,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8419,
											"end": 8428,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8415,
											"end": 8432,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8408,
											"end": 8455,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8472,
											"end": 8603,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 8598,
											"end": 8602,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8472,
											"end": 8603,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "165"
										},
										{
											"begin": 8472,
											"end": 8603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8472,
											"end": 8603,
											"name": "tag",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 8472,
											"end": 8603,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8464,
											"end": 8603,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8464,
											"end": 8603,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8191,
											"end": 8610,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8191,
											"end": 8610,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8191,
											"end": 8610,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8191,
											"end": 8610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8616,
											"end": 8837,
											"name": "tag",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 8616,
											"end": 8837,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8756,
											"end": 8790,
											"name": "PUSH",
											"source": 14,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 8752,
											"end": 8753,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8744,
											"end": 8750,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8740,
											"end": 8754,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8733,
											"end": 8791,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8825,
											"end": 8829,
											"name": "PUSH",
											"source": 14,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8820,
											"end": 8822,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8812,
											"end": 8818,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8808,
											"end": 8823,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8801,
											"end": 8830,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8616,
											"end": 8837,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8616,
											"end": 8837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8843,
											"end": 9209,
											"name": "tag",
											"source": 14,
											"value": "167"
										},
										{
											"begin": 8843,
											"end": 9209,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8985,
											"end": 8988,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9006,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 9070,
											"end": 9072,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 9065,
											"end": 9068,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9006,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "141"
										},
										{
											"begin": 9006,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9006,
											"end": 9073,
											"name": "tag",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 9006,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8999,
											"end": 9073,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8999,
											"end": 9073,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9082,
											"end": 9175,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 9171,
											"end": 9174,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9082,
											"end": 9175,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 9082,
											"end": 9175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9082,
											"end": 9175,
											"name": "tag",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 9082,
											"end": 9175,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9200,
											"end": 9202,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9195,
											"end": 9198,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9191,
											"end": 9203,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8843,
											"end": 9209,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8843,
											"end": 9209,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8843,
											"end": 9209,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8843,
											"end": 9209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9215,
											"end": 9634,
											"name": "tag",
											"source": 14,
											"value": "114"
										},
										{
											"begin": 9215,
											"end": 9634,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9381,
											"end": 9385,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9419,
											"end": 9421,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9408,
											"end": 9417,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9404,
											"end": 9422,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9396,
											"end": 9422,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9396,
											"end": 9422,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9468,
											"end": 9477,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9462,
											"end": 9466,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9458,
											"end": 9478,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9454,
											"end": 9455,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9443,
											"end": 9452,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9439,
											"end": 9456,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9432,
											"end": 9479,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9496,
											"end": 9627,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9496,
											"end": 9627,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "167"
										},
										{
											"begin": 9496,
											"end": 9627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9496,
											"end": 9627,
											"name": "tag",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 9496,
											"end": 9627,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9488,
											"end": 9627,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9488,
											"end": 9627,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9215,
											"end": 9634,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9215,
											"end": 9634,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9215,
											"end": 9634,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9215,
											"end": 9634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9640,
											"end": 9819,
											"name": "tag",
											"source": 14,
											"value": "168"
										},
										{
											"begin": 9640,
											"end": 9819,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9780,
											"end": 9811,
											"name": "PUSH",
											"source": 14,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 9776,
											"end": 9777,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9768,
											"end": 9774,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9764,
											"end": 9778,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9757,
											"end": 9812,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9640,
											"end": 9819,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9640,
											"end": 9819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9825,
											"end": 10191,
											"name": "tag",
											"source": 14,
											"value": "169"
										},
										{
											"begin": 9825,
											"end": 10191,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9967,
											"end": 9970,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9988,
											"end": 10055,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 10052,
											"end": 10054,
											"name": "PUSH",
											"source": 14,
											"value": "1D"
										},
										{
											"begin": 10047,
											"end": 10050,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9988,
											"end": 10055,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "141"
										},
										{
											"begin": 9988,
											"end": 10055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9988,
											"end": 10055,
											"name": "tag",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 9988,
											"end": 10055,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9981,
											"end": 10055,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9981,
											"end": 10055,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10064,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "274"
										},
										{
											"begin": 10153,
											"end": 10156,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10064,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "168"
										},
										{
											"begin": 10064,
											"end": 10157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10064,
											"end": 10157,
											"name": "tag",
											"source": 14,
											"value": "274"
										},
										{
											"begin": 10064,
											"end": 10157,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10182,
											"end": 10184,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10177,
											"end": 10180,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10173,
											"end": 10185,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10166,
											"end": 10185,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10166,
											"end": 10185,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9825,
											"end": 10191,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9825,
											"end": 10191,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9825,
											"end": 10191,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9825,
											"end": 10191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10197,
											"end": 10616,
											"name": "tag",
											"source": 14,
											"value": "121"
										},
										{
											"begin": 10197,
											"end": 10616,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10363,
											"end": 10367,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10401,
											"end": 10403,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10390,
											"end": 10399,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10386,
											"end": 10404,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10378,
											"end": 10404,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10378,
											"end": 10404,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10450,
											"end": 10459,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10444,
											"end": 10448,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10440,
											"end": 10460,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10436,
											"end": 10437,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10425,
											"end": 10434,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10421,
											"end": 10438,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10414,
											"end": 10461,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10478,
											"end": 10609,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 10604,
											"end": 10608,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10478,
											"end": 10609,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "169"
										},
										{
											"begin": 10478,
											"end": 10609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10478,
											"end": 10609,
											"name": "tag",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 10478,
											"end": 10609,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10470,
											"end": 10609,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10470,
											"end": 10609,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10197,
											"end": 10616,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10197,
											"end": 10616,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10197,
											"end": 10616,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10197,
											"end": 10616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10622,
											"end": 10846,
											"name": "tag",
											"source": 14,
											"value": "170"
										},
										{
											"begin": 10622,
											"end": 10846,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10762,
											"end": 10796,
											"name": "PUSH",
											"source": 14,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 10758,
											"end": 10759,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10750,
											"end": 10756,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10746,
											"end": 10760,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10739,
											"end": 10797,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10831,
											"end": 10838,
											"name": "PUSH",
											"source": 14,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10826,
											"end": 10828,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10818,
											"end": 10824,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10814,
											"end": 10829,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10807,
											"end": 10839,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10622,
											"end": 10846,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10622,
											"end": 10846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10852,
											"end": 11218,
											"name": "tag",
											"source": 14,
											"value": "171"
										},
										{
											"begin": 10852,
											"end": 11218,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10994,
											"end": 10997,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11015,
											"end": 11082,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 11079,
											"end": 11081,
											"name": "PUSH",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 11074,
											"end": 11077,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11015,
											"end": 11082,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "141"
										},
										{
											"begin": 11015,
											"end": 11082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11015,
											"end": 11082,
											"name": "tag",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 11015,
											"end": 11082,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11008,
											"end": 11082,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11008,
											"end": 11082,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11091,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 11180,
											"end": 11183,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11091,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "170"
										},
										{
											"begin": 11091,
											"end": 11184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11091,
											"end": 11184,
											"name": "tag",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 11091,
											"end": 11184,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11209,
											"end": 11211,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11204,
											"end": 11207,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11200,
											"end": 11212,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11193,
											"end": 11212,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11193,
											"end": 11212,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10852,
											"end": 11218,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10852,
											"end": 11218,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10852,
											"end": 11218,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10852,
											"end": 11218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11224,
											"end": 11643,
											"name": "tag",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 11224,
											"end": 11643,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11390,
											"end": 11394,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11428,
											"end": 11430,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11417,
											"end": 11426,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11413,
											"end": 11431,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11405,
											"end": 11431,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11405,
											"end": 11431,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11477,
											"end": 11486,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11471,
											"end": 11475,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11467,
											"end": 11487,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11463,
											"end": 11464,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11452,
											"end": 11461,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11448,
											"end": 11465,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11441,
											"end": 11488,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11505,
											"end": 11636,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 11631,
											"end": 11635,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11505,
											"end": 11636,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "171"
										},
										{
											"begin": 11505,
											"end": 11636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11505,
											"end": 11636,
											"name": "tag",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 11505,
											"end": 11636,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11497,
											"end": 11636,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11497,
											"end": 11636,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11224,
											"end": 11643,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11224,
											"end": 11643,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11224,
											"end": 11643,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11224,
											"end": 11643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11649,
											"end": 11871,
											"name": "tag",
											"source": 14,
											"value": "172"
										},
										{
											"begin": 11649,
											"end": 11871,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11789,
											"end": 11823,
											"name": "PUSH",
											"source": 14,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 11785,
											"end": 11786,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11777,
											"end": 11783,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11773,
											"end": 11787,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11766,
											"end": 11824,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11858,
											"end": 11863,
											"name": "PUSH",
											"source": 14,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11853,
											"end": 11855,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11845,
											"end": 11851,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11841,
											"end": 11856,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11834,
											"end": 11864,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11649,
											"end": 11871,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11649,
											"end": 11871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11877,
											"end": 12243,
											"name": "tag",
											"source": 14,
											"value": "173"
										},
										{
											"begin": 11877,
											"end": 12243,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12019,
											"end": 12022,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12040,
											"end": 12107,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 12104,
											"end": 12106,
											"name": "PUSH",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 12099,
											"end": 12102,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12040,
											"end": 12107,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "141"
										},
										{
											"begin": 12040,
											"end": 12107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12040,
											"end": 12107,
											"name": "tag",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 12040,
											"end": 12107,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12033,
											"end": 12107,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12033,
											"end": 12107,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12116,
											"end": 12209,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 12205,
											"end": 12208,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12116,
											"end": 12209,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "172"
										},
										{
											"begin": 12116,
											"end": 12209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12116,
											"end": 12209,
											"name": "tag",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 12116,
											"end": 12209,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12234,
											"end": 12236,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12229,
											"end": 12232,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12225,
											"end": 12237,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11877,
											"end": 12243,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11877,
											"end": 12243,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11877,
											"end": 12243,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11877,
											"end": 12243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12249,
											"end": 12668,
											"name": "tag",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 12249,
											"end": 12668,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12415,
											"end": 12419,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12453,
											"end": 12455,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12442,
											"end": 12451,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12438,
											"end": 12456,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12430,
											"end": 12456,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12430,
											"end": 12456,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12502,
											"end": 12511,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12496,
											"end": 12500,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12492,
											"end": 12512,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12488,
											"end": 12489,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12477,
											"end": 12486,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12473,
											"end": 12490,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12466,
											"end": 12513,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12530,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 12656,
											"end": 12660,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12530,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "173"
										},
										{
											"begin": 12530,
											"end": 12661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12530,
											"end": 12661,
											"name": "tag",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 12530,
											"end": 12661,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12522,
											"end": 12661,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12522,
											"end": 12661,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12249,
											"end": 12668,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12249,
											"end": 12668,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12249,
											"end": 12668,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12249,
											"end": 12668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12674,
											"end": 12899,
											"name": "tag",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 12674,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12814,
											"end": 12848,
											"name": "PUSH",
											"source": 14,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 12810,
											"end": 12811,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12802,
											"end": 12808,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12798,
											"end": 12812,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12791,
											"end": 12849,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12883,
											"end": 12891,
											"name": "PUSH",
											"source": 14,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12878,
											"end": 12880,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12870,
											"end": 12876,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12866,
											"end": 12881,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12859,
											"end": 12892,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12674,
											"end": 12899,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12674,
											"end": 12899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12905,
											"end": 13271,
											"name": "tag",
											"source": 14,
											"value": "175"
										},
										{
											"begin": 12905,
											"end": 13271,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13047,
											"end": 13050,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13068,
											"end": 13135,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 13132,
											"end": 13134,
											"name": "PUSH",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 13127,
											"end": 13130,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13068,
											"end": 13135,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "141"
										},
										{
											"begin": 13068,
											"end": 13135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13068,
											"end": 13135,
											"name": "tag",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 13068,
											"end": 13135,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13061,
											"end": 13135,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13061,
											"end": 13135,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13144,
											"end": 13237,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 13233,
											"end": 13236,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13144,
											"end": 13237,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 13144,
											"end": 13237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13144,
											"end": 13237,
											"name": "tag",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 13144,
											"end": 13237,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13262,
											"end": 13264,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13257,
											"end": 13260,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13253,
											"end": 13265,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13246,
											"end": 13265,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13246,
											"end": 13265,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12905,
											"end": 13271,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12905,
											"end": 13271,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12905,
											"end": 13271,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12905,
											"end": 13271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13277,
											"end": 13696,
											"name": "tag",
											"source": 14,
											"value": "134"
										},
										{
											"begin": 13277,
											"end": 13696,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13443,
											"end": 13447,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13481,
											"end": 13483,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13470,
											"end": 13479,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13466,
											"end": 13484,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13458,
											"end": 13484,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13458,
											"end": 13484,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13530,
											"end": 13539,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13524,
											"end": 13528,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13520,
											"end": 13540,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 13516,
											"end": 13517,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13505,
											"end": 13514,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13501,
											"end": 13518,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13494,
											"end": 13541,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13558,
											"end": 13689,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 13684,
											"end": 13688,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13558,
											"end": 13689,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "175"
										},
										{
											"begin": 13558,
											"end": 13689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13558,
											"end": 13689,
											"name": "tag",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 13558,
											"end": 13689,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13550,
											"end": 13689,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13550,
											"end": 13689,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13277,
											"end": 13696,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13277,
											"end": 13696,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13277,
											"end": 13696,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13277,
											"end": 13696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"NewFraxProtocol/contracts/LeveragePool/TestERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 625,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 631,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 633,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 635,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 637,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 625,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 631,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 633,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 635,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 637,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e8a6196f0d29a3d3e20abab637d22d672b7c205e8c60d374a4db21ed2711a47e64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e8a6196f0d29a3d3e20abab637d22d672b7c205e8c60d374a4db21ed2711a47e64736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 0xA6 NOT PUSH16 0xD29A3D3E20ABAB637D22D672B7C205E DUP13 PUSH1 0xD3 PUSH21 0xA4DB21ED2711A47E64736F6C634300081500330000 ",
							"sourceMap": "188:2065:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e8a6196f0d29a3d3e20abab637d22d672b7c205e8c60d374a4db21ed2711a47e64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 0xA6 NOT PUSH16 0xD29A3D3E20ABAB637D22D672B7C205E DUP13 PUSH1 0xD3 PUSH21 0xA4DB21ED2711A47E64736F6C634300081500330000 ",
							"sourceMap": "188:2065:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e8a6196f0d29a3d3e20abab637d22d672b7c205e8c60d374a4db21ed2711a47e64736f6c63430008150033",
									".code": [
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"NewFraxProtocol/contracts/LeveragePool/TestERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122019617b0ad76127d2d11e0445ed33c60ed380063537b500762709ce0d9e2e828d64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122019617b0ad76127d2d11e0445ed33c60ed380063537b500762709ce0d9e2e828d64736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH2 0x7B0A 0xD7 PUSH2 0x27D2 0xD1 0x1E DIV GASLIMIT 0xED CALLER 0xC6 0xE 0xD3 DUP1 MOD CALLDATALOAD CALLDATACOPY 0xB5 STOP PUSH23 0x2709CE0D9E2E828D64736F6C6343000815003300000000 ",
							"sourceMap": "202:12302:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122019617b0ad76127d2d11e0445ed33c60ed380063537b500762709ce0d9e2e828d64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH2 0x7B0A 0xD7 PUSH2 0x27D2 0xD1 0x1E DIV GASLIMIT 0xED CALLER 0xC6 0xE 0xD3 DUP1 MOD CALLDATALOAD CALLDATACOPY 0xB5 STOP PUSH23 0x2709CE0D9E2E828D64736F6C6343000815003300000000 ",
							"sourceMap": "202:12302:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122019617b0ad76127d2d11e0445ed33c60ed380063537b500762709ce0d9e2e828d64736f6c63430008150033",
									".code": [
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"NewFraxProtocol/contracts/LeveragePool/TestERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"NewFraxProtocol/contracts/LeveragePool/TestERC20.sol": {
				"TestERC20": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NewFraxProtocol/contracts/LeveragePool/TestERC20.sol\":429:642  contract TestERC20 is ERC20, ERC20Burnable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"NewFraxProtocol/contracts/LeveragePool/TestERC20.sol\":488:536  constructor() ERC20(\"TestERC20\", \"TestERC20\") {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1976:2089  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  0x5465737445524332300000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  0x5465737445524332300000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2050:2055  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2042:2047  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2042:2055  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2075:2082  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2065:2072  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2065:2082  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1976:2089  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"NewFraxProtocol/contracts/LeveragePool/TestERC20.sol\":429:642  contract TestERC20 is ERC20, ERC20Burnable, Ownable {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_18:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_19:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_20:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_21:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_43:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_45\n  tag_20\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":714:798   */\ntag_44:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_22:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_23:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_24:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_25:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_50\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_24\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1429:1468   */\n  tag_51\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_24\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_26:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_27:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_28:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_55\n    /* \"#utility.yul\":1818:1852   */\n  tag_56\n    /* \"#utility.yul\":1827:1851   */\n  tag_57\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_26\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1818:1852   */\n  tag_27\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1800:1853   */\n  tag_26\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_29:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_30:\n    /* \"#utility.yul\":2056:2095   */\n  tag_60\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_28\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2117:2208   */\n  tag_61\n    /* \"#utility.yul\":2166:2207   */\n  tag_62\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_29\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_25\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_31:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_32:\n    /* \"#utility.yul\":2377:2409   */\n  tag_65\n  tag_31\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2418:2483   */\n  tag_66\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_30\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_33:\n    /* \"#utility.yul\":2555:2675   */\ntag_68:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_71\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_32\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_68)\ntag_70:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_34:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_74\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_22\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2906:2935   */\n  tag_75\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_23\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_76:\n    /* \"#utility.yul\":3133:3213   */\n  tag_77\n    /* \"#utility.yul\":3189:3211   */\n  tag_78\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_23\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_33\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_73:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_35:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_36:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_81\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_35\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_37:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_83\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_36\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_7:\n    /* \"#utility.yul\":3950:3987   */\n  tag_85\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_18\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_87\n  tag_19\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":4038:4094   */\ntag_86:\n    /* \"#utility.yul\":4118:4156   */\n  tag_88\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_21\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":4203:4270   */\n  tag_89\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_34\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_91\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_92:\n    /* \"#utility.yul\":5144:5211   */\n  tag_93\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_37\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_90)\n    /* \"#utility.yul\":4365:4983   */\ntag_91:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_94\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_22\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_95:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_95)\ntag_97:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_99\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_36\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_98:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_90:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"NewFraxProtocol/contracts/LeveragePool/TestERC20.sol\":429:642  contract TestERC20 is ERC20, ERC20Burnable, Ownable {... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"NewFraxProtocol/contracts/LeveragePool/TestERC20.sol\":429:642  contract TestERC20 is ERC20, ERC20Burnable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x313ce567\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NewFraxProtocol/contracts/LeveragePool/TestERC20.sol\":544:639  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_9:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":578:667  function burn(uint256 amount) public virtual {... */\n    tag_10:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_11:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":973:1134  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_13:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n    tag_15:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_16:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_17:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_18:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2208:2221  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2240:2245  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2233:2245  return _name */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_92\n      jump\t// in\n    tag_93:\n      dup1\n      iszero\n      tag_94\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_95\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_94)\n    tag_95:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_96:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_96\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4514:4518  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4530:4543  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4546:4558  _msgSender() */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4546:4556  _msgSender */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4546:4558  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4530:4558  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4568:4600  _approve(owner, spender, amount) */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4577:4582  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4584:4591  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4593:4599  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4568:4576  _approve */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4568:4600  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4617:4621  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4610:4621  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3303:3310  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3341  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3322:3341  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5317:5321  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5333:5348  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5351:5363  _msgSender() */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5351:5361  _msgSender */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5351:5363  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5333:5363  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5373:5411  _spendAllowance(from, spender, amount) */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5389:5393  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5395:5402  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5410  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5373:5388  _spendAllowance */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5373:5411  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5448  _transfer(from, to, amount) */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5431:5435  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5437:5439  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5441:5447  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5430  _transfer */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5448  _transfer(from, to, amount) */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5465:5469  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5458:5469  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3149:3154  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3173:3175  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3166:3175  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5959:5963  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5975:5988  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5991:6003  _msgSender() */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5991:6001  _msgSender */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5991:6003  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5975:6003  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6013:6077  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6022:6027  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6029:6036  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6066:6076  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6063  allowance(owner, spender) */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6048:6053  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6055:6062  spender */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6047  allowance */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6063  allowance(owner, spender) */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6076  allowance(owner, spender) + addedValue */\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6013:6021  _approve */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6013:6077  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6098  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6087:6098  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/LeveragePool/TestERC20.sol\":544:639  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_117:\n        /* \"NewFraxProtocol/contracts/LeveragePool/TestERC20.sol\":614:631  _mint(to, amount) */\n      tag_120\n        /* \"NewFraxProtocol/contracts/LeveragePool/TestERC20.sol\":620:622  to */\n      dup3\n        /* \"NewFraxProtocol/contracts/LeveragePool/TestERC20.sol\":624:630  amount */\n      dup3\n        /* \"NewFraxProtocol/contracts/LeveragePool/TestERC20.sol\":614:619  _mint */\n      tag_121\n        /* \"NewFraxProtocol/contracts/LeveragePool/TestERC20.sol\":614:631  _mint(to, amount) */\n      jump\t// in\n    tag_120:\n        /* \"NewFraxProtocol/contracts/LeveragePool/TestERC20.sol\":544:639  function mint(address to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":578:667  function burn(uint256 amount) public virtual {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":633:660  _burn(_msgSender(), amount) */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":639:651  _msgSender() */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":639:649  _msgSender */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":639:651  _msgSender() */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":653:659  amount */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":633:638  _burn */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":633:660  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":578:667  function burn(uint256 amount) public virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3480:3487  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3506:3515  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3506:3524  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3516:3523  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3506:3524  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3499:3524  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":973:1134  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1049:1095  _spendAllowance(account, _msgSender(), amount) */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1065:1072  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1074:1086  _msgSender() */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1074:1084  _msgSender */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1074:1086  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1088:1094  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1049:1064  _spendAllowance */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1049:1095  _spendAllowance(account, _msgSender(), amount) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1105:1127  _burn(account, amount) */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1111:1118  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1120:1126  amount */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1105:1110  _burn */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1105:1127  _burn(account, amount) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":973:1134  function burnFrom(address account, uint256 amount) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2421:2434  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2453:2460  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2446:2460  return _symbol */\n      dup1\n      sload\n      tag_138\n      swap1\n      tag_92\n      jump\t// in\n    tag_138:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_139\n      swap1\n      tag_92\n      jump\t// in\n    tag_139:\n      dup1\n      iszero\n      tag_140\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_141\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_140)\n    tag_141:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_142:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_142\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6685:6689  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6701:6714  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6717:6729  _msgSender() */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6717:6727  _msgSender */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6717:6729  _msgSender() */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6701:6729  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6739:6763  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6791  allowance(owner, spender) */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6776:6781  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6783:6790  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6775  allowance */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6791  allowance(owner, spender) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6739:6791  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6829:6844  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6809:6825  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6809:6844  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6801:6886  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6920:6980  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6929:6934  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6936:6943  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6964:6979  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6945:6961  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6945:6979  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6920:6928  _approve */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6920:6980  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7008:7012  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7001:7012  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3806:3810  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3822:3835  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3838:3850  _msgSender() */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3838:3848  _msgSender */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3838:3850  _msgSender() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3822:3850  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3860:3888  _transfer(owner, to, amount) */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3870:3875  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3877:3879  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3881:3887  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3860:3869  _transfer */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3860:3888  _transfer(owner, to, amount) */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3905:3909  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3898:3909  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4063:4070  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4100  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4107  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4101:4106  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4107  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4116  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4108:4115  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4116  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4082:4116  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10874  function _approve(... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10652:10653  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10635:10654  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10635:10640  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10635:10654  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10695  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10733  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10713:10734  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10713:10720  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10713:10734  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10705:10773  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10814:10820  amount */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10795  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10802  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10796:10801  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10802  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10811  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10810  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10811  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10820  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10851:10858  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10844:10849  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10860:10866  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_169\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10874  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11155:11596  function _spendAllowance(... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11285:11309  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11312:11337  allowance(owner, spender) */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11322:11327  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11329:11336  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11312:11321  allowance */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11312:11337  allowance(owner, spender) */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11285:11337  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11371:11388  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11351:11367  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11351:11388  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11347:11590  if (currentAllowance != type(uint256).max) {... */\n      tag_172\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11438  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11412:11428  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11412:11438  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11404:11472  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11565  _approve(owner, spender, currentAllowance - amount) */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11523:11528  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11530:11537  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11558:11564  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11539:11555  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11539:11564  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11522  _approve */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11565  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11347:11590  if (currentAllowance != type(uint256).max) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11275:11596  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11155:11596  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7473:8291  function _transfer(... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7615:7616  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7599:7617  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7599:7603  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7599:7617  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7591:7659  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7691:7692  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7677:7693  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7677:7679  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7677:7693  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7669:7733  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7744:7782  _beforeTokenTransfer(from, to, amount) */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7765:7769  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7771:7773  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7775:7781  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7744:7764  _beforeTokenTransfer */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7744:7782  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7812  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7815:7824  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7815:7830  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7825:7829  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7815:7830  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7830  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7863:7869  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7848:7859  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7848:7869  fromBalance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7840:7912  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7978:7984  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7964:7975  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7964:7984  fromBalance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7955  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7961  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7956:7960  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7961  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7984  _balances[from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8178:8184  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8170  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8174  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8171:8173  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8174  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8184  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8225:8227  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8219:8223  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8229:8235  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_189\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8284  _afterTokenTransfer(from, to, amount) */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8267:8271  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8273:8275  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8277:8283  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8266  _afterTokenTransfer */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8284  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7581:8291  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7473:8291  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_193\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_99\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_194\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8567:9102  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8669:8670  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8650:8671  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8650:8657  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8650:8671  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8642:8707  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8718:8767  _beforeTokenTransfer(address(0), account, amount) */\n      tag_202\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8747:8748  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8751:8758  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8760:8766  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8718:8738  _beforeTokenTransfer */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8718:8767  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8794:8800  amount */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8778:8790  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8778:8800  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_203\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_203:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8968:8974  amount */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8946:8955  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8946:8964  _balances[account] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8956:8963  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8946:8964  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8946:8974  _balances[account] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9020:9027  account */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8999:9036  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9016:9017  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8999:9036  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9029:9035  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8999:9036  Transfer(address(0), account, amount) */\n      mload(0x40)\n      tag_204\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9047:9095  _afterTokenTransfer(address(0), account, amount) */\n      tag_205\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9075:9076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9079:9086  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9088:9094  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9047:9066  _afterTokenTransfer */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9047:9095  _afterTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8567:9102  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9422:10081  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9524:9525  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9505:9526  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9505:9512  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9505:9526  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9497:9564  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9575:9624  _beforeTokenTransfer(account, address(0), amount) */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9596:9603  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9613:9614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9617:9623  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9575:9595  _beforeTokenTransfer */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9575:9624  _beforeTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9635:9657  uint256 accountBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9660:9669  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9660:9678  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9670:9677  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9660:9678  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9635:9678  uint256 accountBalance = _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9714:9720  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9696:9710  accountBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9696:9720  accountBalance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9688:9759  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9831:9837  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9814:9828  accountBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9814:9837  accountBalance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9793:9802  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9793:9811  _balances[account] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9803:9810  account */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9793:9811  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9793:9837  _balances[account] = accountBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9946:9952  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9942  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9952  _totalSupply -= amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10004:10005  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9978:10015  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9994  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9978:10015  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10008:10014  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9978:10015  Transfer(account, address(0), amount) */\n      mload(0x40)\n      tag_214\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10026:10074  _afterTokenTransfer(account, address(0), amount) */\n      tag_215\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10046:10053  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10063:10064  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10067:10073  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10026:10045  _afterTokenTransfer */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10026:10074  _afterTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9487:10081  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9422:10081  function _burn(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":12180:12301  function _beforeTokenTransfer(... */\n    tag_185:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":12889:13009  function _afterTokenTransfer(... */\n    tag_191:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_219:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_220:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_221:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_270:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_270)\n    tag_272:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_222:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_223:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_275\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_219\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":818:889   */\n      tag_276\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_220\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_277\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_221\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":988:1017   */\n      tag_278\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_222\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_26:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_280\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_223\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_225:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_227:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_228:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_286\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_227\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_229:\n        /* \"#utility.yul\":1983:2007   */\n      tag_288\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_228\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_289\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_289:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_230:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_291\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_229\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_231:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_232:\n        /* \"#utility.yul\":2339:2363   */\n      tag_294\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_231\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_295\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_295:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_233:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_297\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_232\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_29:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_300\n      tag_225\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":2632:2751   */\n    tag_299:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_301\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_230\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_302\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_233\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_234:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_235:\n        /* \"#utility.yul\":3196:3217   */\n      tag_305\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_234\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_32:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_307\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_235\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_236:\n        /* \"#utility.yul\":3533:3557   */\n      tag_309\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_231\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_36:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_311\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_236\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_39:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_314\n      tag_225\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":3908:4027   */\n    tag_313:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_315\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_230\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_316\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_230\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_317\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_233\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_237:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_238:\n        /* \"#utility.yul\":4598:4620   */\n      tag_320\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_237\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_45:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_322\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_238\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_55:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_325\n      tag_225\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":4929:5048   */\n    tag_324:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_326\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_233\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5517   */\n    tag_59:\n        /* \"#utility.yul\":5247:5253   */\n      0x00\n        /* \"#utility.yul\":5296:5298   */\n      0x20\n        /* \"#utility.yul\":5284:5293   */\n      dup3\n        /* \"#utility.yul\":5275:5282   */\n      dup5\n        /* \"#utility.yul\":5271:5294   */\n      sub\n        /* \"#utility.yul\":5267:5299   */\n      slt\n        /* \"#utility.yul\":5264:5383   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":5302:5381   */\n      tag_329\n      tag_225\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":5264:5383   */\n    tag_328:\n        /* \"#utility.yul\":5422:5423   */\n      0x00\n        /* \"#utility.yul\":5447:5500   */\n      tag_330\n        /* \"#utility.yul\":5492:5499   */\n      dup5\n        /* \"#utility.yul\":5483:5489   */\n      dup3\n        /* \"#utility.yul\":5472:5481   */\n      dup6\n        /* \"#utility.yul\":5468:5490   */\n      add\n        /* \"#utility.yul\":5447:5500   */\n      tag_230\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":5437:5500   */\n      swap2\n      pop\n        /* \"#utility.yul\":5393:5510   */\n      pop\n        /* \"#utility.yul\":5188:5517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5523:5641   */\n    tag_239:\n        /* \"#utility.yul\":5610:5634   */\n      tag_332\n        /* \"#utility.yul\":5628:5633   */\n      dup2\n        /* \"#utility.yul\":5610:5634   */\n      tag_228\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":5605:5608   */\n      dup3\n        /* \"#utility.yul\":5598:5635   */\n      mstore\n        /* \"#utility.yul\":5523:5641   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5647:5869   */\n    tag_70:\n        /* \"#utility.yul\":5740:5744   */\n      0x00\n        /* \"#utility.yul\":5778:5780   */\n      0x20\n        /* \"#utility.yul\":5767:5776   */\n      dup3\n        /* \"#utility.yul\":5763:5781   */\n      add\n        /* \"#utility.yul\":5755:5781   */\n      swap1\n      pop\n        /* \"#utility.yul\":5791:5862   */\n      tag_334\n        /* \"#utility.yul\":5859:5860   */\n      0x00\n        /* \"#utility.yul\":5848:5857   */\n      dup4\n        /* \"#utility.yul\":5844:5861   */\n      add\n        /* \"#utility.yul\":5835:5841   */\n      dup5\n        /* \"#utility.yul\":5791:5862   */\n      tag_239\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":5647:5869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5875:6349   */\n    tag_84:\n        /* \"#utility.yul\":5943:5949   */\n      0x00\n        /* \"#utility.yul\":5951:5957   */\n      dup1\n        /* \"#utility.yul\":6000:6002   */\n      0x40\n        /* \"#utility.yul\":5988:5997   */\n      dup4\n        /* \"#utility.yul\":5979:5986   */\n      dup6\n        /* \"#utility.yul\":5975:5998   */\n      sub\n        /* \"#utility.yul\":5971:6003   */\n      slt\n        /* \"#utility.yul\":5968:6087   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":6006:6085   */\n      tag_337\n      tag_225\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":5968:6087   */\n    tag_336:\n        /* \"#utility.yul\":6126:6127   */\n      0x00\n        /* \"#utility.yul\":6151:6204   */\n      tag_338\n        /* \"#utility.yul\":6196:6203   */\n      dup6\n        /* \"#utility.yul\":6187:6193   */\n      dup3\n        /* \"#utility.yul\":6176:6185   */\n      dup7\n        /* \"#utility.yul\":6172:6194   */\n      add\n        /* \"#utility.yul\":6151:6204   */\n      tag_230\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":6141:6204   */\n      swap3\n      pop\n        /* \"#utility.yul\":6097:6214   */\n      pop\n        /* \"#utility.yul\":6253:6255   */\n      0x20\n        /* \"#utility.yul\":6279:6332   */\n      tag_339\n        /* \"#utility.yul\":6324:6331   */\n      dup6\n        /* \"#utility.yul\":6315:6321   */\n      dup3\n        /* \"#utility.yul\":6304:6313   */\n      dup7\n        /* \"#utility.yul\":6300:6322   */\n      add\n        /* \"#utility.yul\":6279:6332   */\n      tag_230\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":6269:6332   */\n      swap2\n      pop\n        /* \"#utility.yul\":6224:6342   */\n      pop\n        /* \"#utility.yul\":5875:6349   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6355:6535   */\n    tag_240:\n        /* \"#utility.yul\":6403:6480   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6400:6401   */\n      0x00\n        /* \"#utility.yul\":6393:6481   */\n      mstore\n        /* \"#utility.yul\":6500:6504   */\n      0x22\n        /* \"#utility.yul\":6497:6498   */\n      0x04\n        /* \"#utility.yul\":6490:6505   */\n      mstore\n        /* \"#utility.yul\":6524:6528   */\n      0x24\n        /* \"#utility.yul\":6521:6522   */\n      0x00\n        /* \"#utility.yul\":6514:6529   */\n      revert\n        /* \"#utility.yul\":6541:6861   */\n    tag_92:\n        /* \"#utility.yul\":6585:6591   */\n      0x00\n        /* \"#utility.yul\":6622:6623   */\n      0x02\n        /* \"#utility.yul\":6616:6620   */\n      dup3\n        /* \"#utility.yul\":6612:6624   */\n      div\n        /* \"#utility.yul\":6602:6624   */\n      swap1\n      pop\n        /* \"#utility.yul\":6669:6670   */\n      0x01\n        /* \"#utility.yul\":6663:6667   */\n      dup3\n        /* \"#utility.yul\":6659:6671   */\n      and\n        /* \"#utility.yul\":6690:6708   */\n      dup1\n        /* \"#utility.yul\":6680:6761   */\n      tag_342\n      jumpi\n        /* \"#utility.yul\":6746:6750   */\n      0x7f\n        /* \"#utility.yul\":6738:6744   */\n      dup3\n        /* \"#utility.yul\":6734:6751   */\n      and\n        /* \"#utility.yul\":6724:6751   */\n      swap2\n      pop\n        /* \"#utility.yul\":6680:6761   */\n    tag_342:\n        /* \"#utility.yul\":6808:6810   */\n      0x20\n        /* \"#utility.yul\":6800:6806   */\n      dup3\n        /* \"#utility.yul\":6797:6811   */\n      lt\n        /* \"#utility.yul\":6777:6795   */\n      dup2\n        /* \"#utility.yul\":6774:6812   */\n      sub\n        /* \"#utility.yul\":6771:6855   */\n      tag_343\n      jumpi\n        /* \"#utility.yul\":6827:6845   */\n      tag_344\n      tag_240\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":6771:6855   */\n    tag_343:\n        /* \"#utility.yul\":6592:6861   */\n      pop\n        /* \"#utility.yul\":6541:6861   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6867:7047   */\n    tag_241:\n        /* \"#utility.yul\":6915:6992   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6912:6913   */\n      0x00\n        /* \"#utility.yul\":6905:6993   */\n      mstore\n        /* \"#utility.yul\":7012:7016   */\n      0x11\n        /* \"#utility.yul\":7009:7010   */\n      0x04\n        /* \"#utility.yul\":7002:7017   */\n      mstore\n        /* \"#utility.yul\":7036:7040   */\n      0x24\n        /* \"#utility.yul\":7033:7034   */\n      0x00\n        /* \"#utility.yul\":7026:7041   */\n      revert\n        /* \"#utility.yul\":7053:7244   */\n    tag_115:\n        /* \"#utility.yul\":7093:7096   */\n      0x00\n        /* \"#utility.yul\":7112:7132   */\n      tag_347\n        /* \"#utility.yul\":7130:7131   */\n      dup3\n        /* \"#utility.yul\":7112:7132   */\n      tag_231\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":7107:7132   */\n      swap2\n      pop\n        /* \"#utility.yul\":7146:7166   */\n      tag_348\n        /* \"#utility.yul\":7164:7165   */\n      dup4\n        /* \"#utility.yul\":7146:7166   */\n      tag_231\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":7141:7166   */\n      swap3\n      pop\n        /* \"#utility.yul\":7189:7190   */\n      dup3\n        /* \"#utility.yul\":7186:7187   */\n      dup3\n        /* \"#utility.yul\":7182:7191   */\n      add\n        /* \"#utility.yul\":7175:7191   */\n      swap1\n      pop\n        /* \"#utility.yul\":7210:7213   */\n      dup1\n        /* \"#utility.yul\":7207:7208   */\n      dup3\n        /* \"#utility.yul\":7204:7214   */\n      gt\n        /* \"#utility.yul\":7201:7237   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":7217:7235   */\n      tag_350\n      tag_241\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":7201:7237   */\n    tag_349:\n        /* \"#utility.yul\":7053:7244   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7250:7474   */\n    tag_242:\n        /* \"#utility.yul\":7390:7424   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":7386:7387   */\n      0x00\n        /* \"#utility.yul\":7378:7384   */\n      dup3\n        /* \"#utility.yul\":7374:7388   */\n      add\n        /* \"#utility.yul\":7367:7425   */\n      mstore\n        /* \"#utility.yul\":7459:7466   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7454:7456   */\n      0x20\n        /* \"#utility.yul\":7446:7452   */\n      dup3\n        /* \"#utility.yul\":7442:7457   */\n      add\n        /* \"#utility.yul\":7435:7467   */\n      mstore\n        /* \"#utility.yul\":7250:7474   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7480:7846   */\n    tag_243:\n        /* \"#utility.yul\":7622:7625   */\n      0x00\n        /* \"#utility.yul\":7643:7710   */\n      tag_353\n        /* \"#utility.yul\":7707:7709   */\n      0x25\n        /* \"#utility.yul\":7702:7705   */\n      dup4\n        /* \"#utility.yul\":7643:7710   */\n      tag_220\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":7636:7710   */\n      swap2\n      pop\n        /* \"#utility.yul\":7719:7812   */\n      tag_354\n        /* \"#utility.yul\":7808:7811   */\n      dup3\n        /* \"#utility.yul\":7719:7812   */\n      tag_242\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":7837:7839   */\n      0x40\n        /* \"#utility.yul\":7832:7835   */\n      dup3\n        /* \"#utility.yul\":7828:7840   */\n      add\n        /* \"#utility.yul\":7821:7840   */\n      swap1\n      pop\n        /* \"#utility.yul\":7480:7846   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7852:8271   */\n    tag_148:\n        /* \"#utility.yul\":8018:8022   */\n      0x00\n        /* \"#utility.yul\":8056:8058   */\n      0x20\n        /* \"#utility.yul\":8045:8054   */\n      dup3\n        /* \"#utility.yul\":8041:8059   */\n      add\n        /* \"#utility.yul\":8033:8059   */\n      swap1\n      pop\n        /* \"#utility.yul\":8105:8114   */\n      dup2\n        /* \"#utility.yul\":8099:8103   */\n      dup2\n        /* \"#utility.yul\":8095:8115   */\n      sub\n        /* \"#utility.yul\":8091:8092   */\n      0x00\n        /* \"#utility.yul\":8080:8089   */\n      dup4\n        /* \"#utility.yul\":8076:8093   */\n      add\n        /* \"#utility.yul\":8069:8116   */\n      mstore\n        /* \"#utility.yul\":8133:8264   */\n      tag_356\n        /* \"#utility.yul\":8259:8263   */\n      dup2\n        /* \"#utility.yul\":8133:8264   */\n      tag_243\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":8125:8264   */\n      swap1\n      pop\n        /* \"#utility.yul\":7852:8271   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8277:8502   */\n    tag_244:\n        /* \"#utility.yul\":8417:8451   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":8413:8414   */\n      0x00\n        /* \"#utility.yul\":8405:8411   */\n      dup3\n        /* \"#utility.yul\":8401:8415   */\n      add\n        /* \"#utility.yul\":8394:8452   */\n      mstore\n        /* \"#utility.yul\":8486:8494   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8481:8483   */\n      0x20\n        /* \"#utility.yul\":8473:8479   */\n      dup3\n        /* \"#utility.yul\":8469:8484   */\n      add\n        /* \"#utility.yul\":8462:8495   */\n      mstore\n        /* \"#utility.yul\":8277:8502   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8508:8874   */\n    tag_245:\n        /* \"#utility.yul\":8650:8653   */\n      0x00\n        /* \"#utility.yul\":8671:8738   */\n      tag_359\n        /* \"#utility.yul\":8735:8737   */\n      0x26\n        /* \"#utility.yul\":8730:8733   */\n      dup4\n        /* \"#utility.yul\":8671:8738   */\n      tag_220\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":8664:8738   */\n      swap2\n      pop\n        /* \"#utility.yul\":8747:8840   */\n      tag_360\n        /* \"#utility.yul\":8836:8839   */\n      dup3\n        /* \"#utility.yul\":8747:8840   */\n      tag_244\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":8865:8867   */\n      0x40\n        /* \"#utility.yul\":8860:8863   */\n      dup3\n        /* \"#utility.yul\":8856:8868   */\n      add\n        /* \"#utility.yul\":8849:8868   */\n      swap1\n      pop\n        /* \"#utility.yul\":8508:8874   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8880:9299   */\n    tag_159:\n        /* \"#utility.yul\":9046:9050   */\n      0x00\n        /* \"#utility.yul\":9084:9086   */\n      0x20\n        /* \"#utility.yul\":9073:9082   */\n      dup3\n        /* \"#utility.yul\":9069:9087   */\n      add\n        /* \"#utility.yul\":9061:9087   */\n      swap1\n      pop\n        /* \"#utility.yul\":9133:9142   */\n      dup2\n        /* \"#utility.yul\":9127:9131   */\n      dup2\n        /* \"#utility.yul\":9123:9143   */\n      sub\n        /* \"#utility.yul\":9119:9120   */\n      0x00\n        /* \"#utility.yul\":9108:9117   */\n      dup4\n        /* \"#utility.yul\":9104:9121   */\n      add\n        /* \"#utility.yul\":9097:9144   */\n      mstore\n        /* \"#utility.yul\":9161:9292   */\n      tag_362\n        /* \"#utility.yul\":9287:9291   */\n      dup2\n        /* \"#utility.yul\":9161:9292   */\n      tag_245\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":9153:9292   */\n      swap1\n      pop\n        /* \"#utility.yul\":8880:9299   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9305:9528   */\n    tag_246:\n        /* \"#utility.yul\":9445:9479   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":9441:9442   */\n      0x00\n        /* \"#utility.yul\":9433:9439   */\n      dup3\n        /* \"#utility.yul\":9429:9443   */\n      add\n        /* \"#utility.yul\":9422:9480   */\n      mstore\n        /* \"#utility.yul\":9514:9520   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9509:9511   */\n      0x20\n        /* \"#utility.yul\":9501:9507   */\n      dup3\n        /* \"#utility.yul\":9497:9512   */\n      add\n        /* \"#utility.yul\":9490:9521   */\n      mstore\n        /* \"#utility.yul\":9305:9528   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9534:9900   */\n    tag_247:\n        /* \"#utility.yul\":9676:9679   */\n      0x00\n        /* \"#utility.yul\":9697:9764   */\n      tag_365\n        /* \"#utility.yul\":9761:9763   */\n      0x24\n        /* \"#utility.yul\":9756:9759   */\n      dup4\n        /* \"#utility.yul\":9697:9764   */\n      tag_220\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":9690:9764   */\n      swap2\n      pop\n        /* \"#utility.yul\":9773:9866   */\n      tag_366\n        /* \"#utility.yul\":9862:9865   */\n      dup3\n        /* \"#utility.yul\":9773:9866   */\n      tag_246\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":9891:9893   */\n      0x40\n        /* \"#utility.yul\":9886:9889   */\n      dup3\n        /* \"#utility.yul\":9882:9894   */\n      add\n        /* \"#utility.yul\":9875:9894   */\n      swap1\n      pop\n        /* \"#utility.yul\":9534:9900   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9906:10325   */\n    tag_165:\n        /* \"#utility.yul\":10072:10076   */\n      0x00\n        /* \"#utility.yul\":10110:10112   */\n      0x20\n        /* \"#utility.yul\":10099:10108   */\n      dup3\n        /* \"#utility.yul\":10095:10113   */\n      add\n        /* \"#utility.yul\":10087:10113   */\n      swap1\n      pop\n        /* \"#utility.yul\":10159:10168   */\n      dup2\n        /* \"#utility.yul\":10153:10157   */\n      dup2\n        /* \"#utility.yul\":10149:10169   */\n      sub\n        /* \"#utility.yul\":10145:10146   */\n      0x00\n        /* \"#utility.yul\":10134:10143   */\n      dup4\n        /* \"#utility.yul\":10130:10147   */\n      add\n        /* \"#utility.yul\":10123:10170   */\n      mstore\n        /* \"#utility.yul\":10187:10318   */\n      tag_368\n        /* \"#utility.yul\":10313:10317   */\n      dup2\n        /* \"#utility.yul\":10187:10318   */\n      tag_247\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":10179:10318   */\n      swap1\n      pop\n        /* \"#utility.yul\":9906:10325   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10331:10552   */\n    tag_248:\n        /* \"#utility.yul\":10471:10505   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":10467:10468   */\n      0x00\n        /* \"#utility.yul\":10459:10465   */\n      dup3\n        /* \"#utility.yul\":10455:10469   */\n      add\n        /* \"#utility.yul\":10448:10506   */\n      mstore\n        /* \"#utility.yul\":10540:10544   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10535:10537   */\n      0x20\n        /* \"#utility.yul\":10527:10533   */\n      dup3\n        /* \"#utility.yul\":10523:10538   */\n      add\n        /* \"#utility.yul\":10516:10545   */\n      mstore\n        /* \"#utility.yul\":10331:10552   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10558:10924   */\n    tag_249:\n        /* \"#utility.yul\":10700:10703   */\n      0x00\n        /* \"#utility.yul\":10721:10788   */\n      tag_371\n        /* \"#utility.yul\":10785:10787   */\n      0x22\n        /* \"#utility.yul\":10780:10783   */\n      dup4\n        /* \"#utility.yul\":10721:10788   */\n      tag_220\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":10714:10788   */\n      swap2\n      pop\n        /* \"#utility.yul\":10797:10890   */\n      tag_372\n        /* \"#utility.yul\":10886:10889   */\n      dup3\n        /* \"#utility.yul\":10797:10890   */\n      tag_248\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":10915:10917   */\n      0x40\n        /* \"#utility.yul\":10910:10913   */\n      dup3\n        /* \"#utility.yul\":10906:10918   */\n      add\n        /* \"#utility.yul\":10899:10918   */\n      swap1\n      pop\n        /* \"#utility.yul\":10558:10924   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10930:11349   */\n    tag_168:\n        /* \"#utility.yul\":11096:11100   */\n      0x00\n        /* \"#utility.yul\":11134:11136   */\n      0x20\n        /* \"#utility.yul\":11123:11132   */\n      dup3\n        /* \"#utility.yul\":11119:11137   */\n      add\n        /* \"#utility.yul\":11111:11137   */\n      swap1\n      pop\n        /* \"#utility.yul\":11183:11192   */\n      dup2\n        /* \"#utility.yul\":11177:11181   */\n      dup2\n        /* \"#utility.yul\":11173:11193   */\n      sub\n        /* \"#utility.yul\":11169:11170   */\n      0x00\n        /* \"#utility.yul\":11158:11167   */\n      dup4\n        /* \"#utility.yul\":11154:11171   */\n      add\n        /* \"#utility.yul\":11147:11194   */\n      mstore\n        /* \"#utility.yul\":11211:11342   */\n      tag_374\n        /* \"#utility.yul\":11337:11341   */\n      dup2\n        /* \"#utility.yul\":11211:11342   */\n      tag_249\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":11203:11342   */\n      swap1\n      pop\n        /* \"#utility.yul\":10930:11349   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11355:11534   */\n    tag_250:\n        /* \"#utility.yul\":11495:11526   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":11491:11492   */\n      0x00\n        /* \"#utility.yul\":11483:11489   */\n      dup3\n        /* \"#utility.yul\":11479:11493   */\n      add\n        /* \"#utility.yul\":11472:11527   */\n      mstore\n        /* \"#utility.yul\":11355:11534   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11540:11906   */\n    tag_251:\n        /* \"#utility.yul\":11682:11685   */\n      0x00\n        /* \"#utility.yul\":11703:11770   */\n      tag_377\n        /* \"#utility.yul\":11767:11769   */\n      0x1d\n        /* \"#utility.yul\":11762:11765   */\n      dup4\n        /* \"#utility.yul\":11703:11770   */\n      tag_220\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":11696:11770   */\n      swap2\n      pop\n        /* \"#utility.yul\":11779:11872   */\n      tag_378\n        /* \"#utility.yul\":11868:11871   */\n      dup3\n        /* \"#utility.yul\":11779:11872   */\n      tag_250\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":11897:11899   */\n      0x20\n        /* \"#utility.yul\":11892:11895   */\n      dup3\n        /* \"#utility.yul\":11888:11900   */\n      add\n        /* \"#utility.yul\":11881:11900   */\n      swap1\n      pop\n        /* \"#utility.yul\":11540:11906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11912:12331   */\n    tag_175:\n        /* \"#utility.yul\":12078:12082   */\n      0x00\n        /* \"#utility.yul\":12116:12118   */\n      0x20\n        /* \"#utility.yul\":12105:12114   */\n      dup3\n        /* \"#utility.yul\":12101:12119   */\n      add\n        /* \"#utility.yul\":12093:12119   */\n      swap1\n      pop\n        /* \"#utility.yul\":12165:12174   */\n      dup2\n        /* \"#utility.yul\":12159:12163   */\n      dup2\n        /* \"#utility.yul\":12155:12175   */\n      sub\n        /* \"#utility.yul\":12151:12152   */\n      0x00\n        /* \"#utility.yul\":12140:12149   */\n      dup4\n        /* \"#utility.yul\":12136:12153   */\n      add\n        /* \"#utility.yul\":12129:12176   */\n      mstore\n        /* \"#utility.yul\":12193:12324   */\n      tag_380\n        /* \"#utility.yul\":12319:12323   */\n      dup2\n        /* \"#utility.yul\":12193:12324   */\n      tag_251\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":12185:12324   */\n      swap1\n      pop\n        /* \"#utility.yul\":11912:12331   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12337:12561   */\n    tag_252:\n        /* \"#utility.yul\":12477:12511   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":12473:12474   */\n      0x00\n        /* \"#utility.yul\":12465:12471   */\n      dup3\n        /* \"#utility.yul\":12461:12475   */\n      add\n        /* \"#utility.yul\":12454:12512   */\n      mstore\n        /* \"#utility.yul\":12546:12553   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12541:12543   */\n      0x20\n        /* \"#utility.yul\":12533:12539   */\n      dup3\n        /* \"#utility.yul\":12529:12544   */\n      add\n        /* \"#utility.yul\":12522:12554   */\n      mstore\n        /* \"#utility.yul\":12337:12561   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12567:12933   */\n    tag_253:\n        /* \"#utility.yul\":12709:12712   */\n      0x00\n        /* \"#utility.yul\":12730:12797   */\n      tag_383\n        /* \"#utility.yul\":12794:12796   */\n      0x25\n        /* \"#utility.yul\":12789:12792   */\n      dup4\n        /* \"#utility.yul\":12730:12797   */\n      tag_220\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":12723:12797   */\n      swap2\n      pop\n        /* \"#utility.yul\":12806:12899   */\n      tag_384\n        /* \"#utility.yul\":12895:12898   */\n      dup3\n        /* \"#utility.yul\":12806:12899   */\n      tag_252\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":12924:12926   */\n      0x40\n        /* \"#utility.yul\":12919:12922   */\n      dup3\n        /* \"#utility.yul\":12915:12927   */\n      add\n        /* \"#utility.yul\":12908:12927   */\n      swap1\n      pop\n        /* \"#utility.yul\":12567:12933   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12939:13358   */\n    tag_180:\n        /* \"#utility.yul\":13105:13109   */\n      0x00\n        /* \"#utility.yul\":13143:13145   */\n      0x20\n        /* \"#utility.yul\":13132:13141   */\n      dup3\n        /* \"#utility.yul\":13128:13146   */\n      add\n        /* \"#utility.yul\":13120:13146   */\n      swap1\n      pop\n        /* \"#utility.yul\":13192:13201   */\n      dup2\n        /* \"#utility.yul\":13186:13190   */\n      dup2\n        /* \"#utility.yul\":13182:13202   */\n      sub\n        /* \"#utility.yul\":13178:13179   */\n      0x00\n        /* \"#utility.yul\":13167:13176   */\n      dup4\n        /* \"#utility.yul\":13163:13180   */\n      add\n        /* \"#utility.yul\":13156:13203   */\n      mstore\n        /* \"#utility.yul\":13220:13351   */\n      tag_386\n        /* \"#utility.yul\":13346:13350   */\n      dup2\n        /* \"#utility.yul\":13220:13351   */\n      tag_253\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":13212:13351   */\n      swap1\n      pop\n        /* \"#utility.yul\":12939:13358   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13364:13586   */\n    tag_254:\n        /* \"#utility.yul\":13504:13538   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":13500:13501   */\n      0x00\n        /* \"#utility.yul\":13492:13498   */\n      dup3\n        /* \"#utility.yul\":13488:13502   */\n      add\n        /* \"#utility.yul\":13481:13539   */\n      mstore\n        /* \"#utility.yul\":13573:13578   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13568:13570   */\n      0x20\n        /* \"#utility.yul\":13560:13566   */\n      dup3\n        /* \"#utility.yul\":13556:13571   */\n      add\n        /* \"#utility.yul\":13549:13579   */\n      mstore\n        /* \"#utility.yul\":13364:13586   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13592:13958   */\n    tag_255:\n        /* \"#utility.yul\":13734:13737   */\n      0x00\n        /* \"#utility.yul\":13755:13822   */\n      tag_389\n        /* \"#utility.yul\":13819:13821   */\n      0x23\n        /* \"#utility.yul\":13814:13817   */\n      dup4\n        /* \"#utility.yul\":13755:13822   */\n      tag_220\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":13748:13822   */\n      swap2\n      pop\n        /* \"#utility.yul\":13831:13924   */\n      tag_390\n        /* \"#utility.yul\":13920:13923   */\n      dup3\n        /* \"#utility.yul\":13831:13924   */\n      tag_254\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":13949:13951   */\n      0x40\n        /* \"#utility.yul\":13944:13947   */\n      dup3\n        /* \"#utility.yul\":13940:13952   */\n      add\n        /* \"#utility.yul\":13933:13952   */\n      swap1\n      pop\n        /* \"#utility.yul\":13592:13958   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13964:14383   */\n    tag_183:\n        /* \"#utility.yul\":14130:14134   */\n      0x00\n        /* \"#utility.yul\":14168:14170   */\n      0x20\n        /* \"#utility.yul\":14157:14166   */\n      dup3\n        /* \"#utility.yul\":14153:14171   */\n      add\n        /* \"#utility.yul\":14145:14171   */\n      swap1\n      pop\n        /* \"#utility.yul\":14217:14226   */\n      dup2\n        /* \"#utility.yul\":14211:14215   */\n      dup2\n        /* \"#utility.yul\":14207:14227   */\n      sub\n        /* \"#utility.yul\":14203:14204   */\n      0x00\n        /* \"#utility.yul\":14192:14201   */\n      dup4\n        /* \"#utility.yul\":14188:14205   */\n      add\n        /* \"#utility.yul\":14181:14228   */\n      mstore\n        /* \"#utility.yul\":14245:14376   */\n      tag_392\n        /* \"#utility.yul\":14371:14375   */\n      dup2\n        /* \"#utility.yul\":14245:14376   */\n      tag_255\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":14237:14376   */\n      swap1\n      pop\n        /* \"#utility.yul\":13964:14383   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14389:14614   */\n    tag_256:\n        /* \"#utility.yul\":14529:14563   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":14525:14526   */\n      0x00\n        /* \"#utility.yul\":14517:14523   */\n      dup3\n        /* \"#utility.yul\":14513:14527   */\n      add\n        /* \"#utility.yul\":14506:14564   */\n      mstore\n        /* \"#utility.yul\":14598:14606   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14593:14595   */\n      0x20\n        /* \"#utility.yul\":14585:14591   */\n      dup3\n        /* \"#utility.yul\":14581:14596   */\n      add\n        /* \"#utility.yul\":14574:14607   */\n      mstore\n        /* \"#utility.yul\":14389:14614   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14620:14986   */\n    tag_257:\n        /* \"#utility.yul\":14762:14765   */\n      0x00\n        /* \"#utility.yul\":14783:14850   */\n      tag_395\n        /* \"#utility.yul\":14847:14849   */\n      0x26\n        /* \"#utility.yul\":14842:14845   */\n      dup4\n        /* \"#utility.yul\":14783:14850   */\n      tag_220\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":14776:14850   */\n      swap2\n      pop\n        /* \"#utility.yul\":14859:14952   */\n      tag_396\n        /* \"#utility.yul\":14948:14951   */\n      dup3\n        /* \"#utility.yul\":14859:14952   */\n      tag_256\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":14977:14979   */\n      0x40\n        /* \"#utility.yul\":14972:14975   */\n      dup3\n        /* \"#utility.yul\":14968:14980   */\n      add\n        /* \"#utility.yul\":14961:14980   */\n      swap1\n      pop\n        /* \"#utility.yul\":14620:14986   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14992:15411   */\n    tag_188:\n        /* \"#utility.yul\":15158:15162   */\n      0x00\n        /* \"#utility.yul\":15196:15198   */\n      0x20\n        /* \"#utility.yul\":15185:15194   */\n      dup3\n        /* \"#utility.yul\":15181:15199   */\n      add\n        /* \"#utility.yul\":15173:15199   */\n      swap1\n      pop\n        /* \"#utility.yul\":15245:15254   */\n      dup2\n        /* \"#utility.yul\":15239:15243   */\n      dup2\n        /* \"#utility.yul\":15235:15255   */\n      sub\n        /* \"#utility.yul\":15231:15232   */\n      0x00\n        /* \"#utility.yul\":15220:15229   */\n      dup4\n        /* \"#utility.yul\":15216:15233   */\n      add\n        /* \"#utility.yul\":15209:15256   */\n      mstore\n        /* \"#utility.yul\":15273:15404   */\n      tag_398\n        /* \"#utility.yul\":15399:15403   */\n      dup2\n        /* \"#utility.yul\":15273:15404   */\n      tag_257\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":15265:15404   */\n      swap1\n      pop\n        /* \"#utility.yul\":14992:15411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15417:15599   */\n    tag_258:\n        /* \"#utility.yul\":15557:15591   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":15553:15554   */\n      0x00\n        /* \"#utility.yul\":15545:15551   */\n      dup3\n        /* \"#utility.yul\":15541:15555   */\n      add\n        /* \"#utility.yul\":15534:15592   */\n      mstore\n        /* \"#utility.yul\":15417:15599   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15605:15971   */\n    tag_259:\n        /* \"#utility.yul\":15747:15750   */\n      0x00\n        /* \"#utility.yul\":15768:15835   */\n      tag_401\n        /* \"#utility.yul\":15832:15834   */\n      0x20\n        /* \"#utility.yul\":15827:15830   */\n      dup4\n        /* \"#utility.yul\":15768:15835   */\n      tag_220\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":15761:15835   */\n      swap2\n      pop\n        /* \"#utility.yul\":15844:15937   */\n      tag_402\n        /* \"#utility.yul\":15933:15936   */\n      dup3\n        /* \"#utility.yul\":15844:15937   */\n      tag_258\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":15962:15964   */\n      0x20\n        /* \"#utility.yul\":15957:15960   */\n      dup3\n        /* \"#utility.yul\":15953:15965   */\n      add\n        /* \"#utility.yul\":15946:15965   */\n      swap1\n      pop\n        /* \"#utility.yul\":15605:15971   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15977:16396   */\n    tag_197:\n        /* \"#utility.yul\":16143:16147   */\n      0x00\n        /* \"#utility.yul\":16181:16183   */\n      0x20\n        /* \"#utility.yul\":16170:16179   */\n      dup3\n        /* \"#utility.yul\":16166:16184   */\n      add\n        /* \"#utility.yul\":16158:16184   */\n      swap1\n      pop\n        /* \"#utility.yul\":16230:16239   */\n      dup2\n        /* \"#utility.yul\":16224:16228   */\n      dup2\n        /* \"#utility.yul\":16220:16240   */\n      sub\n        /* \"#utility.yul\":16216:16217   */\n      0x00\n        /* \"#utility.yul\":16205:16214   */\n      dup4\n        /* \"#utility.yul\":16201:16218   */\n      add\n        /* \"#utility.yul\":16194:16241   */\n      mstore\n        /* \"#utility.yul\":16258:16389   */\n      tag_404\n        /* \"#utility.yul\":16384:16388   */\n      dup2\n        /* \"#utility.yul\":16258:16389   */\n      tag_259\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":16250:16389   */\n      swap1\n      pop\n        /* \"#utility.yul\":15977:16396   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16402:16583   */\n    tag_260:\n        /* \"#utility.yul\":16542:16575   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":16538:16539   */\n      0x00\n        /* \"#utility.yul\":16530:16536   */\n      dup3\n        /* \"#utility.yul\":16526:16540   */\n      add\n        /* \"#utility.yul\":16519:16576   */\n      mstore\n        /* \"#utility.yul\":16402:16583   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16589:16955   */\n    tag_261:\n        /* \"#utility.yul\":16731:16734   */\n      0x00\n        /* \"#utility.yul\":16752:16819   */\n      tag_407\n        /* \"#utility.yul\":16816:16818   */\n      0x1f\n        /* \"#utility.yul\":16811:16814   */\n      dup4\n        /* \"#utility.yul\":16752:16819   */\n      tag_220\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":16745:16819   */\n      swap2\n      pop\n        /* \"#utility.yul\":16828:16921   */\n      tag_408\n        /* \"#utility.yul\":16917:16920   */\n      dup3\n        /* \"#utility.yul\":16828:16921   */\n      tag_260\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":16946:16948   */\n      0x20\n        /* \"#utility.yul\":16941:16944   */\n      dup3\n        /* \"#utility.yul\":16937:16949   */\n      add\n        /* \"#utility.yul\":16930:16949   */\n      swap1\n      pop\n        /* \"#utility.yul\":16589:16955   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16961:17380   */\n    tag_201:\n        /* \"#utility.yul\":17127:17131   */\n      0x00\n        /* \"#utility.yul\":17165:17167   */\n      0x20\n        /* \"#utility.yul\":17154:17163   */\n      dup3\n        /* \"#utility.yul\":17150:17168   */\n      add\n        /* \"#utility.yul\":17142:17168   */\n      swap1\n      pop\n        /* \"#utility.yul\":17214:17223   */\n      dup2\n        /* \"#utility.yul\":17208:17212   */\n      dup2\n        /* \"#utility.yul\":17204:17224   */\n      sub\n        /* \"#utility.yul\":17200:17201   */\n      0x00\n        /* \"#utility.yul\":17189:17198   */\n      dup4\n        /* \"#utility.yul\":17185:17202   */\n      add\n        /* \"#utility.yul\":17178:17225   */\n      mstore\n        /* \"#utility.yul\":17242:17373   */\n      tag_410\n        /* \"#utility.yul\":17368:17372   */\n      dup2\n        /* \"#utility.yul\":17242:17373   */\n      tag_261\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":17234:17373   */\n      swap1\n      pop\n        /* \"#utility.yul\":16961:17380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17386:17606   */\n    tag_262:\n        /* \"#utility.yul\":17526:17560   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":17522:17523   */\n      0x00\n        /* \"#utility.yul\":17514:17520   */\n      dup3\n        /* \"#utility.yul\":17510:17524   */\n      add\n        /* \"#utility.yul\":17503:17561   */\n      mstore\n        /* \"#utility.yul\":17595:17598   */\n      0x7300000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17590:17592   */\n      0x20\n        /* \"#utility.yul\":17582:17588   */\n      dup3\n        /* \"#utility.yul\":17578:17593   */\n      add\n        /* \"#utility.yul\":17571:17599   */\n      mstore\n        /* \"#utility.yul\":17386:17606   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17612:17978   */\n    tag_263:\n        /* \"#utility.yul\":17754:17757   */\n      0x00\n        /* \"#utility.yul\":17775:17842   */\n      tag_413\n        /* \"#utility.yul\":17839:17841   */\n      0x21\n        /* \"#utility.yul\":17834:17837   */\n      dup4\n        /* \"#utility.yul\":17775:17842   */\n      tag_220\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":17768:17842   */\n      swap2\n      pop\n        /* \"#utility.yul\":17851:17944   */\n      tag_414\n        /* \"#utility.yul\":17940:17943   */\n      dup3\n        /* \"#utility.yul\":17851:17944   */\n      tag_262\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":17969:17971   */\n      0x40\n        /* \"#utility.yul\":17964:17967   */\n      dup3\n        /* \"#utility.yul\":17960:17972   */\n      add\n        /* \"#utility.yul\":17953:17972   */\n      swap1\n      pop\n        /* \"#utility.yul\":17612:17978   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17984:18403   */\n    tag_209:\n        /* \"#utility.yul\":18150:18154   */\n      0x00\n        /* \"#utility.yul\":18188:18190   */\n      0x20\n        /* \"#utility.yul\":18177:18186   */\n      dup3\n        /* \"#utility.yul\":18173:18191   */\n      add\n        /* \"#utility.yul\":18165:18191   */\n      swap1\n      pop\n        /* \"#utility.yul\":18237:18246   */\n      dup2\n        /* \"#utility.yul\":18231:18235   */\n      dup2\n        /* \"#utility.yul\":18227:18247   */\n      sub\n        /* \"#utility.yul\":18223:18224   */\n      0x00\n        /* \"#utility.yul\":18212:18221   */\n      dup4\n        /* \"#utility.yul\":18208:18225   */\n      add\n        /* \"#utility.yul\":18201:18248   */\n      mstore\n        /* \"#utility.yul\":18265:18396   */\n      tag_416\n        /* \"#utility.yul\":18391:18395   */\n      dup2\n        /* \"#utility.yul\":18265:18396   */\n      tag_263\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":18257:18396   */\n      swap1\n      pop\n        /* \"#utility.yul\":17984:18403   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18409:18630   */\n    tag_264:\n        /* \"#utility.yul\":18549:18583   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":18545:18546   */\n      0x00\n        /* \"#utility.yul\":18537:18543   */\n      dup3\n        /* \"#utility.yul\":18533:18547   */\n      add\n        /* \"#utility.yul\":18526:18584   */\n      mstore\n        /* \"#utility.yul\":18618:18622   */\n      0x6365000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18613:18615   */\n      0x20\n        /* \"#utility.yul\":18605:18611   */\n      dup3\n        /* \"#utility.yul\":18601:18616   */\n      add\n        /* \"#utility.yul\":18594:18623   */\n      mstore\n        /* \"#utility.yul\":18409:18630   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18636:19002   */\n    tag_265:\n        /* \"#utility.yul\":18778:18781   */\n      0x00\n        /* \"#utility.yul\":18799:18866   */\n      tag_419\n        /* \"#utility.yul\":18863:18865   */\n      0x22\n        /* \"#utility.yul\":18858:18861   */\n      dup4\n        /* \"#utility.yul\":18799:18866   */\n      tag_220\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":18792:18866   */\n      swap2\n      pop\n        /* \"#utility.yul\":18875:18968   */\n      tag_420\n        /* \"#utility.yul\":18964:18967   */\n      dup3\n        /* \"#utility.yul\":18875:18968   */\n      tag_264\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":18993:18995   */\n      0x40\n        /* \"#utility.yul\":18988:18991   */\n      dup3\n        /* \"#utility.yul\":18984:18996   */\n      add\n        /* \"#utility.yul\":18977:18996   */\n      swap1\n      pop\n        /* \"#utility.yul\":18636:19002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19008:19427   */\n    tag_213:\n        /* \"#utility.yul\":19174:19178   */\n      0x00\n        /* \"#utility.yul\":19212:19214   */\n      0x20\n        /* \"#utility.yul\":19201:19210   */\n      dup3\n        /* \"#utility.yul\":19197:19215   */\n      add\n        /* \"#utility.yul\":19189:19215   */\n      swap1\n      pop\n        /* \"#utility.yul\":19261:19270   */\n      dup2\n        /* \"#utility.yul\":19255:19259   */\n      dup2\n        /* \"#utility.yul\":19251:19271   */\n      sub\n        /* \"#utility.yul\":19247:19248   */\n      0x00\n        /* \"#utility.yul\":19236:19245   */\n      dup4\n        /* \"#utility.yul\":19232:19249   */\n      add\n        /* \"#utility.yul\":19225:19272   */\n      mstore\n        /* \"#utility.yul\":19289:19420   */\n      tag_422\n        /* \"#utility.yul\":19415:19419   */\n      dup2\n        /* \"#utility.yul\":19289:19420   */\n      tag_265\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":19281:19420   */\n      swap1\n      pop\n        /* \"#utility.yul\":19008:19427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220660b47571f56083c70f64106fa486cfcf35cf374716ace0262e81c76e86cfd5d64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2463": {
									"entryPoint": null,
									"id": 2463,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_412": {
									"entryPoint": null,
									"id": 412,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_654": {
									"entryPoint": null,
									"id": 654,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1355": {
									"entryPoint": 201,
									"id": 1355,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_500": {
									"entryPoint": 208,
									"id": 500,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 864,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 703,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 458,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 413,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 600,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 751,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 794,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5231:14",
										"nodeType": "YulBlock",
										"src": "0:5231:14",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:14",
													"nodeType": "YulBlock",
													"src": "66:40:14",
													"statements": [
														{
															"nativeSrc": "77:22:14",
															"nodeType": "YulAssignment",
															"src": "77:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:14"
																},
																"nativeSrc": "87:12:14",
																"nodeType": "YulFunctionCall",
																"src": "87:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:14",
														"nodeType": "YulTypedName",
														"src": "49:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:14",
														"nodeType": "YulTypedName",
														"src": "59:6:14",
														"type": ""
													}
												],
												"src": "7:99:14"
											},
											{
												"body": {
													"nativeSrc": "140:152:14",
													"nodeType": "YulBlock",
													"src": "140:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:14",
																		"nodeType": "YulLiteral",
																		"src": "157:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:14",
																		"nodeType": "YulLiteral",
																		"src": "160:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:14"
																},
																"nativeSrc": "150:88:14",
																"nodeType": "YulFunctionCall",
																"src": "150:88:14"
															},
															"nativeSrc": "150:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:14",
																		"nodeType": "YulLiteral",
																		"src": "254:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:14",
																		"nodeType": "YulLiteral",
																		"src": "257:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:14"
																},
																"nativeSrc": "247:15:14",
																"nodeType": "YulFunctionCall",
																"src": "247:15:14"
															},
															"nativeSrc": "247:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:14",
																		"nodeType": "YulLiteral",
																		"src": "278:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:14",
																		"nodeType": "YulLiteral",
																		"src": "281:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:14"
																},
																"nativeSrc": "271:15:14",
																"nodeType": "YulFunctionCall",
																"src": "271:15:14"
															},
															"nativeSrc": "271:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:14"
											},
											{
												"body": {
													"nativeSrc": "326:152:14",
													"nodeType": "YulBlock",
													"src": "326:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:14",
																		"nodeType": "YulLiteral",
																		"src": "343:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:14",
																		"nodeType": "YulLiteral",
																		"src": "346:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:14"
																},
																"nativeSrc": "336:88:14",
																"nodeType": "YulFunctionCall",
																"src": "336:88:14"
															},
															"nativeSrc": "336:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:14",
																		"nodeType": "YulLiteral",
																		"src": "440:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:14",
																		"nodeType": "YulLiteral",
																		"src": "443:4:14",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:14"
																},
																"nativeSrc": "433:15:14",
																"nodeType": "YulFunctionCall",
																"src": "433:15:14"
															},
															"nativeSrc": "433:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:14",
																		"nodeType": "YulLiteral",
																		"src": "464:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:14",
																		"nodeType": "YulLiteral",
																		"src": "467:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:14"
																},
																"nativeSrc": "457:15:14",
																"nodeType": "YulFunctionCall",
																"src": "457:15:14"
															},
															"nativeSrc": "457:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:14"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:14"
											},
											{
												"body": {
													"nativeSrc": "535:269:14",
													"nodeType": "YulBlock",
													"src": "535:269:14",
													"statements": [
														{
															"nativeSrc": "545:22:14",
															"nodeType": "YulAssignment",
															"src": "545:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:14",
																		"nodeType": "YulLiteral",
																		"src": "565:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:14"
																},
																"nativeSrc": "555:12:14",
																"nodeType": "YulFunctionCall",
																"src": "555:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:14"
																}
															]
														},
														{
															"nativeSrc": "576:38:14",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:14",
																		"nodeType": "YulLiteral",
																		"src": "612:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:14"
																},
																"nativeSrc": "602:12:14",
																"nodeType": "YulFunctionCall",
																"src": "602:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:14",
																	"nodeType": "YulTypedName",
																	"src": "580:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:14",
																"nodeType": "YulBlock",
																"src": "653:51:14",
																"statements": [
																	{
																		"nativeSrc": "667:27:14",
																		"nodeType": "YulAssignment",
																		"src": "667:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:14",
																					"nodeType": "YulLiteral",
																					"src": "689:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:14"
																			},
																			"nativeSrc": "677:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:14"
																},
																"nativeSrc": "626:26:14",
																"nodeType": "YulFunctionCall",
																"src": "626:26:14"
															},
															"nativeSrc": "623:81:14",
															"nodeType": "YulIf",
															"src": "623:81:14"
														},
														{
															"body": {
																"nativeSrc": "756:42:14",
																"nodeType": "YulBlock",
																"src": "756:42:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:14"
																			},
																			"nativeSrc": "770:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:14"
																		},
																		"nativeSrc": "770:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:14",
																				"nodeType": "YulLiteral",
																				"src": "751:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:14"
																		},
																		"nativeSrc": "740:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:14"
																},
																"nativeSrc": "717:38:14",
																"nodeType": "YulFunctionCall",
																"src": "717:38:14"
															},
															"nativeSrc": "714:84:14",
															"nodeType": "YulIf",
															"src": "714:84:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:14",
														"nodeType": "YulTypedName",
														"src": "519:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:14",
														"nodeType": "YulTypedName",
														"src": "528:6:14",
														"type": ""
													}
												],
												"src": "484:320:14"
											},
											{
												"body": {
													"nativeSrc": "864:87:14",
													"nodeType": "YulBlock",
													"src": "864:87:14",
													"statements": [
														{
															"nativeSrc": "874:11:14",
															"nodeType": "YulAssignment",
															"src": "874:11:14",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:14",
																"nodeType": "YulIdentifier",
																"src": "882:3:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:14",
																		"nodeType": "YulLiteral",
																		"src": "902:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:14"
																},
																"nativeSrc": "895:14:14",
																"nodeType": "YulFunctionCall",
																"src": "895:14:14"
															},
															"nativeSrc": "895:14:14",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:14"
														},
														{
															"nativeSrc": "918:26:14",
															"nodeType": "YulAssignment",
															"src": "918:26:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:14",
																		"nodeType": "YulLiteral",
																		"src": "936:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:14",
																		"nodeType": "YulLiteral",
																		"src": "939:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:14"
																},
																"nativeSrc": "926:18:14",
																"nodeType": "YulFunctionCall",
																"src": "926:18:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:14",
														"nodeType": "YulTypedName",
														"src": "851:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:14",
														"nodeType": "YulTypedName",
														"src": "859:4:14",
														"type": ""
													}
												],
												"src": "810:141:14"
											},
											{
												"body": {
													"nativeSrc": "1001:49:14",
													"nodeType": "YulBlock",
													"src": "1001:49:14",
													"statements": [
														{
															"nativeSrc": "1011:33:14",
															"nodeType": "YulAssignment",
															"src": "1011:33:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:14"
																		},
																		"nativeSrc": "1025:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:14"
																},
																"nativeSrc": "1021:23:14",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:14"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:14",
														"nodeType": "YulTypedName",
														"src": "984:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:14",
														"nodeType": "YulTypedName",
														"src": "994:6:14",
														"type": ""
													}
												],
												"src": "957:93:14"
											},
											{
												"body": {
													"nativeSrc": "1109:54:14",
													"nodeType": "YulBlock",
													"src": "1109:54:14",
													"statements": [
														{
															"nativeSrc": "1119:37:14",
															"nodeType": "YulAssignment",
															"src": "1119:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:14"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:14"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:14"
																},
																"nativeSrc": "1140:16:14",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:14"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:14",
														"nodeType": "YulTypedName",
														"src": "1084:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:14",
														"nodeType": "YulTypedName",
														"src": "1090:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:14",
														"nodeType": "YulTypedName",
														"src": "1100:8:14",
														"type": ""
													}
												],
												"src": "1056:107:14"
											},
											{
												"body": {
													"nativeSrc": "1245:317:14",
													"nodeType": "YulBlock",
													"src": "1245:317:14",
													"statements": [
														{
															"nativeSrc": "1255:35:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:14",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:14"
																},
																"nativeSrc": "1272:18:14",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:14"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:14",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:14",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:14"
																},
																"nativeSrc": "1311:97:14",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:14",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:14",
															"nodeType": "YulAssignment",
															"src": "1417:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:14"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:14"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:14"
																},
																"nativeSrc": "1429:39:14",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:14"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:14"
																}
															]
														},
														{
															"nativeSrc": "1477:30:14",
															"nodeType": "YulAssignment",
															"src": "1477:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:14"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:14"
																		},
																		"nativeSrc": "1497:9:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:14"
																},
																"nativeSrc": "1486:21:14",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:14"
																}
															]
														},
														{
															"nativeSrc": "1516:40:14",
															"nodeType": "YulAssignment",
															"src": "1516:40:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:14",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:14"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:14"
																		},
																		"nativeSrc": "1536:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:14"
																},
																"nativeSrc": "1526:30:14",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:14"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:14",
														"nodeType": "YulTypedName",
														"src": "1206:5:14",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:14",
														"nodeType": "YulTypedName",
														"src": "1213:10:14",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:14",
														"nodeType": "YulTypedName",
														"src": "1225:8:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:14",
														"nodeType": "YulTypedName",
														"src": "1238:6:14",
														"type": ""
													}
												],
												"src": "1169:393:14"
											},
											{
												"body": {
													"nativeSrc": "1613:32:14",
													"nodeType": "YulBlock",
													"src": "1613:32:14",
													"statements": [
														{
															"nativeSrc": "1623:16:14",
															"nodeType": "YulAssignment",
															"src": "1623:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:14",
																"nodeType": "YulIdentifier",
																"src": "1634:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:14",
														"nodeType": "YulTypedName",
														"src": "1595:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:14",
														"nodeType": "YulTypedName",
														"src": "1605:7:14",
														"type": ""
													}
												],
												"src": "1568:77:14"
											},
											{
												"body": {
													"nativeSrc": "1683:28:14",
													"nodeType": "YulBlock",
													"src": "1683:28:14",
													"statements": [
														{
															"nativeSrc": "1693:12:14",
															"nodeType": "YulAssignment",
															"src": "1693:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:14",
																"nodeType": "YulIdentifier",
																"src": "1700:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:14"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:14",
														"nodeType": "YulTypedName",
														"src": "1669:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:14",
														"nodeType": "YulTypedName",
														"src": "1679:3:14",
														"type": ""
													}
												],
												"src": "1651:60:14"
											},
											{
												"body": {
													"nativeSrc": "1777:82:14",
													"nodeType": "YulBlock",
													"src": "1777:82:14",
													"statements": [
														{
															"nativeSrc": "1787:66:14",
															"nodeType": "YulAssignment",
															"src": "1787:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:14"
																				},
																				"nativeSrc": "1827:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:14"
																		},
																		"nativeSrc": "1818:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:14"
																},
																"nativeSrc": "1800:53:14",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:14",
														"nodeType": "YulTypedName",
														"src": "1757:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:14",
														"nodeType": "YulTypedName",
														"src": "1767:9:14",
														"type": ""
													}
												],
												"src": "1717:142:14"
											},
											{
												"body": {
													"nativeSrc": "1912:28:14",
													"nodeType": "YulBlock",
													"src": "1912:28:14",
													"statements": [
														{
															"nativeSrc": "1922:12:14",
															"nodeType": "YulAssignment",
															"src": "1922:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:14",
																"nodeType": "YulIdentifier",
																"src": "1929:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:14"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:14",
														"nodeType": "YulTypedName",
														"src": "1898:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:14",
														"nodeType": "YulTypedName",
														"src": "1908:3:14",
														"type": ""
													}
												],
												"src": "1865:75:14"
											},
											{
												"body": {
													"nativeSrc": "2022:193:14",
													"nodeType": "YulBlock",
													"src": "2022:193:14",
													"statements": [
														{
															"nativeSrc": "2032:63:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:14",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:14"
																},
																"nativeSrc": "2056:39:14",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:14"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:14",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:14"
																				},
																				"nativeSrc": "2145:11:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:14"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:14",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:14"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:14",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:14"
																				},
																				"nativeSrc": "2166:41:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:14"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:14",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:14"
																		},
																		"nativeSrc": "2117:91:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:14"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:14"
																},
																"nativeSrc": "2104:105:14",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:14"
															},
															"nativeSrc": "2104:105:14",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:14"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:14",
														"nodeType": "YulTypedName",
														"src": "1999:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:14",
														"nodeType": "YulTypedName",
														"src": "2005:6:14",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:14",
														"nodeType": "YulTypedName",
														"src": "2013:7:14",
														"type": ""
													}
												],
												"src": "1946:269:14"
											},
											{
												"body": {
													"nativeSrc": "2270:24:14",
													"nodeType": "YulBlock",
													"src": "2270:24:14",
													"statements": [
														{
															"nativeSrc": "2280:8:14",
															"nodeType": "YulAssignment",
															"src": "2280:8:14",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:14",
																"nodeType": "YulLiteral",
																"src": "2287:1:14",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:14"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:14",
														"nodeType": "YulTypedName",
														"src": "2266:3:14",
														"type": ""
													}
												],
												"src": "2221:73:14"
											},
											{
												"body": {
													"nativeSrc": "2353:136:14",
													"nodeType": "YulBlock",
													"src": "2353:136:14",
													"statements": [
														{
															"nativeSrc": "2363:46:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:14"
																},
																"nativeSrc": "2377:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:14"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:14",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:14"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:14"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:14"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:14"
																},
																"nativeSrc": "2418:65:14",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:14"
															},
															"nativeSrc": "2418:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:14"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:14",
														"nodeType": "YulTypedName",
														"src": "2339:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:14",
														"nodeType": "YulTypedName",
														"src": "2345:6:14",
														"type": ""
													}
												],
												"src": "2300:189:14"
											},
											{
												"body": {
													"nativeSrc": "2545:136:14",
													"nodeType": "YulBlock",
													"src": "2545:136:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:14",
																"nodeType": "YulBlock",
																"src": "2612:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:14",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:14"
																			},
																			"nativeSrc": "2626:39:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:14"
																		},
																		"nativeSrc": "2626:39:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:14"
																},
																"nativeSrc": "2562:14:14",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:14"
															},
															"nativeSrc": "2555:120:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:14",
																"nodeType": "YulBlock",
																"src": "2577:26:14",
																"statements": [
																	{
																		"nativeSrc": "2579:22:14",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:14"
																			},
																			"nativeSrc": "2588:13:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:14"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:14",
																"nodeType": "YulBlock",
																"src": "2559:2:14",
																"statements": []
															},
															"src": "2555:120:14"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:14",
														"nodeType": "YulTypedName",
														"src": "2533:5:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:14",
														"nodeType": "YulTypedName",
														"src": "2540:3:14",
														"type": ""
													}
												],
												"src": "2495:186:14"
											},
											{
												"body": {
													"nativeSrc": "2766:464:14",
													"nodeType": "YulBlock",
													"src": "2766:464:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:14",
																"nodeType": "YulBlock",
																"src": "2792:431:14",
																"statements": [
																	{
																		"nativeSrc": "2806:54:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:14"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:14",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:14"
																			},
																			"nativeSrc": "2822:38:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:14"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:14",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:14",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:14",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:14"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:14",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:14"
																					},
																					"nativeSrc": "2906:29:14",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:14"
																			},
																			"nativeSrc": "2892:44:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:14"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:14",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:14",
																			"nodeType": "YulBlock",
																			"src": "3093:27:14",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:14",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:14",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:14",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:14"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:14",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:14",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:14",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:14"
																			},
																			"nativeSrc": "3074:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:14"
																		},
																		"nativeSrc": "3071:49:14",
																		"nodeType": "YulIf",
																		"src": "3071:49:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:14",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:14",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:14"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:14",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:14"
																							},
																							"nativeSrc": "3189:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:14"
																					},
																					"nativeSrc": "3175:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:14"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:14",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:14"
																			},
																			"nativeSrc": "3133:80:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:14"
																		},
																		"nativeSrc": "3133:80:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:14"
																},
																"nativeSrc": "2780:11:14",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:14"
															},
															"nativeSrc": "2777:446:14",
															"nodeType": "YulIf",
															"src": "2777:446:14"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:14",
														"nodeType": "YulTypedName",
														"src": "2742:5:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:14",
														"nodeType": "YulTypedName",
														"src": "2749:3:14",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:14",
														"nodeType": "YulTypedName",
														"src": "2754:10:14",
														"type": ""
													}
												],
												"src": "2687:543:14"
											},
											{
												"body": {
													"nativeSrc": "3299:54:14",
													"nodeType": "YulBlock",
													"src": "3299:54:14",
													"statements": [
														{
															"nativeSrc": "3309:37:14",
															"nodeType": "YulAssignment",
															"src": "3309:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:14"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:14"
																},
																"nativeSrc": "3330:16:14",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:14"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:14",
														"nodeType": "YulTypedName",
														"src": "3274:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:14",
														"nodeType": "YulTypedName",
														"src": "3280:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:14",
														"nodeType": "YulTypedName",
														"src": "3290:8:14",
														"type": ""
													}
												],
												"src": "3236:117:14"
											},
											{
												"body": {
													"nativeSrc": "3410:118:14",
													"nodeType": "YulBlock",
													"src": "3410:118:14",
													"statements": [
														{
															"nativeSrc": "3420:68:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:14",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:14",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:14"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:14"
																				},
																				"nativeSrc": "3465:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:14",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:14"
																				},
																				"nativeSrc": "3480:6:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:14"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:14",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:14"
																		},
																		"nativeSrc": "3436:51:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:14"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:14"
																},
																"nativeSrc": "3432:56:14",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:14",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:14",
															"nodeType": "YulAssignment",
															"src": "3497:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:14"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:14"
																},
																"nativeSrc": "3507:15:14",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:14"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:14",
														"nodeType": "YulTypedName",
														"src": "3387:4:14",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:14",
														"nodeType": "YulTypedName",
														"src": "3393:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:14",
														"nodeType": "YulTypedName",
														"src": "3403:6:14",
														"type": ""
													}
												],
												"src": "3359:169:14"
											},
											{
												"body": {
													"nativeSrc": "3614:214:14",
													"nodeType": "YulBlock",
													"src": "3614:214:14",
													"statements": [
														{
															"nativeSrc": "3747:37:14",
															"nodeType": "YulAssignment",
															"src": "3747:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:14"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:14"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:14"
																},
																"nativeSrc": "3755:29:14",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:14"
																}
															]
														},
														{
															"nativeSrc": "3793:29:14",
															"nodeType": "YulAssignment",
															"src": "3793:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:14",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:14",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:14"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:14"
																		},
																		"nativeSrc": "3810:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:14"
																},
																"nativeSrc": "3801:21:14",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:14"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:14"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:14",
														"nodeType": "YulTypedName",
														"src": "3595:4:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:14",
														"nodeType": "YulTypedName",
														"src": "3601:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:14",
														"nodeType": "YulTypedName",
														"src": "3609:4:14",
														"type": ""
													}
												],
												"src": "3533:295:14"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:14",
													"nodeType": "YulBlock",
													"src": "3925:1303:14",
													"statements": [
														{
															"nativeSrc": "3936:51:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:14",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:14"
																},
																"nativeSrc": "3950:37:14",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:14"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:14",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:14",
																"nodeType": "YulBlock",
																"src": "4072:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:14"
																			},
																			"nativeSrc": "4074:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:14"
																		},
																		"nativeSrc": "4074:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:14",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:14"
																},
																"nativeSrc": "4041:30:14",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:14"
															},
															"nativeSrc": "4038:56:14",
															"nodeType": "YulIf",
															"src": "4038:56:14"
														},
														{
															"nativeSrc": "4104:52:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:14"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:14"
																		},
																		"nativeSrc": "4144:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:14"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:14"
																},
																"nativeSrc": "4118:38:14",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:14"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:14",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:14"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:14"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:14"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:14",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:14"
																},
																"nativeSrc": "4203:67:14",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:14"
															},
															"nativeSrc": "4203:67:14",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:14"
														},
														{
															"nativeSrc": "4280:18:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:14",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:14",
																"nodeType": "YulLiteral",
																"src": "4297:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:14",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:14",
															"nodeType": "YulAssignment",
															"src": "4308:17:14",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:14",
																"nodeType": "YulLiteral",
																"src": "4321:4:14",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:14"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:14",
																		"nodeType": "YulBlock",
																		"src": "4372:611:14",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:14"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:14",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:14",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:14"
																							},
																							"nativeSrc": "4413:9:14",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:14"
																					},
																					"nativeSrc": "4401:22:14",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:14"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:14",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:14"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:14",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:14"
																					},
																					"nativeSrc": "4451:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:14"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:14",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:14",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:14",
																					"nodeType": "YulBlock",
																					"src": "4569:163:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:14",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:14"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:14",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:14"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:14"
																												},
																												"nativeSrc": "4608:19:14",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:14"
																										},
																										"nativeSrc": "4602:26:14",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:14"
																								},
																								"nativeSrc": "4587:42:14",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:14"
																							},
																							"nativeSrc": "4587:42:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:14"
																						},
																						{
																							"nativeSrc": "4646:24:14",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:14",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:14"
																								},
																								"nativeSrc": "4656:14:14",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:14"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:14"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:14",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:14",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:14",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:14",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:14"
																								},
																								"nativeSrc": "4700:18:14",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:14"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:14",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:14"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:14"
																					},
																					"nativeSrc": "4532:14:14",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:14"
																				},
																				"nativeSrc": "4524:208:14",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:14",
																					"nodeType": "YulBlock",
																					"src": "4547:21:14",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:14",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:14",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:14",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:14"
																								},
																								"nativeSrc": "4554:12:14",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:14",
																					"nodeType": "YulBlock",
																					"src": "4528:3:14",
																					"statements": []
																				},
																				"src": "4524:208:14"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:14",
																					"nodeType": "YulBlock",
																					"src": "4768:156:14",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:14",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:14"
																										},
																										"nativeSrc": "4809:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:14"
																								},
																								"nativeSrc": "4803:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:14"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:14",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:14",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:14"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:14",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:14"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:14",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:14",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:14"
																												},
																												"nativeSrc": "4891:17:14",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:14"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:14",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:14"
																										},
																										"nativeSrc": "4861:48:14",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:14"
																								},
																								"nativeSrc": "4846:64:14",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:14"
																							},
																							"nativeSrc": "4846:64:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:14"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:14"
																					},
																					"nativeSrc": "4748:19:14",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:14"
																				},
																				"nativeSrc": "4745:179:14",
																				"nodeType": "YulIf",
																				"src": "4745:179:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:14",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:14"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:14",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:14",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:14"
																									},
																									"nativeSrc": "4954:14:14",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:14",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:14"
																							},
																							"nativeSrc": "4950:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:14"
																					},
																					"nativeSrc": "4937:36:14",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:14"
																				},
																				"nativeSrc": "4937:36:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:14"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:14",
																	"nodeType": "YulCase",
																	"src": "4365:618:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:14",
																		"nodeType": "YulBlock",
																		"src": "5000:222:14",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:14",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:14",
																					"nodeType": "YulBlock",
																					"src": "5051:67:14",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:14",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:14"
																										},
																										"nativeSrc": "5084:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:14"
																								},
																								"nativeSrc": "5078:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:14"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:14"
																				},
																				"nativeSrc": "5041:77:14",
																				"nodeType": "YulIf",
																				"src": "5041:77:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:14"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:14"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:14",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:14"
																							},
																							"nativeSrc": "5144:67:14",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:14"
																					},
																					"nativeSrc": "5131:81:14",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:14"
																				},
																				"nativeSrc": "5131:81:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:14"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:14",
																	"nodeType": "YulCase",
																	"src": "4992:230:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:14"
																},
																"nativeSrc": "4342:14:14",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:14"
															},
															"nativeSrc": "4335:887:14",
															"nodeType": "YulSwitch",
															"src": "4335:887:14"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:14",
														"nodeType": "YulTypedName",
														"src": "3914:4:14",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:14",
														"nodeType": "YulTypedName",
														"src": "3920:3:14",
														"type": ""
													}
												],
												"src": "3833:1395:14"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040518060400160405280600981526020017f54657374455243323000000000000000000000000000000000000000000000008152506040518060400160405280600981526020017f546573744552433230000000000000000000000000000000000000000000000081525081600390816200008e9190620003f7565b508060049081620000a09190620003f7565b505050620000c3620000b7620000c960201b60201c565b620000d060201b60201c565b620004db565b5f33905090565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200020f57607f821691505b602082108103620002255762000224620001ca565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620002897fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200024c565b6200029586836200024c565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620002df620002d9620002d384620002ad565b620002b6565b620002ad565b9050919050565b5f819050919050565b620002fa83620002bf565b620003126200030982620002e6565b84845462000258565b825550505050565b5f90565b620003286200031a565b62000335818484620002ef565b505050565b5b818110156200035c57620003505f826200031e565b6001810190506200033b565b5050565b601f821115620003ab5762000375816200022b565b62000380846200023d565b8101602085101562000390578190505b620003a86200039f856200023d565b8301826200033a565b50505b505050565b5f82821c905092915050565b5f620003cd5f1984600802620003b0565b1980831691505092915050565b5f620003e78383620003bc565b9150826002028217905092915050565b620004028262000193565b67ffffffffffffffff8111156200041e576200041d6200019d565b5b6200042a8254620001f7565b6200043782828562000360565b5f60209050601f8311600181146200046d575f841562000458578287015190505b620004648582620003da565b865550620004d3565b601f1984166200047d866200022b565b5f5b82811015620004a6578489015182556001820191506020850194506020810190506200047f565b86831015620004c65784890151620004c2601f891682620003bc565b8355505b6001600288020188555050505b505050505050565b611ae380620004e95f395ff3fe608060405234801561000f575f80fd5b5060043610610109575f3560e01c806370a08231116100a057806395d89b411161006f57806395d89b41146102a3578063a457c2d7146102c1578063a9059cbb146102f1578063dd62ed3e14610321578063f2fde38b1461035157610109565b806370a082311461022f578063715018a61461025f57806379cc6790146102695780638da5cb5b1461028557610109565b8063313ce567116100dc578063313ce567146101a957806339509351146101c757806340c10f19146101f757806342966c681461021357610109565b806306fdde031461010d578063095ea7b31461012b57806318160ddd1461015b57806323b872dd14610179575b5f80fd5b61011561036d565b6040516101229190611130565b60405180910390f35b610145600480360381019061014091906111e1565b6103fd565b6040516101529190611239565b60405180910390f35b61016361041f565b6040516101709190611261565b60405180910390f35b610193600480360381019061018e919061127a565b610428565b6040516101a09190611239565b60405180910390f35b6101b1610456565b6040516101be91906112e5565b60405180910390f35b6101e160048036038101906101dc91906111e1565b61045e565b6040516101ee9190611239565b60405180910390f35b610211600480360381019061020c91906111e1565b610494565b005b61022d600480360381019061022891906112fe565b6104aa565b005b61024960048036038101906102449190611329565b6104be565b6040516102569190611261565b60405180910390f35b610267610503565b005b610283600480360381019061027e91906111e1565b610516565b005b61028d610536565b60405161029a9190611363565b60405180910390f35b6102ab61055e565b6040516102b89190611130565b60405180910390f35b6102db60048036038101906102d691906111e1565b6105ee565b6040516102e89190611239565b60405180910390f35b61030b600480360381019061030691906111e1565b610663565b6040516103189190611239565b60405180910390f35b61033b6004803603810190610336919061137c565b610685565b6040516103489190611261565b60405180910390f35b61036b60048036038101906103669190611329565b610707565b005b60606003805461037c906113e7565b80601f01602080910402602001604051908101604052809291908181526020018280546103a8906113e7565b80156103f35780601f106103ca576101008083540402835291602001916103f3565b820191905f5260205f20905b8154815290600101906020018083116103d657829003601f168201915b5050505050905090565b5f80610407610789565b9050610414818585610790565b600191505092915050565b5f600254905090565b5f80610432610789565b905061043f858285610953565b61044a8585856109de565b60019150509392505050565b5f6012905090565b5f80610468610789565b905061048981858561047a8589610685565b6104849190611444565b610790565b600191505092915050565b61049c610c4a565b6104a68282610cc8565b5050565b6104bb6104b5610789565b82610e16565b50565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61050b610c4a565b6105145f610fd9565b565b61052882610522610789565b83610953565b6105328282610e16565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461056d906113e7565b80601f0160208091040260200160405190810160405280929190818152602001828054610599906113e7565b80156105e45780601f106105bb576101008083540402835291602001916105e4565b820191905f5260205f20905b8154815290600101906020018083116105c757829003601f168201915b5050505050905090565b5f806105f8610789565b90505f6106058286610685565b90508381101561064a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610641906114e7565b60405180910390fd5b6106578286868403610790565b60019250505092915050565b5f8061066d610789565b905061067a8185856109de565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61070f610c4a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361077d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077490611575565b60405180910390fd5b61078681610fd9565b50565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f590611603565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361086c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086390611691565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109469190611261565b60405180910390a3505050565b5f61095e8484610685565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109d857818110156109ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c1906116f9565b60405180910390fd5b6109d78484848403610790565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4390611787565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610aba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab190611815565b60405180910390fd5b610ac583838361109c565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610b48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3f906118a3565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c319190611261565b60405180910390a3610c448484846110a1565b50505050565b610c52610789565b73ffffffffffffffffffffffffffffffffffffffff16610c70610536565b73ffffffffffffffffffffffffffffffffffffffff1614610cc6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbd9061190b565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2d90611973565b60405180910390fd5b610d415f838361109c565b8060025f828254610d529190611444565b92505081905550805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508173ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610dff9190611261565b60405180910390a3610e125f83836110a1565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7b90611a01565b60405180910390fd5b610e8f825f8361109c565b5f805f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610f12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0990611a8f565b60405180910390fd5b8181035f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508160025f82825403925050819055505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610fc19190611261565b60405180910390a3610fd4835f846110a1565b505050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156110dd5780820151818401526020810190506110c2565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611102826110a6565b61110c81856110b0565b935061111c8185602086016110c0565b611125816110e8565b840191505092915050565b5f6020820190508181035f83015261114881846110f8565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61117d82611154565b9050919050565b61118d81611173565b8114611197575f80fd5b50565b5f813590506111a881611184565b92915050565b5f819050919050565b6111c0816111ae565b81146111ca575f80fd5b50565b5f813590506111db816111b7565b92915050565b5f80604083850312156111f7576111f6611150565b5b5f6112048582860161119a565b9250506020611215858286016111cd565b9150509250929050565b5f8115159050919050565b6112338161121f565b82525050565b5f60208201905061124c5f83018461122a565b92915050565b61125b816111ae565b82525050565b5f6020820190506112745f830184611252565b92915050565b5f805f6060848603121561129157611290611150565b5b5f61129e8682870161119a565b93505060206112af8682870161119a565b92505060406112c0868287016111cd565b9150509250925092565b5f60ff82169050919050565b6112df816112ca565b82525050565b5f6020820190506112f85f8301846112d6565b92915050565b5f6020828403121561131357611312611150565b5b5f611320848285016111cd565b91505092915050565b5f6020828403121561133e5761133d611150565b5b5f61134b8482850161119a565b91505092915050565b61135d81611173565b82525050565b5f6020820190506113765f830184611354565b92915050565b5f806040838503121561139257611391611150565b5b5f61139f8582860161119a565b92505060206113b08582860161119a565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806113fe57607f821691505b602082108103611411576114106113ba565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61144e826111ae565b9150611459836111ae565b925082820190508082111561147157611470611417565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f775f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f6114d16025836110b0565b91506114dc82611477565b604082019050919050565b5f6020820190508181035f8301526114fe816114c5565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f61155f6026836110b0565b915061156a82611505565b604082019050919050565b5f6020820190508181035f83015261158c81611553565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f6115ed6024836110b0565b91506115f882611593565b604082019050919050565b5f6020820190508181035f83015261161a816115e1565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f61167b6022836110b0565b915061168682611621565b604082019050919050565b5f6020820190508181035f8301526116a88161166f565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000005f82015250565b5f6116e3601d836110b0565b91506116ee826116af565b602082019050919050565b5f6020820190508181035f830152611710816116d7565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f6117716025836110b0565b915061177c82611717565b604082019050919050565b5f6020820190508181035f83015261179e81611765565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f6117ff6023836110b0565b915061180a826117a5565b604082019050919050565b5f6020820190508181035f83015261182c816117f3565b9050919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320625f8201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b5f61188d6026836110b0565b915061189882611833565b604082019050919050565b5f6020820190508181035f8301526118ba81611881565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f6118f56020836110b0565b9150611900826118c1565b602082019050919050565b5f6020820190508181035f830152611922816118e9565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f2061646472657373005f82015250565b5f61195d601f836110b0565b915061196882611929565b602082019050919050565b5f6020820190508181035f83015261198a81611951565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f206164647265735f8201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b5f6119eb6021836110b0565b91506119f682611991565b604082019050919050565b5f6020820190508181035f830152611a18816119df565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e5f8201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b5f611a796022836110b0565b9150611a8482611a1f565b604082019050919050565b5f6020820190508181035f830152611aa681611a6d565b905091905056fea2646970667358221220660b47571f56083c70f64106fa486cfcf35cf374716ace0262e81c76e86cfd5d64736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5465737445524332300000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5465737445524332300000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x8E SWAP2 SWAP1 PUSH3 0x3F7 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xA0 SWAP2 SWAP1 PUSH3 0x3F7 JUMP JUMPDEST POP POP POP PUSH3 0xC3 PUSH3 0xB7 PUSH3 0xC9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xD0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x4DB JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x20F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x225 JUMPI PUSH3 0x224 PUSH3 0x1CA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x289 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x24C JUMP JUMPDEST PUSH3 0x295 DUP7 DUP4 PUSH3 0x24C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x2DF PUSH3 0x2D9 PUSH3 0x2D3 DUP5 PUSH3 0x2AD JUMP JUMPDEST PUSH3 0x2B6 JUMP JUMPDEST PUSH3 0x2AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2FA DUP4 PUSH3 0x2BF JUMP JUMPDEST PUSH3 0x312 PUSH3 0x309 DUP3 PUSH3 0x2E6 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x258 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x328 PUSH3 0x31A JUMP JUMPDEST PUSH3 0x335 DUP2 DUP5 DUP5 PUSH3 0x2EF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x35C JUMPI PUSH3 0x350 PUSH0 DUP3 PUSH3 0x31E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x33B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x3AB JUMPI PUSH3 0x375 DUP2 PUSH3 0x22B JUMP JUMPDEST PUSH3 0x380 DUP5 PUSH3 0x23D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x390 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x3A8 PUSH3 0x39F DUP6 PUSH3 0x23D JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x33A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x3CD PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x3B0 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x3E7 DUP4 DUP4 PUSH3 0x3BC JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x402 DUP3 PUSH3 0x193 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x41E JUMPI PUSH3 0x41D PUSH3 0x19D JUMP JUMPDEST JUMPDEST PUSH3 0x42A DUP3 SLOAD PUSH3 0x1F7 JUMP JUMPDEST PUSH3 0x437 DUP3 DUP3 DUP6 PUSH3 0x360 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x46D JUMPI PUSH0 DUP5 ISZERO PUSH3 0x458 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x464 DUP6 DUP3 PUSH3 0x3DA JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x4D3 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x47D DUP7 PUSH3 0x22B JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x4A6 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x47F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x4C6 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x4C2 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x3BC JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1AE3 DUP1 PUSH3 0x4E9 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x351 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x285 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x213 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1130 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x41F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x127A JUMP JUMPDEST PUSH2 0x428 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x12E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0x494 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x12FE JUMP JUMPDEST PUSH2 0x4AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x267 PUSH2 0x503 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0x516 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28D PUSH2 0x536 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1363 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH2 0x55E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x1130 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0x663 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x137C JUMP JUMPDEST PUSH2 0x685 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH2 0x707 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x37C SWAP1 PUSH2 0x13E7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3A8 SWAP1 PUSH2 0x13E7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x407 PUSH2 0x789 JUMP JUMPDEST SWAP1 POP PUSH2 0x414 DUP2 DUP6 DUP6 PUSH2 0x790 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x432 PUSH2 0x789 JUMP JUMPDEST SWAP1 POP PUSH2 0x43F DUP6 DUP3 DUP6 PUSH2 0x953 JUMP JUMPDEST PUSH2 0x44A DUP6 DUP6 DUP6 PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x468 PUSH2 0x789 JUMP JUMPDEST SWAP1 POP PUSH2 0x489 DUP2 DUP6 DUP6 PUSH2 0x47A DUP6 DUP10 PUSH2 0x685 JUMP JUMPDEST PUSH2 0x484 SWAP2 SWAP1 PUSH2 0x1444 JUMP JUMPDEST PUSH2 0x790 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x49C PUSH2 0xC4A JUMP JUMPDEST PUSH2 0x4A6 DUP3 DUP3 PUSH2 0xCC8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4BB PUSH2 0x4B5 PUSH2 0x789 JUMP JUMPDEST DUP3 PUSH2 0xE16 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x50B PUSH2 0xC4A JUMP JUMPDEST PUSH2 0x514 PUSH0 PUSH2 0xFD9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x528 DUP3 PUSH2 0x522 PUSH2 0x789 JUMP JUMPDEST DUP4 PUSH2 0x953 JUMP JUMPDEST PUSH2 0x532 DUP3 DUP3 PUSH2 0xE16 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x56D SWAP1 PUSH2 0x13E7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x599 SWAP1 PUSH2 0x13E7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5E4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5BB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5E4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5C7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5F8 PUSH2 0x789 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x605 DUP3 DUP7 PUSH2 0x685 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x64A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x641 SWAP1 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x657 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x790 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x66D PUSH2 0x789 JUMP JUMPDEST SWAP1 POP PUSH2 0x67A DUP2 DUP6 DUP6 PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x70F PUSH2 0xC4A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x77D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x774 SWAP1 PUSH2 0x1575 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x786 DUP2 PUSH2 0xFD9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F5 SWAP1 PUSH2 0x1603 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x863 SWAP1 PUSH2 0x1691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x946 SWAP2 SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x95E DUP5 DUP5 PUSH2 0x685 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x9D8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C1 SWAP1 PUSH2 0x16F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x790 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA43 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xABA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB1 SWAP1 PUSH2 0x1815 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAC5 DUP4 DUP4 DUP4 PUSH2 0x109C JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xB48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3F SWAP1 PUSH2 0x18A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xC31 SWAP2 SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xC44 DUP5 DUP5 DUP5 PUSH2 0x10A1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xC52 PUSH2 0x789 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC70 PUSH2 0x536 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBD SWAP1 PUSH2 0x190B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2D SWAP1 PUSH2 0x1973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD41 PUSH0 DUP4 DUP4 PUSH2 0x109C JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD52 SWAP2 SWAP1 PUSH2 0x1444 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xDFF SWAP2 SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xE12 PUSH0 DUP4 DUP4 PUSH2 0x10A1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE84 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7B SWAP1 PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE8F DUP3 PUSH0 DUP4 PUSH2 0x109C JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xF12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF09 SWAP1 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xFC1 SWAP2 SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xFD4 DUP4 PUSH0 DUP5 PUSH2 0x10A1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10DD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x10C2 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1102 DUP3 PUSH2 0x10A6 JUMP JUMPDEST PUSH2 0x110C DUP2 DUP6 PUSH2 0x10B0 JUMP JUMPDEST SWAP4 POP PUSH2 0x111C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x10C0 JUMP JUMPDEST PUSH2 0x1125 DUP2 PUSH2 0x10E8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1148 DUP2 DUP5 PUSH2 0x10F8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x117D DUP3 PUSH2 0x1154 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x118D DUP2 PUSH2 0x1173 JUMP JUMPDEST DUP2 EQ PUSH2 0x1197 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11A8 DUP2 PUSH2 0x1184 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11C0 DUP2 PUSH2 0x11AE JUMP JUMPDEST DUP2 EQ PUSH2 0x11CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11DB DUP2 PUSH2 0x11B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11F7 JUMPI PUSH2 0x11F6 PUSH2 0x1150 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1204 DUP6 DUP3 DUP7 ADD PUSH2 0x119A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1215 DUP6 DUP3 DUP7 ADD PUSH2 0x11CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1233 DUP2 PUSH2 0x121F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x124C PUSH0 DUP4 ADD DUP5 PUSH2 0x122A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x125B DUP2 PUSH2 0x11AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1274 PUSH0 DUP4 ADD DUP5 PUSH2 0x1252 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1291 JUMPI PUSH2 0x1290 PUSH2 0x1150 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x129E DUP7 DUP3 DUP8 ADD PUSH2 0x119A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x12AF DUP7 DUP3 DUP8 ADD PUSH2 0x119A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x12C0 DUP7 DUP3 DUP8 ADD PUSH2 0x11CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12DF DUP2 PUSH2 0x12CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12F8 PUSH0 DUP4 ADD DUP5 PUSH2 0x12D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1313 JUMPI PUSH2 0x1312 PUSH2 0x1150 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1320 DUP5 DUP3 DUP6 ADD PUSH2 0x11CD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x133E JUMPI PUSH2 0x133D PUSH2 0x1150 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x134B DUP5 DUP3 DUP6 ADD PUSH2 0x119A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x135D DUP2 PUSH2 0x1173 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1376 PUSH0 DUP4 ADD DUP5 PUSH2 0x1354 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1392 JUMPI PUSH2 0x1391 PUSH2 0x1150 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x139F DUP6 DUP3 DUP7 ADD PUSH2 0x119A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13B0 DUP6 DUP3 DUP7 ADD PUSH2 0x119A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x13FE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1411 JUMPI PUSH2 0x1410 PUSH2 0x13BA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x144E DUP3 PUSH2 0x11AE JUMP JUMPDEST SWAP2 POP PUSH2 0x1459 DUP4 PUSH2 0x11AE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1471 JUMPI PUSH2 0x1470 PUSH2 0x1417 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14D1 PUSH1 0x25 DUP4 PUSH2 0x10B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x14DC DUP3 PUSH2 0x1477 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14FE DUP2 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x155F PUSH1 0x26 DUP4 PUSH2 0x10B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x156A DUP3 PUSH2 0x1505 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x158C DUP2 PUSH2 0x1553 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15ED PUSH1 0x24 DUP4 PUSH2 0x10B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x15F8 DUP3 PUSH2 0x1593 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x161A DUP2 PUSH2 0x15E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x167B PUSH1 0x22 DUP4 PUSH2 0x10B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1686 DUP3 PUSH2 0x1621 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16A8 DUP2 PUSH2 0x166F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16E3 PUSH1 0x1D DUP4 PUSH2 0x10B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x16EE DUP3 PUSH2 0x16AF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1710 DUP2 PUSH2 0x16D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1771 PUSH1 0x25 DUP4 PUSH2 0x10B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x177C DUP3 PUSH2 0x1717 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x179E DUP2 PUSH2 0x1765 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17FF PUSH1 0x23 DUP4 PUSH2 0x10B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x180A DUP3 PUSH2 0x17A5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x182C DUP2 PUSH2 0x17F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x188D PUSH1 0x26 DUP4 PUSH2 0x10B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1898 DUP3 PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18BA DUP2 PUSH2 0x1881 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18F5 PUSH1 0x20 DUP4 PUSH2 0x10B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1900 DUP3 PUSH2 0x18C1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1922 DUP2 PUSH2 0x18E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x195D PUSH1 0x1F DUP4 PUSH2 0x10B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1968 DUP3 PUSH2 0x1929 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x198A DUP2 PUSH2 0x1951 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19EB PUSH1 0x21 DUP4 PUSH2 0x10B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x19F6 DUP3 PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A18 DUP2 PUSH2 0x19DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A79 PUSH1 0x22 DUP4 PUSH2 0x10B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A84 DUP3 PUSH2 0x1A1F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AA6 DUP2 PUSH2 0x1A6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0xB47571F56083C PUSH17 0xF64106FA486CFCF35CF374716ACE0262E8 SHR PUSH23 0xE86CFD5D64736F6C634300081500330000000000000000 ",
							"sourceMap": "429:213:13:-:0;;;488:48;;;;;;;;;;1976:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2050:5;2042;:13;;;;;;:::i;:::-;;2075:7;2065;:17;;;;;;:::i;:::-;;1976:113;;936:32:2;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;429:213:13;;640:96:8;693:7;719:10;712:17;;640:96;:::o;2433:187:2:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;7:99:14:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;429:213:13:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1195": {
									"entryPoint": 4257,
									"id": 1195,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1130": {
									"entryPoint": 1936,
									"id": 1130,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1184": {
									"entryPoint": 4252,
									"id": 1184,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_1085": {
									"entryPoint": 3606,
									"id": 1085,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_443": {
									"entryPoint": 3146,
									"id": 443,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_1013": {
									"entryPoint": 3272,
									"id": 1013,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1355": {
									"entryPoint": 1929,
									"id": 1355,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1173": {
									"entryPoint": 2387,
									"id": 1173,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_500": {
									"entryPoint": 4057,
									"id": 500,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_956": {
									"entryPoint": 2526,
									"id": 956,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_751": {
									"entryPoint": 1669,
									"id": 751,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_776": {
									"entryPoint": 1021,
									"id": 776,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_708": {
									"entryPoint": 1214,
									"id": 708,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_1317": {
									"entryPoint": 1302,
									"id": 1317,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_1296": {
									"entryPoint": 1194,
									"id": 1296,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_684": {
									"entryPoint": 1110,
									"id": 684,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_879": {
									"entryPoint": 1518,
									"id": 879,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_838": {
									"entryPoint": 1118,
									"id": 838,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_2478": {
									"entryPoint": 1172,
									"id": 2478,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_664": {
									"entryPoint": 877,
									"id": 664,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_429": {
									"entryPoint": 1334,
									"id": 429,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_457": {
									"entryPoint": 1283,
									"id": 457,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_674": {
									"entryPoint": 1374,
									"id": 674,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_694": {
									"entryPoint": 1055,
									"id": 694,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_809": {
									"entryPoint": 1064,
									"id": 809,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_480": {
									"entryPoint": 1799,
									"id": 480,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_733": {
									"entryPoint": 1635,
									"id": 733,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4577,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6273,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4288,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5143,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5050,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4432,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 6053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd": {
									"entryPoint": 6687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 5381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029": {
									"entryPoint": 5665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe": {
									"entryPoint": 5807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6": {
									"entryPoint": 6195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 6337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f": {
									"entryPoint": 6545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 5911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208": {
									"entryPoint": 5523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8": {
									"entryPoint": 5239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e": {
									"entryPoint": 6441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4535,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:19430:14",
										"nodeType": "YulBlock",
										"src": "0:19430:14",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:14",
													"nodeType": "YulBlock",
													"src": "66:40:14",
													"statements": [
														{
															"nativeSrc": "77:22:14",
															"nodeType": "YulAssignment",
															"src": "77:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:14"
																},
																"nativeSrc": "87:12:14",
																"nodeType": "YulFunctionCall",
																"src": "87:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:14",
														"nodeType": "YulTypedName",
														"src": "49:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:14",
														"nodeType": "YulTypedName",
														"src": "59:6:14",
														"type": ""
													}
												],
												"src": "7:99:14"
											},
											{
												"body": {
													"nativeSrc": "208:73:14",
													"nodeType": "YulBlock",
													"src": "208:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:14"
																},
																"nativeSrc": "218:19:14",
																"nodeType": "YulFunctionCall",
																"src": "218:19:14"
															},
															"nativeSrc": "218:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:14"
														},
														{
															"nativeSrc": "246:29:14",
															"nodeType": "YulAssignment",
															"src": "246:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:14",
																		"nodeType": "YulLiteral",
																		"src": "270:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:14"
																},
																"nativeSrc": "261:14:14",
																"nodeType": "YulFunctionCall",
																"src": "261:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:14",
														"nodeType": "YulTypedName",
														"src": "180:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:14",
														"nodeType": "YulTypedName",
														"src": "185:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:14",
														"nodeType": "YulTypedName",
														"src": "196:11:14",
														"type": ""
													}
												],
												"src": "112:169:14"
											},
											{
												"body": {
													"nativeSrc": "349:184:14",
													"nodeType": "YulBlock",
													"src": "349:184:14",
													"statements": [
														{
															"nativeSrc": "359:10:14",
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:14",
															"value": {
																"kind": "number",
																"nativeSrc": "368:1:14",
																"nodeType": "YulLiteral",
																"src": "368:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "363:1:14",
																	"nodeType": "YulTypedName",
																	"src": "363:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "428:63:14",
																"nodeType": "YulBlock",
																"src": "428:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "453:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:14"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "458:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "449:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:14"
																					},
																					"nativeSrc": "449:11:14",
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "472:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:14"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "477:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "468:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:14"
																							},
																							"nativeSrc": "468:11:14",
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "462:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:14"
																					},
																					"nativeSrc": "462:18:14",
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "442:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:14"
																			},
																			"nativeSrc": "442:39:14",
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:14"
																		},
																		"nativeSrc": "442:39:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "389:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "392:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "386:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:14"
																},
																"nativeSrc": "386:13:14",
																"nodeType": "YulFunctionCall",
																"src": "386:13:14"
															},
															"nativeSrc": "378:113:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "400:19:14",
																"nodeType": "YulBlock",
																"src": "400:19:14",
																"statements": [
																	{
																		"nativeSrc": "402:15:14",
																		"nodeType": "YulAssignment",
																		"src": "402:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "411:1:14",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:2:14",
																					"nodeType": "YulLiteral",
																					"src": "414:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "407:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:14"
																			},
																			"nativeSrc": "407:10:14",
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "402:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "382:3:14",
																"nodeType": "YulBlock",
																"src": "382:3:14",
																"statements": []
															},
															"src": "378:113:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "511:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "516:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "507:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:14"
																		},
																		"nativeSrc": "507:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "525:1:14",
																		"nodeType": "YulLiteral",
																		"src": "525:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "500:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:14"
																},
																"nativeSrc": "500:27:14",
																"nodeType": "YulFunctionCall",
																"src": "500:27:14"
															},
															"nativeSrc": "500:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "500:27:14"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:246:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:14",
														"nodeType": "YulTypedName",
														"src": "331:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:14",
														"nodeType": "YulTypedName",
														"src": "336:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:14",
														"nodeType": "YulTypedName",
														"src": "341:6:14",
														"type": ""
													}
												],
												"src": "287:246:14"
											},
											{
												"body": {
													"nativeSrc": "587:54:14",
													"nodeType": "YulBlock",
													"src": "587:54:14",
													"statements": [
														{
															"nativeSrc": "597:38:14",
															"nodeType": "YulAssignment",
															"src": "597:38:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "615:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "622:2:14",
																				"nodeType": "YulLiteral",
																				"src": "622:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "611:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:14"
																		},
																		"nativeSrc": "611:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "631:2:14",
																				"nodeType": "YulLiteral",
																				"src": "631:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "627:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:14"
																		},
																		"nativeSrc": "627:7:14",
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "607:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:14"
																},
																"nativeSrc": "607:28:14",
																"nodeType": "YulFunctionCall",
																"src": "607:28:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "597:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:14"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "539:102:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:14",
														"nodeType": "YulTypedName",
														"src": "570:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "580:6:14",
														"nodeType": "YulTypedName",
														"src": "580:6:14",
														"type": ""
													}
												],
												"src": "539:102:14"
											},
											{
												"body": {
													"nativeSrc": "739:285:14",
													"nodeType": "YulBlock",
													"src": "739:285:14",
													"statements": [
														{
															"nativeSrc": "749:53:14",
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "796:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "763:32:14",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:14"
																},
																"nativeSrc": "763:39:14",
																"nodeType": "YulFunctionCall",
																"src": "763:39:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "753:6:14",
																	"nodeType": "YulTypedName",
																	"src": "753:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "811:78:14",
															"nodeType": "YulAssignment",
															"src": "811:78:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "877:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "882:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "818:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:14"
																},
																"nativeSrc": "818:71:14",
																"nodeType": "YulFunctionCall",
																"src": "818:71:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "811:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "937:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "944:4:14",
																				"nodeType": "YulLiteral",
																				"src": "944:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "933:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:14"
																		},
																		"nativeSrc": "933:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "951:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "956:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "898:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:14"
																},
																"nativeSrc": "898:65:14",
																"nodeType": "YulFunctionCall",
																"src": "898:65:14"
															},
															"nativeSrc": "898:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "898:65:14"
														},
														{
															"nativeSrc": "972:46:14",
															"nodeType": "YulAssignment",
															"src": "972:46:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "983:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "988:21:14",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:14"
																		},
																		"nativeSrc": "988:29:14",
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "979:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:14"
																},
																"nativeSrc": "979:39:14",
																"nodeType": "YulFunctionCall",
																"src": "979:39:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "972:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "647:377:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "720:5:14",
														"nodeType": "YulTypedName",
														"src": "720:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "727:3:14",
														"nodeType": "YulTypedName",
														"src": "727:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "735:3:14",
														"nodeType": "YulTypedName",
														"src": "735:3:14",
														"type": ""
													}
												],
												"src": "647:377:14"
											},
											{
												"body": {
													"nativeSrc": "1148:195:14",
													"nodeType": "YulBlock",
													"src": "1148:195:14",
													"statements": [
														{
															"nativeSrc": "1158:26:14",
															"nodeType": "YulAssignment",
															"src": "1158:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1170:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1166:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:14"
																},
																"nativeSrc": "1166:18:14",
																"nodeType": "YulFunctionCall",
																"src": "1166:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1158:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1205:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1216:1:14",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1201:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:14"
																		},
																		"nativeSrc": "1201:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1224:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1230:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:14"
																		},
																		"nativeSrc": "1220:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:14"
																},
																"nativeSrc": "1194:47:14",
																"nodeType": "YulFunctionCall",
																"src": "1194:47:14"
															},
															"nativeSrc": "1194:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:14"
														},
														{
															"nativeSrc": "1250:86:14",
															"nodeType": "YulAssignment",
															"src": "1250:86:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1322:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1331:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1258:63:14",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:14"
																},
																"nativeSrc": "1258:78:14",
																"nodeType": "YulFunctionCall",
																"src": "1258:78:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1250:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1030:313:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1120:9:14",
														"nodeType": "YulTypedName",
														"src": "1120:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1132:6:14",
														"nodeType": "YulTypedName",
														"src": "1132:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1143:4:14",
														"nodeType": "YulTypedName",
														"src": "1143:4:14",
														"type": ""
													}
												],
												"src": "1030:313:14"
											},
											{
												"body": {
													"nativeSrc": "1389:35:14",
													"nodeType": "YulBlock",
													"src": "1389:35:14",
													"statements": [
														{
															"nativeSrc": "1399:19:14",
															"nodeType": "YulAssignment",
															"src": "1399:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1409:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:14"
																},
																"nativeSrc": "1409:9:14",
																"nodeType": "YulFunctionCall",
																"src": "1409:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1399:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1349:75:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1382:6:14",
														"nodeType": "YulTypedName",
														"src": "1382:6:14",
														"type": ""
													}
												],
												"src": "1349:75:14"
											},
											{
												"body": {
													"nativeSrc": "1519:28:14",
													"nodeType": "YulBlock",
													"src": "1519:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1536:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1539:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1529:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:14"
																},
																"nativeSrc": "1529:12:14",
																"nodeType": "YulFunctionCall",
																"src": "1529:12:14"
															},
															"nativeSrc": "1529:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1430:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:14"
											},
											{
												"body": {
													"nativeSrc": "1642:28:14",
													"nodeType": "YulBlock",
													"src": "1642:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:14"
																},
																"nativeSrc": "1652:12:14",
																"nodeType": "YulFunctionCall",
																"src": "1652:12:14"
															},
															"nativeSrc": "1652:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1553:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:14"
											},
											{
												"body": {
													"nativeSrc": "1721:81:14",
													"nodeType": "YulBlock",
													"src": "1721:81:14",
													"statements": [
														{
															"nativeSrc": "1731:65:14",
															"nodeType": "YulAssignment",
															"src": "1731:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1746:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:42:14",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1742:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:14"
																},
																"nativeSrc": "1742:54:14",
																"nodeType": "YulFunctionCall",
																"src": "1742:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1731:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1676:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1703:5:14",
														"nodeType": "YulTypedName",
														"src": "1703:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1713:7:14",
														"nodeType": "YulTypedName",
														"src": "1713:7:14",
														"type": ""
													}
												],
												"src": "1676:126:14"
											},
											{
												"body": {
													"nativeSrc": "1853:51:14",
													"nodeType": "YulBlock",
													"src": "1853:51:14",
													"statements": [
														{
															"nativeSrc": "1863:35:14",
															"nodeType": "YulAssignment",
															"src": "1863:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1874:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:14"
																},
																"nativeSrc": "1874:24:14",
																"nodeType": "YulFunctionCall",
																"src": "1874:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1863:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1808:96:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:14",
														"nodeType": "YulTypedName",
														"src": "1835:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1845:7:14",
														"nodeType": "YulTypedName",
														"src": "1845:7:14",
														"type": ""
													}
												],
												"src": "1808:96:14"
											},
											{
												"body": {
													"nativeSrc": "1953:79:14",
													"nodeType": "YulBlock",
													"src": "1953:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2010:16:14",
																"nodeType": "YulBlock",
																"src": "2010:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2019:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2022:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2012:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:14"
																			},
																			"nativeSrc": "2012:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:14"
																		},
																		"nativeSrc": "2012:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1976:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2001:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1983:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:14"
																				},
																				"nativeSrc": "1983:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1973:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:14"
																		},
																		"nativeSrc": "1973:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1966:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:14"
																},
																"nativeSrc": "1966:43:14",
																"nodeType": "YulFunctionCall",
																"src": "1966:43:14"
															},
															"nativeSrc": "1963:63:14",
															"nodeType": "YulIf",
															"src": "1963:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1910:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1946:5:14",
														"nodeType": "YulTypedName",
														"src": "1946:5:14",
														"type": ""
													}
												],
												"src": "1910:122:14"
											},
											{
												"body": {
													"nativeSrc": "2090:87:14",
													"nodeType": "YulBlock",
													"src": "2090:87:14",
													"statements": [
														{
															"nativeSrc": "2100:29:14",
															"nodeType": "YulAssignment",
															"src": "2100:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2122:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2109:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:14"
																},
																"nativeSrc": "2109:20:14",
																"nodeType": "YulFunctionCall",
																"src": "2109:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2100:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2165:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2138:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:14"
																},
																"nativeSrc": "2138:33:14",
																"nodeType": "YulFunctionCall",
																"src": "2138:33:14"
															},
															"nativeSrc": "2138:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:14"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2038:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2068:6:14",
														"nodeType": "YulTypedName",
														"src": "2068:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2076:3:14",
														"nodeType": "YulTypedName",
														"src": "2076:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2084:5:14",
														"nodeType": "YulTypedName",
														"src": "2084:5:14",
														"type": ""
													}
												],
												"src": "2038:139:14"
											},
											{
												"body": {
													"nativeSrc": "2228:32:14",
													"nodeType": "YulBlock",
													"src": "2228:32:14",
													"statements": [
														{
															"nativeSrc": "2238:16:14",
															"nodeType": "YulAssignment",
															"src": "2238:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "2249:5:14",
																"nodeType": "YulIdentifier",
																"src": "2249:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2238:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2183:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:14",
														"nodeType": "YulTypedName",
														"src": "2210:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2220:7:14",
														"nodeType": "YulTypedName",
														"src": "2220:7:14",
														"type": ""
													}
												],
												"src": "2183:77:14"
											},
											{
												"body": {
													"nativeSrc": "2309:79:14",
													"nodeType": "YulBlock",
													"src": "2309:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2366:16:14",
																"nodeType": "YulBlock",
																"src": "2366:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2368:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:14"
																			},
																			"nativeSrc": "2368:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:14"
																		},
																		"nativeSrc": "2368:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2332:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2357:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2339:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:14"
																				},
																				"nativeSrc": "2339:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2329:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:14"
																		},
																		"nativeSrc": "2329:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2322:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:14"
																},
																"nativeSrc": "2322:43:14",
																"nodeType": "YulFunctionCall",
																"src": "2322:43:14"
															},
															"nativeSrc": "2319:63:14",
															"nodeType": "YulIf",
															"src": "2319:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2266:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2302:5:14",
														"nodeType": "YulTypedName",
														"src": "2302:5:14",
														"type": ""
													}
												],
												"src": "2266:122:14"
											},
											{
												"body": {
													"nativeSrc": "2446:87:14",
													"nodeType": "YulBlock",
													"src": "2446:87:14",
													"statements": [
														{
															"nativeSrc": "2456:29:14",
															"nodeType": "YulAssignment",
															"src": "2456:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2478:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2465:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:14"
																},
																"nativeSrc": "2465:20:14",
																"nodeType": "YulFunctionCall",
																"src": "2465:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2456:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2521:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2494:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:14"
																},
																"nativeSrc": "2494:33:14",
																"nodeType": "YulFunctionCall",
																"src": "2494:33:14"
															},
															"nativeSrc": "2494:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2394:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2424:6:14",
														"nodeType": "YulTypedName",
														"src": "2424:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2432:3:14",
														"nodeType": "YulTypedName",
														"src": "2432:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2440:5:14",
														"nodeType": "YulTypedName",
														"src": "2440:5:14",
														"type": ""
													}
												],
												"src": "2394:139:14"
											},
											{
												"body": {
													"nativeSrc": "2622:391:14",
													"nodeType": "YulBlock",
													"src": "2622:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2668:83:14",
																"nodeType": "YulBlock",
																"src": "2668:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2670:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:14"
																			},
																			"nativeSrc": "2670:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:14"
																		},
																		"nativeSrc": "2670:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2643:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2652:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2639:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:14"
																		},
																		"nativeSrc": "2639:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2664:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2635:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:14"
																},
																"nativeSrc": "2635:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2635:32:14"
															},
															"nativeSrc": "2632:119:14",
															"nodeType": "YulIf",
															"src": "2632:119:14"
														},
														{
															"nativeSrc": "2761:117:14",
															"nodeType": "YulBlock",
															"src": "2761:117:14",
															"statements": [
																{
																	"nativeSrc": "2776:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2790:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2780:6:14",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2805:63:14",
																	"nodeType": "YulAssignment",
																	"src": "2805:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2840:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2851:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2836:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:14"
																				},
																				"nativeSrc": "2836:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2860:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2815:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:14"
																		},
																		"nativeSrc": "2815:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2805:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2888:118:14",
															"nodeType": "YulBlock",
															"src": "2888:118:14",
															"statements": [
																{
																	"nativeSrc": "2903:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2917:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2907:6:14",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2933:63:14",
																	"nodeType": "YulAssignment",
																	"src": "2933:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2968:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2979:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2964:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:14"
																				},
																				"nativeSrc": "2964:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2988:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2943:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:14"
																		},
																		"nativeSrc": "2943:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2933:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2539:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:14",
														"nodeType": "YulTypedName",
														"src": "2584:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2595:7:14",
														"nodeType": "YulTypedName",
														"src": "2595:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2607:6:14",
														"nodeType": "YulTypedName",
														"src": "2607:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2615:6:14",
														"nodeType": "YulTypedName",
														"src": "2615:6:14",
														"type": ""
													}
												],
												"src": "2539:474:14"
											},
											{
												"body": {
													"nativeSrc": "3061:48:14",
													"nodeType": "YulBlock",
													"src": "3061:48:14",
													"statements": [
														{
															"nativeSrc": "3071:32:14",
															"nodeType": "YulAssignment",
															"src": "3071:32:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3096:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3089:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:14"
																		},
																		"nativeSrc": "3089:13:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3082:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:14"
																},
																"nativeSrc": "3082:21:14",
																"nodeType": "YulFunctionCall",
																"src": "3082:21:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3071:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3019:90:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3043:5:14",
														"nodeType": "YulTypedName",
														"src": "3043:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3053:7:14",
														"nodeType": "YulTypedName",
														"src": "3053:7:14",
														"type": ""
													}
												],
												"src": "3019:90:14"
											},
											{
												"body": {
													"nativeSrc": "3174:50:14",
													"nodeType": "YulBlock",
													"src": "3174:50:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3191:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3211:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3196:14:14",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:14"
																		},
																		"nativeSrc": "3196:21:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:14"
																},
																"nativeSrc": "3184:34:14",
																"nodeType": "YulFunctionCall",
																"src": "3184:34:14"
															},
															"nativeSrc": "3184:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:14"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3115:109:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3162:5:14",
														"nodeType": "YulTypedName",
														"src": "3162:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3169:3:14",
														"nodeType": "YulTypedName",
														"src": "3169:3:14",
														"type": ""
													}
												],
												"src": "3115:109:14"
											},
											{
												"body": {
													"nativeSrc": "3322:118:14",
													"nodeType": "YulBlock",
													"src": "3322:118:14",
													"statements": [
														{
															"nativeSrc": "3332:26:14",
															"nodeType": "YulAssignment",
															"src": "3332:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3340:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:14"
																},
																"nativeSrc": "3340:18:14",
																"nodeType": "YulFunctionCall",
																"src": "3340:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3332:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3406:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3430:1:14",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3415:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:14"
																		},
																		"nativeSrc": "3415:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3368:37:14",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:14"
																},
																"nativeSrc": "3368:65:14",
																"nodeType": "YulFunctionCall",
																"src": "3368:65:14"
															},
															"nativeSrc": "3368:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3230:210:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:14",
														"nodeType": "YulTypedName",
														"src": "3294:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3306:6:14",
														"nodeType": "YulTypedName",
														"src": "3306:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3317:4:14",
														"nodeType": "YulTypedName",
														"src": "3317:4:14",
														"type": ""
													}
												],
												"src": "3230:210:14"
											},
											{
												"body": {
													"nativeSrc": "3511:53:14",
													"nodeType": "YulBlock",
													"src": "3511:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3528:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3551:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3533:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:14"
																		},
																		"nativeSrc": "3533:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3521:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:14"
																},
																"nativeSrc": "3521:37:14",
																"nodeType": "YulFunctionCall",
																"src": "3521:37:14"
															},
															"nativeSrc": "3521:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3446:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3499:5:14",
														"nodeType": "YulTypedName",
														"src": "3499:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3506:3:14",
														"nodeType": "YulTypedName",
														"src": "3506:3:14",
														"type": ""
													}
												],
												"src": "3446:118:14"
											},
											{
												"body": {
													"nativeSrc": "3668:124:14",
													"nodeType": "YulBlock",
													"src": "3668:124:14",
													"statements": [
														{
															"nativeSrc": "3678:26:14",
															"nodeType": "YulAssignment",
															"src": "3678:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3690:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3701:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3686:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:14"
																},
																"nativeSrc": "3686:18:14",
																"nodeType": "YulFunctionCall",
																"src": "3686:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3678:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3758:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:1:14",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:14"
																		},
																		"nativeSrc": "3767:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3714:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:14"
																},
																"nativeSrc": "3714:71:14",
																"nodeType": "YulFunctionCall",
																"src": "3714:71:14"
															},
															"nativeSrc": "3714:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3570:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3640:9:14",
														"nodeType": "YulTypedName",
														"src": "3640:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3652:6:14",
														"nodeType": "YulTypedName",
														"src": "3652:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3663:4:14",
														"nodeType": "YulTypedName",
														"src": "3663:4:14",
														"type": ""
													}
												],
												"src": "3570:222:14"
											},
											{
												"body": {
													"nativeSrc": "3898:519:14",
													"nodeType": "YulBlock",
													"src": "3898:519:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3944:83:14",
																"nodeType": "YulBlock",
																"src": "3944:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3946:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:14"
																			},
																			"nativeSrc": "3946:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:14"
																		},
																		"nativeSrc": "3946:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3915:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:14"
																		},
																		"nativeSrc": "3915:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3911:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:14"
																},
																"nativeSrc": "3911:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3911:32:14"
															},
															"nativeSrc": "3908:119:14",
															"nodeType": "YulIf",
															"src": "3908:119:14"
														},
														{
															"nativeSrc": "4037:117:14",
															"nodeType": "YulBlock",
															"src": "4037:117:14",
															"statements": [
																{
																	"nativeSrc": "4052:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4066:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4056:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4081:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4081:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4116:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4127:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4112:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:14"
																				},
																				"nativeSrc": "4112:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4136:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4091:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:14"
																		},
																		"nativeSrc": "4091:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4081:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4164:118:14",
															"nodeType": "YulBlock",
															"src": "4164:118:14",
															"statements": [
																{
																	"nativeSrc": "4179:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4193:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4183:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4209:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4209:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4244:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4255:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:14"
																				},
																				"nativeSrc": "4240:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4264:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4219:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:14"
																		},
																		"nativeSrc": "4219:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4209:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4292:118:14",
															"nodeType": "YulBlock",
															"src": "4292:118:14",
															"statements": [
																{
																	"nativeSrc": "4307:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4321:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4311:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4337:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4337:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4372:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4383:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4368:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:14"
																				},
																				"nativeSrc": "4368:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4392:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4347:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:14"
																		},
																		"nativeSrc": "4347:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4337:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3798:619:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3852:9:14",
														"nodeType": "YulTypedName",
														"src": "3852:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3863:7:14",
														"nodeType": "YulTypedName",
														"src": "3863:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3875:6:14",
														"nodeType": "YulTypedName",
														"src": "3875:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3883:6:14",
														"nodeType": "YulTypedName",
														"src": "3883:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3891:6:14",
														"nodeType": "YulTypedName",
														"src": "3891:6:14",
														"type": ""
													}
												],
												"src": "3798:619:14"
											},
											{
												"body": {
													"nativeSrc": "4466:43:14",
													"nodeType": "YulBlock",
													"src": "4466:43:14",
													"statements": [
														{
															"nativeSrc": "4476:27:14",
															"nodeType": "YulAssignment",
															"src": "4476:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4491:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4498:4:14",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:14",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4487:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:14"
																},
																"nativeSrc": "4487:16:14",
																"nodeType": "YulFunctionCall",
																"src": "4487:16:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4476:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4423:86:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4448:5:14",
														"nodeType": "YulTypedName",
														"src": "4448:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4458:7:14",
														"nodeType": "YulTypedName",
														"src": "4458:7:14",
														"type": ""
													}
												],
												"src": "4423:86:14"
											},
											{
												"body": {
													"nativeSrc": "4576:51:14",
													"nodeType": "YulBlock",
													"src": "4576:51:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4593:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4614:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4598:15:14",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:14"
																		},
																		"nativeSrc": "4598:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4586:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:14"
																},
																"nativeSrc": "4586:35:14",
																"nodeType": "YulFunctionCall",
																"src": "4586:35:14"
															},
															"nativeSrc": "4586:35:14",
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:14"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4515:112:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4564:5:14",
														"nodeType": "YulTypedName",
														"src": "4564:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4571:3:14",
														"nodeType": "YulTypedName",
														"src": "4571:3:14",
														"type": ""
													}
												],
												"src": "4515:112:14"
											},
											{
												"body": {
													"nativeSrc": "4727:120:14",
													"nodeType": "YulBlock",
													"src": "4727:120:14",
													"statements": [
														{
															"nativeSrc": "4737:26:14",
															"nodeType": "YulAssignment",
															"src": "4737:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4749:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4760:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4745:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:14"
																},
																"nativeSrc": "4745:18:14",
																"nodeType": "YulFunctionCall",
																"src": "4745:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4737:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4813:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4826:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4837:1:14",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4822:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:14"
																		},
																		"nativeSrc": "4822:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4773:39:14",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:14"
																},
																"nativeSrc": "4773:67:14",
																"nodeType": "YulFunctionCall",
																"src": "4773:67:14"
															},
															"nativeSrc": "4773:67:14",
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4633:214:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4699:9:14",
														"nodeType": "YulTypedName",
														"src": "4699:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4711:6:14",
														"nodeType": "YulTypedName",
														"src": "4711:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4722:4:14",
														"nodeType": "YulTypedName",
														"src": "4722:4:14",
														"type": ""
													}
												],
												"src": "4633:214:14"
											},
											{
												"body": {
													"nativeSrc": "4919:263:14",
													"nodeType": "YulBlock",
													"src": "4919:263:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4965:83:14",
																"nodeType": "YulBlock",
																"src": "4965:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4967:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:14"
																			},
																			"nativeSrc": "4967:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:14"
																		},
																		"nativeSrc": "4967:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4940:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4949:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4936:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:14"
																		},
																		"nativeSrc": "4936:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4961:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4932:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:14"
																},
																"nativeSrc": "4932:32:14",
																"nodeType": "YulFunctionCall",
																"src": "4932:32:14"
															},
															"nativeSrc": "4929:119:14",
															"nodeType": "YulIf",
															"src": "4929:119:14"
														},
														{
															"nativeSrc": "5058:117:14",
															"nodeType": "YulBlock",
															"src": "5058:117:14",
															"statements": [
																{
																	"nativeSrc": "5073:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5087:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5077:6:14",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5102:63:14",
																	"nodeType": "YulAssignment",
																	"src": "5102:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5137:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5148:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5133:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:14"
																				},
																				"nativeSrc": "5133:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5157:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5112:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:14"
																		},
																		"nativeSrc": "5112:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5102:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4853:329:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4889:9:14",
														"nodeType": "YulTypedName",
														"src": "4889:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4900:7:14",
														"nodeType": "YulTypedName",
														"src": "4900:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4912:6:14",
														"nodeType": "YulTypedName",
														"src": "4912:6:14",
														"type": ""
													}
												],
												"src": "4853:329:14"
											},
											{
												"body": {
													"nativeSrc": "5254:263:14",
													"nodeType": "YulBlock",
													"src": "5254:263:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "5300:83:14",
																"nodeType": "YulBlock",
																"src": "5300:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5302:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "5302:77:14"
																			},
																			"nativeSrc": "5302:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5302:79:14"
																		},
																		"nativeSrc": "5302:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5302:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5275:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5275:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5284:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5284:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5271:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5271:3:14"
																		},
																		"nativeSrc": "5271:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5271:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5296:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5296:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5267:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5267:3:14"
																},
																"nativeSrc": "5267:32:14",
																"nodeType": "YulFunctionCall",
																"src": "5267:32:14"
															},
															"nativeSrc": "5264:119:14",
															"nodeType": "YulIf",
															"src": "5264:119:14"
														},
														{
															"nativeSrc": "5393:117:14",
															"nodeType": "YulBlock",
															"src": "5393:117:14",
															"statements": [
																{
																	"nativeSrc": "5408:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5408:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5422:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5422:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5412:6:14",
																			"nodeType": "YulTypedName",
																			"src": "5412:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5437:63:14",
																	"nodeType": "YulAssignment",
																	"src": "5437:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5472:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5472:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5483:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "5483:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5468:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5468:3:14"
																				},
																				"nativeSrc": "5468:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5468:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5492:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5492:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5447:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "5447:20:14"
																		},
																		"nativeSrc": "5447:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5447:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5437:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5437:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5188:329:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5224:9:14",
														"nodeType": "YulTypedName",
														"src": "5224:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5235:7:14",
														"nodeType": "YulTypedName",
														"src": "5235:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5247:6:14",
														"nodeType": "YulTypedName",
														"src": "5247:6:14",
														"type": ""
													}
												],
												"src": "5188:329:14"
											},
											{
												"body": {
													"nativeSrc": "5588:53:14",
													"nodeType": "YulBlock",
													"src": "5588:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5605:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "5605:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5628:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5628:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5610:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "5610:17:14"
																		},
																		"nativeSrc": "5610:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5610:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5598:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5598:6:14"
																},
																"nativeSrc": "5598:37:14",
																"nodeType": "YulFunctionCall",
																"src": "5598:37:14"
															},
															"nativeSrc": "5598:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "5598:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5523:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5576:5:14",
														"nodeType": "YulTypedName",
														"src": "5576:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5583:3:14",
														"nodeType": "YulTypedName",
														"src": "5583:3:14",
														"type": ""
													}
												],
												"src": "5523:118:14"
											},
											{
												"body": {
													"nativeSrc": "5745:124:14",
													"nodeType": "YulBlock",
													"src": "5745:124:14",
													"statements": [
														{
															"nativeSrc": "5755:26:14",
															"nodeType": "YulAssignment",
															"src": "5755:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5767:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5767:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5778:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5778:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5763:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5763:3:14"
																},
																"nativeSrc": "5763:18:14",
																"nodeType": "YulFunctionCall",
																"src": "5763:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5755:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "5755:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5835:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5835:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5848:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5848:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5859:1:14",
																				"nodeType": "YulLiteral",
																				"src": "5859:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5844:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5844:3:14"
																		},
																		"nativeSrc": "5844:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5844:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5791:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "5791:43:14"
																},
																"nativeSrc": "5791:71:14",
																"nodeType": "YulFunctionCall",
																"src": "5791:71:14"
															},
															"nativeSrc": "5791:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "5791:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5647:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5717:9:14",
														"nodeType": "YulTypedName",
														"src": "5717:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5729:6:14",
														"nodeType": "YulTypedName",
														"src": "5729:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5740:4:14",
														"nodeType": "YulTypedName",
														"src": "5740:4:14",
														"type": ""
													}
												],
												"src": "5647:222:14"
											},
											{
												"body": {
													"nativeSrc": "5958:391:14",
													"nodeType": "YulBlock",
													"src": "5958:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "6004:83:14",
																"nodeType": "YulBlock",
																"src": "6004:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6006:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "6006:77:14"
																			},
																			"nativeSrc": "6006:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6006:79:14"
																		},
																		"nativeSrc": "6006:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6006:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5979:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5979:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5988:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5988:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5975:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5975:3:14"
																		},
																		"nativeSrc": "5975:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5975:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6000:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6000:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5971:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5971:3:14"
																},
																"nativeSrc": "5971:32:14",
																"nodeType": "YulFunctionCall",
																"src": "5971:32:14"
															},
															"nativeSrc": "5968:119:14",
															"nodeType": "YulIf",
															"src": "5968:119:14"
														},
														{
															"nativeSrc": "6097:117:14",
															"nodeType": "YulBlock",
															"src": "6097:117:14",
															"statements": [
																{
																	"nativeSrc": "6112:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6112:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6126:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6126:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6116:6:14",
																			"nodeType": "YulTypedName",
																			"src": "6116:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6141:63:14",
																	"nodeType": "YulAssignment",
																	"src": "6141:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6176:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "6176:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6187:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "6187:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6172:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6172:3:14"
																				},
																				"nativeSrc": "6172:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6172:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6196:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "6196:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6151:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "6151:20:14"
																		},
																		"nativeSrc": "6151:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6151:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6141:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "6141:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6224:118:14",
															"nodeType": "YulBlock",
															"src": "6224:118:14",
															"statements": [
																{
																	"nativeSrc": "6239:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6239:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6253:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6253:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6243:6:14",
																			"nodeType": "YulTypedName",
																			"src": "6243:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6269:63:14",
																	"nodeType": "YulAssignment",
																	"src": "6269:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6304:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "6304:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6315:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "6315:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6300:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6300:3:14"
																				},
																				"nativeSrc": "6300:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6300:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6324:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "6324:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6279:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "6279:20:14"
																		},
																		"nativeSrc": "6279:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6279:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6269:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "6269:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5875:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5920:9:14",
														"nodeType": "YulTypedName",
														"src": "5920:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5931:7:14",
														"nodeType": "YulTypedName",
														"src": "5931:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5943:6:14",
														"nodeType": "YulTypedName",
														"src": "5943:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5951:6:14",
														"nodeType": "YulTypedName",
														"src": "5951:6:14",
														"type": ""
													}
												],
												"src": "5875:474:14"
											},
											{
												"body": {
													"nativeSrc": "6383:152:14",
													"nodeType": "YulBlock",
													"src": "6383:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6400:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6400:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6403:77:14",
																		"nodeType": "YulLiteral",
																		"src": "6403:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6393:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6393:6:14"
																},
																"nativeSrc": "6393:88:14",
																"nodeType": "YulFunctionCall",
																"src": "6393:88:14"
															},
															"nativeSrc": "6393:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "6393:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6497:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6497:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6500:4:14",
																		"nodeType": "YulLiteral",
																		"src": "6500:4:14",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6490:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6490:6:14"
																},
																"nativeSrc": "6490:15:14",
																"nodeType": "YulFunctionCall",
																"src": "6490:15:14"
															},
															"nativeSrc": "6490:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "6490:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6521:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6521:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6524:4:14",
																		"nodeType": "YulLiteral",
																		"src": "6524:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6514:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6514:6:14"
																},
																"nativeSrc": "6514:15:14",
																"nodeType": "YulFunctionCall",
																"src": "6514:15:14"
															},
															"nativeSrc": "6514:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "6514:15:14"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6355:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "6355:180:14"
											},
											{
												"body": {
													"nativeSrc": "6592:269:14",
													"nodeType": "YulBlock",
													"src": "6592:269:14",
													"statements": [
														{
															"nativeSrc": "6602:22:14",
															"nodeType": "YulAssignment",
															"src": "6602:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6616:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "6616:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6622:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6622:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6612:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6612:3:14"
																},
																"nativeSrc": "6612:12:14",
																"nodeType": "YulFunctionCall",
																"src": "6612:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6602:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6602:6:14"
																}
															]
														},
														{
															"nativeSrc": "6633:38:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6633:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6663:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "6663:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6669:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6669:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6659:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6659:3:14"
																},
																"nativeSrc": "6659:12:14",
																"nodeType": "YulFunctionCall",
																"src": "6659:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6637:18:14",
																	"nodeType": "YulTypedName",
																	"src": "6637:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6710:51:14",
																"nodeType": "YulBlock",
																"src": "6710:51:14",
																"statements": [
																	{
																		"nativeSrc": "6724:27:14",
																		"nodeType": "YulAssignment",
																		"src": "6724:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6738:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "6738:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6746:4:14",
																					"nodeType": "YulLiteral",
																					"src": "6746:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6734:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "6734:3:14"
																			},
																			"nativeSrc": "6734:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6734:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6724:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6724:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6690:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "6690:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6683:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6683:6:14"
																},
																"nativeSrc": "6683:26:14",
																"nodeType": "YulFunctionCall",
																"src": "6683:26:14"
															},
															"nativeSrc": "6680:81:14",
															"nodeType": "YulIf",
															"src": "6680:81:14"
														},
														{
															"body": {
																"nativeSrc": "6813:42:14",
																"nodeType": "YulBlock",
																"src": "6813:42:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6827:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "6827:16:14"
																			},
																			"nativeSrc": "6827:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6827:18:14"
																		},
																		"nativeSrc": "6827:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6827:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6777:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "6777:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6800:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6800:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6808:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6808:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6797:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "6797:2:14"
																		},
																		"nativeSrc": "6797:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6797:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6774:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "6774:2:14"
																},
																"nativeSrc": "6774:38:14",
																"nodeType": "YulFunctionCall",
																"src": "6774:38:14"
															},
															"nativeSrc": "6771:84:14",
															"nodeType": "YulIf",
															"src": "6771:84:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6541:320:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6576:4:14",
														"nodeType": "YulTypedName",
														"src": "6576:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6585:6:14",
														"nodeType": "YulTypedName",
														"src": "6585:6:14",
														"type": ""
													}
												],
												"src": "6541:320:14"
											},
											{
												"body": {
													"nativeSrc": "6895:152:14",
													"nodeType": "YulBlock",
													"src": "6895:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6912:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6912:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6915:77:14",
																		"nodeType": "YulLiteral",
																		"src": "6915:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6905:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6905:6:14"
																},
																"nativeSrc": "6905:88:14",
																"nodeType": "YulFunctionCall",
																"src": "6905:88:14"
															},
															"nativeSrc": "6905:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "6905:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7009:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7009:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7012:4:14",
																		"nodeType": "YulLiteral",
																		"src": "7012:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7002:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7002:6:14"
																},
																"nativeSrc": "7002:15:14",
																"nodeType": "YulFunctionCall",
																"src": "7002:15:14"
															},
															"nativeSrc": "7002:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "7002:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7033:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7033:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7036:4:14",
																		"nodeType": "YulLiteral",
																		"src": "7036:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7026:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7026:6:14"
																},
																"nativeSrc": "7026:15:14",
																"nodeType": "YulFunctionCall",
																"src": "7026:15:14"
															},
															"nativeSrc": "7026:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "7026:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6867:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "6867:180:14"
											},
											{
												"body": {
													"nativeSrc": "7097:147:14",
													"nodeType": "YulBlock",
													"src": "7097:147:14",
													"statements": [
														{
															"nativeSrc": "7107:25:14",
															"nodeType": "YulAssignment",
															"src": "7107:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7130:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "7130:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7112:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "7112:17:14"
																},
																"nativeSrc": "7112:20:14",
																"nodeType": "YulFunctionCall",
																"src": "7112:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7107:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "7107:1:14"
																}
															]
														},
														{
															"nativeSrc": "7141:25:14",
															"nodeType": "YulAssignment",
															"src": "7141:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7164:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "7164:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7146:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "7146:17:14"
																},
																"nativeSrc": "7146:20:14",
																"nodeType": "YulFunctionCall",
																"src": "7146:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7141:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "7141:1:14"
																}
															]
														},
														{
															"nativeSrc": "7175:16:14",
															"nodeType": "YulAssignment",
															"src": "7175:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7186:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "7186:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7189:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "7189:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7182:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7182:3:14"
																},
																"nativeSrc": "7182:9:14",
																"nodeType": "YulFunctionCall",
																"src": "7182:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7175:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7175:3:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7215:22:14",
																"nodeType": "YulBlock",
																"src": "7215:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7217:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "7217:16:14"
																			},
																			"nativeSrc": "7217:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7217:18:14"
																		},
																		"nativeSrc": "7217:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7217:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7207:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "7207:1:14"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7210:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7210:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7204:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "7204:2:14"
																},
																"nativeSrc": "7204:10:14",
																"nodeType": "YulFunctionCall",
																"src": "7204:10:14"
															},
															"nativeSrc": "7201:36:14",
															"nodeType": "YulIf",
															"src": "7201:36:14"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7053:191:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7084:1:14",
														"nodeType": "YulTypedName",
														"src": "7084:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7087:1:14",
														"nodeType": "YulTypedName",
														"src": "7087:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7093:3:14",
														"nodeType": "YulTypedName",
														"src": "7093:3:14",
														"type": ""
													}
												],
												"src": "7053:191:14"
											},
											{
												"body": {
													"nativeSrc": "7356:118:14",
													"nodeType": "YulBlock",
													"src": "7356:118:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7378:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7378:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7386:1:14",
																				"nodeType": "YulLiteral",
																				"src": "7386:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7374:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7374:3:14"
																		},
																		"nativeSrc": "7374:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7374:14:14"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "7390:34:14",
																		"nodeType": "YulLiteral",
																		"src": "7390:34:14",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7367:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7367:6:14"
																},
																"nativeSrc": "7367:58:14",
																"nodeType": "YulFunctionCall",
																"src": "7367:58:14"
															},
															"nativeSrc": "7367:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "7367:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7446:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7446:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7454:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7454:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7442:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7442:3:14"
																		},
																		"nativeSrc": "7442:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7442:15:14"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "7459:7:14",
																		"nodeType": "YulLiteral",
																		"src": "7459:7:14",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7435:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7435:6:14"
																},
																"nativeSrc": "7435:32:14",
																"nodeType": "YulFunctionCall",
																"src": "7435:32:14"
															},
															"nativeSrc": "7435:32:14",
															"nodeType": "YulExpressionStatement",
															"src": "7435:32:14"
														}
													]
												},
												"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
												"nativeSrc": "7250:224:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7348:6:14",
														"nodeType": "YulTypedName",
														"src": "7348:6:14",
														"type": ""
													}
												],
												"src": "7250:224:14"
											},
											{
												"body": {
													"nativeSrc": "7626:220:14",
													"nodeType": "YulBlock",
													"src": "7626:220:14",
													"statements": [
														{
															"nativeSrc": "7636:74:14",
															"nodeType": "YulAssignment",
															"src": "7636:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7702:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7702:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7707:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7707:2:14",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7643:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "7643:58:14"
																},
																"nativeSrc": "7643:67:14",
																"nodeType": "YulFunctionCall",
																"src": "7643:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7636:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7636:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7808:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7808:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																	"nativeSrc": "7719:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "7719:88:14"
																},
																"nativeSrc": "7719:93:14",
																"nodeType": "YulFunctionCall",
																"src": "7719:93:14"
															},
															"nativeSrc": "7719:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "7719:93:14"
														},
														{
															"nativeSrc": "7821:19:14",
															"nodeType": "YulAssignment",
															"src": "7821:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7832:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7832:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7837:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7837:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7828:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7828:3:14"
																},
																"nativeSrc": "7828:12:14",
																"nodeType": "YulFunctionCall",
																"src": "7828:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7821:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7821:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7480:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7614:3:14",
														"nodeType": "YulTypedName",
														"src": "7614:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7622:3:14",
														"nodeType": "YulTypedName",
														"src": "7622:3:14",
														"type": ""
													}
												],
												"src": "7480:366:14"
											},
											{
												"body": {
													"nativeSrc": "8023:248:14",
													"nodeType": "YulBlock",
													"src": "8023:248:14",
													"statements": [
														{
															"nativeSrc": "8033:26:14",
															"nodeType": "YulAssignment",
															"src": "8033:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8045:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8045:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8056:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8056:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8041:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8041:3:14"
																},
																"nativeSrc": "8041:18:14",
																"nodeType": "YulFunctionCall",
																"src": "8041:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8033:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8033:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8080:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8080:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8091:1:14",
																				"nodeType": "YulLiteral",
																				"src": "8091:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8076:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8076:3:14"
																		},
																		"nativeSrc": "8076:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8076:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8099:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "8099:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8105:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8105:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8095:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8095:3:14"
																		},
																		"nativeSrc": "8095:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8095:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8069:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8069:6:14"
																},
																"nativeSrc": "8069:47:14",
																"nodeType": "YulFunctionCall",
																"src": "8069:47:14"
															},
															"nativeSrc": "8069:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "8069:47:14"
														},
														{
															"nativeSrc": "8125:139:14",
															"nodeType": "YulAssignment",
															"src": "8125:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8259:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "8259:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8133:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "8133:124:14"
																},
																"nativeSrc": "8133:131:14",
																"nodeType": "YulFunctionCall",
																"src": "8133:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8125:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8125:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7852:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8003:9:14",
														"nodeType": "YulTypedName",
														"src": "8003:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8018:4:14",
														"nodeType": "YulTypedName",
														"src": "8018:4:14",
														"type": ""
													}
												],
												"src": "7852:419:14"
											},
											{
												"body": {
													"nativeSrc": "8383:119:14",
													"nodeType": "YulBlock",
													"src": "8383:119:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8405:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8405:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8413:1:14",
																				"nodeType": "YulLiteral",
																				"src": "8413:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8401:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8401:3:14"
																		},
																		"nativeSrc": "8401:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8401:14:14"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "8417:34:14",
																		"nodeType": "YulLiteral",
																		"src": "8417:34:14",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8394:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8394:6:14"
																},
																"nativeSrc": "8394:58:14",
																"nodeType": "YulFunctionCall",
																"src": "8394:58:14"
															},
															"nativeSrc": "8394:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "8394:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8473:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8473:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8481:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8481:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8469:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8469:3:14"
																		},
																		"nativeSrc": "8469:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8469:15:14"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "8486:8:14",
																		"nodeType": "YulLiteral",
																		"src": "8486:8:14",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8462:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8462:6:14"
																},
																"nativeSrc": "8462:33:14",
																"nodeType": "YulFunctionCall",
																"src": "8462:33:14"
															},
															"nativeSrc": "8462:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "8462:33:14"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nativeSrc": "8277:225:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8375:6:14",
														"nodeType": "YulTypedName",
														"src": "8375:6:14",
														"type": ""
													}
												],
												"src": "8277:225:14"
											},
											{
												"body": {
													"nativeSrc": "8654:220:14",
													"nodeType": "YulBlock",
													"src": "8654:220:14",
													"statements": [
														{
															"nativeSrc": "8664:74:14",
															"nodeType": "YulAssignment",
															"src": "8664:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8730:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8730:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8735:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8735:2:14",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8671:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "8671:58:14"
																},
																"nativeSrc": "8671:67:14",
																"nodeType": "YulFunctionCall",
																"src": "8671:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8664:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8664:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8836:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8836:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nativeSrc": "8747:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "8747:88:14"
																},
																"nativeSrc": "8747:93:14",
																"nodeType": "YulFunctionCall",
																"src": "8747:93:14"
															},
															"nativeSrc": "8747:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "8747:93:14"
														},
														{
															"nativeSrc": "8849:19:14",
															"nodeType": "YulAssignment",
															"src": "8849:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8860:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8860:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8865:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8865:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8856:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8856:3:14"
																},
																"nativeSrc": "8856:12:14",
																"nodeType": "YulFunctionCall",
																"src": "8856:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8849:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8849:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8508:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8642:3:14",
														"nodeType": "YulTypedName",
														"src": "8642:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8650:3:14",
														"nodeType": "YulTypedName",
														"src": "8650:3:14",
														"type": ""
													}
												],
												"src": "8508:366:14"
											},
											{
												"body": {
													"nativeSrc": "9051:248:14",
													"nodeType": "YulBlock",
													"src": "9051:248:14",
													"statements": [
														{
															"nativeSrc": "9061:26:14",
															"nodeType": "YulAssignment",
															"src": "9061:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9073:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9073:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9084:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9084:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9069:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9069:3:14"
																},
																"nativeSrc": "9069:18:14",
																"nodeType": "YulFunctionCall",
																"src": "9069:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9061:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9061:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9108:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9108:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9119:1:14",
																				"nodeType": "YulLiteral",
																				"src": "9119:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9104:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9104:3:14"
																		},
																		"nativeSrc": "9104:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9104:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9127:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "9127:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9133:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9133:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9123:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9123:3:14"
																		},
																		"nativeSrc": "9123:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9123:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9097:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9097:6:14"
																},
																"nativeSrc": "9097:47:14",
																"nodeType": "YulFunctionCall",
																"src": "9097:47:14"
															},
															"nativeSrc": "9097:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "9097:47:14"
														},
														{
															"nativeSrc": "9153:139:14",
															"nodeType": "YulAssignment",
															"src": "9153:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9287:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "9287:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9161:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "9161:124:14"
																},
																"nativeSrc": "9161:131:14",
																"nodeType": "YulFunctionCall",
																"src": "9161:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9153:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9153:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8880:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9031:9:14",
														"nodeType": "YulTypedName",
														"src": "9031:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9046:4:14",
														"nodeType": "YulTypedName",
														"src": "9046:4:14",
														"type": ""
													}
												],
												"src": "8880:419:14"
											},
											{
												"body": {
													"nativeSrc": "9411:117:14",
													"nodeType": "YulBlock",
													"src": "9411:117:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9433:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9433:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9441:1:14",
																				"nodeType": "YulLiteral",
																				"src": "9441:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9429:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9429:3:14"
																		},
																		"nativeSrc": "9429:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9429:14:14"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "9445:34:14",
																		"nodeType": "YulLiteral",
																		"src": "9445:34:14",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9422:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9422:6:14"
																},
																"nativeSrc": "9422:58:14",
																"nodeType": "YulFunctionCall",
																"src": "9422:58:14"
															},
															"nativeSrc": "9422:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "9422:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9501:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9501:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9509:2:14",
																				"nodeType": "YulLiteral",
																				"src": "9509:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9497:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9497:3:14"
																		},
																		"nativeSrc": "9497:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9497:15:14"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "9514:6:14",
																		"nodeType": "YulLiteral",
																		"src": "9514:6:14",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9490:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9490:6:14"
																},
																"nativeSrc": "9490:31:14",
																"nodeType": "YulFunctionCall",
																"src": "9490:31:14"
															},
															"nativeSrc": "9490:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "9490:31:14"
														}
													]
												},
												"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
												"nativeSrc": "9305:223:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9403:6:14",
														"nodeType": "YulTypedName",
														"src": "9403:6:14",
														"type": ""
													}
												],
												"src": "9305:223:14"
											},
											{
												"body": {
													"nativeSrc": "9680:220:14",
													"nodeType": "YulBlock",
													"src": "9680:220:14",
													"statements": [
														{
															"nativeSrc": "9690:74:14",
															"nodeType": "YulAssignment",
															"src": "9690:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9756:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9756:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9761:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9761:2:14",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9697:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "9697:58:14"
																},
																"nativeSrc": "9697:67:14",
																"nodeType": "YulFunctionCall",
																"src": "9697:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9690:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9690:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9862:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9862:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																	"nativeSrc": "9773:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "9773:88:14"
																},
																"nativeSrc": "9773:93:14",
																"nodeType": "YulFunctionCall",
																"src": "9773:93:14"
															},
															"nativeSrc": "9773:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "9773:93:14"
														},
														{
															"nativeSrc": "9875:19:14",
															"nodeType": "YulAssignment",
															"src": "9875:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9886:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9886:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9891:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9891:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9882:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9882:3:14"
																},
																"nativeSrc": "9882:12:14",
																"nodeType": "YulFunctionCall",
																"src": "9882:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9875:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9875:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9534:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9668:3:14",
														"nodeType": "YulTypedName",
														"src": "9668:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9676:3:14",
														"nodeType": "YulTypedName",
														"src": "9676:3:14",
														"type": ""
													}
												],
												"src": "9534:366:14"
											},
											{
												"body": {
													"nativeSrc": "10077:248:14",
													"nodeType": "YulBlock",
													"src": "10077:248:14",
													"statements": [
														{
															"nativeSrc": "10087:26:14",
															"nodeType": "YulAssignment",
															"src": "10087:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10099:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "10099:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10110:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10110:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10095:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10095:3:14"
																},
																"nativeSrc": "10095:18:14",
																"nodeType": "YulFunctionCall",
																"src": "10095:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10087:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "10087:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10134:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10134:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10145:1:14",
																				"nodeType": "YulLiteral",
																				"src": "10145:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10130:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10130:3:14"
																		},
																		"nativeSrc": "10130:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10130:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10153:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "10153:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10159:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10159:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10149:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10149:3:14"
																		},
																		"nativeSrc": "10149:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10149:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10123:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10123:6:14"
																},
																"nativeSrc": "10123:47:14",
																"nodeType": "YulFunctionCall",
																"src": "10123:47:14"
															},
															"nativeSrc": "10123:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "10123:47:14"
														},
														{
															"nativeSrc": "10179:139:14",
															"nodeType": "YulAssignment",
															"src": "10179:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10313:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "10313:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10187:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "10187:124:14"
																},
																"nativeSrc": "10187:131:14",
																"nodeType": "YulFunctionCall",
																"src": "10187:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10179:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "10179:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9906:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10057:9:14",
														"nodeType": "YulTypedName",
														"src": "10057:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10072:4:14",
														"nodeType": "YulTypedName",
														"src": "10072:4:14",
														"type": ""
													}
												],
												"src": "9906:419:14"
											},
											{
												"body": {
													"nativeSrc": "10437:115:14",
													"nodeType": "YulBlock",
													"src": "10437:115:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10459:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10459:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10467:1:14",
																				"nodeType": "YulLiteral",
																				"src": "10467:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10455:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10455:3:14"
																		},
																		"nativeSrc": "10455:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10455:14:14"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "10471:34:14",
																		"nodeType": "YulLiteral",
																		"src": "10471:34:14",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10448:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10448:6:14"
																},
																"nativeSrc": "10448:58:14",
																"nodeType": "YulFunctionCall",
																"src": "10448:58:14"
															},
															"nativeSrc": "10448:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "10448:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10527:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10527:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10535:2:14",
																				"nodeType": "YulLiteral",
																				"src": "10535:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10523:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10523:3:14"
																		},
																		"nativeSrc": "10523:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10523:15:14"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "10540:4:14",
																		"nodeType": "YulLiteral",
																		"src": "10540:4:14",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10516:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10516:6:14"
																},
																"nativeSrc": "10516:29:14",
																"nodeType": "YulFunctionCall",
																"src": "10516:29:14"
															},
															"nativeSrc": "10516:29:14",
															"nodeType": "YulExpressionStatement",
															"src": "10516:29:14"
														}
													]
												},
												"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
												"nativeSrc": "10331:221:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10429:6:14",
														"nodeType": "YulTypedName",
														"src": "10429:6:14",
														"type": ""
													}
												],
												"src": "10331:221:14"
											},
											{
												"body": {
													"nativeSrc": "10704:220:14",
													"nodeType": "YulBlock",
													"src": "10704:220:14",
													"statements": [
														{
															"nativeSrc": "10714:74:14",
															"nodeType": "YulAssignment",
															"src": "10714:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10780:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "10780:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10785:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10785:2:14",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10721:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "10721:58:14"
																},
																"nativeSrc": "10721:67:14",
																"nodeType": "YulFunctionCall",
																"src": "10721:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10714:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10714:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10886:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "10886:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																	"nativeSrc": "10797:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "10797:88:14"
																},
																"nativeSrc": "10797:93:14",
																"nodeType": "YulFunctionCall",
																"src": "10797:93:14"
															},
															"nativeSrc": "10797:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "10797:93:14"
														},
														{
															"nativeSrc": "10899:19:14",
															"nodeType": "YulAssignment",
															"src": "10899:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10910:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "10910:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10915:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10915:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10906:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10906:3:14"
																},
																"nativeSrc": "10906:12:14",
																"nodeType": "YulFunctionCall",
																"src": "10906:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10899:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10899:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10558:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10692:3:14",
														"nodeType": "YulTypedName",
														"src": "10692:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10700:3:14",
														"nodeType": "YulTypedName",
														"src": "10700:3:14",
														"type": ""
													}
												],
												"src": "10558:366:14"
											},
											{
												"body": {
													"nativeSrc": "11101:248:14",
													"nodeType": "YulBlock",
													"src": "11101:248:14",
													"statements": [
														{
															"nativeSrc": "11111:26:14",
															"nodeType": "YulAssignment",
															"src": "11111:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11123:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "11123:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11134:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11134:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11119:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11119:3:14"
																},
																"nativeSrc": "11119:18:14",
																"nodeType": "YulFunctionCall",
																"src": "11119:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11111:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "11111:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11158:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11158:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11169:1:14",
																				"nodeType": "YulLiteral",
																				"src": "11169:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11154:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11154:3:14"
																		},
																		"nativeSrc": "11154:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11154:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11177:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "11177:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11183:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11183:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11173:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11173:3:14"
																		},
																		"nativeSrc": "11173:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11173:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11147:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11147:6:14"
																},
																"nativeSrc": "11147:47:14",
																"nodeType": "YulFunctionCall",
																"src": "11147:47:14"
															},
															"nativeSrc": "11147:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "11147:47:14"
														},
														{
															"nativeSrc": "11203:139:14",
															"nodeType": "YulAssignment",
															"src": "11203:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11337:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "11337:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11211:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "11211:124:14"
																},
																"nativeSrc": "11211:131:14",
																"nodeType": "YulFunctionCall",
																"src": "11211:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11203:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "11203:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10930:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11081:9:14",
														"nodeType": "YulTypedName",
														"src": "11081:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11096:4:14",
														"nodeType": "YulTypedName",
														"src": "11096:4:14",
														"type": ""
													}
												],
												"src": "10930:419:14"
											},
											{
												"body": {
													"nativeSrc": "11461:73:14",
													"nodeType": "YulBlock",
													"src": "11461:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11483:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "11483:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11491:1:14",
																				"nodeType": "YulLiteral",
																				"src": "11491:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11479:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11479:3:14"
																		},
																		"nativeSrc": "11479:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11479:14:14"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "11495:31:14",
																		"nodeType": "YulLiteral",
																		"src": "11495:31:14",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11472:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11472:6:14"
																},
																"nativeSrc": "11472:55:14",
																"nodeType": "YulFunctionCall",
																"src": "11472:55:14"
															},
															"nativeSrc": "11472:55:14",
															"nodeType": "YulExpressionStatement",
															"src": "11472:55:14"
														}
													]
												},
												"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
												"nativeSrc": "11355:179:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11453:6:14",
														"nodeType": "YulTypedName",
														"src": "11453:6:14",
														"type": ""
													}
												],
												"src": "11355:179:14"
											},
											{
												"body": {
													"nativeSrc": "11686:220:14",
													"nodeType": "YulBlock",
													"src": "11686:220:14",
													"statements": [
														{
															"nativeSrc": "11696:74:14",
															"nodeType": "YulAssignment",
															"src": "11696:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11762:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "11762:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11767:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11767:2:14",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11703:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "11703:58:14"
																},
																"nativeSrc": "11703:67:14",
																"nodeType": "YulFunctionCall",
																"src": "11703:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11696:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11696:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11868:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "11868:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																	"nativeSrc": "11779:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "11779:88:14"
																},
																"nativeSrc": "11779:93:14",
																"nodeType": "YulFunctionCall",
																"src": "11779:93:14"
															},
															"nativeSrc": "11779:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "11779:93:14"
														},
														{
															"nativeSrc": "11881:19:14",
															"nodeType": "YulAssignment",
															"src": "11881:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11892:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "11892:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11897:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11897:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11888:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11888:3:14"
																},
																"nativeSrc": "11888:12:14",
																"nodeType": "YulFunctionCall",
																"src": "11888:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11881:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11881:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11540:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11674:3:14",
														"nodeType": "YulTypedName",
														"src": "11674:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11682:3:14",
														"nodeType": "YulTypedName",
														"src": "11682:3:14",
														"type": ""
													}
												],
												"src": "11540:366:14"
											},
											{
												"body": {
													"nativeSrc": "12083:248:14",
													"nodeType": "YulBlock",
													"src": "12083:248:14",
													"statements": [
														{
															"nativeSrc": "12093:26:14",
															"nodeType": "YulAssignment",
															"src": "12093:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12105:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "12105:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12116:2:14",
																		"nodeType": "YulLiteral",
																		"src": "12116:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12101:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12101:3:14"
																},
																"nativeSrc": "12101:18:14",
																"nodeType": "YulFunctionCall",
																"src": "12101:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12093:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "12093:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12140:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "12140:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12151:1:14",
																				"nodeType": "YulLiteral",
																				"src": "12151:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12136:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12136:3:14"
																		},
																		"nativeSrc": "12136:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12136:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12159:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "12159:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12165:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "12165:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12155:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12155:3:14"
																		},
																		"nativeSrc": "12155:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12155:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12129:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12129:6:14"
																},
																"nativeSrc": "12129:47:14",
																"nodeType": "YulFunctionCall",
																"src": "12129:47:14"
															},
															"nativeSrc": "12129:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "12129:47:14"
														},
														{
															"nativeSrc": "12185:139:14",
															"nodeType": "YulAssignment",
															"src": "12185:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12319:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "12319:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12193:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "12193:124:14"
																},
																"nativeSrc": "12193:131:14",
																"nodeType": "YulFunctionCall",
																"src": "12193:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12185:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "12185:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11912:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12063:9:14",
														"nodeType": "YulTypedName",
														"src": "12063:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12078:4:14",
														"nodeType": "YulTypedName",
														"src": "12078:4:14",
														"type": ""
													}
												],
												"src": "11912:419:14"
											},
											{
												"body": {
													"nativeSrc": "12443:118:14",
													"nodeType": "YulBlock",
													"src": "12443:118:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12465:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12465:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12473:1:14",
																				"nodeType": "YulLiteral",
																				"src": "12473:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12461:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12461:3:14"
																		},
																		"nativeSrc": "12461:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12461:14:14"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "12477:34:14",
																		"nodeType": "YulLiteral",
																		"src": "12477:34:14",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12454:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12454:6:14"
																},
																"nativeSrc": "12454:58:14",
																"nodeType": "YulFunctionCall",
																"src": "12454:58:14"
															},
															"nativeSrc": "12454:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "12454:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12533:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12533:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12541:2:14",
																				"nodeType": "YulLiteral",
																				"src": "12541:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12529:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12529:3:14"
																		},
																		"nativeSrc": "12529:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12529:15:14"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "12546:7:14",
																		"nodeType": "YulLiteral",
																		"src": "12546:7:14",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12522:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12522:6:14"
																},
																"nativeSrc": "12522:32:14",
																"nodeType": "YulFunctionCall",
																"src": "12522:32:14"
															},
															"nativeSrc": "12522:32:14",
															"nodeType": "YulExpressionStatement",
															"src": "12522:32:14"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nativeSrc": "12337:224:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12435:6:14",
														"nodeType": "YulTypedName",
														"src": "12435:6:14",
														"type": ""
													}
												],
												"src": "12337:224:14"
											},
											{
												"body": {
													"nativeSrc": "12713:220:14",
													"nodeType": "YulBlock",
													"src": "12713:220:14",
													"statements": [
														{
															"nativeSrc": "12723:74:14",
															"nodeType": "YulAssignment",
															"src": "12723:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12789:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12789:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12794:2:14",
																		"nodeType": "YulLiteral",
																		"src": "12794:2:14",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12730:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "12730:58:14"
																},
																"nativeSrc": "12730:67:14",
																"nodeType": "YulFunctionCall",
																"src": "12730:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12723:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12723:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12895:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12895:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nativeSrc": "12806:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "12806:88:14"
																},
																"nativeSrc": "12806:93:14",
																"nodeType": "YulFunctionCall",
																"src": "12806:93:14"
															},
															"nativeSrc": "12806:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "12806:93:14"
														},
														{
															"nativeSrc": "12908:19:14",
															"nodeType": "YulAssignment",
															"src": "12908:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12919:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12919:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12924:2:14",
																		"nodeType": "YulLiteral",
																		"src": "12924:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12915:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12915:3:14"
																},
																"nativeSrc": "12915:12:14",
																"nodeType": "YulFunctionCall",
																"src": "12915:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12908:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12908:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12567:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12701:3:14",
														"nodeType": "YulTypedName",
														"src": "12701:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12709:3:14",
														"nodeType": "YulTypedName",
														"src": "12709:3:14",
														"type": ""
													}
												],
												"src": "12567:366:14"
											},
											{
												"body": {
													"nativeSrc": "13110:248:14",
													"nodeType": "YulBlock",
													"src": "13110:248:14",
													"statements": [
														{
															"nativeSrc": "13120:26:14",
															"nodeType": "YulAssignment",
															"src": "13120:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13132:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "13132:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13143:2:14",
																		"nodeType": "YulLiteral",
																		"src": "13143:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13128:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13128:3:14"
																},
																"nativeSrc": "13128:18:14",
																"nodeType": "YulFunctionCall",
																"src": "13128:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13120:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "13120:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13167:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13167:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13178:1:14",
																				"nodeType": "YulLiteral",
																				"src": "13178:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13163:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13163:3:14"
																		},
																		"nativeSrc": "13163:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13163:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13186:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "13186:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13192:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13192:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13182:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13182:3:14"
																		},
																		"nativeSrc": "13182:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13182:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13156:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "13156:6:14"
																},
																"nativeSrc": "13156:47:14",
																"nodeType": "YulFunctionCall",
																"src": "13156:47:14"
															},
															"nativeSrc": "13156:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "13156:47:14"
														},
														{
															"nativeSrc": "13212:139:14",
															"nodeType": "YulAssignment",
															"src": "13212:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13346:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "13346:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13220:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "13220:124:14"
																},
																"nativeSrc": "13220:131:14",
																"nodeType": "YulFunctionCall",
																"src": "13220:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13212:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "13212:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12939:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13090:9:14",
														"nodeType": "YulTypedName",
														"src": "13090:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13105:4:14",
														"nodeType": "YulTypedName",
														"src": "13105:4:14",
														"type": ""
													}
												],
												"src": "12939:419:14"
											},
											{
												"body": {
													"nativeSrc": "13470:116:14",
													"nodeType": "YulBlock",
													"src": "13470:116:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13492:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "13492:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13500:1:14",
																				"nodeType": "YulLiteral",
																				"src": "13500:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13488:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13488:3:14"
																		},
																		"nativeSrc": "13488:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13488:14:14"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "13504:34:14",
																		"nodeType": "YulLiteral",
																		"src": "13504:34:14",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13481:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "13481:6:14"
																},
																"nativeSrc": "13481:58:14",
																"nodeType": "YulFunctionCall",
																"src": "13481:58:14"
															},
															"nativeSrc": "13481:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "13481:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13560:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "13560:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13568:2:14",
																				"nodeType": "YulLiteral",
																				"src": "13568:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13556:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13556:3:14"
																		},
																		"nativeSrc": "13556:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13556:15:14"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "13573:5:14",
																		"nodeType": "YulLiteral",
																		"src": "13573:5:14",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13549:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "13549:6:14"
																},
																"nativeSrc": "13549:30:14",
																"nodeType": "YulFunctionCall",
																"src": "13549:30:14"
															},
															"nativeSrc": "13549:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "13549:30:14"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nativeSrc": "13364:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13462:6:14",
														"nodeType": "YulTypedName",
														"src": "13462:6:14",
														"type": ""
													}
												],
												"src": "13364:222:14"
											},
											{
												"body": {
													"nativeSrc": "13738:220:14",
													"nodeType": "YulBlock",
													"src": "13738:220:14",
													"statements": [
														{
															"nativeSrc": "13748:74:14",
															"nodeType": "YulAssignment",
															"src": "13748:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13814:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "13814:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13819:2:14",
																		"nodeType": "YulLiteral",
																		"src": "13819:2:14",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13755:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "13755:58:14"
																},
																"nativeSrc": "13755:67:14",
																"nodeType": "YulFunctionCall",
																"src": "13755:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13748:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13748:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13920:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "13920:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nativeSrc": "13831:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "13831:88:14"
																},
																"nativeSrc": "13831:93:14",
																"nodeType": "YulFunctionCall",
																"src": "13831:93:14"
															},
															"nativeSrc": "13831:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "13831:93:14"
														},
														{
															"nativeSrc": "13933:19:14",
															"nodeType": "YulAssignment",
															"src": "13933:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13944:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "13944:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13949:2:14",
																		"nodeType": "YulLiteral",
																		"src": "13949:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13940:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13940:3:14"
																},
																"nativeSrc": "13940:12:14",
																"nodeType": "YulFunctionCall",
																"src": "13940:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13933:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13933:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13592:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13726:3:14",
														"nodeType": "YulTypedName",
														"src": "13726:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13734:3:14",
														"nodeType": "YulTypedName",
														"src": "13734:3:14",
														"type": ""
													}
												],
												"src": "13592:366:14"
											},
											{
												"body": {
													"nativeSrc": "14135:248:14",
													"nodeType": "YulBlock",
													"src": "14135:248:14",
													"statements": [
														{
															"nativeSrc": "14145:26:14",
															"nodeType": "YulAssignment",
															"src": "14145:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14157:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "14157:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14168:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14168:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14153:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14153:3:14"
																},
																"nativeSrc": "14153:18:14",
																"nodeType": "YulFunctionCall",
																"src": "14153:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14145:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "14145:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14192:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14192:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14203:1:14",
																				"nodeType": "YulLiteral",
																				"src": "14203:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14188:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14188:3:14"
																		},
																		"nativeSrc": "14188:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14188:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14211:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "14211:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14217:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14217:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14207:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14207:3:14"
																		},
																		"nativeSrc": "14207:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14207:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14181:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14181:6:14"
																},
																"nativeSrc": "14181:47:14",
																"nodeType": "YulFunctionCall",
																"src": "14181:47:14"
															},
															"nativeSrc": "14181:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "14181:47:14"
														},
														{
															"nativeSrc": "14237:139:14",
															"nodeType": "YulAssignment",
															"src": "14237:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14371:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "14371:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14245:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "14245:124:14"
																},
																"nativeSrc": "14245:131:14",
																"nodeType": "YulFunctionCall",
																"src": "14245:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14237:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "14237:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13964:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14115:9:14",
														"nodeType": "YulTypedName",
														"src": "14115:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14130:4:14",
														"nodeType": "YulTypedName",
														"src": "14130:4:14",
														"type": ""
													}
												],
												"src": "13964:419:14"
											},
											{
												"body": {
													"nativeSrc": "14495:119:14",
													"nodeType": "YulBlock",
													"src": "14495:119:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14517:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "14517:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14525:1:14",
																				"nodeType": "YulLiteral",
																				"src": "14525:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14513:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14513:3:14"
																		},
																		"nativeSrc": "14513:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14513:14:14"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "14529:34:14",
																		"nodeType": "YulLiteral",
																		"src": "14529:34:14",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14506:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14506:6:14"
																},
																"nativeSrc": "14506:58:14",
																"nodeType": "YulFunctionCall",
																"src": "14506:58:14"
															},
															"nativeSrc": "14506:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "14506:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14585:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "14585:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14593:2:14",
																				"nodeType": "YulLiteral",
																				"src": "14593:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14581:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14581:3:14"
																		},
																		"nativeSrc": "14581:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14581:15:14"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "14598:8:14",
																		"nodeType": "YulLiteral",
																		"src": "14598:8:14",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14574:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14574:6:14"
																},
																"nativeSrc": "14574:33:14",
																"nodeType": "YulFunctionCall",
																"src": "14574:33:14"
															},
															"nativeSrc": "14574:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "14574:33:14"
														}
													]
												},
												"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
												"nativeSrc": "14389:225:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14487:6:14",
														"nodeType": "YulTypedName",
														"src": "14487:6:14",
														"type": ""
													}
												],
												"src": "14389:225:14"
											},
											{
												"body": {
													"nativeSrc": "14766:220:14",
													"nodeType": "YulBlock",
													"src": "14766:220:14",
													"statements": [
														{
															"nativeSrc": "14776:74:14",
															"nodeType": "YulAssignment",
															"src": "14776:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14842:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14842:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14847:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14847:2:14",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14783:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "14783:58:14"
																},
																"nativeSrc": "14783:67:14",
																"nodeType": "YulFunctionCall",
																"src": "14783:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14776:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14776:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14948:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14948:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"nativeSrc": "14859:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "14859:88:14"
																},
																"nativeSrc": "14859:93:14",
																"nodeType": "YulFunctionCall",
																"src": "14859:93:14"
															},
															"nativeSrc": "14859:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "14859:93:14"
														},
														{
															"nativeSrc": "14961:19:14",
															"nodeType": "YulAssignment",
															"src": "14961:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14972:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14972:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14977:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14977:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14968:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14968:3:14"
																},
																"nativeSrc": "14968:12:14",
																"nodeType": "YulFunctionCall",
																"src": "14968:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14961:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14961:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14620:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14754:3:14",
														"nodeType": "YulTypedName",
														"src": "14754:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14762:3:14",
														"nodeType": "YulTypedName",
														"src": "14762:3:14",
														"type": ""
													}
												],
												"src": "14620:366:14"
											},
											{
												"body": {
													"nativeSrc": "15163:248:14",
													"nodeType": "YulBlock",
													"src": "15163:248:14",
													"statements": [
														{
															"nativeSrc": "15173:26:14",
															"nodeType": "YulAssignment",
															"src": "15173:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15185:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "15185:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15196:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15196:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15181:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15181:3:14"
																},
																"nativeSrc": "15181:18:14",
																"nodeType": "YulFunctionCall",
																"src": "15181:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15173:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15173:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15220:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "15220:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15231:1:14",
																				"nodeType": "YulLiteral",
																				"src": "15231:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15216:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15216:3:14"
																		},
																		"nativeSrc": "15216:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15216:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15239:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "15239:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15245:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "15245:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15235:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15235:3:14"
																		},
																		"nativeSrc": "15235:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15235:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15209:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15209:6:14"
																},
																"nativeSrc": "15209:47:14",
																"nodeType": "YulFunctionCall",
																"src": "15209:47:14"
															},
															"nativeSrc": "15209:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "15209:47:14"
														},
														{
															"nativeSrc": "15265:139:14",
															"nodeType": "YulAssignment",
															"src": "15265:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15399:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "15399:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15273:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "15273:124:14"
																},
																"nativeSrc": "15273:131:14",
																"nodeType": "YulFunctionCall",
																"src": "15273:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15265:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15265:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14992:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15143:9:14",
														"nodeType": "YulTypedName",
														"src": "15143:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15158:4:14",
														"nodeType": "YulTypedName",
														"src": "15158:4:14",
														"type": ""
													}
												],
												"src": "14992:419:14"
											},
											{
												"body": {
													"nativeSrc": "15523:76:14",
													"nodeType": "YulBlock",
													"src": "15523:76:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15545:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "15545:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15553:1:14",
																				"nodeType": "YulLiteral",
																				"src": "15553:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15541:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15541:3:14"
																		},
																		"nativeSrc": "15541:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15541:14:14"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "15557:34:14",
																		"nodeType": "YulLiteral",
																		"src": "15557:34:14",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15534:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15534:6:14"
																},
																"nativeSrc": "15534:58:14",
																"nodeType": "YulFunctionCall",
																"src": "15534:58:14"
															},
															"nativeSrc": "15534:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "15534:58:14"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nativeSrc": "15417:182:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15515:6:14",
														"nodeType": "YulTypedName",
														"src": "15515:6:14",
														"type": ""
													}
												],
												"src": "15417:182:14"
											},
											{
												"body": {
													"nativeSrc": "15751:220:14",
													"nodeType": "YulBlock",
													"src": "15751:220:14",
													"statements": [
														{
															"nativeSrc": "15761:74:14",
															"nodeType": "YulAssignment",
															"src": "15761:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15827:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15827:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15832:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15832:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15768:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "15768:58:14"
																},
																"nativeSrc": "15768:67:14",
																"nodeType": "YulFunctionCall",
																"src": "15768:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15761:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15761:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15933:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15933:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nativeSrc": "15844:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "15844:88:14"
																},
																"nativeSrc": "15844:93:14",
																"nodeType": "YulFunctionCall",
																"src": "15844:93:14"
															},
															"nativeSrc": "15844:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "15844:93:14"
														},
														{
															"nativeSrc": "15946:19:14",
															"nodeType": "YulAssignment",
															"src": "15946:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15957:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15957:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15962:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15962:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15953:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15953:3:14"
																},
																"nativeSrc": "15953:12:14",
																"nodeType": "YulFunctionCall",
																"src": "15953:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15946:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15946:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15605:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15739:3:14",
														"nodeType": "YulTypedName",
														"src": "15739:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15747:3:14",
														"nodeType": "YulTypedName",
														"src": "15747:3:14",
														"type": ""
													}
												],
												"src": "15605:366:14"
											},
											{
												"body": {
													"nativeSrc": "16148:248:14",
													"nodeType": "YulBlock",
													"src": "16148:248:14",
													"statements": [
														{
															"nativeSrc": "16158:26:14",
															"nodeType": "YulAssignment",
															"src": "16158:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16170:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "16170:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16181:2:14",
																		"nodeType": "YulLiteral",
																		"src": "16181:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16166:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16166:3:14"
																},
																"nativeSrc": "16166:18:14",
																"nodeType": "YulFunctionCall",
																"src": "16166:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16158:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "16158:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16205:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16205:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16216:1:14",
																				"nodeType": "YulLiteral",
																				"src": "16216:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16201:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16201:3:14"
																		},
																		"nativeSrc": "16201:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16201:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16224:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "16224:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16230:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16230:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16220:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16220:3:14"
																		},
																		"nativeSrc": "16220:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16220:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16194:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "16194:6:14"
																},
																"nativeSrc": "16194:47:14",
																"nodeType": "YulFunctionCall",
																"src": "16194:47:14"
															},
															"nativeSrc": "16194:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "16194:47:14"
														},
														{
															"nativeSrc": "16250:139:14",
															"nodeType": "YulAssignment",
															"src": "16250:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16384:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "16384:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16258:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "16258:124:14"
																},
																"nativeSrc": "16258:131:14",
																"nodeType": "YulFunctionCall",
																"src": "16258:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16250:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "16250:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15977:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16128:9:14",
														"nodeType": "YulTypedName",
														"src": "16128:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16143:4:14",
														"nodeType": "YulTypedName",
														"src": "16143:4:14",
														"type": ""
													}
												],
												"src": "15977:419:14"
											},
											{
												"body": {
													"nativeSrc": "16508:75:14",
													"nodeType": "YulBlock",
													"src": "16508:75:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16530:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "16530:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16538:1:14",
																				"nodeType": "YulLiteral",
																				"src": "16538:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16526:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16526:3:14"
																		},
																		"nativeSrc": "16526:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16526:14:14"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "16542:33:14",
																		"nodeType": "YulLiteral",
																		"src": "16542:33:14",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16519:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "16519:6:14"
																},
																"nativeSrc": "16519:57:14",
																"nodeType": "YulFunctionCall",
																"src": "16519:57:14"
															},
															"nativeSrc": "16519:57:14",
															"nodeType": "YulExpressionStatement",
															"src": "16519:57:14"
														}
													]
												},
												"name": "store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
												"nativeSrc": "16402:181:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16500:6:14",
														"nodeType": "YulTypedName",
														"src": "16500:6:14",
														"type": ""
													}
												],
												"src": "16402:181:14"
											},
											{
												"body": {
													"nativeSrc": "16735:220:14",
													"nodeType": "YulBlock",
													"src": "16735:220:14",
													"statements": [
														{
															"nativeSrc": "16745:74:14",
															"nodeType": "YulAssignment",
															"src": "16745:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16811:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "16811:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16816:2:14",
																		"nodeType": "YulLiteral",
																		"src": "16816:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16752:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "16752:58:14"
																},
																"nativeSrc": "16752:67:14",
																"nodeType": "YulFunctionCall",
																"src": "16752:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16745:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16745:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16917:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "16917:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																	"nativeSrc": "16828:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "16828:88:14"
																},
																"nativeSrc": "16828:93:14",
																"nodeType": "YulFunctionCall",
																"src": "16828:93:14"
															},
															"nativeSrc": "16828:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "16828:93:14"
														},
														{
															"nativeSrc": "16930:19:14",
															"nodeType": "YulAssignment",
															"src": "16930:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16941:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "16941:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16946:2:14",
																		"nodeType": "YulLiteral",
																		"src": "16946:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16937:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16937:3:14"
																},
																"nativeSrc": "16937:12:14",
																"nodeType": "YulFunctionCall",
																"src": "16937:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16930:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16930:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16589:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16723:3:14",
														"nodeType": "YulTypedName",
														"src": "16723:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16731:3:14",
														"nodeType": "YulTypedName",
														"src": "16731:3:14",
														"type": ""
													}
												],
												"src": "16589:366:14"
											},
											{
												"body": {
													"nativeSrc": "17132:248:14",
													"nodeType": "YulBlock",
													"src": "17132:248:14",
													"statements": [
														{
															"nativeSrc": "17142:26:14",
															"nodeType": "YulAssignment",
															"src": "17142:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17154:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "17154:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17165:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17165:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17150:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17150:3:14"
																},
																"nativeSrc": "17150:18:14",
																"nodeType": "YulFunctionCall",
																"src": "17150:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17142:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "17142:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17189:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "17189:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17200:1:14",
																				"nodeType": "YulLiteral",
																				"src": "17200:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17185:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17185:3:14"
																		},
																		"nativeSrc": "17185:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17185:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17208:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "17208:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17214:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "17214:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17204:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17204:3:14"
																		},
																		"nativeSrc": "17204:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17204:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17178:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17178:6:14"
																},
																"nativeSrc": "17178:47:14",
																"nodeType": "YulFunctionCall",
																"src": "17178:47:14"
															},
															"nativeSrc": "17178:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "17178:47:14"
														},
														{
															"nativeSrc": "17234:139:14",
															"nodeType": "YulAssignment",
															"src": "17234:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17368:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "17368:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17242:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "17242:124:14"
																},
																"nativeSrc": "17242:131:14",
																"nodeType": "YulFunctionCall",
																"src": "17242:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17234:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "17234:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16961:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17112:9:14",
														"nodeType": "YulTypedName",
														"src": "17112:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17127:4:14",
														"nodeType": "YulTypedName",
														"src": "17127:4:14",
														"type": ""
													}
												],
												"src": "16961:419:14"
											},
											{
												"body": {
													"nativeSrc": "17492:114:14",
													"nodeType": "YulBlock",
													"src": "17492:114:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17514:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "17514:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17522:1:14",
																				"nodeType": "YulLiteral",
																				"src": "17522:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17510:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17510:3:14"
																		},
																		"nativeSrc": "17510:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17510:14:14"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nativeSrc": "17526:34:14",
																		"nodeType": "YulLiteral",
																		"src": "17526:34:14",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17503:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17503:6:14"
																},
																"nativeSrc": "17503:58:14",
																"nodeType": "YulFunctionCall",
																"src": "17503:58:14"
															},
															"nativeSrc": "17503:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "17503:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17582:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "17582:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17590:2:14",
																				"nodeType": "YulLiteral",
																				"src": "17590:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17578:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17578:3:14"
																		},
																		"nativeSrc": "17578:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17578:15:14"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nativeSrc": "17595:3:14",
																		"nodeType": "YulLiteral",
																		"src": "17595:3:14",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17571:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17571:6:14"
																},
																"nativeSrc": "17571:28:14",
																"nodeType": "YulFunctionCall",
																"src": "17571:28:14"
															},
															"nativeSrc": "17571:28:14",
															"nodeType": "YulExpressionStatement",
															"src": "17571:28:14"
														}
													]
												},
												"name": "store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
												"nativeSrc": "17386:220:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17484:6:14",
														"nodeType": "YulTypedName",
														"src": "17484:6:14",
														"type": ""
													}
												],
												"src": "17386:220:14"
											},
											{
												"body": {
													"nativeSrc": "17758:220:14",
													"nodeType": "YulBlock",
													"src": "17758:220:14",
													"statements": [
														{
															"nativeSrc": "17768:74:14",
															"nodeType": "YulAssignment",
															"src": "17768:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17834:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17834:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17839:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17839:2:14",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17775:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "17775:58:14"
																},
																"nativeSrc": "17775:67:14",
																"nodeType": "YulFunctionCall",
																"src": "17775:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17768:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17768:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17940:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17940:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																	"nativeSrc": "17851:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "17851:88:14"
																},
																"nativeSrc": "17851:93:14",
																"nodeType": "YulFunctionCall",
																"src": "17851:93:14"
															},
															"nativeSrc": "17851:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "17851:93:14"
														},
														{
															"nativeSrc": "17953:19:14",
															"nodeType": "YulAssignment",
															"src": "17953:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17964:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17964:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17969:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17969:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17960:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17960:3:14"
																},
																"nativeSrc": "17960:12:14",
																"nodeType": "YulFunctionCall",
																"src": "17960:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17953:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17953:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17612:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17746:3:14",
														"nodeType": "YulTypedName",
														"src": "17746:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17754:3:14",
														"nodeType": "YulTypedName",
														"src": "17754:3:14",
														"type": ""
													}
												],
												"src": "17612:366:14"
											},
											{
												"body": {
													"nativeSrc": "18155:248:14",
													"nodeType": "YulBlock",
													"src": "18155:248:14",
													"statements": [
														{
															"nativeSrc": "18165:26:14",
															"nodeType": "YulAssignment",
															"src": "18165:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18177:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "18177:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18188:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18188:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18173:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18173:3:14"
																},
																"nativeSrc": "18173:18:14",
																"nodeType": "YulFunctionCall",
																"src": "18173:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18165:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "18165:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18212:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18212:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18223:1:14",
																				"nodeType": "YulLiteral",
																				"src": "18223:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18208:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18208:3:14"
																		},
																		"nativeSrc": "18208:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18208:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18231:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "18231:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18237:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18237:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18227:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18227:3:14"
																		},
																		"nativeSrc": "18227:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18227:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18201:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18201:6:14"
																},
																"nativeSrc": "18201:47:14",
																"nodeType": "YulFunctionCall",
																"src": "18201:47:14"
															},
															"nativeSrc": "18201:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "18201:47:14"
														},
														{
															"nativeSrc": "18257:139:14",
															"nodeType": "YulAssignment",
															"src": "18257:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18391:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "18391:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18265:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "18265:124:14"
																},
																"nativeSrc": "18265:131:14",
																"nodeType": "YulFunctionCall",
																"src": "18265:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18257:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "18257:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17984:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18135:9:14",
														"nodeType": "YulTypedName",
														"src": "18135:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18150:4:14",
														"nodeType": "YulTypedName",
														"src": "18150:4:14",
														"type": ""
													}
												],
												"src": "17984:419:14"
											},
											{
												"body": {
													"nativeSrc": "18515:115:14",
													"nodeType": "YulBlock",
													"src": "18515:115:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18537:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "18537:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18545:1:14",
																				"nodeType": "YulLiteral",
																				"src": "18545:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18533:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18533:3:14"
																		},
																		"nativeSrc": "18533:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18533:14:14"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nativeSrc": "18549:34:14",
																		"nodeType": "YulLiteral",
																		"src": "18549:34:14",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18526:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18526:6:14"
																},
																"nativeSrc": "18526:58:14",
																"nodeType": "YulFunctionCall",
																"src": "18526:58:14"
															},
															"nativeSrc": "18526:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "18526:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18605:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "18605:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18613:2:14",
																				"nodeType": "YulLiteral",
																				"src": "18613:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18601:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18601:3:14"
																		},
																		"nativeSrc": "18601:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18601:15:14"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nativeSrc": "18618:4:14",
																		"nodeType": "YulLiteral",
																		"src": "18618:4:14",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18594:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18594:6:14"
																},
																"nativeSrc": "18594:29:14",
																"nodeType": "YulFunctionCall",
																"src": "18594:29:14"
															},
															"nativeSrc": "18594:29:14",
															"nodeType": "YulExpressionStatement",
															"src": "18594:29:14"
														}
													]
												},
												"name": "store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
												"nativeSrc": "18409:221:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18507:6:14",
														"nodeType": "YulTypedName",
														"src": "18507:6:14",
														"type": ""
													}
												],
												"src": "18409:221:14"
											},
											{
												"body": {
													"nativeSrc": "18782:220:14",
													"nodeType": "YulBlock",
													"src": "18782:220:14",
													"statements": [
														{
															"nativeSrc": "18792:74:14",
															"nodeType": "YulAssignment",
															"src": "18792:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18858:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18858:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18863:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18863:2:14",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18799:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "18799:58:14"
																},
																"nativeSrc": "18799:67:14",
																"nodeType": "YulFunctionCall",
																"src": "18799:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18792:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18792:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18964:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18964:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"nativeSrc": "18875:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "18875:88:14"
																},
																"nativeSrc": "18875:93:14",
																"nodeType": "YulFunctionCall",
																"src": "18875:93:14"
															},
															"nativeSrc": "18875:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "18875:93:14"
														},
														{
															"nativeSrc": "18977:19:14",
															"nodeType": "YulAssignment",
															"src": "18977:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18988:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18988:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18993:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18993:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18984:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18984:3:14"
																},
																"nativeSrc": "18984:12:14",
																"nodeType": "YulFunctionCall",
																"src": "18984:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18977:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18977:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18636:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18770:3:14",
														"nodeType": "YulTypedName",
														"src": "18770:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18778:3:14",
														"nodeType": "YulTypedName",
														"src": "18778:3:14",
														"type": ""
													}
												],
												"src": "18636:366:14"
											},
											{
												"body": {
													"nativeSrc": "19179:248:14",
													"nodeType": "YulBlock",
													"src": "19179:248:14",
													"statements": [
														{
															"nativeSrc": "19189:26:14",
															"nodeType": "YulAssignment",
															"src": "19189:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19201:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "19201:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19212:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19212:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19197:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19197:3:14"
																},
																"nativeSrc": "19197:18:14",
																"nodeType": "YulFunctionCall",
																"src": "19197:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19189:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "19189:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19236:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "19236:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19247:1:14",
																				"nodeType": "YulLiteral",
																				"src": "19247:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19232:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19232:3:14"
																		},
																		"nativeSrc": "19232:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19232:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19255:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "19255:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19261:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "19261:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19251:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19251:3:14"
																		},
																		"nativeSrc": "19251:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19251:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19225:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "19225:6:14"
																},
																"nativeSrc": "19225:47:14",
																"nodeType": "YulFunctionCall",
																"src": "19225:47:14"
															},
															"nativeSrc": "19225:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "19225:47:14"
														},
														{
															"nativeSrc": "19281:139:14",
															"nodeType": "YulAssignment",
															"src": "19281:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19415:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "19415:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19289:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "19289:124:14"
																},
																"nativeSrc": "19289:131:14",
																"nodeType": "YulFunctionCall",
																"src": "19289:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19281:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "19281:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19008:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19159:9:14",
														"nodeType": "YulTypedName",
														"src": "19159:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19174:4:14",
														"nodeType": "YulTypedName",
														"src": "19174:4:14",
														"type": ""
													}
												],
												"src": "19008:419:14"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn from the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn amount exceeds balan\")\n\n        mstore(add(memPtr, 32), \"ce\")\n\n    }\n\n    function abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610109575f3560e01c806370a08231116100a057806395d89b411161006f57806395d89b41146102a3578063a457c2d7146102c1578063a9059cbb146102f1578063dd62ed3e14610321578063f2fde38b1461035157610109565b806370a082311461022f578063715018a61461025f57806379cc6790146102695780638da5cb5b1461028557610109565b8063313ce567116100dc578063313ce567146101a957806339509351146101c757806340c10f19146101f757806342966c681461021357610109565b806306fdde031461010d578063095ea7b31461012b57806318160ddd1461015b57806323b872dd14610179575b5f80fd5b61011561036d565b6040516101229190611130565b60405180910390f35b610145600480360381019061014091906111e1565b6103fd565b6040516101529190611239565b60405180910390f35b61016361041f565b6040516101709190611261565b60405180910390f35b610193600480360381019061018e919061127a565b610428565b6040516101a09190611239565b60405180910390f35b6101b1610456565b6040516101be91906112e5565b60405180910390f35b6101e160048036038101906101dc91906111e1565b61045e565b6040516101ee9190611239565b60405180910390f35b610211600480360381019061020c91906111e1565b610494565b005b61022d600480360381019061022891906112fe565b6104aa565b005b61024960048036038101906102449190611329565b6104be565b6040516102569190611261565b60405180910390f35b610267610503565b005b610283600480360381019061027e91906111e1565b610516565b005b61028d610536565b60405161029a9190611363565b60405180910390f35b6102ab61055e565b6040516102b89190611130565b60405180910390f35b6102db60048036038101906102d691906111e1565b6105ee565b6040516102e89190611239565b60405180910390f35b61030b600480360381019061030691906111e1565b610663565b6040516103189190611239565b60405180910390f35b61033b6004803603810190610336919061137c565b610685565b6040516103489190611261565b60405180910390f35b61036b60048036038101906103669190611329565b610707565b005b60606003805461037c906113e7565b80601f01602080910402602001604051908101604052809291908181526020018280546103a8906113e7565b80156103f35780601f106103ca576101008083540402835291602001916103f3565b820191905f5260205f20905b8154815290600101906020018083116103d657829003601f168201915b5050505050905090565b5f80610407610789565b9050610414818585610790565b600191505092915050565b5f600254905090565b5f80610432610789565b905061043f858285610953565b61044a8585856109de565b60019150509392505050565b5f6012905090565b5f80610468610789565b905061048981858561047a8589610685565b6104849190611444565b610790565b600191505092915050565b61049c610c4a565b6104a68282610cc8565b5050565b6104bb6104b5610789565b82610e16565b50565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61050b610c4a565b6105145f610fd9565b565b61052882610522610789565b83610953565b6105328282610e16565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461056d906113e7565b80601f0160208091040260200160405190810160405280929190818152602001828054610599906113e7565b80156105e45780601f106105bb576101008083540402835291602001916105e4565b820191905f5260205f20905b8154815290600101906020018083116105c757829003601f168201915b5050505050905090565b5f806105f8610789565b90505f6106058286610685565b90508381101561064a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610641906114e7565b60405180910390fd5b6106578286868403610790565b60019250505092915050565b5f8061066d610789565b905061067a8185856109de565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61070f610c4a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361077d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077490611575565b60405180910390fd5b61078681610fd9565b50565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f590611603565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361086c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086390611691565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109469190611261565b60405180910390a3505050565b5f61095e8484610685565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109d857818110156109ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c1906116f9565b60405180910390fd5b6109d78484848403610790565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4390611787565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610aba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab190611815565b60405180910390fd5b610ac583838361109c565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610b48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3f906118a3565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c319190611261565b60405180910390a3610c448484846110a1565b50505050565b610c52610789565b73ffffffffffffffffffffffffffffffffffffffff16610c70610536565b73ffffffffffffffffffffffffffffffffffffffff1614610cc6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbd9061190b565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2d90611973565b60405180910390fd5b610d415f838361109c565b8060025f828254610d529190611444565b92505081905550805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508173ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610dff9190611261565b60405180910390a3610e125f83836110a1565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7b90611a01565b60405180910390fd5b610e8f825f8361109c565b5f805f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610f12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0990611a8f565b60405180910390fd5b8181035f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508160025f82825403925050819055505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610fc19190611261565b60405180910390a3610fd4835f846110a1565b505050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156110dd5780820151818401526020810190506110c2565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611102826110a6565b61110c81856110b0565b935061111c8185602086016110c0565b611125816110e8565b840191505092915050565b5f6020820190508181035f83015261114881846110f8565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61117d82611154565b9050919050565b61118d81611173565b8114611197575f80fd5b50565b5f813590506111a881611184565b92915050565b5f819050919050565b6111c0816111ae565b81146111ca575f80fd5b50565b5f813590506111db816111b7565b92915050565b5f80604083850312156111f7576111f6611150565b5b5f6112048582860161119a565b9250506020611215858286016111cd565b9150509250929050565b5f8115159050919050565b6112338161121f565b82525050565b5f60208201905061124c5f83018461122a565b92915050565b61125b816111ae565b82525050565b5f6020820190506112745f830184611252565b92915050565b5f805f6060848603121561129157611290611150565b5b5f61129e8682870161119a565b93505060206112af8682870161119a565b92505060406112c0868287016111cd565b9150509250925092565b5f60ff82169050919050565b6112df816112ca565b82525050565b5f6020820190506112f85f8301846112d6565b92915050565b5f6020828403121561131357611312611150565b5b5f611320848285016111cd565b91505092915050565b5f6020828403121561133e5761133d611150565b5b5f61134b8482850161119a565b91505092915050565b61135d81611173565b82525050565b5f6020820190506113765f830184611354565b92915050565b5f806040838503121561139257611391611150565b5b5f61139f8582860161119a565b92505060206113b08582860161119a565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806113fe57607f821691505b602082108103611411576114106113ba565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61144e826111ae565b9150611459836111ae565b925082820190508082111561147157611470611417565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f775f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f6114d16025836110b0565b91506114dc82611477565b604082019050919050565b5f6020820190508181035f8301526114fe816114c5565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f61155f6026836110b0565b915061156a82611505565b604082019050919050565b5f6020820190508181035f83015261158c81611553565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f6115ed6024836110b0565b91506115f882611593565b604082019050919050565b5f6020820190508181035f83015261161a816115e1565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f61167b6022836110b0565b915061168682611621565b604082019050919050565b5f6020820190508181035f8301526116a88161166f565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000005f82015250565b5f6116e3601d836110b0565b91506116ee826116af565b602082019050919050565b5f6020820190508181035f830152611710816116d7565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f6117716025836110b0565b915061177c82611717565b604082019050919050565b5f6020820190508181035f83015261179e81611765565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f6117ff6023836110b0565b915061180a826117a5565b604082019050919050565b5f6020820190508181035f83015261182c816117f3565b9050919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320625f8201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b5f61188d6026836110b0565b915061189882611833565b604082019050919050565b5f6020820190508181035f8301526118ba81611881565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f6118f56020836110b0565b9150611900826118c1565b602082019050919050565b5f6020820190508181035f830152611922816118e9565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f2061646472657373005f82015250565b5f61195d601f836110b0565b915061196882611929565b602082019050919050565b5f6020820190508181035f83015261198a81611951565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f206164647265735f8201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b5f6119eb6021836110b0565b91506119f682611991565b604082019050919050565b5f6020820190508181035f830152611a18816119df565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e5f8201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b5f611a796022836110b0565b9150611a8482611a1f565b604082019050919050565b5f6020820190508181035f830152611aa681611a6d565b905091905056fea2646970667358221220660b47571f56083c70f64106fa486cfcf35cf374716ace0262e81c76e86cfd5d64736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x351 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x285 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x213 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1130 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x41F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x127A JUMP JUMPDEST PUSH2 0x428 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x12E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0x494 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x12FE JUMP JUMPDEST PUSH2 0x4AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x267 PUSH2 0x503 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0x516 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28D PUSH2 0x536 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1363 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH2 0x55E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x1130 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0x663 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x137C JUMP JUMPDEST PUSH2 0x685 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH2 0x707 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x37C SWAP1 PUSH2 0x13E7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3A8 SWAP1 PUSH2 0x13E7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x407 PUSH2 0x789 JUMP JUMPDEST SWAP1 POP PUSH2 0x414 DUP2 DUP6 DUP6 PUSH2 0x790 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x432 PUSH2 0x789 JUMP JUMPDEST SWAP1 POP PUSH2 0x43F DUP6 DUP3 DUP6 PUSH2 0x953 JUMP JUMPDEST PUSH2 0x44A DUP6 DUP6 DUP6 PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x468 PUSH2 0x789 JUMP JUMPDEST SWAP1 POP PUSH2 0x489 DUP2 DUP6 DUP6 PUSH2 0x47A DUP6 DUP10 PUSH2 0x685 JUMP JUMPDEST PUSH2 0x484 SWAP2 SWAP1 PUSH2 0x1444 JUMP JUMPDEST PUSH2 0x790 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x49C PUSH2 0xC4A JUMP JUMPDEST PUSH2 0x4A6 DUP3 DUP3 PUSH2 0xCC8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4BB PUSH2 0x4B5 PUSH2 0x789 JUMP JUMPDEST DUP3 PUSH2 0xE16 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x50B PUSH2 0xC4A JUMP JUMPDEST PUSH2 0x514 PUSH0 PUSH2 0xFD9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x528 DUP3 PUSH2 0x522 PUSH2 0x789 JUMP JUMPDEST DUP4 PUSH2 0x953 JUMP JUMPDEST PUSH2 0x532 DUP3 DUP3 PUSH2 0xE16 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x56D SWAP1 PUSH2 0x13E7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x599 SWAP1 PUSH2 0x13E7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5E4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5BB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5E4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5C7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5F8 PUSH2 0x789 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x605 DUP3 DUP7 PUSH2 0x685 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x64A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x641 SWAP1 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x657 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x790 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x66D PUSH2 0x789 JUMP JUMPDEST SWAP1 POP PUSH2 0x67A DUP2 DUP6 DUP6 PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x70F PUSH2 0xC4A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x77D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x774 SWAP1 PUSH2 0x1575 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x786 DUP2 PUSH2 0xFD9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F5 SWAP1 PUSH2 0x1603 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x863 SWAP1 PUSH2 0x1691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x946 SWAP2 SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x95E DUP5 DUP5 PUSH2 0x685 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x9D8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C1 SWAP1 PUSH2 0x16F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x790 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA43 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xABA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB1 SWAP1 PUSH2 0x1815 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAC5 DUP4 DUP4 DUP4 PUSH2 0x109C JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xB48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3F SWAP1 PUSH2 0x18A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xC31 SWAP2 SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xC44 DUP5 DUP5 DUP5 PUSH2 0x10A1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xC52 PUSH2 0x789 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC70 PUSH2 0x536 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBD SWAP1 PUSH2 0x190B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2D SWAP1 PUSH2 0x1973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD41 PUSH0 DUP4 DUP4 PUSH2 0x109C JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD52 SWAP2 SWAP1 PUSH2 0x1444 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xDFF SWAP2 SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xE12 PUSH0 DUP4 DUP4 PUSH2 0x10A1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE84 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7B SWAP1 PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE8F DUP3 PUSH0 DUP4 PUSH2 0x109C JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xF12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF09 SWAP1 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xFC1 SWAP2 SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xFD4 DUP4 PUSH0 DUP5 PUSH2 0x10A1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10DD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x10C2 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1102 DUP3 PUSH2 0x10A6 JUMP JUMPDEST PUSH2 0x110C DUP2 DUP6 PUSH2 0x10B0 JUMP JUMPDEST SWAP4 POP PUSH2 0x111C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x10C0 JUMP JUMPDEST PUSH2 0x1125 DUP2 PUSH2 0x10E8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1148 DUP2 DUP5 PUSH2 0x10F8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x117D DUP3 PUSH2 0x1154 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x118D DUP2 PUSH2 0x1173 JUMP JUMPDEST DUP2 EQ PUSH2 0x1197 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11A8 DUP2 PUSH2 0x1184 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11C0 DUP2 PUSH2 0x11AE JUMP JUMPDEST DUP2 EQ PUSH2 0x11CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11DB DUP2 PUSH2 0x11B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11F7 JUMPI PUSH2 0x11F6 PUSH2 0x1150 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1204 DUP6 DUP3 DUP7 ADD PUSH2 0x119A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1215 DUP6 DUP3 DUP7 ADD PUSH2 0x11CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1233 DUP2 PUSH2 0x121F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x124C PUSH0 DUP4 ADD DUP5 PUSH2 0x122A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x125B DUP2 PUSH2 0x11AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1274 PUSH0 DUP4 ADD DUP5 PUSH2 0x1252 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1291 JUMPI PUSH2 0x1290 PUSH2 0x1150 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x129E DUP7 DUP3 DUP8 ADD PUSH2 0x119A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x12AF DUP7 DUP3 DUP8 ADD PUSH2 0x119A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x12C0 DUP7 DUP3 DUP8 ADD PUSH2 0x11CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12DF DUP2 PUSH2 0x12CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12F8 PUSH0 DUP4 ADD DUP5 PUSH2 0x12D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1313 JUMPI PUSH2 0x1312 PUSH2 0x1150 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1320 DUP5 DUP3 DUP6 ADD PUSH2 0x11CD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x133E JUMPI PUSH2 0x133D PUSH2 0x1150 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x134B DUP5 DUP3 DUP6 ADD PUSH2 0x119A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x135D DUP2 PUSH2 0x1173 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1376 PUSH0 DUP4 ADD DUP5 PUSH2 0x1354 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1392 JUMPI PUSH2 0x1391 PUSH2 0x1150 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x139F DUP6 DUP3 DUP7 ADD PUSH2 0x119A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13B0 DUP6 DUP3 DUP7 ADD PUSH2 0x119A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x13FE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1411 JUMPI PUSH2 0x1410 PUSH2 0x13BA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x144E DUP3 PUSH2 0x11AE JUMP JUMPDEST SWAP2 POP PUSH2 0x1459 DUP4 PUSH2 0x11AE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1471 JUMPI PUSH2 0x1470 PUSH2 0x1417 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14D1 PUSH1 0x25 DUP4 PUSH2 0x10B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x14DC DUP3 PUSH2 0x1477 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14FE DUP2 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x155F PUSH1 0x26 DUP4 PUSH2 0x10B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x156A DUP3 PUSH2 0x1505 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x158C DUP2 PUSH2 0x1553 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15ED PUSH1 0x24 DUP4 PUSH2 0x10B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x15F8 DUP3 PUSH2 0x1593 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x161A DUP2 PUSH2 0x15E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x167B PUSH1 0x22 DUP4 PUSH2 0x10B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1686 DUP3 PUSH2 0x1621 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16A8 DUP2 PUSH2 0x166F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16E3 PUSH1 0x1D DUP4 PUSH2 0x10B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x16EE DUP3 PUSH2 0x16AF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1710 DUP2 PUSH2 0x16D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1771 PUSH1 0x25 DUP4 PUSH2 0x10B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x177C DUP3 PUSH2 0x1717 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x179E DUP2 PUSH2 0x1765 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17FF PUSH1 0x23 DUP4 PUSH2 0x10B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x180A DUP3 PUSH2 0x17A5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x182C DUP2 PUSH2 0x17F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x188D PUSH1 0x26 DUP4 PUSH2 0x10B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1898 DUP3 PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18BA DUP2 PUSH2 0x1881 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18F5 PUSH1 0x20 DUP4 PUSH2 0x10B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1900 DUP3 PUSH2 0x18C1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1922 DUP2 PUSH2 0x18E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x195D PUSH1 0x1F DUP4 PUSH2 0x10B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1968 DUP3 PUSH2 0x1929 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x198A DUP2 PUSH2 0x1951 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19EB PUSH1 0x21 DUP4 PUSH2 0x10B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x19F6 DUP3 PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A18 DUP2 PUSH2 0x19DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A79 PUSH1 0x22 DUP4 PUSH2 0x10B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A84 DUP3 PUSH2 0x1A1F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AA6 DUP2 PUSH2 0x1A6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0xB47571F56083C PUSH17 0xF64106FA486CFCF35CF374716ACE0262E8 SHR PUSH23 0xE86CFD5D64736F6C634300081500330000000000000000 ",
							"sourceMap": "429:213:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3242:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5190:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3091:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5871:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;544:95:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;578:89:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3406:125:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:2;;;:::i;:::-;;973:161:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:102:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6592:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3727:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3974:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2154:98:4;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;4530:13;4546:12;:10;:12::i;:::-;4530:28;;4568:32;4577:5;4584:7;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;:::o;3242:106::-;3303:7;3329:12;;3322:19;;3242:106;:::o;5190:286::-;5317:4;5333:15;5351:12;:10;:12::i;:::-;5333:30;;5373:38;5389:4;5395:7;5404:6;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;5465:4;5458:11;;;5190:286;;;;;:::o;3091:91::-;3149:5;3173:2;3166:9;;3091:91;:::o;5871:234::-;5959:4;5975:13;5991:12;:10;:12::i;:::-;5975:28;;6013:64;6022:5;6029:7;6066:10;6038:25;6048:5;6055:7;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;:::-;6094:4;6087:11;;;5871:234;;;;:::o;544:95:13:-;1094:13:2;:11;:13::i;:::-;614:17:13::1;620:2;624:6;614:5;:17::i;:::-;544:95:::0;;:::o;578:89:6:-;633:27;639:12;:10;:12::i;:::-;653:6;633:5;:27::i;:::-;578:89;:::o;3406:125:4:-;3480:7;3506:9;:18;3516:7;3506:18;;;;;;;;;;;;;;;;3499:25;;3406:125;;;:::o;1831:101:2:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;973:161:6:-;1049:46;1065:7;1074:12;:10;:12::i;:::-;1088:6;1049:15;:46::i;:::-;1105:22;1111:7;1120:6;1105:5;:22::i;:::-;973:161;;:::o;1201:85:2:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2365:102:4:-;2421:13;2453:7;2446:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:102;:::o;6592:427::-;6685:4;6701:13;6717:12;:10;:12::i;:::-;6701:28;;6739:24;6766:25;6776:5;6783:7;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;:::-;7008:4;7001:11;;;;6592:427;;;;:::o;3727:189::-;3806:4;3822:13;3838:12;:10;:12::i;:::-;3822:28;;3860;3870:5;3877:2;3881:6;3860:9;:28::i;:::-;3905:4;3898:11;;;3727:189;;;;:::o;3974:149::-;4063:7;4089:11;:18;4101:5;4089:18;;;;;;;;;;;;;;;:27;4108:7;4089:27;;;;;;;;;;;;;;;;4082:34;;3974:149;;;;:::o;2081:198:2:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;640:96:8:-;693:7;719:10;712:17;;640:96;:::o;10504:370:4:-;10652:1;10635:19;;:5;:19;;;10627:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10732:1;10713:21;;:7;:21;;;10705:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10814:6;10784:11;:18;10796:5;10784:18;;;;;;;;;;;;;;;:27;10803:7;10784:27;;;;;;;;;;;;;;;:36;;;;10851:7;10835:32;;10844:5;10835:32;;;10860:6;10835:32;;;;;;:::i;:::-;;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;11371:17;11351:16;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11347:243;11275:321;11155:441;;;:::o;7473:818::-;7615:1;7599:18;;:4;:18;;;7591:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7691:1;7677:16;;:2;:16;;;7669:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7744:38;7765:4;7771:2;7775:6;7744:20;:38::i;:::-;7793:19;7815:9;:15;7825:4;7815:15;;;;;;;;;;;;;;;;7793:37;;7863:6;7848:11;:21;;7840:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7978:6;7964:11;:20;7946:9;:15;7956:4;7946:15;;;;;;;;;;;;;;;:38;;;;8178:6;8161:9;:13;8171:2;8161:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8225:2;8210:26;;8219:4;8210:26;;;8229:6;8210:26;;;;;;:::i;:::-;;;;;;;;8247:37;8267:4;8273:2;8277:6;8247:19;:37::i;:::-;7581:710;7473:818;;;:::o;1359:130:2:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;8567:535:4:-;8669:1;8650:21;;:7;:21;;;8642:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8718:49;8747:1;8751:7;8760:6;8718:20;:49::i;:::-;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;;;;;8968:6;8946:9;:18;8956:7;8946:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;9020:7;8999:37;;9016:1;8999:37;;;9029:6;8999:37;;;;;;:::i;:::-;;;;;;;;9047:48;9075:1;9079:7;9088:6;9047:19;:48::i;:::-;8567:535;;:::o;9422:659::-;9524:1;9505:21;;:7;:21;;;9497:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;9575:49;9596:7;9613:1;9617:6;9575:20;:49::i;:::-;9635:22;9660:9;:18;9670:7;9660:18;;;;;;;;;;;;;;;;9635:43;;9714:6;9696:14;:24;;9688:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;9831:6;9814:14;:23;9793:9;:18;9803:7;9793:18;;;;;;;;;;;;;;;:44;;;;9946:6;9930:12;;:22;;;;;;;;;;;10004:1;9978:37;;9987:7;9978:37;;;10008:6;9978:37;;;;;;:::i;:::-;;;;;;;;10026:48;10046:7;10063:1;10067:6;10026:19;:48::i;:::-;9487:594;9422:659;;:::o;2433:187:2:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;12180:121:4:-;;;;:::o;12889:120::-;;;;:::o;7:99:14:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:::-;5247:6;5296:2;5284:9;5275:7;5271:23;5267:32;5264:119;;;5302:79;;:::i;:::-;5264:119;5422:1;5447:53;5492:7;5483:6;5472:9;5468:22;5447:53;:::i;:::-;5437:63;;5393:117;5188:329;;;;:::o;5523:118::-;5610:24;5628:5;5610:24;:::i;:::-;5605:3;5598:37;5523:118;;:::o;5647:222::-;5740:4;5778:2;5767:9;5763:18;5755:26;;5791:71;5859:1;5848:9;5844:17;5835:6;5791:71;:::i;:::-;5647:222;;;;:::o;5875:474::-;5943:6;5951;6000:2;5988:9;5979:7;5975:23;5971:32;5968:119;;;6006:79;;:::i;:::-;5968:119;6126:1;6151:53;6196:7;6187:6;6176:9;6172:22;6151:53;:::i;:::-;6141:63;;6097:117;6253:2;6279:53;6324:7;6315:6;6304:9;6300:22;6279:53;:::i;:::-;6269:63;;6224:118;5875:474;;;;;:::o;6355:180::-;6403:77;6400:1;6393:88;6500:4;6497:1;6490:15;6524:4;6521:1;6514:15;6541:320;6585:6;6622:1;6616:4;6612:12;6602:22;;6669:1;6663:4;6659:12;6690:18;6680:81;;6746:4;6738:6;6734:17;6724:27;;6680:81;6808:2;6800:6;6797:14;6777:18;6774:38;6771:84;;6827:18;;:::i;:::-;6771:84;6592:269;6541:320;;;:::o;6867:180::-;6915:77;6912:1;6905:88;7012:4;7009:1;7002:15;7036:4;7033:1;7026:15;7053:191;7093:3;7112:20;7130:1;7112:20;:::i;:::-;7107:25;;7146:20;7164:1;7146:20;:::i;:::-;7141:25;;7189:1;7186;7182:9;7175:16;;7210:3;7207:1;7204:10;7201:36;;;7217:18;;:::i;:::-;7201:36;7053:191;;;;:::o;7250:224::-;7390:34;7386:1;7378:6;7374:14;7367:58;7459:7;7454:2;7446:6;7442:15;7435:32;7250:224;:::o;7480:366::-;7622:3;7643:67;7707:2;7702:3;7643:67;:::i;:::-;7636:74;;7719:93;7808:3;7719:93;:::i;:::-;7837:2;7832:3;7828:12;7821:19;;7480:366;;;:::o;7852:419::-;8018:4;8056:2;8045:9;8041:18;8033:26;;8105:9;8099:4;8095:20;8091:1;8080:9;8076:17;8069:47;8133:131;8259:4;8133:131;:::i;:::-;8125:139;;7852:419;;;:::o;8277:225::-;8417:34;8413:1;8405:6;8401:14;8394:58;8486:8;8481:2;8473:6;8469:15;8462:33;8277:225;:::o;8508:366::-;8650:3;8671:67;8735:2;8730:3;8671:67;:::i;:::-;8664:74;;8747:93;8836:3;8747:93;:::i;:::-;8865:2;8860:3;8856:12;8849:19;;8508:366;;;:::o;8880:419::-;9046:4;9084:2;9073:9;9069:18;9061:26;;9133:9;9127:4;9123:20;9119:1;9108:9;9104:17;9097:47;9161:131;9287:4;9161:131;:::i;:::-;9153:139;;8880:419;;;:::o;9305:223::-;9445:34;9441:1;9433:6;9429:14;9422:58;9514:6;9509:2;9501:6;9497:15;9490:31;9305:223;:::o;9534:366::-;9676:3;9697:67;9761:2;9756:3;9697:67;:::i;:::-;9690:74;;9773:93;9862:3;9773:93;:::i;:::-;9891:2;9886:3;9882:12;9875:19;;9534:366;;;:::o;9906:419::-;10072:4;10110:2;10099:9;10095:18;10087:26;;10159:9;10153:4;10149:20;10145:1;10134:9;10130:17;10123:47;10187:131;10313:4;10187:131;:::i;:::-;10179:139;;9906:419;;;:::o;10331:221::-;10471:34;10467:1;10459:6;10455:14;10448:58;10540:4;10535:2;10527:6;10523:15;10516:29;10331:221;:::o;10558:366::-;10700:3;10721:67;10785:2;10780:3;10721:67;:::i;:::-;10714:74;;10797:93;10886:3;10797:93;:::i;:::-;10915:2;10910:3;10906:12;10899:19;;10558:366;;;:::o;10930:419::-;11096:4;11134:2;11123:9;11119:18;11111:26;;11183:9;11177:4;11173:20;11169:1;11158:9;11154:17;11147:47;11211:131;11337:4;11211:131;:::i;:::-;11203:139;;10930:419;;;:::o;11355:179::-;11495:31;11491:1;11483:6;11479:14;11472:55;11355:179;:::o;11540:366::-;11682:3;11703:67;11767:2;11762:3;11703:67;:::i;:::-;11696:74;;11779:93;11868:3;11779:93;:::i;:::-;11897:2;11892:3;11888:12;11881:19;;11540:366;;;:::o;11912:419::-;12078:4;12116:2;12105:9;12101:18;12093:26;;12165:9;12159:4;12155:20;12151:1;12140:9;12136:17;12129:47;12193:131;12319:4;12193:131;:::i;:::-;12185:139;;11912:419;;;:::o;12337:224::-;12477:34;12473:1;12465:6;12461:14;12454:58;12546:7;12541:2;12533:6;12529:15;12522:32;12337:224;:::o;12567:366::-;12709:3;12730:67;12794:2;12789:3;12730:67;:::i;:::-;12723:74;;12806:93;12895:3;12806:93;:::i;:::-;12924:2;12919:3;12915:12;12908:19;;12567:366;;;:::o;12939:419::-;13105:4;13143:2;13132:9;13128:18;13120:26;;13192:9;13186:4;13182:20;13178:1;13167:9;13163:17;13156:47;13220:131;13346:4;13220:131;:::i;:::-;13212:139;;12939:419;;;:::o;13364:222::-;13504:34;13500:1;13492:6;13488:14;13481:58;13573:5;13568:2;13560:6;13556:15;13549:30;13364:222;:::o;13592:366::-;13734:3;13755:67;13819:2;13814:3;13755:67;:::i;:::-;13748:74;;13831:93;13920:3;13831:93;:::i;:::-;13949:2;13944:3;13940:12;13933:19;;13592:366;;;:::o;13964:419::-;14130:4;14168:2;14157:9;14153:18;14145:26;;14217:9;14211:4;14207:20;14203:1;14192:9;14188:17;14181:47;14245:131;14371:4;14245:131;:::i;:::-;14237:139;;13964:419;;;:::o;14389:225::-;14529:34;14525:1;14517:6;14513:14;14506:58;14598:8;14593:2;14585:6;14581:15;14574:33;14389:225;:::o;14620:366::-;14762:3;14783:67;14847:2;14842:3;14783:67;:::i;:::-;14776:74;;14859:93;14948:3;14859:93;:::i;:::-;14977:2;14972:3;14968:12;14961:19;;14620:366;;;:::o;14992:419::-;15158:4;15196:2;15185:9;15181:18;15173:26;;15245:9;15239:4;15235:20;15231:1;15220:9;15216:17;15209:47;15273:131;15399:4;15273:131;:::i;:::-;15265:139;;14992:419;;;:::o;15417:182::-;15557:34;15553:1;15545:6;15541:14;15534:58;15417:182;:::o;15605:366::-;15747:3;15768:67;15832:2;15827:3;15768:67;:::i;:::-;15761:74;;15844:93;15933:3;15844:93;:::i;:::-;15962:2;15957:3;15953:12;15946:19;;15605:366;;;:::o;15977:419::-;16143:4;16181:2;16170:9;16166:18;16158:26;;16230:9;16224:4;16220:20;16216:1;16205:9;16201:17;16194:47;16258:131;16384:4;16258:131;:::i;:::-;16250:139;;15977:419;;;:::o;16402:181::-;16542:33;16538:1;16530:6;16526:14;16519:57;16402:181;:::o;16589:366::-;16731:3;16752:67;16816:2;16811:3;16752:67;:::i;:::-;16745:74;;16828:93;16917:3;16828:93;:::i;:::-;16946:2;16941:3;16937:12;16930:19;;16589:366;;;:::o;16961:419::-;17127:4;17165:2;17154:9;17150:18;17142:26;;17214:9;17208:4;17204:20;17200:1;17189:9;17185:17;17178:47;17242:131;17368:4;17242:131;:::i;:::-;17234:139;;16961:419;;;:::o;17386:220::-;17526:34;17522:1;17514:6;17510:14;17503:58;17595:3;17590:2;17582:6;17578:15;17571:28;17386:220;:::o;17612:366::-;17754:3;17775:67;17839:2;17834:3;17775:67;:::i;:::-;17768:74;;17851:93;17940:3;17851:93;:::i;:::-;17969:2;17964:3;17960:12;17953:19;;17612:366;;;:::o;17984:419::-;18150:4;18188:2;18177:9;18173:18;18165:26;;18237:9;18231:4;18227:20;18223:1;18212:9;18208:17;18201:47;18265:131;18391:4;18265:131;:::i;:::-;18257:139;;17984:419;;;:::o;18409:221::-;18549:34;18545:1;18537:6;18533:14;18526:58;18618:4;18613:2;18605:6;18601:15;18594:29;18409:221;:::o;18636:366::-;18778:3;18799:67;18863:2;18858:3;18799:67;:::i;:::-;18792:74;;18875:93;18964:3;18875:93;:::i;:::-;18993:2;18988:3;18984:12;18977:19;;18636:366;;;:::o;19008:419::-;19174:4;19212:2;19201:9;19197:18;19189:26;;19261:9;19255:4;19251:20;19247:1;19236:9;19232:17;19225:47;19289:131;19415:4;19289:131;:::i;:::-;19281:139;;19008:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1376600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2852",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "361",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2604",
								"renounceOwnership()": "30435",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "30841"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 429,
									"end": 642,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 429,
									"end": 642,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 429,
									"end": 642,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 488,
									"end": 536,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 488,
									"end": 536,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 488,
									"end": 536,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 488,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 488,
									"end": 536,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 488,
									"end": 536,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 488,
									"end": 536,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 488,
									"end": 536,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 488,
									"end": 536,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 488,
									"end": 536,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 488,
									"end": 536,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 4,
									"value": "5465737445524332300000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 4,
									"value": "5465737445524332300000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2050,
									"end": 2055,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2042,
									"end": 2047,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 2042,
									"end": 2055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2075,
									"end": 2082,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2065,
									"end": 2072,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 2065,
									"end": 2082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 429,
									"end": 642,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 429,
									"end": 642,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 14,
									"value": "18"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 14,
									"value": "21"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 14
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 14,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 14
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "50"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 14,
									"value": "50"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "51"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 14,
									"value": "51"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 14
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "55"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "56"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "57"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 14,
									"value": "57"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 14,
									"value": "56"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 14,
									"value": "55"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "60"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 14,
									"value": "60"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "61"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "62"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 14,
									"value": "62"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 14,
									"value": "61"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "65"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 14,
									"value": "65"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "66"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 14,
									"value": "66"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 14,
									"value": "68"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "70"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "71"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 14,
									"value": "71"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "68"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 14,
									"value": "70"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "74"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 14,
									"value": "74"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "75"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 14,
									"value": "75"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "76"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 14,
									"value": "76"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "77"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "78"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 14,
									"value": "78"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 14,
									"value": "77"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "81"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 14,
									"value": "81"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "83"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 14,
									"value": "83"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 14,
									"value": "7"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "85"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "18"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 14,
									"value": "85"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "86"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "87"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 14,
									"value": "87"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 14,
									"value": "86"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "88"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "21"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 14,
									"value": "88"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "89"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 14,
									"value": "89"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "91"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "92"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 14,
									"value": "92"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "93"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 14,
									"value": "93"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "90"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 14,
									"value": "91"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "94"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 14,
									"value": "94"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 14,
									"value": "95"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "97"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "95"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 14,
									"value": "97"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "98"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "99"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 14,
									"value": "99"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 14,
									"value": "98"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 14,
									"value": "90"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 429,
									"end": 642,
									"name": "tag",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 429,
									"end": 642,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 429,
									"end": 642,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 429,
									"end": 642,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 429,
									"end": 642,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 429,
									"end": 642,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 429,
									"end": 642,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 429,
									"end": 642,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 429,
									"end": 642,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220660b47571f56083c70f64106fa486cfcf35cf374716ace0262e81c76e86cfd5d64736f6c63430008150033",
									".code": [
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH",
											"source": 13,
											"value": "70A08231"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH",
											"source": 13,
											"value": "95D89B41"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH",
											"source": 13,
											"value": "95D89B41"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH",
											"source": 13,
											"value": "A457C2D7"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH",
											"source": 13,
											"value": "A9059CBB"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH",
											"source": 13,
											"value": "DD62ED3E"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH",
											"source": 13,
											"value": "F2FDE38B"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "tag",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH",
											"source": 13,
											"value": "70A08231"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH",
											"source": 13,
											"value": "715018A6"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH",
											"source": 13,
											"value": "79CC6790"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH",
											"source": 13,
											"value": "8DA5CB5B"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH",
											"source": 13,
											"value": "313CE567"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH",
											"source": 13,
											"value": "313CE567"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH",
											"source": 13,
											"value": "39509351"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH",
											"source": 13,
											"value": "40C10F19"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH",
											"source": 13,
											"value": "42966C68"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH",
											"source": 13,
											"value": "6FDDE03"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH",
											"source": 13,
											"value": "95EA7B3"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH",
											"source": 13,
											"value": "18160DDD"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH",
											"source": 13,
											"value": "23B872DD"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 642,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 429,
											"end": 642,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2154,
											"end": 2252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2154,
											"end": 2252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4431,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4431,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4431,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3242,
											"end": 3348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3242,
											"end": 3348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 5190,
											"end": 5476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5190,
											"end": 5476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5190,
											"end": 5476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3091,
											"end": 3182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3091,
											"end": 3182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 5871,
											"end": 6105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 5871,
											"end": 6105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5871,
											"end": 6105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 544,
											"end": 639,
											"name": "tag",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 544,
											"end": 639,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 544,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 544,
											"end": 639,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 544,
											"end": 639,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 544,
											"end": 639,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 544,
											"end": 639,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 544,
											"end": 639,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 544,
											"end": 639,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 544,
											"end": 639,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 544,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 544,
											"end": 639,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 544,
											"end": 639,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 544,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 544,
											"end": 639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 544,
											"end": 639,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 544,
											"end": 639,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 544,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 544,
											"end": 639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 544,
											"end": 639,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 544,
											"end": 639,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 544,
											"end": 639,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 578,
											"end": 667,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 578,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 578,
											"end": 667,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 578,
											"end": 667,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 578,
											"end": 667,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 578,
											"end": 667,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 578,
											"end": 667,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 578,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 578,
											"end": 667,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 578,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 578,
											"end": 667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 578,
											"end": 667,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 578,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 578,
											"end": 667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 578,
											"end": 667,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 578,
											"end": 667,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3406,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3406,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3406,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 973,
											"end": 1134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 973,
											"end": 1134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2365,
											"end": 2467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2365,
											"end": 2467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 6592,
											"end": 7019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 6592,
											"end": 7019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 6592,
											"end": 7019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3727,
											"end": 3916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3727,
											"end": 3916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3727,
											"end": 3916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3974,
											"end": 4123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 3974,
											"end": 4123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3974,
											"end": 4123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2208,
											"end": 2221,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2240,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2233,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2233,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4514,
											"end": 4518,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4530,
											"end": 4543,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4546,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 4546,
											"end": 4556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 4546,
											"end": 4558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4546,
											"end": 4558,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 4546,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4530,
											"end": 4558,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4530,
											"end": 4558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4577,
											"end": 4582,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4584,
											"end": 4591,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4593,
											"end": 4599,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4568,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 4568,
											"end": 4600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4617,
											"end": 4621,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4610,
											"end": 4621,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4621,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4621,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3322,
											"end": 3341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3322,
											"end": 3341,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5317,
											"end": 5321,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5333,
											"end": 5348,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5351,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 5351,
											"end": 5361,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 5351,
											"end": 5363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5351,
											"end": 5363,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 5351,
											"end": 5363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5333,
											"end": 5363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5333,
											"end": 5363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 5389,
											"end": 5393,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5395,
											"end": 5402,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5404,
											"end": 5410,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5373,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 5373,
											"end": 5411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 5431,
											"end": 5435,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5437,
											"end": 5439,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5441,
											"end": 5447,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5421,
											"end": 5448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5465,
											"end": 5469,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5458,
											"end": 5469,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5458,
											"end": 5469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5458,
											"end": 5469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3149,
											"end": 3154,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3175,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3166,
											"end": 3175,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3166,
											"end": 3175,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5959,
											"end": 5963,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5975,
											"end": 5988,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6003,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 5991,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 5991,
											"end": 6003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6003,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 5991,
											"end": 6003,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5975,
											"end": 6003,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5975,
											"end": 6003,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 6022,
											"end": 6027,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6029,
											"end": 6036,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6066,
											"end": 6076,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 6048,
											"end": 6053,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6055,
											"end": 6062,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 6038,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 6038,
											"end": 6063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 6038,
											"end": 6076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6013,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 6013,
											"end": 6077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6094,
											"end": 6098,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6087,
											"end": 6098,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6087,
											"end": 6098,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6087,
											"end": 6098,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 544,
											"end": 639,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 544,
											"end": 639,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 614,
											"end": 631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 620,
											"end": 622,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 624,
											"end": 630,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 614,
											"end": 619,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 614,
											"end": 631,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 614,
											"end": 631,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 614,
											"end": 631,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 544,
											"end": 639,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 544,
											"end": 639,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 544,
											"end": 639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 578,
											"end": 667,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 633,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 639,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 639,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 639,
											"end": 651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 639,
											"end": 651,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 639,
											"end": 651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 653,
											"end": 659,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 633,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 633,
											"end": 660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 633,
											"end": 660,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 633,
											"end": 660,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 578,
											"end": 667,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 578,
											"end": 667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3487,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3515,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3516,
											"end": 3523,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3524,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1049,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1065,
											"end": 1072,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1074,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 1074,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1074,
											"end": 1086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1074,
											"end": 1086,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 1074,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1049,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1049,
											"end": 1095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1049,
											"end": 1095,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1049,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1105,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 1111,
											"end": 1118,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1105,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 1105,
											"end": 1127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1105,
											"end": 1127,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 1105,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2421,
											"end": 2434,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2453,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2446,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2446,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6685,
											"end": 6689,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6701,
											"end": 6714,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6717,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 6717,
											"end": 6727,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 6717,
											"end": 6729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6717,
											"end": 6729,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 6717,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6739,
											"end": 6763,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 6776,
											"end": 6781,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6783,
											"end": 6790,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6766,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 6766,
											"end": 6791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6739,
											"end": 6791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6739,
											"end": 6791,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6829,
											"end": 6844,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6809,
											"end": 6825,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6809,
											"end": 6844,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6809,
											"end": 6844,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 6801,
											"end": 6886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 6929,
											"end": 6934,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6936,
											"end": 6943,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6945,
											"end": 6961,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6945,
											"end": 6979,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6920,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 6920,
											"end": 6980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7008,
											"end": 7012,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7001,
											"end": 7012,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7001,
											"end": 7012,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7001,
											"end": 7012,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7001,
											"end": 7012,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3806,
											"end": 3810,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3822,
											"end": 3835,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 3838,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3838,
											"end": 3850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3822,
											"end": 3850,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3822,
											"end": 3850,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 3870,
											"end": 3875,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3877,
											"end": 3879,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3881,
											"end": 3887,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3860,
											"end": 3888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3905,
											"end": 3909,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3898,
											"end": 3909,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3898,
											"end": 3909,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3898,
											"end": 3909,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4063,
											"end": 4070,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4100,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4101,
											"end": 4106,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4115,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4082,
											"end": 4116,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4082,
											"end": 4116,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2161,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10652,
											"end": 10653,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10635,
											"end": 10640,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 10627,
											"end": 10695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10732,
											"end": 10733,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10713,
											"end": 10720,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 10705,
											"end": 10773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10814,
											"end": 10820,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10795,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10796,
											"end": 10801,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10810,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10851,
											"end": 10858,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10849,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10860,
											"end": 10866,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 10835,
											"end": 10867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10504,
											"end": 10874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11285,
											"end": 11309,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 11322,
											"end": 11327,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11329,
											"end": 11336,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11312,
											"end": 11321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 11312,
											"end": 11337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11285,
											"end": 11337,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11285,
											"end": 11337,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11371,
											"end": 11388,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11351,
											"end": 11367,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11351,
											"end": 11388,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11432,
											"end": 11438,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11412,
											"end": 11428,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11412,
											"end": 11438,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11412,
											"end": 11438,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 11404,
											"end": 11472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 11523,
											"end": 11528,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11530,
											"end": 11537,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11558,
											"end": 11564,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11539,
											"end": 11555,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11539,
											"end": 11564,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11514,
											"end": 11522,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 11514,
											"end": 11565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11275,
											"end": 11596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11155,
											"end": 11596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7615,
											"end": 7616,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7599,
											"end": 7603,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 7591,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7691,
											"end": 7692,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7677,
											"end": 7679,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 7669,
											"end": 7733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 7765,
											"end": 7769,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7771,
											"end": 7773,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7775,
											"end": 7781,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7744,
											"end": 7764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 7744,
											"end": 7782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7793,
											"end": 7812,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7824,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7825,
											"end": 7829,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7793,
											"end": 7830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7793,
											"end": 7830,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7863,
											"end": 7869,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7848,
											"end": 7859,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 7840,
											"end": 7912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7978,
											"end": 7984,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7964,
											"end": 7975,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7964,
											"end": 7984,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7955,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7956,
											"end": 7960,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8178,
											"end": 8184,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8170,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8171,
											"end": 8173,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8225,
											"end": 8227,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8219,
											"end": 8223,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8229,
											"end": 8235,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 8210,
											"end": 8236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 8247,
											"end": 8284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 8267,
											"end": 8271,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8273,
											"end": 8275,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8277,
											"end": 8283,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8247,
											"end": 8266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 8247,
											"end": 8284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8247,
											"end": 8284,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 8247,
											"end": 8284,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7581,
											"end": 8291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7473,
											"end": 8291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8567,
											"end": 9102,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 8567,
											"end": 9102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8669,
											"end": 8670,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8650,
											"end": 8671,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8650,
											"end": 8671,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8650,
											"end": 8657,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8650,
											"end": 8671,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8650,
											"end": 8671,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8650,
											"end": 8671,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 8642,
											"end": 8707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8718,
											"end": 8767,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 8747,
											"end": 8748,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8751,
											"end": 8758,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8760,
											"end": 8766,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8718,
											"end": 8738,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 8718,
											"end": 8767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8718,
											"end": 8767,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 8718,
											"end": 8767,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8794,
											"end": 8800,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8778,
											"end": 8790,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8778,
											"end": 8790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 8778,
											"end": 8800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8968,
											"end": 8974,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8946,
											"end": 8955,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8956,
											"end": 8963,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9020,
											"end": 9027,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9016,
											"end": 9017,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9029,
											"end": 9035,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 8999,
											"end": 9036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 9047,
											"end": 9095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 9075,
											"end": 9076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9079,
											"end": 9086,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9088,
											"end": 9094,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9047,
											"end": 9066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 9047,
											"end": 9095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9047,
											"end": 9095,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 9047,
											"end": 9095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8567,
											"end": 9102,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8567,
											"end": 9102,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8567,
											"end": 9102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9422,
											"end": 10081,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 9422,
											"end": 10081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9524,
											"end": 9525,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9505,
											"end": 9526,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9505,
											"end": 9526,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9505,
											"end": 9512,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9505,
											"end": 9526,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9505,
											"end": 9526,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9505,
											"end": 9526,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 9497,
											"end": 9564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9575,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9613,
											"end": 9614,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9617,
											"end": 9623,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 9575,
											"end": 9624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9575,
											"end": 9624,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 9575,
											"end": 9624,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9635,
											"end": 9657,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9660,
											"end": 9669,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9670,
											"end": 9677,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9635,
											"end": 9678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9635,
											"end": 9678,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9714,
											"end": 9720,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9696,
											"end": 9710,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9696,
											"end": 9720,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9696,
											"end": 9720,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 9688,
											"end": 9759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9831,
											"end": 9837,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9814,
											"end": 9828,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9814,
											"end": 9837,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9793,
											"end": 9802,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9810,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9793,
											"end": 9837,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9793,
											"end": 9837,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9793,
											"end": 9837,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9793,
											"end": 9837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9946,
											"end": 9952,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9930,
											"end": 9942,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9930,
											"end": 9942,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9930,
											"end": 9952,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9930,
											"end": 9952,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9930,
											"end": 9952,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9930,
											"end": 9952,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9930,
											"end": 9952,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9930,
											"end": 9952,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9930,
											"end": 9952,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9930,
											"end": 9952,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9930,
											"end": 9952,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9930,
											"end": 9952,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9930,
											"end": 9952,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10004,
											"end": 10005,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 9994,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10008,
											"end": 10014,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 9978,
											"end": 10015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10026,
											"end": 10074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 10046,
											"end": 10053,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10063,
											"end": 10064,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10026,
											"end": 10045,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 10026,
											"end": 10074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10026,
											"end": 10074,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 10026,
											"end": 10074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 10081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9422,
											"end": 10081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9422,
											"end": 10081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9422,
											"end": 10081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12180,
											"end": 12301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12889,
											"end": 13009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 14,
											"value": "219"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 14,
											"value": "221"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 14,
											"value": "222"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "219"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "221"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "222"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 14,
											"value": "225"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 14,
											"value": "227"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 14,
											"value": "228"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "227"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 14,
											"value": "229"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "228"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 14,
											"value": "230"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "229"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 14,
											"value": "231"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 14,
											"value": "232"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "231"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 14,
											"value": "233"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "232"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "225"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "230"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "233"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 14,
											"value": "234"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 14,
											"value": "235"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "234"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "235"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 14,
											"value": "236"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "231"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "236"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 14,
											"value": "39"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "225"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "230"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "230"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "233"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 14,
											"value": "237"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 14,
											"value": "238"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "237"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 14,
											"value": "45"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "238"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 14,
											"value": "55"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "225"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "233"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "tag",
											"source": 14,
											"value": "59"
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5296,
											"end": 5298,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5275,
											"end": 5282,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5271,
											"end": 5294,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5267,
											"end": 5299,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "225"
										},
										{
											"begin": 5302,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "tag",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "tag",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5422,
											"end": 5423,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 5492,
											"end": 5499,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5483,
											"end": 5489,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5472,
											"end": 5481,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5468,
											"end": 5490,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "230"
										},
										{
											"begin": 5447,
											"end": 5500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "tag",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5393,
											"end": 5510,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5188,
											"end": 5517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "tag",
											"source": 14,
											"value": "239"
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 5628,
											"end": 5633,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "228"
										},
										{
											"begin": 5610,
											"end": 5634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "tag",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5605,
											"end": 5608,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5598,
											"end": 5635,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5523,
											"end": 5641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "tag",
											"source": 14,
											"value": "70"
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5740,
											"end": 5744,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5780,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5767,
											"end": 5776,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5763,
											"end": 5781,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5755,
											"end": 5781,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5755,
											"end": 5781,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 5859,
											"end": 5860,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5848,
											"end": 5857,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5844,
											"end": 5861,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5835,
											"end": 5841,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "239"
										},
										{
											"begin": 5791,
											"end": 5862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "tag",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5647,
											"end": 5869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "tag",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5943,
											"end": 5949,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 5957,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6000,
											"end": 6002,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5988,
											"end": 5997,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5979,
											"end": 5986,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5975,
											"end": 5998,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5971,
											"end": 6003,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "225"
										},
										{
											"begin": 6006,
											"end": 6085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "tag",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "tag",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6126,
											"end": 6127,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 6196,
											"end": 6203,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6187,
											"end": 6193,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6176,
											"end": 6185,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6172,
											"end": 6194,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "230"
										},
										{
											"begin": 6151,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "tag",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6141,
											"end": 6204,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6141,
											"end": 6204,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6097,
											"end": 6214,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6253,
											"end": 6255,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 6324,
											"end": 6331,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6304,
											"end": 6313,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6300,
											"end": 6322,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "230"
										},
										{
											"begin": 6279,
											"end": 6332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "tag",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6269,
											"end": 6332,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6269,
											"end": 6332,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6224,
											"end": 6342,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5875,
											"end": 6349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6355,
											"end": 6535,
											"name": "tag",
											"source": 14,
											"value": "240"
										},
										{
											"begin": 6355,
											"end": 6535,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6403,
											"end": 6480,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6400,
											"end": 6401,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6393,
											"end": 6481,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6500,
											"end": 6504,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 6497,
											"end": 6498,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6490,
											"end": 6505,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6524,
											"end": 6528,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6521,
											"end": 6522,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6514,
											"end": 6529,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "tag",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6585,
											"end": 6591,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6622,
											"end": 6623,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 6616,
											"end": 6620,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6612,
											"end": 6624,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6669,
											"end": 6670,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 6663,
											"end": 6667,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6659,
											"end": 6671,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6690,
											"end": 6708,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6746,
											"end": 6750,
											"name": "PUSH",
											"source": 14,
											"value": "7F"
										},
										{
											"begin": 6738,
											"end": 6744,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6734,
											"end": 6751,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6724,
											"end": 6751,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6724,
											"end": 6751,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "tag",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6808,
											"end": 6810,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6800,
											"end": 6806,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6797,
											"end": 6811,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 6777,
											"end": 6795,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6774,
											"end": 6812,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6771,
											"end": 6855,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 6771,
											"end": 6855,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "240"
										},
										{
											"begin": 6827,
											"end": 6845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "tag",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6771,
											"end": 6855,
											"name": "tag",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 6771,
											"end": 6855,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6592,
											"end": 6861,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6541,
											"end": 6861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6867,
											"end": 7047,
											"name": "tag",
											"source": 14,
											"value": "241"
										},
										{
											"begin": 6867,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6915,
											"end": 6992,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6912,
											"end": 6913,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6905,
											"end": 6993,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7012,
											"end": 7016,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 7009,
											"end": 7010,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7036,
											"end": 7040,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 7033,
											"end": 7034,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7026,
											"end": 7041,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7053,
											"end": 7244,
											"name": "tag",
											"source": 14,
											"value": "115"
										},
										{
											"begin": 7053,
											"end": 7244,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7093,
											"end": 7096,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7112,
											"end": 7132,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 7130,
											"end": 7131,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7112,
											"end": 7132,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "231"
										},
										{
											"begin": 7112,
											"end": 7132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7112,
											"end": 7132,
											"name": "tag",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 7112,
											"end": 7132,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7107,
											"end": 7132,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7107,
											"end": 7132,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7146,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 7164,
											"end": 7165,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7146,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "231"
										},
										{
											"begin": 7146,
											"end": 7166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7146,
											"end": 7166,
											"name": "tag",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 7146,
											"end": 7166,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7141,
											"end": 7166,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7141,
											"end": 7166,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7189,
											"end": 7190,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7186,
											"end": 7187,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7182,
											"end": 7191,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7175,
											"end": 7191,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7175,
											"end": 7191,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7210,
											"end": 7213,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7207,
											"end": 7208,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7204,
											"end": 7214,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7201,
											"end": 7237,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7201,
											"end": 7237,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 7201,
											"end": 7237,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7217,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 7217,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "241"
										},
										{
											"begin": 7217,
											"end": 7235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7217,
											"end": 7235,
											"name": "tag",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 7217,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7201,
											"end": 7237,
											"name": "tag",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 7201,
											"end": 7237,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7053,
											"end": 7244,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7053,
											"end": 7244,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7053,
											"end": 7244,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7053,
											"end": 7244,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7053,
											"end": 7244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7250,
											"end": 7474,
											"name": "tag",
											"source": 14,
											"value": "242"
										},
										{
											"begin": 7250,
											"end": 7474,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7390,
											"end": 7424,
											"name": "PUSH",
											"source": 14,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 7386,
											"end": 7387,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7384,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7374,
											"end": 7388,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7367,
											"end": 7425,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7459,
											"end": 7466,
											"name": "PUSH",
											"source": 14,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7454,
											"end": 7456,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7446,
											"end": 7452,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7442,
											"end": 7457,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7435,
											"end": 7467,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7250,
											"end": 7474,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7250,
											"end": 7474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7480,
											"end": 7846,
											"name": "tag",
											"source": 14,
											"value": "243"
										},
										{
											"begin": 7480,
											"end": 7846,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7622,
											"end": 7625,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7643,
											"end": 7710,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 7707,
											"end": 7709,
											"name": "PUSH",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 7702,
											"end": 7705,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7643,
											"end": 7710,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 7643,
											"end": 7710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7643,
											"end": 7710,
											"name": "tag",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 7643,
											"end": 7710,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7636,
											"end": 7710,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7636,
											"end": 7710,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7719,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 7808,
											"end": 7811,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7719,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "242"
										},
										{
											"begin": 7719,
											"end": 7812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7719,
											"end": 7812,
											"name": "tag",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 7719,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7837,
											"end": 7839,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7832,
											"end": 7835,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7828,
											"end": 7840,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7821,
											"end": 7840,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7821,
											"end": 7840,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7480,
											"end": 7846,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7480,
											"end": 7846,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7480,
											"end": 7846,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7480,
											"end": 7846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7852,
											"end": 8271,
											"name": "tag",
											"source": 14,
											"value": "148"
										},
										{
											"begin": 7852,
											"end": 8271,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8018,
											"end": 8022,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8056,
											"end": 8058,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8045,
											"end": 8054,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8041,
											"end": 8059,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8033,
											"end": 8059,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8033,
											"end": 8059,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8105,
											"end": 8114,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8099,
											"end": 8103,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8095,
											"end": 8115,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8091,
											"end": 8092,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8080,
											"end": 8089,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8076,
											"end": 8093,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8069,
											"end": 8116,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8133,
											"end": 8264,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 8259,
											"end": 8263,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8133,
											"end": 8264,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "243"
										},
										{
											"begin": 8133,
											"end": 8264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8133,
											"end": 8264,
											"name": "tag",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 8133,
											"end": 8264,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8125,
											"end": 8264,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8125,
											"end": 8264,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7852,
											"end": 8271,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7852,
											"end": 8271,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7852,
											"end": 8271,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7852,
											"end": 8271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8277,
											"end": 8502,
											"name": "tag",
											"source": 14,
											"value": "244"
										},
										{
											"begin": 8277,
											"end": 8502,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8417,
											"end": 8451,
											"name": "PUSH",
											"source": 14,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 8413,
											"end": 8414,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8405,
											"end": 8411,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8401,
											"end": 8415,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8394,
											"end": 8452,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8486,
											"end": 8494,
											"name": "PUSH",
											"source": 14,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8481,
											"end": 8483,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8473,
											"end": 8479,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8469,
											"end": 8484,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8462,
											"end": 8495,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8277,
											"end": 8502,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8277,
											"end": 8502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8508,
											"end": 8874,
											"name": "tag",
											"source": 14,
											"value": "245"
										},
										{
											"begin": 8508,
											"end": 8874,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8650,
											"end": 8653,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8671,
											"end": 8738,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 8735,
											"end": 8737,
											"name": "PUSH",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 8730,
											"end": 8733,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8671,
											"end": 8738,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 8671,
											"end": 8738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8671,
											"end": 8738,
											"name": "tag",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 8671,
											"end": 8738,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8664,
											"end": 8738,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8664,
											"end": 8738,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8747,
											"end": 8840,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 8836,
											"end": 8839,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8747,
											"end": 8840,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "244"
										},
										{
											"begin": 8747,
											"end": 8840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8747,
											"end": 8840,
											"name": "tag",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 8747,
											"end": 8840,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8865,
											"end": 8867,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8860,
											"end": 8863,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8856,
											"end": 8868,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8849,
											"end": 8868,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8849,
											"end": 8868,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8508,
											"end": 8874,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8508,
											"end": 8874,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8508,
											"end": 8874,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8508,
											"end": 8874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8880,
											"end": 9299,
											"name": "tag",
											"source": 14,
											"value": "159"
										},
										{
											"begin": 8880,
											"end": 9299,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9046,
											"end": 9050,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9084,
											"end": 9086,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9073,
											"end": 9082,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9069,
											"end": 9087,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9061,
											"end": 9087,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9061,
											"end": 9087,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9133,
											"end": 9142,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9127,
											"end": 9131,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9123,
											"end": 9143,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9119,
											"end": 9120,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9108,
											"end": 9117,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9104,
											"end": 9121,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9097,
											"end": 9144,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9161,
											"end": 9292,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 9287,
											"end": 9291,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9161,
											"end": 9292,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "245"
										},
										{
											"begin": 9161,
											"end": 9292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9161,
											"end": 9292,
											"name": "tag",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 9161,
											"end": 9292,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9153,
											"end": 9292,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9153,
											"end": 9292,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8880,
											"end": 9299,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8880,
											"end": 9299,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8880,
											"end": 9299,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8880,
											"end": 9299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9305,
											"end": 9528,
											"name": "tag",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 9305,
											"end": 9528,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9445,
											"end": 9479,
											"name": "PUSH",
											"source": 14,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9433,
											"end": 9439,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9429,
											"end": 9443,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9422,
											"end": 9480,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9514,
											"end": 9520,
											"name": "PUSH",
											"source": 14,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9509,
											"end": 9511,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9501,
											"end": 9507,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9497,
											"end": 9512,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9490,
											"end": 9521,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9305,
											"end": 9528,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9305,
											"end": 9528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9534,
											"end": 9900,
											"name": "tag",
											"source": 14,
											"value": "247"
										},
										{
											"begin": 9534,
											"end": 9900,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9676,
											"end": 9679,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9697,
											"end": 9764,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 9761,
											"end": 9763,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 9756,
											"end": 9759,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9697,
											"end": 9764,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 9697,
											"end": 9764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9697,
											"end": 9764,
											"name": "tag",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 9697,
											"end": 9764,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9690,
											"end": 9764,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9690,
											"end": 9764,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9773,
											"end": 9866,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 9862,
											"end": 9865,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9773,
											"end": 9866,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 9773,
											"end": 9866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9773,
											"end": 9866,
											"name": "tag",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 9773,
											"end": 9866,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9891,
											"end": 9893,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9886,
											"end": 9889,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9882,
											"end": 9894,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9875,
											"end": 9894,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9875,
											"end": 9894,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9534,
											"end": 9900,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9534,
											"end": 9900,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9534,
											"end": 9900,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9534,
											"end": 9900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9906,
											"end": 10325,
											"name": "tag",
											"source": 14,
											"value": "165"
										},
										{
											"begin": 9906,
											"end": 10325,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10072,
											"end": 10076,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10110,
											"end": 10112,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10099,
											"end": 10108,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10095,
											"end": 10113,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10087,
											"end": 10113,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10087,
											"end": 10113,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10159,
											"end": 10168,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10153,
											"end": 10157,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10149,
											"end": 10169,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10145,
											"end": 10146,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10134,
											"end": 10143,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10130,
											"end": 10147,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10123,
											"end": 10170,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10187,
											"end": 10318,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 10313,
											"end": 10317,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10187,
											"end": 10318,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "247"
										},
										{
											"begin": 10187,
											"end": 10318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10187,
											"end": 10318,
											"name": "tag",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 10187,
											"end": 10318,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10179,
											"end": 10318,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10179,
											"end": 10318,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9906,
											"end": 10325,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9906,
											"end": 10325,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9906,
											"end": 10325,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9906,
											"end": 10325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10331,
											"end": 10552,
											"name": "tag",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 10331,
											"end": 10552,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10471,
											"end": 10505,
											"name": "PUSH",
											"source": 14,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 10467,
											"end": 10468,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10459,
											"end": 10465,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10455,
											"end": 10469,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10448,
											"end": 10506,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10540,
											"end": 10544,
											"name": "PUSH",
											"source": 14,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10535,
											"end": 10537,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10527,
											"end": 10533,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10523,
											"end": 10538,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10516,
											"end": 10545,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10331,
											"end": 10552,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10331,
											"end": 10552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10558,
											"end": 10924,
											"name": "tag",
											"source": 14,
											"value": "249"
										},
										{
											"begin": 10558,
											"end": 10924,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10700,
											"end": 10703,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10721,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 10785,
											"end": 10787,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 10780,
											"end": 10783,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10721,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 10721,
											"end": 10788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10721,
											"end": 10788,
											"name": "tag",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 10721,
											"end": 10788,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10714,
											"end": 10788,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10714,
											"end": 10788,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10797,
											"end": 10890,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 10886,
											"end": 10889,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10797,
											"end": 10890,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 10797,
											"end": 10890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10797,
											"end": 10890,
											"name": "tag",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 10797,
											"end": 10890,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10915,
											"end": 10917,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10910,
											"end": 10913,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10906,
											"end": 10918,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10899,
											"end": 10918,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10899,
											"end": 10918,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10558,
											"end": 10924,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10558,
											"end": 10924,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10558,
											"end": 10924,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10558,
											"end": 10924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10930,
											"end": 11349,
											"name": "tag",
											"source": 14,
											"value": "168"
										},
										{
											"begin": 10930,
											"end": 11349,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11096,
											"end": 11100,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11134,
											"end": 11136,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11123,
											"end": 11132,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11119,
											"end": 11137,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11111,
											"end": 11137,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11111,
											"end": 11137,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11183,
											"end": 11192,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11177,
											"end": 11181,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11173,
											"end": 11193,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11169,
											"end": 11170,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11158,
											"end": 11167,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11154,
											"end": 11171,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11147,
											"end": 11194,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11211,
											"end": 11342,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 11337,
											"end": 11341,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11211,
											"end": 11342,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "249"
										},
										{
											"begin": 11211,
											"end": 11342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11211,
											"end": 11342,
											"name": "tag",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 11211,
											"end": 11342,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11203,
											"end": 11342,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11203,
											"end": 11342,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10930,
											"end": 11349,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10930,
											"end": 11349,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10930,
											"end": 11349,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10930,
											"end": 11349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11355,
											"end": 11534,
											"name": "tag",
											"source": 14,
											"value": "250"
										},
										{
											"begin": 11355,
											"end": 11534,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11495,
											"end": 11526,
											"name": "PUSH",
											"source": 14,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 11491,
											"end": 11492,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11483,
											"end": 11489,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11479,
											"end": 11493,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11472,
											"end": 11527,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11355,
											"end": 11534,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11355,
											"end": 11534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11540,
											"end": 11906,
											"name": "tag",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 11540,
											"end": 11906,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11682,
											"end": 11685,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11703,
											"end": 11770,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 11767,
											"end": 11769,
											"name": "PUSH",
											"source": 14,
											"value": "1D"
										},
										{
											"begin": 11762,
											"end": 11765,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11703,
											"end": 11770,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 11703,
											"end": 11770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11703,
											"end": 11770,
											"name": "tag",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 11703,
											"end": 11770,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11696,
											"end": 11770,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11696,
											"end": 11770,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11779,
											"end": 11872,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 11868,
											"end": 11871,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11779,
											"end": 11872,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "250"
										},
										{
											"begin": 11779,
											"end": 11872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11779,
											"end": 11872,
											"name": "tag",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 11779,
											"end": 11872,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11897,
											"end": 11899,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11892,
											"end": 11895,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11888,
											"end": 11900,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11881,
											"end": 11900,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11881,
											"end": 11900,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11540,
											"end": 11906,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11540,
											"end": 11906,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11540,
											"end": 11906,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11540,
											"end": 11906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11912,
											"end": 12331,
											"name": "tag",
											"source": 14,
											"value": "175"
										},
										{
											"begin": 11912,
											"end": 12331,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12078,
											"end": 12082,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12116,
											"end": 12118,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12105,
											"end": 12114,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12101,
											"end": 12119,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12093,
											"end": 12119,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12093,
											"end": 12119,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12165,
											"end": 12174,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12159,
											"end": 12163,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12155,
											"end": 12175,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12151,
											"end": 12152,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12140,
											"end": 12149,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12136,
											"end": 12153,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12129,
											"end": 12176,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12193,
											"end": 12324,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 12319,
											"end": 12323,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12193,
											"end": 12324,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 12193,
											"end": 12324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12193,
											"end": 12324,
											"name": "tag",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 12193,
											"end": 12324,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12185,
											"end": 12324,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12185,
											"end": 12324,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11912,
											"end": 12331,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11912,
											"end": 12331,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11912,
											"end": 12331,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11912,
											"end": 12331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12337,
											"end": 12561,
											"name": "tag",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 12337,
											"end": 12561,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12477,
											"end": 12511,
											"name": "PUSH",
											"source": 14,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 12473,
											"end": 12474,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12465,
											"end": 12471,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12461,
											"end": 12475,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12454,
											"end": 12512,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12546,
											"end": 12553,
											"name": "PUSH",
											"source": 14,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12541,
											"end": 12543,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12533,
											"end": 12539,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12529,
											"end": 12544,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12522,
											"end": 12554,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12337,
											"end": 12561,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12337,
											"end": 12561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12567,
											"end": 12933,
											"name": "tag",
											"source": 14,
											"value": "253"
										},
										{
											"begin": 12567,
											"end": 12933,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12709,
											"end": 12712,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12730,
											"end": 12797,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 12794,
											"end": 12796,
											"name": "PUSH",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 12789,
											"end": 12792,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12730,
											"end": 12797,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 12730,
											"end": 12797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12730,
											"end": 12797,
											"name": "tag",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 12730,
											"end": 12797,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12723,
											"end": 12797,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12723,
											"end": 12797,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12806,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 12895,
											"end": 12898,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12806,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 12806,
											"end": 12899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12806,
											"end": 12899,
											"name": "tag",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 12806,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12924,
											"end": 12926,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12919,
											"end": 12922,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12915,
											"end": 12927,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12908,
											"end": 12927,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12908,
											"end": 12927,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12567,
											"end": 12933,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12567,
											"end": 12933,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12567,
											"end": 12933,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12567,
											"end": 12933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12939,
											"end": 13358,
											"name": "tag",
											"source": 14,
											"value": "180"
										},
										{
											"begin": 12939,
											"end": 13358,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13105,
											"end": 13109,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13143,
											"end": 13145,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13132,
											"end": 13141,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13128,
											"end": 13146,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13120,
											"end": 13146,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13120,
											"end": 13146,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13192,
											"end": 13201,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13186,
											"end": 13190,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13182,
											"end": 13202,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 13178,
											"end": 13179,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13167,
											"end": 13176,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13163,
											"end": 13180,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13156,
											"end": 13203,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13220,
											"end": 13351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 13346,
											"end": 13350,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13220,
											"end": 13351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "253"
										},
										{
											"begin": 13220,
											"end": 13351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13220,
											"end": 13351,
											"name": "tag",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 13220,
											"end": 13351,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13212,
											"end": 13351,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13212,
											"end": 13351,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12939,
											"end": 13358,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12939,
											"end": 13358,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12939,
											"end": 13358,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12939,
											"end": 13358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13364,
											"end": 13586,
											"name": "tag",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 13364,
											"end": 13586,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13504,
											"end": 13538,
											"name": "PUSH",
											"source": 14,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 13500,
											"end": 13501,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13492,
											"end": 13498,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13488,
											"end": 13502,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13481,
											"end": 13539,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13573,
											"end": 13578,
											"name": "PUSH",
											"source": 14,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13568,
											"end": 13570,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13560,
											"end": 13566,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13556,
											"end": 13571,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13549,
											"end": 13579,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13364,
											"end": 13586,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13364,
											"end": 13586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13592,
											"end": 13958,
											"name": "tag",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 13592,
											"end": 13958,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13734,
											"end": 13737,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13755,
											"end": 13822,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 13819,
											"end": 13821,
											"name": "PUSH",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 13814,
											"end": 13817,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13755,
											"end": 13822,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 13755,
											"end": 13822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13755,
											"end": 13822,
											"name": "tag",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 13755,
											"end": 13822,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13748,
											"end": 13822,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13748,
											"end": 13822,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13831,
											"end": 13924,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 13920,
											"end": 13923,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13831,
											"end": 13924,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 13831,
											"end": 13924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13831,
											"end": 13924,
											"name": "tag",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 13831,
											"end": 13924,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13949,
											"end": 13951,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13944,
											"end": 13947,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13940,
											"end": 13952,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13933,
											"end": 13952,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13933,
											"end": 13952,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13592,
											"end": 13958,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13592,
											"end": 13958,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13592,
											"end": 13958,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13592,
											"end": 13958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13964,
											"end": 14383,
											"name": "tag",
											"source": 14,
											"value": "183"
										},
										{
											"begin": 13964,
											"end": 14383,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14130,
											"end": 14134,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14168,
											"end": 14170,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14157,
											"end": 14166,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14153,
											"end": 14171,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14145,
											"end": 14171,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14145,
											"end": 14171,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14217,
											"end": 14226,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14211,
											"end": 14215,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14207,
											"end": 14227,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 14203,
											"end": 14204,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14192,
											"end": 14201,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14188,
											"end": 14205,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14181,
											"end": 14228,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14245,
											"end": 14376,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 14371,
											"end": 14375,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14245,
											"end": 14376,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 14245,
											"end": 14376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14245,
											"end": 14376,
											"name": "tag",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 14245,
											"end": 14376,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14237,
											"end": 14376,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14237,
											"end": 14376,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13964,
											"end": 14383,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13964,
											"end": 14383,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13964,
											"end": 14383,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13964,
											"end": 14383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14389,
											"end": 14614,
											"name": "tag",
											"source": 14,
											"value": "256"
										},
										{
											"begin": 14389,
											"end": 14614,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14529,
											"end": 14563,
											"name": "PUSH",
											"source": 14,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 14525,
											"end": 14526,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14517,
											"end": 14523,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14513,
											"end": 14527,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14506,
											"end": 14564,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14598,
											"end": 14606,
											"name": "PUSH",
											"source": 14,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14593,
											"end": 14595,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14585,
											"end": 14591,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14581,
											"end": 14596,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14574,
											"end": 14607,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14389,
											"end": 14614,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14389,
											"end": 14614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14620,
											"end": 14986,
											"name": "tag",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 14620,
											"end": 14986,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14762,
											"end": 14765,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14783,
											"end": 14850,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 14847,
											"end": 14849,
											"name": "PUSH",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 14842,
											"end": 14845,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14783,
											"end": 14850,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 14783,
											"end": 14850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14783,
											"end": 14850,
											"name": "tag",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 14783,
											"end": 14850,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14776,
											"end": 14850,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14776,
											"end": 14850,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14859,
											"end": 14952,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 14948,
											"end": 14951,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14859,
											"end": 14952,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "256"
										},
										{
											"begin": 14859,
											"end": 14952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14859,
											"end": 14952,
											"name": "tag",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 14859,
											"end": 14952,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14977,
											"end": 14979,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14972,
											"end": 14975,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14968,
											"end": 14980,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14961,
											"end": 14980,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14961,
											"end": 14980,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14620,
											"end": 14986,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14620,
											"end": 14986,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14620,
											"end": 14986,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14620,
											"end": 14986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14992,
											"end": 15411,
											"name": "tag",
											"source": 14,
											"value": "188"
										},
										{
											"begin": 14992,
											"end": 15411,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15158,
											"end": 15162,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15196,
											"end": 15198,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15185,
											"end": 15194,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15181,
											"end": 15199,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15173,
											"end": 15199,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15173,
											"end": 15199,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15245,
											"end": 15254,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15239,
											"end": 15243,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15235,
											"end": 15255,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 15231,
											"end": 15232,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15220,
											"end": 15229,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15216,
											"end": 15233,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15209,
											"end": 15256,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15273,
											"end": 15404,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 15399,
											"end": 15403,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15273,
											"end": 15404,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 15273,
											"end": 15404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15273,
											"end": 15404,
											"name": "tag",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 15273,
											"end": 15404,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15265,
											"end": 15404,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15265,
											"end": 15404,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14992,
											"end": 15411,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14992,
											"end": 15411,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14992,
											"end": 15411,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14992,
											"end": 15411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15417,
											"end": 15599,
											"name": "tag",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 15417,
											"end": 15599,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15557,
											"end": 15591,
											"name": "PUSH",
											"source": 14,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 15553,
											"end": 15554,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15545,
											"end": 15551,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15541,
											"end": 15555,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15534,
											"end": 15592,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15417,
											"end": 15599,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15417,
											"end": 15599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15605,
											"end": 15971,
											"name": "tag",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 15605,
											"end": 15971,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15747,
											"end": 15750,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15768,
											"end": 15835,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 15832,
											"end": 15834,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15827,
											"end": 15830,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15768,
											"end": 15835,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 15768,
											"end": 15835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15768,
											"end": 15835,
											"name": "tag",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 15768,
											"end": 15835,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15761,
											"end": 15835,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15761,
											"end": 15835,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15844,
											"end": 15937,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 15933,
											"end": 15936,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15844,
											"end": 15937,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 15844,
											"end": 15937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15844,
											"end": 15937,
											"name": "tag",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 15844,
											"end": 15937,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15962,
											"end": 15964,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15957,
											"end": 15960,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15953,
											"end": 15965,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15946,
											"end": 15965,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15946,
											"end": 15965,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15605,
											"end": 15971,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15605,
											"end": 15971,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15605,
											"end": 15971,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15605,
											"end": 15971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15977,
											"end": 16396,
											"name": "tag",
											"source": 14,
											"value": "197"
										},
										{
											"begin": 15977,
											"end": 16396,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16143,
											"end": 16147,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16181,
											"end": 16183,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16170,
											"end": 16179,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16166,
											"end": 16184,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16158,
											"end": 16184,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16158,
											"end": 16184,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16230,
											"end": 16239,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16224,
											"end": 16228,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16220,
											"end": 16240,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 16216,
											"end": 16217,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16205,
											"end": 16214,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16201,
											"end": 16218,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16194,
											"end": 16241,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16258,
											"end": 16389,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 16384,
											"end": 16388,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16258,
											"end": 16389,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 16258,
											"end": 16389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16258,
											"end": 16389,
											"name": "tag",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 16258,
											"end": 16389,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16250,
											"end": 16389,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16250,
											"end": 16389,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15977,
											"end": 16396,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15977,
											"end": 16396,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15977,
											"end": 16396,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15977,
											"end": 16396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16402,
											"end": 16583,
											"name": "tag",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 16402,
											"end": 16583,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16542,
											"end": 16575,
											"name": "PUSH",
											"source": 14,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 16538,
											"end": 16539,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16530,
											"end": 16536,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16526,
											"end": 16540,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16519,
											"end": 16576,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16402,
											"end": 16583,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16402,
											"end": 16583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16589,
											"end": 16955,
											"name": "tag",
											"source": 14,
											"value": "261"
										},
										{
											"begin": 16589,
											"end": 16955,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16731,
											"end": 16734,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16752,
											"end": 16819,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 16816,
											"end": 16818,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 16811,
											"end": 16814,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16752,
											"end": 16819,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 16752,
											"end": 16819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16752,
											"end": 16819,
											"name": "tag",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 16752,
											"end": 16819,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16745,
											"end": 16819,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16745,
											"end": 16819,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16828,
											"end": 16921,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 16917,
											"end": 16920,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16828,
											"end": 16921,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 16828,
											"end": 16921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16828,
											"end": 16921,
											"name": "tag",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 16828,
											"end": 16921,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16946,
											"end": 16948,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16941,
											"end": 16944,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16937,
											"end": 16949,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16930,
											"end": 16949,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16930,
											"end": 16949,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16589,
											"end": 16955,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16589,
											"end": 16955,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16589,
											"end": 16955,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16589,
											"end": 16955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16961,
											"end": 17380,
											"name": "tag",
											"source": 14,
											"value": "201"
										},
										{
											"begin": 16961,
											"end": 17380,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17127,
											"end": 17131,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17165,
											"end": 17167,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 17154,
											"end": 17163,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17150,
											"end": 17168,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17142,
											"end": 17168,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17142,
											"end": 17168,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17214,
											"end": 17223,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17208,
											"end": 17212,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17204,
											"end": 17224,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 17200,
											"end": 17201,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17189,
											"end": 17198,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 17185,
											"end": 17202,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17178,
											"end": 17225,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17242,
											"end": 17373,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 17368,
											"end": 17372,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17242,
											"end": 17373,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "261"
										},
										{
											"begin": 17242,
											"end": 17373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17242,
											"end": 17373,
											"name": "tag",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 17242,
											"end": 17373,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17234,
											"end": 17373,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17234,
											"end": 17373,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16961,
											"end": 17380,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16961,
											"end": 17380,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16961,
											"end": 17380,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16961,
											"end": 17380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17386,
											"end": 17606,
											"name": "tag",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 17386,
											"end": 17606,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17526,
											"end": 17560,
											"name": "PUSH",
											"source": 14,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 17522,
											"end": 17523,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17514,
											"end": 17520,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17510,
											"end": 17524,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17503,
											"end": 17561,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17595,
											"end": 17598,
											"name": "PUSH",
											"source": 14,
											"value": "7300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17590,
											"end": 17592,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 17582,
											"end": 17588,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17578,
											"end": 17593,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17571,
											"end": 17599,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17386,
											"end": 17606,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17386,
											"end": 17606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17612,
											"end": 17978,
											"name": "tag",
											"source": 14,
											"value": "263"
										},
										{
											"begin": 17612,
											"end": 17978,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17754,
											"end": 17757,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17775,
											"end": 17842,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 17839,
											"end": 17841,
											"name": "PUSH",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 17834,
											"end": 17837,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 17775,
											"end": 17842,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 17775,
											"end": 17842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17775,
											"end": 17842,
											"name": "tag",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 17775,
											"end": 17842,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17768,
											"end": 17842,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17768,
											"end": 17842,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17851,
											"end": 17944,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 17940,
											"end": 17943,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17851,
											"end": 17944,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 17851,
											"end": 17944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17851,
											"end": 17944,
											"name": "tag",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 17851,
											"end": 17944,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17969,
											"end": 17971,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 17964,
											"end": 17967,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17960,
											"end": 17972,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17953,
											"end": 17972,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17953,
											"end": 17972,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17612,
											"end": 17978,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17612,
											"end": 17978,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17612,
											"end": 17978,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17612,
											"end": 17978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17984,
											"end": 18403,
											"name": "tag",
											"source": 14,
											"value": "209"
										},
										{
											"begin": 17984,
											"end": 18403,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18150,
											"end": 18154,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18188,
											"end": 18190,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18177,
											"end": 18186,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18173,
											"end": 18191,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18165,
											"end": 18191,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18165,
											"end": 18191,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18237,
											"end": 18246,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18231,
											"end": 18235,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18227,
											"end": 18247,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 18223,
											"end": 18224,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18212,
											"end": 18221,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18208,
											"end": 18225,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18201,
											"end": 18248,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18265,
											"end": 18396,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 18391,
											"end": 18395,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18265,
											"end": 18396,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "263"
										},
										{
											"begin": 18265,
											"end": 18396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18265,
											"end": 18396,
											"name": "tag",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 18265,
											"end": 18396,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18257,
											"end": 18396,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18257,
											"end": 18396,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17984,
											"end": 18403,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17984,
											"end": 18403,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17984,
											"end": 18403,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17984,
											"end": 18403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18409,
											"end": 18630,
											"name": "tag",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 18409,
											"end": 18630,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18549,
											"end": 18583,
											"name": "PUSH",
											"source": 14,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 18545,
											"end": 18546,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18537,
											"end": 18543,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18533,
											"end": 18547,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18526,
											"end": 18584,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18618,
											"end": 18622,
											"name": "PUSH",
											"source": 14,
											"value": "6365000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18613,
											"end": 18615,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18605,
											"end": 18611,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18601,
											"end": 18616,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18594,
											"end": 18623,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18409,
											"end": 18630,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18409,
											"end": 18630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18636,
											"end": 19002,
											"name": "tag",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 18636,
											"end": 19002,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18778,
											"end": 18781,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18799,
											"end": 18866,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 18863,
											"end": 18865,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 18858,
											"end": 18861,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18799,
											"end": 18866,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 18799,
											"end": 18866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18799,
											"end": 18866,
											"name": "tag",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 18799,
											"end": 18866,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18792,
											"end": 18866,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18792,
											"end": 18866,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18875,
											"end": 18968,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 18964,
											"end": 18967,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18875,
											"end": 18968,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 18875,
											"end": 18968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18875,
											"end": 18968,
											"name": "tag",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 18875,
											"end": 18968,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18993,
											"end": 18995,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 18988,
											"end": 18991,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18984,
											"end": 18996,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18977,
											"end": 18996,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18977,
											"end": 18996,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18636,
											"end": 19002,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18636,
											"end": 19002,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18636,
											"end": 19002,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18636,
											"end": 19002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19008,
											"end": 19427,
											"name": "tag",
											"source": 14,
											"value": "213"
										},
										{
											"begin": 19008,
											"end": 19427,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19174,
											"end": 19178,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19212,
											"end": 19214,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19201,
											"end": 19210,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19197,
											"end": 19215,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19189,
											"end": 19215,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19189,
											"end": 19215,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19261,
											"end": 19270,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19255,
											"end": 19259,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19251,
											"end": 19271,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 19247,
											"end": 19248,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19236,
											"end": 19245,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19232,
											"end": 19249,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19225,
											"end": 19272,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19289,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 19415,
											"end": 19419,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19289,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 19289,
											"end": 19420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19289,
											"end": 19420,
											"name": "tag",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 19289,
											"end": 19420,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19281,
											"end": 19420,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19281,
											"end": 19420,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19008,
											"end": 19427,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19008,
											"end": 19427,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19008,
											"end": 19427,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19008,
											"end": 19427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"NewFraxProtocol/contracts/LeveragePool/TestERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NewFraxProtocol/contracts/LeveragePool/TestERC20.sol\":\"TestERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"NewFraxProtocol/contracts/LeveragePool/TestERC20.sol\":{\"keccak256\":\"0x017a6eaa00c528eca13de0fca86b4a2a09d46cae026434b52febb6a5e97040da\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://dcaebd5439fe3a6d547f6e14c1a1516e6856919fabfdbd409a6f376e5d0a070b\",\"dweb:/ipfs/QmNbt54uYJS8CzADhqvvBNjVqyofVj8s3QpEvZZhLDJw84\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 625,
								"contract": "NewFraxProtocol/contracts/LeveragePool/TestERC20.sol:TestERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 631,
								"contract": "NewFraxProtocol/contracts/LeveragePool/TestERC20.sol:TestERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 633,
								"contract": "NewFraxProtocol/contracts/LeveragePool/TestERC20.sol:TestERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 635,
								"contract": "NewFraxProtocol/contracts/LeveragePool/TestERC20.sol:TestERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 637,
								"contract": "NewFraxProtocol/contracts/LeveragePool/TestERC20.sol:TestERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 396,
								"contract": "NewFraxProtocol/contracts/LeveragePool/TestERC20.sol:TestERC20",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							315
						],
						"Context": [
							1365
						],
						"ERC165": [
							1564
						],
						"IAccessControl": [
							388
						],
						"IERC165": [
							1576
						],
						"Math": [
							2441
						],
						"Strings": [
							1540
						]
					},
					"id": 316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 389,
							"src": "133:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 1366,
							"src": "164:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../utils/Strings.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 1541,
							"src": "195:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 1565,
							"src": "226:43:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Context",
										"nameLocations": [
											"1841:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1365,
										"src": "1841:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "1841:7:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IAccessControl",
										"nameLocations": [
											"1850:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 388,
										"src": "1850:14:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1850:14:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC165",
										"nameLocations": [
											"1866:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1564,
										"src": "1866:6:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1866:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "271:1534:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 315,
							"linearizedBaseContracts": [
								315,
								1564,
								1576,
								388,
								1365
							],
							"name": "AccessControl",
							"nameLocation": "1824:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 19,
									"members": [
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "1930:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1905:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 15,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1905:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 14,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1924:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "1955:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1947:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 17,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1947:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "1886:8:0",
									"nodeType": "StructDefinition",
									"scope": 315,
									"src": "1879:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2014:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 315,
									"src": "1977:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 23,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 20,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1985:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1977:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 22,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 21,
												"name": "RoleData",
												"nameLocations": [
													"1996:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 19,
												"src": "1996:8:0"
											},
											"referencedDeclaration": 19,
											"src": "1996:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$19_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 27,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2051:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 315,
									"src": "2027:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 25,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2027:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 26,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2072:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2495:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 33,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2516:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 32,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															131
														],
														"referencedDeclaration": 92,
														"src": "2505:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2505:16:0"
											},
											{
												"id": 36,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "2083:375:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 38,
									"name": "onlyRole",
									"nameLocation": "2472:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2489:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "2481:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 29,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2480:14:0"
									},
									"src": "2463:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1563
									],
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "2697:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 47,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "2714:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 49,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 388,
																		"src": "2734:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$388_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$388_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 48,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2729:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2729:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$388",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2750:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2729:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2714:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 55,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "2789:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 53,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2765:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$315_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2771:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1563,
															"src": "2765:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2765:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2714:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 46,
												"id": 58,
												"nodeType": "Return",
												"src": "2707:94:0"
											}
										]
									},
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "2545:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2615:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 43,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2673:8:0"
									},
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2640:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2633:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 40,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2633:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2632:20:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2691:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 44,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2691:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2690:6:0"
									},
									"scope": 315,
									"src": "2606:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										355
									],
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "2987:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 71,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "3004:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 73,
															"indexExpression": {
																"id": 72,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "3011:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3004:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3017:7:0",
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "3004:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 76,
													"indexExpression": {
														"id": 75,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "3025:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3004:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 70,
												"id": 77,
												"nodeType": "Return",
												"src": "2997:36:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2814:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2904:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2963:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2920:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2912:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 62,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2934:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2926:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:31:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2981:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2981:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2980:6:0"
									},
									"scope": 315,
									"src": "2895:145:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3390:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 86,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "3411:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 87,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "3417:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3417:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 85,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															131
														],
														"referencedDeclaration": 131,
														"src": "3400:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3400:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "3400:30:0"
											}
										]
									},
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "3046:283:0",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3343:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3362:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3354:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 81,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3353:14:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3390:0:0"
									},
									"scope": 315,
									"src": "3334:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "3791:406:0",
										"statements": [
											{
												"condition": {
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3805:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 101,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "3814:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 102,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3820:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 100,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "3806:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3806:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "3801:390:0",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "3830:361:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 110,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3938:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"id": 113,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 97,
																								"src": "4009:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 111,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1540,
																								"src": "3989:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$1540_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "3997:11:0",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1539,
																							"src": "3989:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (address) pure returns (string memory)"
																							}
																						},
																						"id": 114,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3989:28:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 115,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4043:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 120,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 95,
																										"src": "4116:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 119,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4108:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 118,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4108:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 121,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4108:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 122,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4123:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 116,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1540,
																								"src": "4088:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$1540_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 117,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4096:11:0",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1519,
																							"src": "4088:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 123,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4088:38:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 108,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "3896:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 109,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "3900:12:0",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "3896:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 124,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3896:252:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3868:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 106,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3868:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3868:298:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 105,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3844:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3844:336:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 127,
															"nodeType": "ExpressionStatement",
															"src": "3844:336:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3443:270:0",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3727:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3746:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3738:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3760:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3752:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3752:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3737:31:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3791:0:0"
									},
									"scope": 315,
									"src": "3718:479:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										363
									],
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "4461:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 140,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "4478:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 142,
														"indexExpression": {
															"id": 141,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4485:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4478:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$19_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4491:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 18,
													"src": "4478:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 139,
												"id": 144,
												"nodeType": "Return",
												"src": "4471:29:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4203:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4387:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 136,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4434:8:0"
									},
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4408:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "4400:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 133,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4399:14:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "4452:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 137,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4451:9:0"
									},
									"scope": 315,
									"src": "4378:129:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										371
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4906:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "4927:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4933:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "4916:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4916:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4916:25:0"
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "4513:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "4899:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "4886:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4886:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4877:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "4877:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4877:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4812:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 153,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4868:8:0"
									},
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4830:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4822:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 148,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4844:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4836:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4821:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4906:0:0"
									},
									"scope": 315,
									"src": "4803:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										379
									],
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "5332:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 181,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5354:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 182,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5360:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 180,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "5342:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5342:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "5342:26:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4954:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 176,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5325:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 175,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "5312:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5312:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 178,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 174,
												"name": "onlyRole",
												"nameLocations": [
													"5303:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "5303:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5303:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5237:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 173,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5294:8:0"
									},
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5256:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "5248:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5248:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5270:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "5262:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5247:31:0"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5332:0:0"
									},
									"scope": 315,
									"src": "5228:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										387
									],
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "5989:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 196,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 191,
																"src": "6007:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 197,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1355,
																	"src": "6018:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6018:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6007:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6032:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 195,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5999:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5999:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "5999:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "6105:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 205,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "6111:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 203,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "6093:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6093:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "6093:26:0"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "5381:526:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5921:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 193,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5980:8:0"
									},
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5942:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5934:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 188,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5934:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5956:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5948:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5948:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5933:31:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5989:0:0"
									},
									"scope": 315,
									"src": "5912:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "6879:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 218,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "6900:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 219,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "6906:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 217,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "6889:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6889:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "6889:25:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "6132:674:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "6820:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6839:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "6831:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6831:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6853:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "6845:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6830:31:0"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6879:0:0"
									},
									"scope": 315,
									"src": "6811:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "7119:174:0",
										"statements": [
											{
												"assignments": [
													232
												],
												"declarations": [
													{
														"constant": false,
														"id": 232,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "7137:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 250,
														"src": "7129:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 231,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7129:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 236,
												"initialValue": {
													"arguments": [
														{
															"id": 234,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "7170:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 233,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "7157:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7157:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7129:46:0"
											},
											{
												"expression": {
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 237,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "7185:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 239,
															"indexExpression": {
																"id": 238,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 226,
																"src": "7192:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7185:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 240,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7198:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "7185:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 241,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "7210:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7185:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "7185:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 245,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "7251:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 246,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7257:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 247,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "7276:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 244,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "7234:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7234:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 249,
												"nodeType": "EmitStatement",
												"src": "7229:57:0"
											}
										]
									},
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "6927:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "7055:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7077:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "7069:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 225,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "7091:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "7083:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 227,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7083:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7068:33:0"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7119:0:0"
									},
									"scope": 315,
									"src": "7046:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "7529:165:0",
										"statements": [
											{
												"condition": {
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7543:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 260,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "7552:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 261,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 256,
																"src": "7558:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 259,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "7544:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7544:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 281,
												"nodeType": "IfStatement",
												"src": "7539:149:0",
												"trueBody": {
													"id": 280,
													"nodeType": "Block",
													"src": "7568:120:0",
													"statements": [
														{
															"expression": {
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 264,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7582:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 266,
																			"indexExpression": {
																				"id": 265,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 254,
																				"src": "7589:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7582:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 267,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7595:7:0",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7582:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 269,
																	"indexExpression": {
																		"id": 268,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "7603:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7582:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7614:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7582:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 272,
															"nodeType": "ExpressionStatement",
															"src": "7582:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 274,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 254,
																		"src": "7649:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 275,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "7655:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 276,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1355,
																			"src": "7664:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7664:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 273,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "7637:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7637:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 279,
															"nodeType": "EmitStatement",
															"src": "7632:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "7299:157:0",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7470:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7489:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "7481:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 253,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "7495:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7495:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7480:31:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7529:0:0"
									},
									"scope": 315,
									"src": "7461:233:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "7934:165:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 292,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "7956:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 293,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "7962:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 291,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "7948:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7948:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 312,
												"nodeType": "IfStatement",
												"src": "7944:149:0",
												"trueBody": {
													"id": 311,
													"nodeType": "Block",
													"src": "7972:121:0",
													"statements": [
														{
															"expression": {
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 295,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7986:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 297,
																			"indexExpression": {
																				"id": 296,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 286,
																				"src": "7993:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7986:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 298,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7999:7:0",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7986:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 300,
																	"indexExpression": {
																		"id": 299,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "8007:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7986:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8018:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "7986:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 303,
															"nodeType": "ExpressionStatement",
															"src": "7986:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 305,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 286,
																		"src": "8054:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 306,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "8060:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 307,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1355,
																			"src": "8069:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8069:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 304,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "8042:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8042:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 310,
															"nodeType": "EmitStatement",
															"src": "8037:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "7700:160:0",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7874:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7894:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "7886:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 285,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7908:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "7900:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7900:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7885:31:0"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7934:0:0"
									},
									"scope": 315,
									"src": "7865:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 316,
							"src": "1806:6295:0",
							"usedErrors": [],
							"usedEvents": [
								327,
								336,
								345
							]
						}
					],
					"src": "108:7994:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							388
						]
					},
					"id": 389,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 318,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 388,
							"linearizedBaseContracts": [
								388
							],
							"name": "IAccessControl",
							"nameLocation": "219:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "240:292:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 327,
									"name": "RoleAdminChanged",
									"nameLocation": "543:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "576:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "560:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 320,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "598:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "582:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 322,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "633:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "617:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 324,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:87:1"
									},
									"src": "537:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "653:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 336,
									"name": "RoleGranted",
									"nameLocation": "876:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "904:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "888:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "926:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "910:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "951:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "935:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:71:1"
									},
									"src": "870:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "965:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 345,
									"name": "RoleRevoked",
									"nameLocation": "1251:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1279:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1263:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1301:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1285:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1326:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1310:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:71:1"
									},
									"src": "1245:89:1"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1340:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1430:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1446:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1438:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1452:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:31:1"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1492:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 352,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1492:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:6:1"
									},
									"scope": 388,
									"src": "1421:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "1504:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1702:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1723:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1715:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 357,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:14:1"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1752:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 360,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:9:1"
									},
									"scope": 388,
									"src": "1693:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "1767:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2020:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2038:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2030:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 365,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2052:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2044:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:31:1"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:0:1"
									},
									"scope": 388,
									"src": "2011:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "2076:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2313:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2332:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2324:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 373,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2346:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2338:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2338:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:31:1"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:0:1"
									},
									"scope": 388,
									"src": "2304:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "2370:480:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2864:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2885:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2877:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 381,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2899:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2891:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:31:1"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2916:0:1"
									},
									"scope": 388,
									"src": "2855:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 389,
							"src": "209:2710:1",
							"usedErrors": [],
							"usedEvents": [
								327,
								336,
								345
							]
						}
					],
					"src": "94:2826:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1365
						],
						"Ownable": [
							501
						]
					},
					"id": 502,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 390,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 391,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 502,
							"sourceUnit": 1366,
							"src": "127:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 393,
										"name": "Context",
										"nameLocations": [
											"683:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1365,
										"src": "683:7:2"
									},
									"id": 394,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:2"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 392,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 501,
							"linearizedBaseContracts": [
								501,
								1365
							],
							"name": "Ownable",
							"nameLocation": "672:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 396,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 501,
									"src": "697:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 395,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 402,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "753:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "784:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:2"
									},
									"src": "726:84:2"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "926:49:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 407,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "955:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 406,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "936:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "936:32:2"
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:2",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 412,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:2"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:2"
									},
									"scope": 501,
									"src": "912:63:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "1084:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 415,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "1094:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:2"
											},
											{
												"id": 418,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:2"
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 420,
									"name": "onlyOwner",
									"nameLocation": "1072:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:2"
									},
									"src": "1063:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "1256:30:2",
										"statements": [
											{
												"expression": {
													"id": 426,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 396,
													"src": "1273:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 425,
												"id": 427,
												"nodeType": "Return",
												"src": "1266:13:2"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:2"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "1247:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:2"
									},
									"scope": 501,
									"src": "1201:85:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 442,
										"nodeType": "Block",
										"src": "1404:85:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 434,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 429,
																	"src": "1422:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 436,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1355,
																	"src": "1433:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:2"
											}
										]
									},
									"documentation": {
										"id": 430,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:2",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:2"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:2"
									},
									"scope": 501,
									"src": "1359:130:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "1885:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 450,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 449,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "1895:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:2"
											}
										]
									},
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 447,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 446,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 420,
												"src": "1875:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:2"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:2"
									},
									"scope": 501,
									"src": "1831:101:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "2151:128:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 466,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "2169:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 467,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 465,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 476,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "2263:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 475,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "2244:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:2"
											}
										]
									},
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 463,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 462,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 420,
												"src": "2141:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2108:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:2"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:2"
									},
									"scope": 501,
									"src": "2081:198:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "2496:124:2",
										"statements": [
											{
												"assignments": [
													487
												],
												"declarations": [
													{
														"constant": false,
														"id": 487,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 499,
														"src": "2506:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 486,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 489,
												"initialValue": {
													"id": 488,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 396,
													"src": "2525:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:2"
											},
											{
												"expression": {
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 490,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "2541:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 491,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "2550:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 495,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "2594:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "2604:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 494,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "2573:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 498,
												"nodeType": "EmitStatement",
												"src": "2568:45:2"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "2461:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:2"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:2"
									},
									"scope": 501,
									"src": "2433:187:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 502,
							"src": "654:1968:2",
							"usedErrors": [],
							"usedEvents": [
								402
							]
						}
					],
					"src": "102:2521:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1365
						],
						"Pausable": [
							609
						]
					},
					"id": 610,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 503,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 504,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 610,
							"sourceUnit": 1366,
							"src": "130:30:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 506,
										"name": "Context",
										"nameLocations": [
											"632:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1365,
										"src": "632:7:3"
									},
									"id": 507,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:3"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 505,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:3",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 609,
							"linearizedBaseContracts": [
								609,
								1365
							],
							"name": "Pausable",
							"nameLocation": "620:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:3",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 512,
									"name": "Paused",
									"nameLocation": "730:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "737:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:3"
									},
									"src": "724:30:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:3",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 517,
									"name": "Unpaused",
									"nameLocation": "841:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "850:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:3"
									},
									"src": "835:32:3"
								},
								{
									"constant": false,
									"id": 519,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 609,
									"src": "873:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 518,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 527,
										"nodeType": "Block",
										"src": "986:32:3",
										"statements": [
											{
												"expression": {
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 523,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "996:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 524,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "996:15:3"
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:3",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 528,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:3"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:3"
									},
									"scope": 609,
									"src": "972:46:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "1229:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 531,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "1239:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:3"
											},
											{
												"id": 534,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:3"
											}
										]
									},
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:3",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 536,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:3"
									},
									"src": "1204:72:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "1476:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 539,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "1486:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 541,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:3"
											},
											{
												"id": 542,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:3"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:3",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 544,
									"name": "whenPaused",
									"nameLocation": "1463:10:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:3"
									},
									"src": "1454:66:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "1668:31:3",
										"statements": [
											{
												"expression": {
													"id": 550,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 519,
													"src": "1685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 549,
												"id": 551,
												"nodeType": "Return",
												"src": "1678:14:3"
											}
										]
									},
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:3",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:3"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "1662:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 547,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:3"
									},
									"scope": 609,
									"src": "1615:84:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "1818:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:3",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 558,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 553,
																	"src": "1837:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 557,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:3"
											}
										]
									},
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:3",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:3"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:3"
									},
									"scope": 609,
									"src": "1767:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "1993:58:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 570,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 553,
																"src": "2011:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 569,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:3"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:3",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:3"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:3"
									},
									"scope": 609,
									"src": "1945:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 591,
										"nodeType": "Block",
										"src": "2235:66:3",
										"statements": [
											{
												"expression": {
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 582,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "2245:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 587,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "2281:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 586,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "2274:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 590,
												"nodeType": "EmitStatement",
												"src": "2269:25:3"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:3",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 592,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 580,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 579,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 536,
												"src": "2221:13:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:3"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:3"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:3"
									},
									"scope": 609,
									"src": "2186:115:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "2481:69:3",
										"statements": [
											{
												"expression": {
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 598,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "2491:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 603,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "2530:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 602,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "2521:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "EmitStatement",
												"src": "2516:27:3"
											}
										]
									},
									"documentation": {
										"id": 593,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:3",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 596,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 595,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 544,
												"src": "2470:10:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:3"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:3"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:3"
									},
									"scope": 609,
									"src": "2433:117:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 610,
							"src": "602:1950:3",
							"usedErrors": [],
							"usedEvents": [
								512,
								517
							]
						}
					],
					"src": "105:2448:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1365
						],
						"ERC20": [
							1196
						],
						"IERC20": [
							1274
						],
						"IERC20Metadata": [
							1343
						]
					},
					"id": 1197,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 611,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 612,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1197,
							"sourceUnit": 1275,
							"src": "130:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 613,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1197,
							"sourceUnit": 1344,
							"src": "153:41:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 614,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1197,
							"sourceUnit": 1366,
							"src": "195:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 616,
										"name": "Context",
										"nameLocations": [
											"1419:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1365,
										"src": "1419:7:4"
									},
									"id": 617,
									"nodeType": "InheritanceSpecifier",
									"src": "1419:7:4"
								},
								{
									"baseName": {
										"id": 618,
										"name": "IERC20",
										"nameLocations": [
											"1428:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1274,
										"src": "1428:6:4"
									},
									"id": 619,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:6:4"
								},
								{
									"baseName": {
										"id": 620,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1436:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1343,
										"src": "1436:14:4"
									},
									"id": 621,
									"nodeType": "InheritanceSpecifier",
									"src": "1436:14:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 615,
								"nodeType": "StructuredDocumentation",
								"src": "230:1170:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 1196,
							"linearizedBaseContracts": [
								1196,
								1343,
								1274,
								1365
							],
							"name": "ERC20",
							"nameLocation": "1410:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 625,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1493:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1196,
									"src": "1457:45:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 624,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 622,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1465:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1457:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 623,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1476:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 631,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1565:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1196,
									"src": "1509:67:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 630,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 626,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1517:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1509:47:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 629,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 627,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1536:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1528:27:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 628,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1547:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 633,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1599:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1196,
									"src": "1583:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 632,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1583:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 635,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1633:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1196,
									"src": "1618:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 634,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1618:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 637,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1659:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1196,
									"src": "1644:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 636,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1644:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "2032:57:4",
										"statements": [
											{
												"expression": {
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 645,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "2042:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 646,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "2050:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2042:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 648,
												"nodeType": "ExpressionStatement",
												"src": "2042:13:4"
											},
											{
												"expression": {
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 649,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "2065:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 650,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "2075:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2065:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "2065:17:4"
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "1673:298:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 654,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2002:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "1988:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 639,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1988:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2023:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "2009:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 641,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:44:4"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2032:0:4"
									},
									"scope": 1196,
									"src": "1976:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1330
									],
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "2223:29:4",
										"statements": [
											{
												"expression": {
													"id": 661,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 635,
													"src": "2240:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 660,
												"id": 662,
												"nodeType": "Return",
												"src": "2233:12:4"
											}
										]
									},
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "2095:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2163:4:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 657,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2190:8:4"
									},
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:2:4"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "2208:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 658,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2208:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2207:15:4"
									},
									"scope": 1196,
									"src": "2154:98:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1336
									],
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "2436:31:4",
										"statements": [
											{
												"expression": {
													"id": 671,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 637,
													"src": "2453:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 670,
												"id": 672,
												"nodeType": "Return",
												"src": "2446:14:4"
											}
										]
									},
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "2258:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2374:6:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 667,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2403:8:4"
									},
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2380:2:4"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "2421:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 668,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2421:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2420:15:4"
									},
									"scope": 1196,
									"src": "2365:102:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1342
									],
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "3156:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3173:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 680,
												"id": 682,
												"nodeType": "Return",
												"src": "3166:9:4"
											}
										]
									},
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "2473:613:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3100:8:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 677,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3131:8:4"
									},
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3108:2:4"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "3149:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 678,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3149:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3148:7:4"
									},
									"scope": 1196,
									"src": "3091:91:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1223
									],
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "3312:36:4",
										"statements": [
											{
												"expression": {
													"id": 691,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 633,
													"src": "3329:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 690,
												"id": 692,
												"nodeType": "Return",
												"src": "3322:19:4"
											}
										]
									},
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "3188:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3251:11:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 687,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3285:8:4"
									},
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3262:2:4"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "3303:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3302:9:4"
									},
									"scope": 1196,
									"src": "3242:106:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1231
									],
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "3489:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 703,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "3506:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 705,
													"indexExpression": {
														"id": 704,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "3516:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3506:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 702,
												"id": 706,
												"nodeType": "Return",
												"src": "3499:25:4"
											}
										]
									},
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "3354:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3415:9:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 699,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3462:8:4"
									},
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3433:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "3425:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3425:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3424:17:4"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "3480:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3480:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3479:9:4"
									},
									"scope": 1196,
									"src": "3406:125:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1241
									],
									"body": {
										"id": 732,
										"nodeType": "Block",
										"src": "3812:104:4",
										"statements": [
											{
												"assignments": [
													720
												],
												"declarations": [
													{
														"constant": false,
														"id": 720,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3830:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 732,
														"src": "3822:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 719,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3822:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 723,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 721,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1355,
														"src": "3838:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3838:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3822:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 725,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "3870:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 726,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "3877:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 727,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "3881:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 724,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "3860:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3860:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "3860:28:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3905:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 718,
												"id": 731,
												"nodeType": "Return",
												"src": "3898:11:4"
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "3537:185:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3736:8:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 715,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3788:8:4"
									},
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3753:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "3745:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3765:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "3757:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3757:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:28:4"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "3806:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 716,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3806:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3805:6:4"
									},
									"scope": 1196,
									"src": "3727:189:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1251
									],
									"body": {
										"id": 750,
										"nodeType": "Block",
										"src": "4072:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 744,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "4089:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 746,
														"indexExpression": {
															"id": 745,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "4101:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4089:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 748,
													"indexExpression": {
														"id": 747,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "4108:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4089:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 743,
												"id": 749,
												"nodeType": "Return",
												"src": "4082:34:4"
											}
										]
									},
									"documentation": {
										"id": 734,
										"nodeType": "StructuredDocumentation",
										"src": "3922:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3983:9:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 740,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4045:8:4"
									},
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4001:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "3993:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3993:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4016:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "4008:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3992:32:4"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "4063:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4063:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4062:9:4"
									},
									"scope": 1196,
									"src": "3974:149:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1261
									],
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "4520:108:4",
										"statements": [
											{
												"assignments": [
													763
												],
												"declarations": [
													{
														"constant": false,
														"id": 763,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4538:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 775,
														"src": "4530:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 762,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4530:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 764,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1355,
														"src": "4546:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4546:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4530:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 768,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "4577:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 769,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "4584:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 770,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "4593:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 767,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "4568:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4568:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "4568:32:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4617:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 761,
												"id": 774,
												"nodeType": "Return",
												"src": "4610:11:4"
											}
										]
									},
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "4129:297:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4440:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 758,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4496:8:4"
									},
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4456:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "4448:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4448:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4473:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "4465:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4465:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4447:33:4"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "4514:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 759,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4514:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4513:6:4"
									},
									"scope": 1196,
									"src": "4431:197:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1273
									],
									"body": {
										"id": 808,
										"nodeType": "Block",
										"src": "5323:153:4",
										"statements": [
											{
												"assignments": [
													790
												],
												"declarations": [
													{
														"constant": false,
														"id": 790,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5341:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 808,
														"src": "5333:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 789,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5333:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 793,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 791,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1355,
														"src": "5351:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5351:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5333:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 795,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "5389:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 796,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "5395:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 797,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "5404:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 794,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "5373:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5373:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "5373:38:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 801,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "5431:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 802,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "5437:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 803,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "5441:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 800,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "5421:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5421:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "5421:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5465:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 788,
												"id": 807,
												"nodeType": "Return",
												"src": "5458:11:4"
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "4634:551:4",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5199:12:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 785,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5299:8:4"
									},
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5229:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "5221:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5221:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5251:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "5243:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5243:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5271:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "5263:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5263:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5211:72:4"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "5317:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 786,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5317:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5316:6:4"
									},
									"scope": 1196,
									"src": "5190:286:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "5965:140:4",
										"statements": [
											{
												"assignments": [
													820
												],
												"declarations": [
													{
														"constant": false,
														"id": 820,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5983:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 837,
														"src": "5975:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 819,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5975:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 823,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 821,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1355,
														"src": "5991:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5991:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5975:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 825,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "6022:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 826,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "6029:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 828,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "6048:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 829,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 812,
																		"src": "6055:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 827,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "6038:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6038:25:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 831,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "6066:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6038:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 824,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "6013:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6013:64:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "6013:64:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6094:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 818,
												"id": 836,
												"nodeType": "Return",
												"src": "6087:11:4"
											}
										]
									},
									"documentation": {
										"id": 810,
										"nodeType": "StructuredDocumentation",
										"src": "5482:384:4",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5880:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5906:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "5898:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5923:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "5915:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5915:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:37:4"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "5959:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 816,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5959:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5958:6:4"
									},
									"scope": 1196,
									"src": "5871:234:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "6691:328:4",
										"statements": [
											{
												"assignments": [
													849
												],
												"declarations": [
													{
														"constant": false,
														"id": 849,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6709:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 878,
														"src": "6701:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 848,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6701:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 852,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 850,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1355,
														"src": "6717:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6717:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6701:28:4"
											},
											{
												"assignments": [
													854
												],
												"declarations": [
													{
														"constant": false,
														"id": 854,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6747:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 878,
														"src": "6739:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 853,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6739:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 859,
												"initialValue": {
													"arguments": [
														{
															"id": 856,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "6776:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 857,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "6783:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 855,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "6766:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6766:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6739:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 861,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 854,
																"src": "6809:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 862,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 843,
																"src": "6829:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6809:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6846:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 860,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6801:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6801:85:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "6801:85:4"
											},
											{
												"id": 875,
												"nodeType": "UncheckedBlock",
												"src": "6896:95:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 868,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 849,
																	"src": "6929:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 869,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 841,
																	"src": "6936:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 870,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 854,
																		"src": "6945:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 871,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 843,
																		"src": "6964:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6945:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 867,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1130,
																"src": "6920:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6920:60:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 874,
														"nodeType": "ExpressionStatement",
														"src": "6920:60:4"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7008:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 847,
												"id": 877,
												"nodeType": "Return",
												"src": "7001:11:4"
											}
										]
									},
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "6111:476:4",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6601:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6627:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "6619:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6619:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6644:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "6636:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6636:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6618:42:4"
									},
									"returnParameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "6685:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 845,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6685:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6684:6:4"
									},
									"scope": 1196,
									"src": "6592:427:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "7581:710:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 890,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 882,
																"src": "7599:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7615:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7607:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 891,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7607:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7607:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7599:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7619:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 889,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7591:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7591:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 898,
												"nodeType": "ExpressionStatement",
												"src": "7591:68:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 900,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 884,
																"src": "7677:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7691:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7683:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 901,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7683:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7683:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7677:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7695:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 899,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7669:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7669:64:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "7669:64:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 910,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "7765:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 911,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "7771:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 912,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "7775:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 909,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "7744:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7744:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 914,
												"nodeType": "ExpressionStatement",
												"src": "7744:38:4"
											},
											{
												"assignments": [
													916
												],
												"declarations": [
													{
														"constant": false,
														"id": 916,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7801:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 955,
														"src": "7793:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 915,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7793:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 920,
												"initialValue": {
													"baseExpression": {
														"id": 917,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "7815:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 919,
													"indexExpression": {
														"id": 918,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "7825:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7815:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7793:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 922,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 916,
																"src": "7848:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 923,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "7863:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7848:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7871:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 921,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7840:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7840:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "7840:72:4"
											},
											{
												"id": 942,
												"nodeType": "UncheckedBlock",
												"src": "7922:273:4",
												"statements": [
													{
														"expression": {
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 928,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 625,
																	"src": "7946:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 930,
																"indexExpression": {
																	"id": 929,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 882,
																	"src": "7956:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7946:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 931,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 916,
																	"src": "7964:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 932,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 886,
																	"src": "7978:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7964:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7946:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 935,
														"nodeType": "ExpressionStatement",
														"src": "7946:38:4"
													},
													{
														"expression": {
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 936,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 625,
																	"src": "8161:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 938,
																"indexExpression": {
																	"id": 937,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "8171:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8161:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 939,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "8178:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8161:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 941,
														"nodeType": "ExpressionStatement",
														"src": "8161:23:4"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 944,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "8219:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 945,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "8225:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 946,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "8229:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 943,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "8210:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8210:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 948,
												"nodeType": "EmitStatement",
												"src": "8205:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 950,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "8267:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 951,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "8273:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 952,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "8277:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 949,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "8247:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8247:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 954,
												"nodeType": "ExpressionStatement",
												"src": "8247:37:4"
											}
										]
									},
									"documentation": {
										"id": 880,
										"nodeType": "StructuredDocumentation",
										"src": "7025:443:4",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7482:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7509:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "7501:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7501:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7531:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "7523:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7523:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7551:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "7543:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7543:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7491:72:4"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7581:0:4"
									},
									"scope": 1196,
									"src": "7473:818:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "8632:470:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 965,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 959,
																"src": "8650:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 968,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8669:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8661:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 966,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8661:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8661:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8650:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8673:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 964,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8642:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8642:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 973,
												"nodeType": "ExpressionStatement",
												"src": "8642:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8747:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8739:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 975,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8739:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8739:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 979,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "8751:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 980,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "8760:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 974,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "8718:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8718:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 982,
												"nodeType": "ExpressionStatement",
												"src": "8718:49:4"
											},
											{
												"expression": {
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 983,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "8778:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 984,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "8794:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8778:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 986,
												"nodeType": "ExpressionStatement",
												"src": "8778:22:4"
											},
											{
												"id": 993,
												"nodeType": "UncheckedBlock",
												"src": "8810:175:4",
												"statements": [
													{
														"expression": {
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 987,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 625,
																	"src": "8946:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 989,
																"indexExpression": {
																	"id": 988,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "8956:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8946:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 990,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "8968:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8946:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 992,
														"nodeType": "ExpressionStatement",
														"src": "8946:28:4"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9016:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9008:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 995,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9008:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9008:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 999,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "9020:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1000,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "9029:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 994,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "8999:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8999:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1002,
												"nodeType": "EmitStatement",
												"src": "8994:42:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9075:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9067:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1004,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9067:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9067:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1008,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "9079:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1009,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "9088:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1003,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "9047:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9047:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "9047:48:4"
											}
										]
									},
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "8297:265:4",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8576:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "8582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8607:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "8599:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8599:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8581:33:4"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8632:0:4"
									},
									"scope": 1196,
									"src": "8567:535:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1084,
										"nodeType": "Block",
										"src": "9487:594:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1022,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "9505:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1025,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9524:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9516:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1023,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9516:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9516:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9505:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9528:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 1021,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9497:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9497:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1030,
												"nodeType": "ExpressionStatement",
												"src": "9497:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1032,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "9596:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9613:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9605:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1033,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9605:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9605:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1037,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "9617:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1031,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "9575:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9575:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "9575:49:4"
											},
											{
												"assignments": [
													1041
												],
												"declarations": [
													{
														"constant": false,
														"id": 1041,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9643:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 1084,
														"src": "9635:22:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1040,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9635:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1045,
												"initialValue": {
													"baseExpression": {
														"id": 1042,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "9660:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1044,
													"indexExpression": {
														"id": 1043,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1016,
														"src": "9670:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9660:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9635:43:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1047,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1041,
																"src": "9696:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1048,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "9714:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9696:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9722:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 1046,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9688:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9688:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "9688:71:4"
											},
											{
												"id": 1065,
												"nodeType": "UncheckedBlock",
												"src": "9769:194:4",
												"statements": [
													{
														"expression": {
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1053,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 625,
																	"src": "9793:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1055,
																"indexExpression": {
																	"id": 1054,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1016,
																	"src": "9803:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9793:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1056,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1041,
																	"src": "9814:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1057,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1018,
																	"src": "9831:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9814:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9793:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1060,
														"nodeType": "ExpressionStatement",
														"src": "9793:44:4"
													},
													{
														"expression": {
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1061,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "9930:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 1062,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "9946:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9930:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1064,
														"nodeType": "ExpressionStatement",
														"src": "9930:22:4"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1067,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "9987:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10004:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1069,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9996:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1068,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9996:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9996:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1072,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "10008:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1066,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "9978:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9978:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1074,
												"nodeType": "EmitStatement",
												"src": "9973:42:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1076,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "10046:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10063:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10055:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1077,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10055:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10055:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1081,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "10067:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1075,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "10026:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10026:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1083,
												"nodeType": "ExpressionStatement",
												"src": "10026:48:4"
											}
										]
									},
									"documentation": {
										"id": 1014,
										"nodeType": "StructuredDocumentation",
										"src": "9108:309:4",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 1085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9431:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9445:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "9437:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9437:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9462:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "9454:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9454:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9436:33:4"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9487:0:4"
									},
									"scope": 1196,
									"src": "9422:659:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1129,
										"nodeType": "Block",
										"src": "10617:257:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1096,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "10635:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10652:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10644:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1097,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10644:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10644:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10635:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10656:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1095,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10627:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10627:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "10627:68:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1106,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1090,
																"src": "10713:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10732:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10724:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1107,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10724:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10724:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10713:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10736:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1105,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10705:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10705:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "10705:68:4"
											},
											{
												"expression": {
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1115,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 631,
																"src": "10784:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1118,
															"indexExpression": {
																"id": 1116,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "10796:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10784:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1119,
														"indexExpression": {
															"id": 1117,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "10803:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10784:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1120,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "10814:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10784:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1122,
												"nodeType": "ExpressionStatement",
												"src": "10784:36:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1124,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "10844:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1125,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "10851:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1126,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "10860:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1123,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "10835:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10835:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1128,
												"nodeType": "EmitStatement",
												"src": "10830:37:4"
											}
										]
									},
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "10087:412:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 1130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10513:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10539:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "10531:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10531:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10562:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "10554:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10554:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10587:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "10579:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10579:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10521:78:4"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10617:0:4"
									},
									"scope": 1196,
									"src": "10504:370:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1172,
										"nodeType": "Block",
										"src": "11275:321:4",
										"statements": [
											{
												"assignments": [
													1141
												],
												"declarations": [
													{
														"constant": false,
														"id": 1141,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11293:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1172,
														"src": "11285:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1140,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11285:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1146,
												"initialValue": {
													"arguments": [
														{
															"id": 1143,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "11322:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1144,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "11329:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1142,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "11312:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11312:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11285:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1147,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "11351:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11376:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1149,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11376:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1148,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11371:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11371:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11385:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11371:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11351:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1171,
												"nodeType": "IfStatement",
												"src": "11347:243:4",
												"trueBody": {
													"id": 1170,
													"nodeType": "Block",
													"src": "11390:200:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1155,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1141,
																			"src": "11412:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1156,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1137,
																			"src": "11432:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11412:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 1158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11440:31:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 1154,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11404:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11404:68:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1160,
															"nodeType": "ExpressionStatement",
															"src": "11404:68:4"
														},
														{
															"id": 1169,
															"nodeType": "UncheckedBlock",
															"src": "11486:94:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1162,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1133,
																				"src": "11523:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1163,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1135,
																				"src": "11530:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1166,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1164,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1141,
																					"src": "11539:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1165,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1137,
																					"src": "11558:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11539:25:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1161,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1130,
																			"src": "11514:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11514:51:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1168,
																	"nodeType": "ExpressionStatement",
																	"src": "11514:51:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1131,
										"nodeType": "StructuredDocumentation",
										"src": "10880:270:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 1173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11164:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11197:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "11189:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11189:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11220:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "11212:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11212:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11245:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "11237:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11237:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11179:78:4"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11275:0:4"
									},
									"scope": 1196,
									"src": "11155:441:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1183,
										"nodeType": "Block",
										"src": "12299:2:4",
										"statements": []
									},
									"documentation": {
										"id": 1174,
										"nodeType": "StructuredDocumentation",
										"src": "11602:573:4",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12189:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12227:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "12219:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12219:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12249:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "12241:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12241:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12269:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "12261:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12261:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12209:72:4"
									},
									"returnParameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12299:0:4"
									},
									"scope": 1196,
									"src": "12180:121:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1194,
										"nodeType": "Block",
										"src": "13007:2:4",
										"statements": []
									},
									"documentation": {
										"id": 1185,
										"nodeType": "StructuredDocumentation",
										"src": "12307:577:4",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12898:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12935:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "12927:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12927:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12957:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "12949:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12949:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12977:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "12969:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12969:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12917:72:4"
									},
									"returnParameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13007:0:4"
									},
									"scope": 1196,
									"src": "12889:120:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1197,
							"src": "1401:11610:4",
							"usedErrors": [],
							"usedEvents": [
								1208,
								1217
							]
						}
					],
					"src": "105:12907:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1274
						]
					},
					"id": 1275,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1198,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1199,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1274,
							"linearizedBaseContracts": [
								1274
							],
							"name": "IERC20",
							"nameLocation": "212:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1200,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1208,
									"name": "Transfer",
									"nameLocation": "394:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "403:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "425:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "445:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:5"
									},
									"src": "388:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1209,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1217,
									"name": "Approval",
									"nameLocation": "625:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "634:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "657:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "682:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:5"
									},
									"src": "619:78:5"
								},
								{
									"documentation": {
										"id": 1218,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:5",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:5"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "820:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:5"
									},
									"scope": 1274,
									"src": "774:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:5",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 1274,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:5",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "1211:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "1223:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:5"
									},
									"returnParameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "1257:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1238,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:5"
									},
									"scope": 1274,
									"src": "1193:70:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1242,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "1557:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "1572:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:5"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "1612:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:5"
									},
									"scope": 1274,
									"src": "1538:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1252,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:5",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "2291:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "2308:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:5"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "2342:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1258,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:5"
									},
									"scope": 1274,
									"src": "2274:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1262,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:5",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1273,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "2677:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "2699:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "2719:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:5"
									},
									"returnParameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "2758:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1270,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:5"
									},
									"scope": 1274,
									"src": "2646:118:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1275,
							"src": "202:2564:5",
							"usedErrors": [],
							"usedEvents": [
								1208,
								1217
							]
						}
					],
					"src": "106:2661:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							1365
						],
						"ERC20": [
							1196
						],
						"ERC20Burnable": [
							1318
						],
						"IERC20": [
							1274
						],
						"IERC20Metadata": [
							1343
						]
					},
					"id": 1319,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1276,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "124:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 1277,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1319,
							"sourceUnit": 1197,
							"src": "149:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 1278,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1319,
							"sourceUnit": 1366,
							"src": "172:36:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1280,
										"name": "Context",
										"nameLocations": [
											"454:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1365,
										"src": "454:7:6"
									},
									"id": 1281,
									"nodeType": "InheritanceSpecifier",
									"src": "454:7:6"
								},
								{
									"baseName": {
										"id": 1282,
										"name": "ERC20",
										"nameLocations": [
											"463:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1196,
										"src": "463:5:6"
									},
									"id": 1283,
									"nodeType": "InheritanceSpecifier",
									"src": "463:5:6"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1279,
								"nodeType": "StructuredDocumentation",
								"src": "210:208:6",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 1318,
							"linearizedBaseContracts": [
								1318,
								1196,
								1343,
								1274,
								1365
							],
							"name": "ERC20Burnable",
							"nameLocation": "437:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1295,
										"nodeType": "Block",
										"src": "623:44:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1290,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "639:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "639:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1292,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "653:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1289,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "633:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "633:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1294,
												"nodeType": "ExpressionStatement",
												"src": "633:27:6"
											}
										]
									},
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "475:98:6",
										"text": " @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 1296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "587:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "600:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "592:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "591:16:6"
									},
									"returnParameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "623:0:6"
									},
									"scope": 1318,
									"src": "578:89:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1316,
										"nodeType": "Block",
										"src": "1039:95:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1305,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "1065:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1306,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "1074:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1074:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1308,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "1088:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1304,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "1049:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1049:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "1049:46:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1312,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "1111:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1313,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "1120:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1311,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "1105:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1105:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "1105:22:6"
											}
										]
									},
									"documentation": {
										"id": 1297,
										"nodeType": "StructuredDocumentation",
										"src": "673:295:6",
										"text": " @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."
									},
									"functionSelector": "79cc6790",
									"id": 1317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "982:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "999:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "991:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1016:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "1008:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "990:33:6"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1039:0:6"
									},
									"scope": 1318,
									"src": "973:161:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1319,
							"src": "419:717:6",
							"usedErrors": [],
							"usedEvents": [
								1208,
								1217
							]
						}
					],
					"src": "124:1013:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1274
						],
						"IERC20Metadata": [
							1343
						]
					},
					"id": 1344,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1320,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1321,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1344,
							"sourceUnit": 1275,
							"src": "135:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1323,
										"name": "IERC20",
										"nameLocations": [
											"305:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1274,
										"src": "305:6:7"
									},
									"id": 1324,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:7"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1322,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:7",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 1343,
							"linearizedBaseContracts": [
								1343,
								1274
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1325,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:7",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1330,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:7"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "416:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1327,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:7"
									},
									"scope": 1343,
									"src": "377:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1331,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:7",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1336,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:7"
									},
									"returnParameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "539:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1333,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:7"
									},
									"scope": 1343,
									"src": "498:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1337,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:7",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1342,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:7"
									},
									"returnParameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "673:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1339,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:7"
									},
									"scope": 1343,
									"src": "630:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1344,
							"src": "277:405:7",
							"usedErrors": [],
							"usedEvents": [
								1208,
								1217
							]
						}
					],
					"src": "110:573:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1365
						]
					},
					"id": 1366,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1345,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1346,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1365,
							"linearizedBaseContracts": [
								1365
							],
							"name": "Context",
							"nameLocation": "626:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1354,
										"nodeType": "Block",
										"src": "702:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1351,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1350,
												"id": 1353,
												"nodeType": "Return",
												"src": "712:17:8"
											}
										]
									},
									"id": 1355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:8"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "693:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:8"
									},
									"scope": 1365,
									"src": "640:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1363,
										"nodeType": "Block",
										"src": "809:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1360,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1359,
												"id": 1362,
												"nodeType": "Return",
												"src": "819:15:8"
											}
										]
									},
									"id": 1364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:8"
									},
									"returnParameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "793:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1357,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:8"
									},
									"scope": 1365,
									"src": "742:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1366,
							"src": "608:235:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2441
						],
						"Strings": [
							1540
						]
					},
					"id": 1541,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1367,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1368,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1541,
							"sourceUnit": 2442,
							"src": "126:25:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1369,
								"nodeType": "StructuredDocumentation",
								"src": "153:34:9",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1540,
							"linearizedBaseContracts": [
								1540
							],
							"name": "Strings",
							"nameLocation": "196:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1372,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "235:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 1540,
									"src": "210:54:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1370,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "210:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1371,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "246:18:9",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1375,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "293:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 1540,
									"src": "270:43:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1373,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "270:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1374,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1422,
										"nodeType": "Block",
										"src": "486:625:9",
										"statements": [
											{
												"id": 1421,
												"nodeType": "UncheckedBlock",
												"src": "496:609:9",
												"statements": [
													{
														"assignments": [
															1384
														],
														"declarations": [
															{
																"constant": false,
																"id": 1384,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "528:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1421,
																"src": "520:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1383,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "520:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1391,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1387,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1378,
																		"src": "548:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1385,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2441,
																		"src": "537:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2441_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "542:5:9",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2278,
																	"src": "537:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "537:17:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "557:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "537:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "520:38:9"
													},
													{
														"assignments": [
															1393
														],
														"declarations": [
															{
																"constant": false,
																"id": 1393,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "586:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1421,
																"src": "572:20:9",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1392,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "572:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1398,
														"initialValue": {
															"arguments": [
																{
																	"id": 1396,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1384,
																	"src": "606:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "595:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1394,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "599:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "595:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "572:41:9"
													},
													{
														"assignments": [
															1400
														],
														"declarations": [
															{
																"constant": false,
																"id": 1400,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "635:3:9",
																"nodeType": "VariableDeclaration",
																"scope": 1421,
																"src": "627:11:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1399,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "627:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1401,
														"nodeType": "VariableDeclarationStatement",
														"src": "627:11:9"
													},
													{
														"AST": {
															"nativeSrc": "708:67:9",
															"nodeType": "YulBlock",
															"src": "708:67:9",
															"statements": [
																{
																	"nativeSrc": "726:35:9",
																	"nodeType": "YulAssignment",
																	"src": "726:35:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "737:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "749:2:9",
																						"nodeType": "YulLiteral",
																						"src": "749:2:9",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "753:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "753:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "745:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "745:3:9"
																				},
																				"nativeSrc": "745:15:9",
																				"nodeType": "YulFunctionCall",
																				"src": "745:15:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "733:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "733:3:9"
																		},
																		"nativeSrc": "733:28:9",
																		"nodeType": "YulFunctionCall",
																		"src": "733:28:9"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "726:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "726:3:9"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1393,
																"isOffset": false,
																"isSlot": false,
																"src": "737:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1384,
																"isOffset": false,
																"isSlot": false,
																"src": "753:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1400,
																"isOffset": false,
																"isSlot": false,
																"src": "726:3:9",
																"valueSize": 1
															}
														],
														"id": 1402,
														"nodeType": "InlineAssembly",
														"src": "699:76:9"
													},
													{
														"body": {
															"id": 1417,
															"nodeType": "Block",
															"src": "801:267:9",
															"statements": [
																{
																	"expression": {
																		"id": 1405,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "819:5:9",
																		"subExpression": {
																			"id": 1404,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1400,
																			"src": "819:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1406,
																	"nodeType": "ExpressionStatement",
																	"src": "819:5:9"
																},
																{
																	"AST": {
																		"nativeSrc": "902:84:9",
																		"nodeType": "YulBlock",
																		"src": "902:84:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "932:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "932:3:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "946:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "946:5:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "953:2:9",
																											"nodeType": "YulLiteral",
																											"src": "953:2:9",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "942:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "942:3:9"
																									},
																									"nativeSrc": "942:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "942:14:9"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nativeSrc": "958:8:9",
																									"nodeType": "YulIdentifier",
																									"src": "958:8:9"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "937:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "937:4:9"
																							},
																							"nativeSrc": "937:30:9",
																							"nodeType": "YulFunctionCall",
																							"src": "937:30:9"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "924:7:9",
																						"nodeType": "YulIdentifier",
																						"src": "924:7:9"
																					},
																					"nativeSrc": "924:44:9",
																					"nodeType": "YulFunctionCall",
																					"src": "924:44:9"
																				},
																				"nativeSrc": "924:44:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "924:44:9"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1372,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "958:8:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1400,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "932:3:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1378,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "946:5:9",
																			"valueSize": 1
																		}
																	],
																	"id": 1407,
																	"nodeType": "InlineAssembly",
																	"src": "893:93:9"
																},
																{
																	"expression": {
																		"id": 1410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1408,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1378,
																			"src": "1003:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1012:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1003:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1411,
																	"nodeType": "ExpressionStatement",
																	"src": "1003:11:9"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1412,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1378,
																			"src": "1036:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1045:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1036:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1416,
																	"nodeType": "IfStatement",
																	"src": "1032:21:9",
																	"trueBody": {
																		"id": 1415,
																		"nodeType": "Break",
																		"src": "1048:5:9"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "795:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1418,
														"nodeType": "WhileStatement",
														"src": "788:280:9"
													},
													{
														"expression": {
															"id": 1419,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "1088:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1382,
														"id": 1420,
														"nodeType": "Return",
														"src": "1081:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "320:90:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "424:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "441:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "433:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:15:9"
									},
									"returnParameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "471:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1380,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "471:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:15:9"
									},
									"scope": 1540,
									"src": "415:696:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1442,
										"nodeType": "Block",
										"src": "1290:100:9",
										"statements": [
											{
												"id": 1441,
												"nodeType": "UncheckedBlock",
												"src": "1300:84:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1432,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "1343:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1435,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1426,
																				"src": "1362:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1433,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2441,
																				"src": "1350:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2441_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1434,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1355:6:9",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2401,
																			"src": "1350:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1350:18:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1371:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1350:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1431,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1443,
																	1519,
																	1539
																],
																"referencedDeclaration": 1519,
																"src": "1331:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1331:42:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1430,
														"id": 1440,
														"nodeType": "Return",
														"src": "1324:49:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1424,
										"nodeType": "StructuredDocumentation",
										"src": "1117:94:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1225:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1245:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "1237:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:15:9"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "1275:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1428,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1275:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1274:15:9"
									},
									"scope": 1540,
									"src": "1216:174:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1518,
										"nodeType": "Block",
										"src": "1603:347:9",
										"statements": [
											{
												"assignments": [
													1454
												],
												"declarations": [
													{
														"constant": false,
														"id": 1454,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1626:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1518,
														"src": "1613:19:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1453,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1613:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1463,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1645:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1458,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1448,
																	"src": "1649:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1645:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1460,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1658:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1645:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1456,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1635:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1455,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1639:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1635:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1613:47:9"
											},
											{
												"expression": {
													"id": 1468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1464,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "1670:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1466,
														"indexExpression": {
															"hexValue": "30",
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1677:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1670:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1467,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1682:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1670:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1469,
												"nodeType": "ExpressionStatement",
												"src": "1670:15:9"
											},
											{
												"expression": {
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1470,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "1695:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1472,
														"indexExpression": {
															"hexValue": "31",
															"id": 1471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1702:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1695:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1473,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1707:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1695:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1475,
												"nodeType": "ExpressionStatement",
												"src": "1695:15:9"
											},
											{
												"body": {
													"id": 1504,
													"nodeType": "Block",
													"src": "1765:83:9",
													"statements": [
														{
															"expression": {
																"id": 1498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1490,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1454,
																		"src": "1779:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1492,
																	"indexExpression": {
																		"id": 1491,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1477,
																		"src": "1786:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1779:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1493,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1372,
																		"src": "1791:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1497,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1494,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1446,
																			"src": "1800:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1495,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1808:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1800:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1791:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1779:33:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1499,
															"nodeType": "ExpressionStatement",
															"src": "1779:33:9"
														},
														{
															"expression": {
																"id": 1502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1500,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1446,
																	"src": "1826:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1836:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1826:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1503,
															"nodeType": "ExpressionStatement",
															"src": "1826:11:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1484,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1477,
														"src": "1753:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1485,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1753:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1505,
												"initializationExpression": {
													"assignments": [
														1477
													],
													"declarations": [
														{
															"constant": false,
															"id": 1477,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1733:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1505,
															"src": "1725:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1476,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1725:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1483,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1737:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1479,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1448,
																"src": "1741:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1737:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1750:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1737:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1725:26:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1760:3:9",
														"subExpression": {
															"id": 1487,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1477,
															"src": "1762:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1489,
													"nodeType": "ExpressionStatement",
													"src": "1760:3:9"
												},
												"nodeType": "ForStatement",
												"src": "1720:128:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1507,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1446,
																"src": "1865:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1874:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1865:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1877:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1506,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1857:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1857:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1512,
												"nodeType": "ExpressionStatement",
												"src": "1857:55:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1515,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "1936:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1514,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1929:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1513,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1929:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1452,
												"id": 1517,
												"nodeType": "Return",
												"src": "1922:21:9"
											}
										]
									},
									"documentation": {
										"id": 1444,
										"nodeType": "StructuredDocumentation",
										"src": "1396:112:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1522:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1542:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "1534:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1534:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1557:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "1549:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1549:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:31:9"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "1588:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1450,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:15:9"
									},
									"scope": 1540,
									"src": "1513:437:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1538,
										"nodeType": "Block",
										"src": "2175:76:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1532,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1522,
																			"src": "2220:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2212:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1530,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2212:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2212:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2204:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1528,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2204:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2204:22:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1535,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "2228:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1527,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1443,
															1519,
															1539
														],
														"referencedDeclaration": 1519,
														"src": "2192:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2192:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1526,
												"id": 1537,
												"nodeType": "Return",
												"src": "2185:59:9"
											}
										]
									},
									"documentation": {
										"id": 1520,
										"nodeType": "StructuredDocumentation",
										"src": "1956:141:9",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2111:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2131:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "2123:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2122:14:9"
									},
									"returnParameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "2160:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1524,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2160:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2159:15:9"
									},
									"scope": 1540,
									"src": "2102:149:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1541,
							"src": "188:2065:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:2153:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1564
						],
						"IERC165": [
							1576
						]
					},
					"id": 1565,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1542,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1543,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1565,
							"sourceUnit": 1577,
							"src": "124:23:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1545,
										"name": "IERC165",
										"nameLocations": [
											"754:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1576,
										"src": "754:7:10"
									},
									"id": 1546,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1544,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1564,
							"linearizedBaseContracts": [
								1564,
								1576
							],
							"name": "ERC165",
							"nameLocation": "744:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1575
									],
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "920:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1555,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "937:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1557,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1576,
																	"src": "957:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1576_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1576_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1556,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1576",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1559,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:10",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1554,
												"id": 1561,
												"nodeType": "Return",
												"src": "930:47:10"
											}
										]
									},
									"documentation": {
										"id": 1547,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1551,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:10"
									},
									"parameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "856:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1548,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:10"
									},
									"returnParameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "914:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1552,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:10"
									},
									"scope": 1564,
									"src": "829:155:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1565,
							"src": "726:260:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:888:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1576
						]
					},
					"id": 1577,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1566,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1567,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:11",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1576,
							"linearizedBaseContracts": [
								1576
							],
							"name": "IERC165",
							"nameLocation": "415:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1568,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1575,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "801:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1569,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:11"
									},
									"returnParameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "844:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1572,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:11"
									},
									"scope": 1576,
									"src": "774:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1577,
							"src": "405:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:753:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2441
						]
					},
					"id": 2442,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1578,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1579,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:12",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2441,
							"linearizedBaseContracts": [
								2441
							],
							"name": "Math",
							"nameLocation": "210:4:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1583,
									"members": [
										{
											"id": 1580,
											"name": "Down",
											"nameLocation": "245:4:12",
											"nodeType": "EnumValue",
											"src": "245:4:12"
										},
										{
											"id": 1581,
											"name": "Up",
											"nameLocation": "287:2:12",
											"nodeType": "EnumValue",
											"src": "287:2:12"
										},
										{
											"id": 1582,
											"name": "Zero",
											"nameLocation": "318:4:12",
											"nodeType": "EnumValue",
											"src": "318:4:12"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:12",
									"nodeType": "EnumDefinition",
									"src": "221:122:12"
								},
								{
									"body": {
										"id": 1600,
										"nodeType": "Block",
										"src": "480:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1593,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "497:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1594,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "501:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1597,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1588,
														"src": "509:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:12",
													"trueExpression": {
														"id": 1596,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1586,
														"src": "505:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1592,
												"id": 1599,
												"nodeType": "Return",
												"src": "490:20:12"
											}
										]
									},
									"documentation": {
										"id": 1584,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:12",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "426:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "437:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:12"
									},
									"returnParameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "471:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:12"
									},
									"scope": 2441,
									"src": "413:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1618,
										"nodeType": "Block",
										"src": "655:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1611,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "672:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1612,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "676:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1615,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1606,
														"src": "684:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:12",
													"trueExpression": {
														"id": 1614,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1604,
														"src": "680:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1610,
												"id": 1617,
												"nodeType": "Return",
												"src": "665:20:12"
											}
										]
									},
									"documentation": {
										"id": 1602,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:12",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "601:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "612:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:12"
									},
									"returnParameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "646:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:12"
									},
									"scope": 2441,
									"src": "588:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1641,
										"nodeType": "Block",
										"src": "876:82:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1629,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1622,
																	"src": "931:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1630,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1624,
																	"src": "935:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1632,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1633,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1622,
																		"src": "941:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1634,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1624,
																		"src": "945:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1636,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1628,
												"id": 1640,
												"nodeType": "Return",
												"src": "923:28:12"
											}
										]
									},
									"documentation": {
										"id": 1620,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:12",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "822:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "833:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:12"
									},
									"returnParameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "867:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:12"
									},
									"scope": 2441,
									"src": "805:153:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1666,
										"nodeType": "Block",
										"src": "1228:123:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1652,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1645,
															"src": "1316:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1663,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1656,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1645,
																			"src": "1330:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1659,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1660,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1647,
																"src": "1339:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:12",
													"trueExpression": {
														"hexValue": "30",
														"id": 1655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1651,
												"id": 1665,
												"nodeType": "Return",
												"src": "1309:35:12"
											}
										]
									},
									"documentation": {
										"id": 1643,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:12",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "1174:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "1185:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:12"
									},
									"returnParameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "1219:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:12"
									},
									"scope": 2441,
									"src": "1157:194:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1788,
										"nodeType": "Block",
										"src": "1795:3797:12",
										"statements": [
											{
												"id": 1787,
												"nodeType": "UncheckedBlock",
												"src": "1805:3781:12",
												"statements": [
													{
														"assignments": [
															1680
														],
														"declarations": [
															{
																"constant": false,
																"id": 1680,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2134:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 1787,
																"src": "2126:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1679,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2126:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1681,
														"nodeType": "VariableDeclarationStatement",
														"src": "2126:13:12"
													},
													{
														"assignments": [
															1683
														],
														"declarations": [
															{
																"constant": false,
																"id": 1683,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2206:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 1787,
																"src": "2198:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1682,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2198:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1684,
														"nodeType": "VariableDeclarationStatement",
														"src": "2198:13:12"
													},
													{
														"AST": {
															"nativeSrc": "2278:157:12",
															"nodeType": "YulBlock",
															"src": "2278:157:12",
															"statements": [
																{
																	"nativeSrc": "2296:30:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2296:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2313:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "2313:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2316:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "2316:1:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2323:1:12",
																						"nodeType": "YulLiteral",
																						"src": "2323:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2319:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2319:3:12"
																				},
																				"nativeSrc": "2319:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2319:6:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "2306:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2306:6:12"
																		},
																		"nativeSrc": "2306:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2306:20:12"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "2300:2:12",
																			"nodeType": "YulTypedName",
																			"src": "2300:2:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2343:18:12",
																	"nodeType": "YulAssignment",
																	"src": "2343:18:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2356:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "2356:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2359:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "2359:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2352:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2352:3:12"
																		},
																		"nativeSrc": "2352:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2352:9:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "2343:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "2343:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "2378:43:12",
																	"nodeType": "YulAssignment",
																	"src": "2378:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2395:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "2395:2:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2399:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2399:5:12"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2391:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2391:3:12"
																				},
																				"nativeSrc": "2391:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2391:14:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2410:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "2410:2:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2414:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2414:5:12"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "2407:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "2407:2:12"
																				},
																				"nativeSrc": "2407:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2407:13:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2387:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2387:3:12"
																		},
																		"nativeSrc": "2387:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2387:34:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "2378:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "2378:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1680,
																"isOffset": false,
																"isSlot": false,
																"src": "2343:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1680,
																"isOffset": false,
																"isSlot": false,
																"src": "2399:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1680,
																"isOffset": false,
																"isSlot": false,
																"src": "2414:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1683,
																"isOffset": false,
																"isSlot": false,
																"src": "2378:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1670,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:1:12",
																"valueSize": 1
															},
															{
																"declaration": 1670,
																"isOffset": false,
																"isSlot": false,
																"src": "2356:1:12",
																"valueSize": 1
															},
															{
																"declaration": 1672,
																"isOffset": false,
																"isSlot": false,
																"src": "2316:1:12",
																"valueSize": 1
															},
															{
																"declaration": 1672,
																"isOffset": false,
																"isSlot": false,
																"src": "2359:1:12",
																"valueSize": 1
															}
														],
														"id": 1685,
														"nodeType": "InlineAssembly",
														"src": "2269:166:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1686,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1683,
																"src": "2516:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2525:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2516:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1694,
														"nodeType": "IfStatement",
														"src": "2512:75:12",
														"trueBody": {
															"id": 1693,
															"nodeType": "Block",
															"src": "2528:59:12",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1689,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1680,
																			"src": "2553:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1690,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1674,
																			"src": "2561:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2553:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1678,
																	"id": 1692,
																	"nodeType": "Return",
																	"src": "2546:26:12"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1696,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1674,
																		"src": "2697:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1697,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1683,
																		"src": "2711:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2697:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 1695,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2689:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 1699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2689:28:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1700,
														"nodeType": "ExpressionStatement",
														"src": "2689:28:12"
													},
													{
														"assignments": [
															1702
														],
														"declarations": [
															{
																"constant": false,
																"id": 1702,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2981:9:12",
																"nodeType": "VariableDeclaration",
																"scope": 1787,
																"src": "2973:17:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1701,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2973:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1703,
														"nodeType": "VariableDeclarationStatement",
														"src": "2973:17:12"
													},
													{
														"AST": {
															"nativeSrc": "3013:291:12",
															"nodeType": "YulBlock",
															"src": "3013:291:12",
															"statements": [
																{
																	"nativeSrc": "3082:38:12",
																	"nodeType": "YulAssignment",
																	"src": "3082:38:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "3102:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "3102:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "3105:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "3105:1:12"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "3108:11:12",
																				"nodeType": "YulIdentifier",
																				"src": "3108:11:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "3095:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3095:6:12"
																		},
																		"nativeSrc": "3095:25:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3095:25:12"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "3082:9:12",
																			"nodeType": "YulIdentifier",
																			"src": "3082:9:12"
																		}
																	]
																},
																{
																	"nativeSrc": "3202:41:12",
																	"nodeType": "YulAssignment",
																	"src": "3202:41:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "3215:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3215:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "3225:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3225:9:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "3236:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3236:5:12"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "3222:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "3222:2:12"
																				},
																				"nativeSrc": "3222:20:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3222:20:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3211:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3211:3:12"
																		},
																		"nativeSrc": "3211:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3211:32:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "3202:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "3202:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "3260:30:12",
																	"nodeType": "YulAssignment",
																	"src": "3260:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "3273:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3273:5:12"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "3280:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3280:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3269:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3269:3:12"
																		},
																		"nativeSrc": "3269:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3269:21:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "3260:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1674,
																"isOffset": false,
																"isSlot": false,
																"src": "3108:11:12",
																"valueSize": 1
															},
															{
																"declaration": 1680,
																"isOffset": false,
																"isSlot": false,
																"src": "3236:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1680,
																"isOffset": false,
																"isSlot": false,
																"src": "3260:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1680,
																"isOffset": false,
																"isSlot": false,
																"src": "3273:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1683,
																"isOffset": false,
																"isSlot": false,
																"src": "3202:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1683,
																"isOffset": false,
																"isSlot": false,
																"src": "3215:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1702,
																"isOffset": false,
																"isSlot": false,
																"src": "3082:9:12",
																"valueSize": 1
															},
															{
																"declaration": 1702,
																"isOffset": false,
																"isSlot": false,
																"src": "3225:9:12",
																"valueSize": 1
															},
															{
																"declaration": 1702,
																"isOffset": false,
																"isSlot": false,
																"src": "3280:9:12",
																"valueSize": 1
															},
															{
																"declaration": 1670,
																"isOffset": false,
																"isSlot": false,
																"src": "3102:1:12",
																"valueSize": 1
															},
															{
																"declaration": 1672,
																"isOffset": false,
																"isSlot": false,
																"src": "3105:1:12",
																"valueSize": 1
															}
														],
														"id": 1704,
														"nodeType": "InlineAssembly",
														"src": "3004:300:12"
													},
													{
														"assignments": [
															1706
														],
														"declarations": [
															{
																"constant": false,
																"id": 1706,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3619:4:12",
																"nodeType": "VariableDeclaration",
																"scope": 1787,
																"src": "3611:12:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1705,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3611:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1714,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1707,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1674,
																"src": "3626:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3641:12:12",
																			"subExpression": {
																				"id": 1708,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1674,
																				"src": "3642:11:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3656:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3641:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1712,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3640:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3626:32:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3611:47:12"
													},
													{
														"AST": {
															"nativeSrc": "3681:362:12",
															"nodeType": "YulBlock",
															"src": "3681:362:12",
															"statements": [
																{
																	"nativeSrc": "3746:37:12",
																	"nodeType": "YulAssignment",
																	"src": "3746:37:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "3765:11:12",
																				"nodeType": "YulIdentifier",
																				"src": "3765:11:12"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "3778:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "3778:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3761:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:12"
																		},
																		"nativeSrc": "3761:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3761:22:12"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "3746:11:12",
																			"nodeType": "YulIdentifier",
																			"src": "3746:11:12"
																		}
																	]
																},
																{
																	"nativeSrc": "3850:25:12",
																	"nodeType": "YulAssignment",
																	"src": "3850:25:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "3863:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3863:5:12"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "3870:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "3870:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3859:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3859:3:12"
																		},
																		"nativeSrc": "3859:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3859:16:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "3850:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "3850:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "3990:39:12",
																	"nodeType": "YulAssignment",
																	"src": "3990:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4010:1:12",
																								"nodeType": "YulLiteral",
																								"src": "4010:1:12",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "4013:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "4013:4:12"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "4006:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "4006:3:12"
																						},
																						"nativeSrc": "4006:12:12",
																						"nodeType": "YulFunctionCall",
																						"src": "4006:12:12"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "4020:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "4020:4:12"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "4002:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4002:3:12"
																				},
																				"nativeSrc": "4002:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4002:23:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4027:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4027:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3998:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3998:3:12"
																		},
																		"nativeSrc": "3998:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3998:31:12"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "3990:4:12",
																			"nodeType": "YulIdentifier",
																			"src": "3990:4:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1674,
																"isOffset": false,
																"isSlot": false,
																"src": "3746:11:12",
																"valueSize": 1
															},
															{
																"declaration": 1674,
																"isOffset": false,
																"isSlot": false,
																"src": "3765:11:12",
																"valueSize": 1
															},
															{
																"declaration": 1680,
																"isOffset": false,
																"isSlot": false,
																"src": "3850:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1680,
																"isOffset": false,
																"isSlot": false,
																"src": "3863:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1706,
																"isOffset": false,
																"isSlot": false,
																"src": "3778:4:12",
																"valueSize": 1
															},
															{
																"declaration": 1706,
																"isOffset": false,
																"isSlot": false,
																"src": "3870:4:12",
																"valueSize": 1
															},
															{
																"declaration": 1706,
																"isOffset": false,
																"isSlot": false,
																"src": "3990:4:12",
																"valueSize": 1
															},
															{
																"declaration": 1706,
																"isOffset": false,
																"isSlot": false,
																"src": "4013:4:12",
																"valueSize": 1
															},
															{
																"declaration": 1706,
																"isOffset": false,
																"isSlot": false,
																"src": "4020:4:12",
																"valueSize": 1
															}
														],
														"id": 1715,
														"nodeType": "InlineAssembly",
														"src": "3672:371:12"
													},
													{
														"expression": {
															"id": 1720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1716,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1680,
																"src": "4109:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1717,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1683,
																	"src": "4118:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1718,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1706,
																	"src": "4126:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4118:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4109:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1721,
														"nodeType": "ExpressionStatement",
														"src": "4109:21:12"
													},
													{
														"assignments": [
															1723
														],
														"declarations": [
															{
																"constant": false,
																"id": 1723,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4456:7:12",
																"nodeType": "VariableDeclaration",
																"scope": 1787,
																"src": "4448:15:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1722,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4448:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1730,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1724,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4467:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1725,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1674,
																			"src": "4471:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4467:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1727,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4466:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4486:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4466:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4448:39:12"
													},
													{
														"expression": {
															"id": 1737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1731,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1723,
																"src": "4704:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4715:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1733,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1674,
																		"src": "4719:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1734,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1723,
																		"src": "4733:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4719:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4715:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4704:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1738,
														"nodeType": "ExpressionStatement",
														"src": "4704:36:12"
													},
													{
														"expression": {
															"id": 1745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1739,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1723,
																"src": "4773:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4784:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1741,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1674,
																		"src": "4788:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1742,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1723,
																		"src": "4802:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4788:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4784:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4773:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1746,
														"nodeType": "ExpressionStatement",
														"src": "4773:36:12"
													},
													{
														"expression": {
															"id": 1753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1747,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1723,
																"src": "4843:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4854:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1749,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1674,
																		"src": "4858:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1750,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1723,
																		"src": "4872:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4858:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4854:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4843:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1754,
														"nodeType": "ExpressionStatement",
														"src": "4843:36:12"
													},
													{
														"expression": {
															"id": 1761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1755,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1723,
																"src": "4913:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4924:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1757,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1674,
																		"src": "4928:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1758,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1723,
																		"src": "4942:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4928:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4924:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4913:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1762,
														"nodeType": "ExpressionStatement",
														"src": "4913:36:12"
													},
													{
														"expression": {
															"id": 1769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1763,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1723,
																"src": "4983:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1768,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4994:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1765,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1674,
																		"src": "4998:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1766,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1723,
																		"src": "5012:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4998:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4994:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4983:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1770,
														"nodeType": "ExpressionStatement",
														"src": "4983:36:12"
													},
													{
														"expression": {
															"id": 1777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1771,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1723,
																"src": "5054:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5065:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1773,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1674,
																		"src": "5069:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1774,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1723,
																		"src": "5083:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5069:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5065:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5054:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1778,
														"nodeType": "ExpressionStatement",
														"src": "5054:36:12"
													},
													{
														"expression": {
															"id": 1783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1779,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1677,
																"src": "5524:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1780,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1680,
																	"src": "5533:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1781,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1723,
																	"src": "5541:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5533:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5524:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1784,
														"nodeType": "ExpressionStatement",
														"src": "5524:24:12"
													},
													{
														"expression": {
															"id": 1785,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1677,
															"src": "5569:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1678,
														"id": 1786,
														"nodeType": "Return",
														"src": "5562:13:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1668,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:12",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1700:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "1692:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1719:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "1711:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1738:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "1730:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:73:12"
									},
									"returnParameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1787:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "1779:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:16:12"
									},
									"scope": 2441,
									"src": "1667:3925:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1832,
										"nodeType": "Block",
										"src": "5872:189:12",
										"statements": [
											{
												"assignments": [
													1805
												],
												"declarations": [
													{
														"constant": false,
														"id": 1805,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5890:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 1832,
														"src": "5882:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1804,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5882:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1811,
												"initialValue": {
													"arguments": [
														{
															"id": 1807,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1792,
															"src": "5906:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1808,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1794,
															"src": "5909:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1809,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1796,
															"src": "5912:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1806,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1789,
															1833
														],
														"referencedDeclaration": 1789,
														"src": "5899:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5899:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5882:42:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1583",
															"typeString": "enum Math.Rounding"
														},
														"id": 1815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1812,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1799,
															"src": "5938:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1583",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1813,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1583,
																"src": "5950:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1583_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1814,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5959:2:12",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1581,
															"src": "5950:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1583",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5938:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1817,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1792,
																	"src": "5972:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1818,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1794,
																	"src": "5975:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1819,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1796,
																	"src": "5978:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1816,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5965:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5965:25:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1821,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5993:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5965:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5938:56:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1829,
												"nodeType": "IfStatement",
												"src": "5934:98:12",
												"trueBody": {
													"id": 1828,
													"nodeType": "Block",
													"src": "5996:36:12",
													"statements": [
														{
															"expression": {
																"id": 1826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1824,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1805,
																	"src": "6010:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6020:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6010:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1827,
															"nodeType": "ExpressionStatement",
															"src": "6010:11:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1830,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1805,
													"src": "6048:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1803,
												"id": 1831,
												"nodeType": "Return",
												"src": "6041:13:12"
											}
										]
									},
									"documentation": {
										"id": 1790,
										"nodeType": "StructuredDocumentation",
										"src": "5598:121:12",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5733:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5757:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "5749:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5749:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5776:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "5768:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5768:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5795:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "5787:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5825:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "5816:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1583",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1798,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1797,
														"name": "Rounding",
														"nameLocations": [
															"5816:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1583,
														"src": "5816:8:12"
													},
													"referencedDeclaration": 1583,
													"src": "5816:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1583",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5739:100:12"
									},
									"returnParameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "5863:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5863:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5862:9:12"
									},
									"scope": 2441,
									"src": "5724:337:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1944,
										"nodeType": "Block",
										"src": "6337:1585:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1841,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1836,
														"src": "6351:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1842,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6356:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6351:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1847,
												"nodeType": "IfStatement",
												"src": "6347:45:12",
												"trueBody": {
													"id": 1846,
													"nodeType": "Block",
													"src": "6359:33:12",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6380:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1840,
															"id": 1845,
															"nodeType": "Return",
															"src": "6373:8:12"
														}
													]
												}
											},
											{
												"assignments": [
													1849
												],
												"declarations": [
													{
														"constant": false,
														"id": 1849,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7079:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 1944,
														"src": "7071:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1848,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7071:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1858,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1850,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7088:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1852,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1836,
																			"src": "7099:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1851,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2113,
																			2149
																		],
																		"referencedDeclaration": 2113,
																		"src": "7094:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7094:7:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7105:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7094:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1856,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7093:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7088:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7071:36:12"
											},
											{
												"id": 1943,
												"nodeType": "UncheckedBlock",
												"src": "7508:408:12",
												"statements": [
													{
														"expression": {
															"id": 1868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1859,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1849,
																"src": "7532:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1864,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1860,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1849,
																				"src": "7542:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1863,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1861,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1836,
																					"src": "7551:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1862,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1849,
																					"src": "7555:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7551:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7542:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1865,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7541:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7566:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7541:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7532:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1869,
														"nodeType": "ExpressionStatement",
														"src": "7532:35:12"
													},
													{
														"expression": {
															"id": 1879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1870,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1849,
																"src": "7581:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1875,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1871,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1849,
																				"src": "7591:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1874,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1872,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1836,
																					"src": "7600:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1873,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1849,
																					"src": "7604:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7600:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7591:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1876,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7590:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7615:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7590:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7581:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1880,
														"nodeType": "ExpressionStatement",
														"src": "7581:35:12"
													},
													{
														"expression": {
															"id": 1890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1881,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1849,
																"src": "7630:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1882,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1849,
																				"src": "7640:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1885,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1883,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1836,
																					"src": "7649:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1884,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1849,
																					"src": "7653:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7649:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7640:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1887,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7639:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7664:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7639:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7630:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1891,
														"nodeType": "ExpressionStatement",
														"src": "7630:35:12"
													},
													{
														"expression": {
															"id": 1901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1892,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1849,
																"src": "7679:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1897,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1893,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1849,
																				"src": "7689:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1896,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1894,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1836,
																					"src": "7698:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1895,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1849,
																					"src": "7702:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7698:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7689:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1898,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7688:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7713:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7688:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7679:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1902,
														"nodeType": "ExpressionStatement",
														"src": "7679:35:12"
													},
													{
														"expression": {
															"id": 1912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1903,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1849,
																"src": "7728:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1908,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1904,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1849,
																				"src": "7738:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1907,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1905,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1836,
																					"src": "7747:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1906,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1849,
																					"src": "7751:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7747:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7738:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1909,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7737:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7762:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7737:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7728:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1913,
														"nodeType": "ExpressionStatement",
														"src": "7728:35:12"
													},
													{
														"expression": {
															"id": 1923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1914,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1849,
																"src": "7777:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1919,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1915,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1849,
																				"src": "7787:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1918,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1916,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1836,
																					"src": "7796:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1917,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1849,
																					"src": "7800:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7796:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7787:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1920,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7786:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7811:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7786:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7777:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1924,
														"nodeType": "ExpressionStatement",
														"src": "7777:35:12"
													},
													{
														"expression": {
															"id": 1934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1925,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1849,
																"src": "7826:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1930,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1926,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1849,
																				"src": "7836:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1929,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1927,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1836,
																					"src": "7845:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1928,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1849,
																					"src": "7849:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7845:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7836:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1931,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7835:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7860:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7835:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7826:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1935,
														"nodeType": "ExpressionStatement",
														"src": "7826:35:12"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1937,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1849,
																	"src": "7886:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1938,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1836,
																		"src": "7894:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1939,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1849,
																		"src": "7898:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7894:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1936,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1619,
																"src": "7882:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7882:23:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1840,
														"id": 1942,
														"nodeType": "Return",
														"src": "7875:30:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1834,
										"nodeType": "StructuredDocumentation",
										"src": "6067:208:12",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6289:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6302:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "6294:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6294:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:11:12"
									},
									"returnParameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "6328:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6328:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6327:9:12"
									},
									"scope": 2441,
									"src": "6280:1642:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1980,
										"nodeType": "Block",
										"src": "8098:161:12",
										"statements": [
											{
												"id": 1979,
												"nodeType": "UncheckedBlock",
												"src": "8108:145:12",
												"statements": [
													{
														"assignments": [
															1957
														],
														"declarations": [
															{
																"constant": false,
																"id": 1957,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8140:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 1979,
																"src": "8132:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1956,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8132:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1961,
														"initialValue": {
															"arguments": [
																{
																	"id": 1959,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1948,
																	"src": "8154:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1958,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1945,
																	1981
																],
																"referencedDeclaration": 1945,
																"src": "8149:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8149:7:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8132:24:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1962,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1957,
																"src": "8177:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1583",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1966,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1963,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1951,
																					"src": "8187:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1583",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1964,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1583,
																						"src": "8199:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1583_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1965,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8208:2:12",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1581,
																					"src": "8199:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1583",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8187:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1971,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1969,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1967,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1957,
																						"src": "8214:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1968,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1957,
																						"src": "8223:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8214:15:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1970,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1948,
																					"src": "8232:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8214:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8187:46:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1974,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8240:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8187:54:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8236:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1976,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8186:56:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8177:65:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1955,
														"id": 1978,
														"nodeType": "Return",
														"src": "8170:72:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1946,
										"nodeType": "StructuredDocumentation",
										"src": "7928:89:12",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8031:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8044:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "8036:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8036:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8056:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "8047:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1583",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1950,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1949,
														"name": "Rounding",
														"nameLocations": [
															"8047:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1583,
														"src": "8047:8:12"
													},
													"referencedDeclaration": 1583,
													"src": "8047:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1583",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8035:30:12"
									},
									"returnParameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "8089:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8088:9:12"
									},
									"scope": 2441,
									"src": "8022:237:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2112,
										"nodeType": "Block",
										"src": "8444:922:12",
										"statements": [
											{
												"assignments": [
													1990
												],
												"declarations": [
													{
														"constant": false,
														"id": 1990,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8462:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2112,
														"src": "8454:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1989,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8454:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1992,
												"initialValue": {
													"hexValue": "30",
													"id": 1991,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8471:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8454:18:12"
											},
											{
												"id": 2109,
												"nodeType": "UncheckedBlock",
												"src": "8482:855:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1993,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1984,
																	"src": "8510:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8519:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8510:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8525:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8510:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2007,
														"nodeType": "IfStatement",
														"src": "8506:99:12",
														"trueBody": {
															"id": 2006,
															"nodeType": "Block",
															"src": "8528:77:12",
															"statements": [
																{
																	"expression": {
																		"id": 2000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1998,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1984,
																			"src": "8546:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1999,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8556:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8546:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2001,
																	"nodeType": "ExpressionStatement",
																	"src": "8546:13:12"
																},
																{
																	"expression": {
																		"id": 2004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2002,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1990,
																			"src": "8577:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2003,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8587:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8577:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2005,
																	"nodeType": "ExpressionStatement",
																	"src": "8577:13:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2008,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1984,
																	"src": "8622:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8631:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8622:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2011,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8636:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8622:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2022,
														"nodeType": "IfStatement",
														"src": "8618:96:12",
														"trueBody": {
															"id": 2021,
															"nodeType": "Block",
															"src": "8639:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2013,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1984,
																			"src": "8657:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2014,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8667:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8657:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2016,
																	"nodeType": "ExpressionStatement",
																	"src": "8657:12:12"
																},
																{
																	"expression": {
																		"id": 2019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2017,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1990,
																			"src": "8687:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2018,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8697:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8687:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2020,
																	"nodeType": "ExpressionStatement",
																	"src": "8687:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2023,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1984,
																	"src": "8731:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8740:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8731:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2026,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8745:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8731:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2037,
														"nodeType": "IfStatement",
														"src": "8727:96:12",
														"trueBody": {
															"id": 2036,
															"nodeType": "Block",
															"src": "8748:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2028,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1984,
																			"src": "8766:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8776:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8766:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2031,
																	"nodeType": "ExpressionStatement",
																	"src": "8766:12:12"
																},
																{
																	"expression": {
																		"id": 2034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2032,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1990,
																			"src": "8796:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8796:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2035,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2038,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1984,
																	"src": "8840:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8849:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "8840:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8854:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8840:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2052,
														"nodeType": "IfStatement",
														"src": "8836:96:12",
														"trueBody": {
															"id": 2051,
															"nodeType": "Block",
															"src": "8857:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2043,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1984,
																			"src": "8875:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8885:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8875:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2046,
																	"nodeType": "ExpressionStatement",
																	"src": "8875:12:12"
																},
																{
																	"expression": {
																		"id": 2049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2047,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1990,
																			"src": "8905:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2048,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8915:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8905:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2050,
																	"nodeType": "ExpressionStatement",
																	"src": "8905:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2053,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1984,
																	"src": "8949:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8958:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "8949:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2056,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8962:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8949:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2067,
														"nodeType": "IfStatement",
														"src": "8945:93:12",
														"trueBody": {
															"id": 2066,
															"nodeType": "Block",
															"src": "8965:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2058,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1984,
																			"src": "8983:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2059,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8993:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "8983:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2061,
																	"nodeType": "ExpressionStatement",
																	"src": "8983:11:12"
																},
																{
																	"expression": {
																		"id": 2064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2062,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1990,
																			"src": "9012:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2063,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9022:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9012:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2065,
																	"nodeType": "ExpressionStatement",
																	"src": "9012:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2068,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1984,
																	"src": "9055:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9064:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9055:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9068:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9055:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2082,
														"nodeType": "IfStatement",
														"src": "9051:93:12",
														"trueBody": {
															"id": 2081,
															"nodeType": "Block",
															"src": "9071:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2073,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1984,
																			"src": "9089:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9099:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9089:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2076,
																	"nodeType": "ExpressionStatement",
																	"src": "9089:11:12"
																},
																{
																	"expression": {
																		"id": 2079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2077,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1990,
																			"src": "9118:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2078,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9128:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9118:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2080,
																	"nodeType": "ExpressionStatement",
																	"src": "9118:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2083,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1984,
																	"src": "9161:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9170:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9161:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2086,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9174:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9161:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2097,
														"nodeType": "IfStatement",
														"src": "9157:93:12",
														"trueBody": {
															"id": 2096,
															"nodeType": "Block",
															"src": "9177:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2088,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1984,
																			"src": "9195:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9205:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9195:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2091,
																	"nodeType": "ExpressionStatement",
																	"src": "9195:11:12"
																},
																{
																	"expression": {
																		"id": 2094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2092,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1990,
																			"src": "9224:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2093,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9234:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9224:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2095,
																	"nodeType": "ExpressionStatement",
																	"src": "9224:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2098,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1984,
																	"src": "9267:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9276:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9267:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9280:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9267:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2108,
														"nodeType": "IfStatement",
														"src": "9263:64:12",
														"trueBody": {
															"id": 2107,
															"nodeType": "Block",
															"src": "9283:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2103,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1990,
																			"src": "9301:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9311:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9301:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2106,
																	"nodeType": "ExpressionStatement",
																	"src": "9301:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2110,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1990,
													"src": "9353:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1988,
												"id": 2111,
												"nodeType": "Return",
												"src": "9346:13:12"
											}
										]
									},
									"documentation": {
										"id": 1982,
										"nodeType": "StructuredDocumentation",
										"src": "8265:113:12",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8392:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1984,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8405:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "8397:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8397:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8396:15:12"
									},
									"returnParameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "8435:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8435:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8434:9:12"
									},
									"scope": 2441,
									"src": "8383:983:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2148,
										"nodeType": "Block",
										"src": "9599:165:12",
										"statements": [
											{
												"id": 2147,
												"nodeType": "UncheckedBlock",
												"src": "9609:149:12",
												"statements": [
													{
														"assignments": [
															2125
														],
														"declarations": [
															{
																"constant": false,
																"id": 2125,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9641:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2147,
																"src": "9633:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2124,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9633:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2129,
														"initialValue": {
															"arguments": [
																{
																	"id": 2127,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2116,
																	"src": "9655:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2126,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2113,
																	2149
																],
																"referencedDeclaration": 2113,
																"src": "9650:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9650:11:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9633:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2130,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2125,
																"src": "9682:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1583",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2134,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2131,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2119,
																					"src": "9692:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1583",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2132,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1583,
																						"src": "9704:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1583_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2133,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9713:2:12",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1581,
																					"src": "9704:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1583",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9692:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2139,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2137,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2135,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9719:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2136,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2125,
																						"src": "9724:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9719:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2138,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2116,
																					"src": "9733:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9719:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9692:46:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9745:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9692:54:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9741:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2144,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9691:56:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9682:65:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2123,
														"id": 2146,
														"nodeType": "Return",
														"src": "9675:72:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2114,
										"nodeType": "StructuredDocumentation",
										"src": "9372:142:12",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9528:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9541:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2149,
												"src": "9533:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9533:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9557:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2149,
												"src": "9548:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1583",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2118,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2117,
														"name": "Rounding",
														"nameLocations": [
															"9548:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1583,
														"src": "9548:8:12"
													},
													"referencedDeclaration": 1583,
													"src": "9548:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1583",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9532:34:12"
									},
									"returnParameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2149,
												"src": "9590:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9590:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9589:9:12"
									},
									"scope": 2441,
									"src": "9519:245:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2277,
										"nodeType": "Block",
										"src": "9951:828:12",
										"statements": [
											{
												"assignments": [
													2158
												],
												"declarations": [
													{
														"constant": false,
														"id": 2158,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9969:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2277,
														"src": "9961:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2157,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9961:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2160,
												"initialValue": {
													"hexValue": "30",
													"id": 2159,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9978:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9961:18:12"
											},
											{
												"id": 2274,
												"nodeType": "UncheckedBlock",
												"src": "9989:761:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2161,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2152,
																"src": "10017:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2164,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10026:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10030:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10026:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10017:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2177,
														"nodeType": "IfStatement",
														"src": "10013:99:12",
														"trueBody": {
															"id": 2176,
															"nodeType": "Block",
															"src": "10034:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2166,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2152,
																			"src": "10052:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2167,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10061:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2168,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10065:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10061:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10052:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2171,
																	"nodeType": "ExpressionStatement",
																	"src": "10052:15:12"
																},
																{
																	"expression": {
																		"id": 2174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2172,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2158,
																			"src": "10085:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10095:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10085:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2175,
																	"nodeType": "ExpressionStatement",
																	"src": "10085:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2178,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2152,
																"src": "10129:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2181,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10138:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10142:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10138:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10129:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2194,
														"nodeType": "IfStatement",
														"src": "10125:99:12",
														"trueBody": {
															"id": 2193,
															"nodeType": "Block",
															"src": "10146:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2183,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2152,
																			"src": "10164:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2184,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10173:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2185,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10177:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10173:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10164:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2188,
																	"nodeType": "ExpressionStatement",
																	"src": "10164:15:12"
																},
																{
																	"expression": {
																		"id": 2191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2189,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2158,
																			"src": "10197:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10207:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10197:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2192,
																	"nodeType": "ExpressionStatement",
																	"src": "10197:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2195,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2152,
																"src": "10241:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2198,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10250:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10254:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10250:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10241:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2211,
														"nodeType": "IfStatement",
														"src": "10237:99:12",
														"trueBody": {
															"id": 2210,
															"nodeType": "Block",
															"src": "10258:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2200,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2152,
																			"src": "10276:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2201,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10285:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2202,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10289:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10285:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10276:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2205,
																	"nodeType": "ExpressionStatement",
																	"src": "10276:15:12"
																},
																{
																	"expression": {
																		"id": 2208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2206,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2158,
																			"src": "10309:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10319:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10309:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2209,
																	"nodeType": "ExpressionStatement",
																	"src": "10309:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2212,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2152,
																"src": "10353:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10362:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10366:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10362:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10353:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2228,
														"nodeType": "IfStatement",
														"src": "10349:96:12",
														"trueBody": {
															"id": 2227,
															"nodeType": "Block",
															"src": "10369:76:12",
															"statements": [
																{
																	"expression": {
																		"id": 2221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2217,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2152,
																			"src": "10387:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2218,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10396:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2219,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10400:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10396:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10387:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2222,
																	"nodeType": "ExpressionStatement",
																	"src": "10387:14:12"
																},
																{
																	"expression": {
																		"id": 2225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2223,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2158,
																			"src": "10419:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10429:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10419:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2226,
																	"nodeType": "ExpressionStatement",
																	"src": "10419:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2229,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2152,
																"src": "10462:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2232,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10471:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10475:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10471:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10462:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2245,
														"nodeType": "IfStatement",
														"src": "10458:96:12",
														"trueBody": {
															"id": 2244,
															"nodeType": "Block",
															"src": "10478:76:12",
															"statements": [
																{
																	"expression": {
																		"id": 2238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2234,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2152,
																			"src": "10496:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2237,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2235,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10505:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2236,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10509:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10505:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10496:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2239,
																	"nodeType": "ExpressionStatement",
																	"src": "10496:14:12"
																},
																{
																	"expression": {
																		"id": 2242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2240,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2158,
																			"src": "10528:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10538:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10528:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2243,
																	"nodeType": "ExpressionStatement",
																	"src": "10528:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2246,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2152,
																"src": "10571:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10580:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10584:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10580:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10571:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2262,
														"nodeType": "IfStatement",
														"src": "10567:96:12",
														"trueBody": {
															"id": 2261,
															"nodeType": "Block",
															"src": "10587:76:12",
															"statements": [
																{
																	"expression": {
																		"id": 2255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2251,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2152,
																			"src": "10605:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2252,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10614:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2253,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10618:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10614:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10605:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2256,
																	"nodeType": "ExpressionStatement",
																	"src": "10605:14:12"
																},
																{
																	"expression": {
																		"id": 2259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2257,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2158,
																			"src": "10637:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10647:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10637:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2260,
																	"nodeType": "ExpressionStatement",
																	"src": "10637:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2263,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2152,
																"src": "10680:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10689:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10693:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10689:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10680:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2273,
														"nodeType": "IfStatement",
														"src": "10676:64:12",
														"trueBody": {
															"id": 2272,
															"nodeType": "Block",
															"src": "10696:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2268,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2158,
																			"src": "10714:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10724:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10714:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2271,
																	"nodeType": "ExpressionStatement",
																	"src": "10714:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2275,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2158,
													"src": "10766:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2156,
												"id": 2276,
												"nodeType": "Return",
												"src": "10759:13:12"
											}
										]
									},
									"documentation": {
										"id": 2150,
										"nodeType": "StructuredDocumentation",
										"src": "9770:114:12",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "9898:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9912:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2278,
												"src": "9904:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9904:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9903:15:12"
									},
									"returnParameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2278,
												"src": "9942:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9942:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9941:9:12"
									},
									"scope": 2441,
									"src": "9889:890:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2313,
										"nodeType": "Block",
										"src": "11014:165:12",
										"statements": [
											{
												"id": 2312,
												"nodeType": "UncheckedBlock",
												"src": "11024:149:12",
												"statements": [
													{
														"assignments": [
															2290
														],
														"declarations": [
															{
																"constant": false,
																"id": 2290,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11056:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2312,
																"src": "11048:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2289,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11048:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2294,
														"initialValue": {
															"arguments": [
																{
																	"id": 2292,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2281,
																	"src": "11071:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2291,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2278,
																	2314
																],
																"referencedDeclaration": 2278,
																"src": "11065:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11065:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11048:29:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2295,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2290,
																"src": "11098:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1583",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2299,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2296,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2284,
																					"src": "11108:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1583",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2297,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1583,
																						"src": "11120:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1583_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2298,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11129:2:12",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1581,
																					"src": "11120:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1583",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11108:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2304,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2302,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2300,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11135:2:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2301,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2290,
																						"src": "11139:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11135:10:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2303,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2281,
																					"src": "11148:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11135:18:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11108:45:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11160:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11108:53:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2306,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11156:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2309,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11107:55:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11098:64:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2288,
														"id": 2311,
														"nodeType": "Return",
														"src": "11091:71:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2279,
										"nodeType": "StructuredDocumentation",
										"src": "10785:143:12",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10942:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10956:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "10948:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10948:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2284,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10972:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "10963:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1583",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2283,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2282,
														"name": "Rounding",
														"nameLocations": [
															"10963:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1583,
														"src": "10963:8:12"
													},
													"referencedDeclaration": 1583,
													"src": "10963:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1583",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10947:34:12"
									},
									"returnParameters": {
										"id": 2288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "11005:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11005:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11004:9:12"
									},
									"scope": 2441,
									"src": "10933:246:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2400,
										"nodeType": "Block",
										"src": "11493:600:12",
										"statements": [
											{
												"assignments": [
													2323
												],
												"declarations": [
													{
														"constant": false,
														"id": 2323,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11511:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2400,
														"src": "11503:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2322,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11503:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2325,
												"initialValue": {
													"hexValue": "30",
													"id": 2324,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11520:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11503:18:12"
											},
											{
												"id": 2397,
												"nodeType": "UncheckedBlock",
												"src": "11531:533:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2326,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2317,
																	"src": "11559:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11568:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11559:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2329,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11574:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11559:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2340,
														"nodeType": "IfStatement",
														"src": "11555:98:12",
														"trueBody": {
															"id": 2339,
															"nodeType": "Block",
															"src": "11577:76:12",
															"statements": [
																{
																	"expression": {
																		"id": 2333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2331,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2317,
																			"src": "11595:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11605:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11595:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2334,
																	"nodeType": "ExpressionStatement",
																	"src": "11595:13:12"
																},
																{
																	"expression": {
																		"id": 2337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2335,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2323,
																			"src": "11626:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2336,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11636:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11626:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2338,
																	"nodeType": "ExpressionStatement",
																	"src": "11626:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2341,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2317,
																	"src": "11670:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11679:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11670:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2344,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11684:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11670:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2355,
														"nodeType": "IfStatement",
														"src": "11666:95:12",
														"trueBody": {
															"id": 2354,
															"nodeType": "Block",
															"src": "11687:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2346,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2317,
																			"src": "11705:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11715:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11705:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2349,
																	"nodeType": "ExpressionStatement",
																	"src": "11705:12:12"
																},
																{
																	"expression": {
																		"id": 2352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2350,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2323,
																			"src": "11735:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11745:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11735:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2353,
																	"nodeType": "ExpressionStatement",
																	"src": "11735:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2356,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2317,
																	"src": "11778:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11787:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11778:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11792:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11778:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2370,
														"nodeType": "IfStatement",
														"src": "11774:95:12",
														"trueBody": {
															"id": 2369,
															"nodeType": "Block",
															"src": "11795:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2361,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2317,
																			"src": "11813:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2362,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11823:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11813:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2364,
																	"nodeType": "ExpressionStatement",
																	"src": "11813:12:12"
																},
																{
																	"expression": {
																		"id": 2367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2365,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2323,
																			"src": "11843:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11853:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11843:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2368,
																	"nodeType": "ExpressionStatement",
																	"src": "11843:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2371,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2317,
																	"src": "11886:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11895:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11886:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11900:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11886:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2385,
														"nodeType": "IfStatement",
														"src": "11882:95:12",
														"trueBody": {
															"id": 2384,
															"nodeType": "Block",
															"src": "11903:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2376,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2317,
																			"src": "11921:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11931:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11921:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2379,
																	"nodeType": "ExpressionStatement",
																	"src": "11921:12:12"
																},
																{
																	"expression": {
																		"id": 2382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2380,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2323,
																			"src": "11951:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11961:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11951:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2383,
																	"nodeType": "ExpressionStatement",
																	"src": "11951:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2386,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2317,
																	"src": "11994:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12003:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11994:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12007:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11994:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2396,
														"nodeType": "IfStatement",
														"src": "11990:64:12",
														"trueBody": {
															"id": 2395,
															"nodeType": "Block",
															"src": "12010:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2391,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2323,
																			"src": "12028:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12038:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12028:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2394,
																	"nodeType": "ExpressionStatement",
																	"src": "12028:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2398,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2323,
													"src": "12080:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2321,
												"id": 2399,
												"nodeType": "Return",
												"src": "12073:13:12"
											}
										]
									},
									"documentation": {
										"id": 2315,
										"nodeType": "StructuredDocumentation",
										"src": "11185:240:12",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11439:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2317,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11454:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "11446:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11446:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11445:15:12"
									},
									"returnParameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "11484:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11484:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11483:9:12"
									},
									"scope": 2441,
									"src": "11430:663:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2439,
										"nodeType": "Block",
										"src": "12329:173:12",
										"statements": [
											{
												"id": 2438,
												"nodeType": "UncheckedBlock",
												"src": "12339:157:12",
												"statements": [
													{
														"assignments": [
															2413
														],
														"declarations": [
															{
																"constant": false,
																"id": 2413,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12371:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2438,
																"src": "12363:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2412,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12363:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2417,
														"initialValue": {
															"arguments": [
																{
																	"id": 2415,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2404,
																	"src": "12387:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2414,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2401,
																	2440
																],
																"referencedDeclaration": 2401,
																"src": "12380:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12380:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12363:30:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2418,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2413,
																"src": "12414:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1583",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2422,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2419,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2407,
																					"src": "12424:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1583",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2420,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1583,
																						"src": "12436:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1583_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2421,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12445:2:12",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1581,
																					"src": "12436:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1583",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12424:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2430,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2428,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2423,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12451:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2426,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2424,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2413,
																									"src": "12457:6:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 2425,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12466:1:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "12457:10:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2427,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12456:12:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12451:17:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2429,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2404,
																					"src": "12471:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12451:25:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12424:52:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12483:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12424:60:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12479:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2435,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12423:62:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12414:71:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2411,
														"id": 2437,
														"nodeType": "Return",
														"src": "12407:78:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2402,
										"nodeType": "StructuredDocumentation",
										"src": "12099:143:12",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12256:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12271:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "12263:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12263:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2407,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12287:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "12278:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1583",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2406,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2405,
														"name": "Rounding",
														"nameLocations": [
															"12278:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1583,
														"src": "12278:8:12"
													},
													"referencedDeclaration": 1583,
													"src": "12278:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1583",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12262:34:12"
									},
									"returnParameters": {
										"id": 2411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "12320:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12320:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12319:9:12"
									},
									"scope": 2441,
									"src": "12247:255:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2442,
							"src": "202:12302:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:12402:12"
				},
				"id": 12
			},
			"NewFraxProtocol/contracts/LeveragePool/TestERC20.sol": {
				"ast": {
					"absolutePath": "NewFraxProtocol/contracts/LeveragePool/TestERC20.sol",
					"exportedSymbols": {
						"AccessControl": [
							315
						],
						"Context": [
							1365
						],
						"ERC165": [
							1564
						],
						"ERC20": [
							1196
						],
						"ERC20Burnable": [
							1318
						],
						"IAccessControl": [
							388
						],
						"IERC165": [
							1576
						],
						"IERC20": [
							1274
						],
						"IERC20Metadata": [
							1343
						],
						"Math": [
							2441
						],
						"Ownable": [
							501
						],
						"Pausable": [
							609
						],
						"Strings": [
							1540
						],
						"TestERC20": [
							2479
						]
					},
					"id": 2480,
					"license": "Unlicense",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2443,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 2444,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2480,
							"sourceUnit": 1197,
							"src": "65:55:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2445,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2480,
							"sourceUnit": 1275,
							"src": "122:56:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 2446,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2480,
							"sourceUnit": 1319,
							"src": "180:74:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 2447,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2480,
							"sourceUnit": 610,
							"src": "256:55:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2448,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2480,
							"sourceUnit": 502,
							"src": "313:52:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 2449,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2480,
							"sourceUnit": 316,
							"src": "367:58:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2450,
										"name": "ERC20",
										"nameLocations": [
											"451:5:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1196,
										"src": "451:5:13"
									},
									"id": 2451,
									"nodeType": "InheritanceSpecifier",
									"src": "451:5:13"
								},
								{
									"baseName": {
										"id": 2452,
										"name": "ERC20Burnable",
										"nameLocations": [
											"458:13:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1318,
										"src": "458:13:13"
									},
									"id": 2453,
									"nodeType": "InheritanceSpecifier",
									"src": "458:13:13"
								},
								{
									"baseName": {
										"id": 2454,
										"name": "Ownable",
										"nameLocations": [
											"473:7:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 501,
										"src": "473:7:13"
									},
									"id": 2455,
									"nodeType": "InheritanceSpecifier",
									"src": "473:7:13"
								}
							],
							"canonicalName": "TestERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2479,
							"linearizedBaseContracts": [
								2479,
								501,
								1318,
								1196,
								1343,
								1274,
								1365
							],
							"name": "TestERC20",
							"nameLocation": "438:9:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2462,
										"nodeType": "Block",
										"src": "534:2:13",
										"statements": []
									},
									"id": 2463,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "546573744552433230",
													"id": 2458,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "508:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_dfbafd0c20033e275c04a1bc0b8c01577c0d94b625e0630a17061ddb8fb1ab98",
														"typeString": "literal_string \"TestERC20\""
													},
													"value": "TestERC20"
												},
												{
													"hexValue": "546573744552433230",
													"id": 2459,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "521:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_dfbafd0c20033e275c04a1bc0b8c01577c0d94b625e0630a17061ddb8fb1ab98",
														"typeString": "literal_string \"TestERC20\""
													},
													"value": "TestERC20"
												}
											],
											"id": 2460,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2457,
												"name": "ERC20",
												"nameLocations": [
													"502:5:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1196,
												"src": "502:5:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "502:31:13"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "499:2:13"
									},
									"returnParameters": {
										"id": 2461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "534:0:13"
									},
									"scope": 2479,
									"src": "488:48:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2477,
										"nodeType": "Block",
										"src": "605:34:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2473,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2465,
															"src": "620:2:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2474,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2467,
															"src": "624:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2472,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "614:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "614:17:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2476,
												"nodeType": "ExpressionStatement",
												"src": "614:17:13"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 2478,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2470,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2469,
												"name": "onlyOwner",
												"nameLocations": [
													"595:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 420,
												"src": "595:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "595:9:13"
										}
									],
									"name": "mint",
									"nameLocation": "553:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2465,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "566:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "558:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "558:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2467,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "578:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "570:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "570:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "557:28:13"
									},
									"returnParameters": {
										"id": 2471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:0:13"
									},
									"scope": 2479,
									"src": "544:95:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2480,
							"src": "429:213:13",
							"usedErrors": [],
							"usedEvents": [
								402,
								1208,
								1217
							]
						}
					],
					"src": "38:604:13"
				},
				"id": 13
			}
		}
	}
}