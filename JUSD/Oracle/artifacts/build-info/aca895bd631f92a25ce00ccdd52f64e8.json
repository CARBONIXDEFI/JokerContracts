{
	"id": "aca895bd631f92a25ce00ccdd52f64e8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.9",
	"solcLongVersion": "0.8.9+commit.e5eed63a",
	"input": {
		"language": "Solidity",
		"sources": {
			"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.11;\n\n// ====================================================================\n// |     ______                   _______                             |\n// |    / _____________ __  __   / ____(_____  ____ _____  ________   |\n// |   / /_  / ___/ __ `| |/_/  / /_  / / __ \\/ __ `/ __ \\/ ___/ _ \\  |\n// |  / __/ / /  / /_/ _>  <   / __/ / / / / / /_/ / / / / /__/  __/  |\n// | /_/   /_/   \\__,_/_/|_|  /_/   /_/_/ /_/\\__,_/_/ /_/\\___/\\___/   |\n// |                                                                  |\n// ====================================================================\n// ========================= FRAXOracleWrapper =========================\n// ====================================================================\n// The Frax.sol contract needs an oracle with a specific ABI, so this is a\n// 'middleman' one that lets it read Chainlink data.\n\n// Frax Finance: https://github.com/FraxFinance\n\n// Primary Author(s)\n// Jason Huan: https://github.com/jasonhuan\n\n// Reviewer(s) / Contributor(s)\n// Travis Moore: https://github.com/FortisFortuna\n// Sam Kazemian: https://github.com/samkazemian\n\nimport \"../Math/SafeMath.sol\";\nimport \"./AggregatorV3Interface.sol\";\nimport \"../Staking/Owned.sol\";\n\ncontract FRAXOracleWrapper is Owned {\n    using SafeMath for uint256;\n\n    AggregatorV3Interface private priceFeedFRAXETH;\n\n    uint256 public chainlink_frax_eth_decimals;\n\n    uint256 public PRICE_PRECISION = 1e6;\n    uint256 public EXTRA_PRECISION = 1e6;\n    address public timelock_address;\n\n    /* ========== MODIFIERS ========== */\n\n    modifier onlyByOwnGov() {\n        require(msg.sender == owner || msg.sender == timelock_address, \"Not owner or timelock\");\n        _;\n    }\n\n    /* ========== CONSTRUCTOR ========== */\n\n    constructor (\n        address _creator_address,\n        address _timelock_address\n    ) Owned(_creator_address) {\n        timelock_address = _timelock_address;\n\n        // FRAX / ETH\n        priceFeedFRAXETH = AggregatorV3Interface(0x551717D0D483d38a302fA4e48571450476597Ef6);\n        chainlink_frax_eth_decimals = priceFeedFRAXETH.decimals();\n    }\n\n    /* ========== VIEWS ========== */\n\n    function getFRAXPrice() public view returns (uint256 raw_price, uint256 precise_price) {\n        (uint80 roundID, int price, , uint256 updatedAt, uint80 answeredInRound) = priceFeedFRAXETH.latestRoundData();\n        require(price >= 0 && updatedAt!= 0 && answeredInRound >= roundID, \"Invalid chainlink price\");\n        \n        // E6\n        raw_price = uint256(price).mul(PRICE_PRECISION).div(uint256(10) ** chainlink_frax_eth_decimals);\n\n        // E12\n        precise_price = uint256(price).mul(PRICE_PRECISION).mul(EXTRA_PRECISION).div(uint256(10) ** chainlink_frax_eth_decimals);\n    }\n\n    // Override the logic of the FRAX-WETH Uniswap TWAP Oracle\n    // Expected Parameters: weth address, uint256 1e6\n    // Returns: FRAX-WETH Chainlink price (with 1e6 precision)\n    function consult(address token, uint amountIn) external view returns (uint amountOut) {\n        // safety checks (replacing regular FRAX-WETH oracle in FRAX.sol)\n        require(token == 0x4200000000000000000000000000000000000006, \"must use weth address\");\n        require(amountIn == 1e6, \"must call with 1e6\");\n\n        // needs to return it inverted\n        (, uint256 frax_precise_price) = getFRAXPrice(); \n        return PRICE_PRECISION.mul(PRICE_PRECISION).mul(EXTRA_PRECISION).div(frax_precise_price);\n    }\n\n    /* ========== RESTRICTED FUNCTIONS ========== */\n\n    function setChainlinkFRAXETHOracle(address _chainlink_frax_eth_oracle) external onlyByOwnGov {\n        priceFeedFRAXETH = AggregatorV3Interface(_chainlink_frax_eth_oracle);\n        chainlink_frax_eth_decimals = priceFeedFRAXETH.decimals();\n    }\n\n}"
			},
			"NewFraxProtocol/contracts/Staking/Owned.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.11;\n\n// https://docs.synthetix.io/contracts/Owned\ncontract Owned {\n    address public owner;\n    address public nominatedOwner;\n\n    constructor (address _owner) public {\n        require(_owner != address(0), \"Owner address cannot be 0\");\n        owner = _owner;\n        emit OwnerChanged(address(0), _owner);\n    }\n\n    function nominateNewOwner(address _owner) external onlyOwner {\n        nominatedOwner = _owner;\n        emit OwnerNominated(_owner);\n    }\n\n    function acceptOwnership() external {\n        require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\");\n        emit OwnerChanged(owner, nominatedOwner);\n        owner = nominatedOwner;\n        nominatedOwner = address(0);\n    }\n\n    modifier onlyOwner {\n        require(msg.sender == owner, \"Only the contract owner may perform this action\");\n        _;\n    }\n\n    event OwnerNominated(address newOwner);\n    event OwnerChanged(address oldOwner, address newOwner);\n}"
			},
			"NewFraxProtocol/contracts/Oracle/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.0;\n\ninterface AggregatorV3Interface {\n\n  function decimals() external view returns (uint8);\n  function description() external view returns (string memory);\n  function version() external view returns (uint256);\n\n  // getRoundData and latestRoundData should both raise \"No data present\"\n  // if they do not have data to report, instead of returning unset values\n  // which could be misinterpreted as actual reported values.\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n}"
			},
			"NewFraxProtocol/contracts/Math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.11;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     *\n     * _Available since v2.4.0._\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"NewFraxProtocol/contracts/Math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":623:5331  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":623:5331  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dc8a78b78653fe432b1ee4fe7ac94bc33b687e65f3c0cda02c380f5549383dfa64736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dc8a78b78653fe432b1ee4fe7ac94bc33b687e65f3c0cda02c380f5549383dfa64736f6c63430008090033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC DUP11 PUSH25 0xB78653FE432B1EE4FE7AC94BC33B687E65F3C0CDA02C380F55 0x49 CODESIZE RETURNDATASIZE STATICCALL PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "623:4708:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;623:4708:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dc8a78b78653fe432b1ee4fe7ac94bc33b687e65f3c0cda02c380f5549383dfa64736f6c63430008090033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC DUP11 PUSH25 0xB78653FE432B1EE4FE7AC94BC33B687E65F3C0CDA02C380F55 0x49 CODESIZE RETURNDATASIZE STATICCALL PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "623:4708:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dc8a78b78653fe432b1ee4fe7ac94bc33b687e65f3c0cda02c380f5549383dfa64736f6c63430008090033",
									".code": [
										{
											"begin": 623,
											"end": 5331,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NewFraxProtocol/contracts/Math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"NewFraxProtocol/contracts/Math/SafeMath.sol\":{\"keccak256\":\"0x43a20f7cf4c4319f81450d53779455e88a7ab80bdfc43925156ed4083b74a180\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85317e177f613c29156ffe0b1c1c29c31fedfea1ffc373c9d7f393ef51372728\",\"dweb:/ipfs/QmckZqe6wjgKWd4BTPUjRY1ofC9CsZKxAgXPFCKBisuJdr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"NewFraxProtocol/contracts/Oracle/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NewFraxProtocol/contracts/Oracle/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"NewFraxProtocol/contracts/Oracle/AggregatorV3Interface.sol\":{\"keccak256\":\"0x5e7761d06fea8192b159f3e287600cba23c5bdbe3a1bbe1050cc3ab9ed4273a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b6956df5c8ad84b2aba10e7d07c9f4976ae9ebdd65509729e752900a6f6475d\",\"dweb:/ipfs/QmP2MJZdZsJWRozMHmCtq4SU5ePKEHxCzhyqtBFpAjCDny\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol": {
				"FRAXOracleWrapper": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_creator_address",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_timelock_address",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerNominated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "EXTRA_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PRICE_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "chainlink_frax_eth_decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "consult",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getFRAXPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "raw_price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "precise_price",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "nominateNewOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nominatedOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_chainlink_frax_eth_oracle",
									"type": "address"
								}
							],
							"name": "setChainlinkFRAXETHOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "timelock_address",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":1269:3793  contract FRAXOracleWrapper is Owned {... */\n  mstore(0x40, 0x80)\n    /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":1479:1482  1e6 */\n  0x0f4240\n    /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":1446:1482  uint256 public PRICE_PRECISION = 1e6 */\n  0x04\n  sstore\n    /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":1521:1524  1e6 */\n  0x0f4240\n    /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":1488:1524  uint256 public EXTRA_PRECISION = 1e6 */\n  0x05\n  sstore\n    /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":1801:2150  constructor (... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":1895:1911  _creator_address */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":254:274  _owner != address(0) */\n  dup2\n  and\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":246:304  require(_owner != address(0), \"Owner address cannot be 0\") */\n  tag_7\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":696:698   */\n  0x20\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":246:304  require(_owner != address(0), \"Owner address cannot be 0\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":678:699   */\n  mstore\n    /* \"#utility.yul\":735:737   */\n  0x19\n    /* \"#utility.yul\":715:733   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":708:738   */\n  mstore\n    /* \"#utility.yul\":774:801   */\n  0x4f776e657220616464726573732063616e6e6f74206265203000000000000000\n    /* \"#utility.yul\":754:772   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":747:802   */\n  mstore\n    /* \"#utility.yul\":819:837   */\n  0x64\n  add\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":246:304  require(_owner != address(0), \"Owner address cannot be 0\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_7:\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":314:319  owner */\n  0x00\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":314:328  owner = _owner */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":343:375  OwnerChanged(address(0), _owner) */\n  0x40\n  dup1\n  mload\n    /* \"#utility.yul\":1060:1094   */\n  swap3\n  dup4\n  mstore\n    /* \"#utility.yul\":1125:1127   */\n  0x20\n    /* \"#utility.yul\":1110:1128   */\n  dup4\n  add\n    /* \"#utility.yul\":1103:1146   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":343:375  OwnerChanged(address(0), _owner) */\n  0xb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c\n  swap2\n    /* \"#utility.yul\":995:1013   */\n  add\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":343:375  OwnerChanged(address(0), _owner) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n  pop\n    /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":1923:1939  timelock_address */\n  0x06\n    /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":1923:1959  timelock_address = _timelock_address */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":1992:2008  priceFeedFRAXETH */\n  0x02\n    /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":1992:2076  priceFeedFRAXETH = AggregatorV3Interface(0x551717D0D483d38a302fA4e48571450476597Ef6) */\n  dup1\n  sload\n    /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2033:2075  0x551717D0D483d38a302fA4e48571450476597Ef6 */\n  0x551717d0d483d38a302fa4e48571450476597ef6\n    /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":1992:2076  priceFeedFRAXETH = AggregatorV3Interface(0x551717D0D483d38a302fA4e48571450476597Ef6) */\n  swap3\n  and\n  dup3\n  or\n  swap1\n  sstore\n    /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2116:2143  priceFeedFRAXETH.decimals() */\n  0x40\n  dup1\n  mload\n  shl(0xe0, 0x313ce567)\n  dup2\n  mstore\n  swap1\n  mload\n    /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2116:2141  priceFeedFRAXETH.decimals */\n  0x313ce567\n  swap2\n  0x04\n    /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2116:2143  priceFeedFRAXETH.decimals() */\n  dup2\n  dup2\n  add\n  swap3\n  0x20\n  swap3\n  swap1\n  swap2\n  swap1\n  dup3\n  swap1\n  sub\n  add\n  dup2\n    /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2033:2075  0x551717D0D483d38a302fA4e48571450476597Ef6 */\n  dup7\n    /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2116:2143  priceFeedFRAXETH.decimals() */\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_13\n  jumpi\n  0x00\n  dup1\n  revert\ntag_13:\n  pop\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_15\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2086:2143  chainlink_frax_eth_decimals = priceFeedFRAXETH.decimals() */\n  0xff\n  and\n    /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2086:2113  chainlink_frax_eth_decimals */\n  0x03\n    /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2086:2143  chainlink_frax_eth_decimals = priceFeedFRAXETH.decimals() */\n  sstore\n  pop\n    /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":1269:3793  contract FRAXOracleWrapper is Owned {... */\n  tag_20\n  swap1\n  pop\n  jump\n    /* \"#utility.yul\":14:191   */\ntag_19:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_22:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  dup1\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  dup1\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_24:\n    /* \"#utility.yul\":375:415   */\n  tag_25\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_19\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_26\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_19\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1157:1430   */\ntag_17:\n    /* \"#utility.yul\":1225:1231   */\n  0x00\n    /* \"#utility.yul\":1278:1280   */\n  0x20\n    /* \"#utility.yul\":1266:1275   */\n  dup3\n    /* \"#utility.yul\":1257:1264   */\n  dup5\n    /* \"#utility.yul\":1253:1276   */\n  sub\n    /* \"#utility.yul\":1249:1281   */\n  slt\n    /* \"#utility.yul\":1246:1298   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1294:1295   */\n  0x00\n    /* \"#utility.yul\":1291:1292   */\n  dup1\n    /* \"#utility.yul\":1284:1296   */\n  revert\n    /* \"#utility.yul\":1246:1298   */\ntag_30:\n    /* \"#utility.yul\":1326:1335   */\n  dup2\n    /* \"#utility.yul\":1320:1336   */\n  mload\n    /* \"#utility.yul\":1376:1380   */\n  0xff\n    /* \"#utility.yul\":1369:1374   */\n  dup2\n    /* \"#utility.yul\":1365:1381   */\n  and\n    /* \"#utility.yul\":1358:1363   */\n  dup2\n    /* \"#utility.yul\":1355:1382   */\n  eq\n    /* \"#utility.yul\":1345:1400   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":1396:1397   */\n  0x00\n    /* \"#utility.yul\":1393:1394   */\n  dup1\n    /* \"#utility.yul\":1386:1398   */\n  revert\n    /* \"#utility.yul\":1345:1400   */\ntag_31:\n    /* \"#utility.yul\":1419:1424   */\n  swap4\n    /* \"#utility.yul\":1157:1430   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_20:\n    /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":1269:3793  contract FRAXOracleWrapper is Owned {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":1269:3793  contract FRAXOracleWrapper is Owned {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95082d25\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x963f8e4c\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdc6663c7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xee88fc91\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xffaa3b23\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x1627540c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1e47ba5c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3ddac953\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x53a47bb7\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x79ba5097\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":388:526  function nominateNewOwner(address _owner) external onlyOwner {... */\n    tag_3:\n      tag_15\n      tag_16\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      stop\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":1397:1439  uint256 public chainlink_frax_eth_decimals */\n    tag_4:\n      tag_19\n      sload(0x03)\n      dup2\n      jump\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":1397:1439  uint256 public chainlink_frax_eth_decimals */\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2971:3485  function consult(address token, uint amountIn) external view returns (uint amountOut) {... */\n    tag_5:\n      tag_19\n      tag_24\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":164:193  address public nominatedOwner */\n    tag_6:\n      sload(0x01)\n      tag_28\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_28:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":988:1020   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":970:1021   */\n      dup2\n      mstore\n        /* \"#utility.yul\":958:960   */\n      0x20\n        /* \"#utility.yul\":943:961   */\n      add\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":164:193  address public nominatedOwner */\n      tag_21\n        /* \"#utility.yul\":824:1027   */\n      jump\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":532:798  function acceptOwnership() external {... */\n    tag_7:\n      tag_15\n      tag_33\n      jump\t// in\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":138:158  address public owner */\n    tag_8:\n      sload(0x00)\n      tag_28\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":1446:1482  uint256 public PRICE_PRECISION = 1e6 */\n    tag_9:\n      tag_19\n      sload(0x04)\n      dup2\n      jump\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3545:3790  function setChainlinkFRAXETHOracle(address _chainlink_frax_eth_oracle) external onlyByOwnGov {... */\n    tag_10:\n      tag_15\n      tag_41\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":1530:1561  address public timelock_address */\n    tag_11:\n      sload(0x06)\n      tag_28\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2195:2785  function getFRAXPrice() public view returns (uint256 raw_price, uint256 precise_price) {... */\n    tag_12:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1206:1231   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":1262:1264   */\n      0x20\n        /* \"#utility.yul\":1247:1265   */\n      dup4\n      add\n        /* \"#utility.yul\":1240:1274   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1179:1197   */\n      add\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2195:2785  function getFRAXPrice() public view returns (uint256 raw_price, uint256 precise_price) {... */\n      tag_21\n        /* \"#utility.yul\":1032:1280   */\n      jump\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":1488:1524  uint256 public EXTRA_PRECISION = 1e6 */\n    tag_13:\n      tag_19\n      sload(0x05)\n      dup2\n      jump\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":388:526  function nominateNewOwner(address _owner) external onlyOwner {... */\n    tag_18:\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":855:860  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":841:851  msg.sender */\n      caller\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":841:860  msg.sender == owner */\n      eq\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":833:912  require(msg.sender == owner, \"Only the contract owner may perform this action\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1487:1489   */\n      0x20\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":833:912  require(msg.sender == owner, \"Only the contract owner may perform this action\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1469:1490   */\n      mstore\n        /* \"#utility.yul\":1526:1528   */\n      0x2f\n        /* \"#utility.yul\":1506:1524   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1499:1529   */\n      mstore\n        /* \"#utility.yul\":1565:1599   */\n      0x4f6e6c792074686520636f6e7472616374206f776e6572206d61792070657266\n        /* \"#utility.yul\":1545:1563   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1538:1600   */\n      mstore\n      shl(0x89, 0x37b936903a3434b99030b1ba34b7b7)\n        /* \"#utility.yul\":1616:1634   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1609:1654   */\n      mstore\n        /* \"#utility.yul\":1671:1690   */\n      0x84\n      add\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":833:912  require(msg.sender == owner, \"Only the contract owner may perform this action\") */\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":459:473  nominatedOwner */\n      0x01\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":459:482  nominatedOwner = _owner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":497:519  OwnerNominated(_owner) */\n      mload(0x40)\n        /* \"#utility.yul\":970:1021   */\n      swap1\n      dup2\n      mstore\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":497:519  OwnerNominated(_owner) */\n      0x906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce22\n      swap1\n        /* \"#utility.yul\":958:960   */\n      0x20\n        /* \"#utility.yul\":943:961   */\n      add\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":497:519  OwnerNominated(_owner) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":388:526  function nominateNewOwner(address _owner) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2971:3485  function consult(address token, uint amountIn) external view returns (uint amountOut) {... */\n    tag_26:\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3041:3055  uint amountOut */\n      0x00\n      add(shl(0x99, 0x21), 0x06)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3149:3200  token == 0x4200000000000000000000000000000000000006 */\n      dup5\n      and\n      eq\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3141:3226  require(token == 0x4200000000000000000000000000000000000006, \"must use weth address\") */\n      tag_60\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1903:1905   */\n      0x20\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3141:3226  require(token == 0x4200000000000000000000000000000000000006, \"must use weth address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1885:1906   */\n      mstore\n        /* \"#utility.yul\":1942:1944   */\n      0x15\n        /* \"#utility.yul\":1922:1940   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1915:1945   */\n      mstore\n      shl(0x58, 0x6d7573742075736520776574682061646472657373)\n        /* \"#utility.yul\":1961:1979   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1954:2005   */\n      mstore\n        /* \"#utility.yul\":2022:2040   */\n      0x64\n      add\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3141:3226  require(token == 0x4200000000000000000000000000000000000006, \"must use weth address\") */\n      tag_55\n        /* \"#utility.yul\":1701:2046   */\n      jump\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3141:3226  require(token == 0x4200000000000000000000000000000000000006, \"must use weth address\") */\n    tag_60:\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3244:3252  amountIn */\n      dup2\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3256:3259  1e6 */\n      0x0f4240\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3244:3259  amountIn == 1e6 */\n      eq\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3236:3282  require(amountIn == 1e6, \"must call with 1e6\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2253:2255   */\n      0x20\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3236:3282  require(amountIn == 1e6, \"must call with 1e6\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2235:2256   */\n      mstore\n        /* \"#utility.yul\":2292:2294   */\n      0x12\n        /* \"#utility.yul\":2272:2290   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2265:2295   */\n      mstore\n      shl(0x71, 0x36bab9ba1031b0b636103bb4ba341018b29b)\n        /* \"#utility.yul\":2311:2329   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2304:2352   */\n      mstore\n        /* \"#utility.yul\":2369:2387   */\n      0x64\n      add\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3236:3282  require(amountIn == 1e6, \"must call with 1e6\") */\n      tag_55\n        /* \"#utility.yul\":2051:2393   */\n      jump\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3236:3282  require(amountIn == 1e6, \"must call with 1e6\") */\n    tag_63:\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3335:3361  uint256 frax_precise_price */\n      0x00\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3365:3379  getFRAXPrice() */\n      tag_66\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3365:3377  getFRAXPrice */\n      tag_47\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3365:3379  getFRAXPrice() */\n      jump\t// in\n    tag_66:\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3332:3379  (, uint256 frax_precise_price) = getFRAXPrice() */\n      swap2\n      pop\n      pop\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3397:3478  PRICE_PRECISION.mul(PRICE_PRECISION).mul(EXTRA_PRECISION).div(frax_precise_price) */\n      tag_67\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3459:3477  frax_precise_price */\n      dup2\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3397:3454  PRICE_PRECISION.mul(PRICE_PRECISION).mul(EXTRA_PRECISION) */\n      tag_68\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3438:3453  EXTRA_PRECISION */\n      sload(0x05)\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3397:3433  PRICE_PRECISION.mul(PRICE_PRECISION) */\n      tag_69\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3417:3432  PRICE_PRECISION */\n      sload(0x04)\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3397:3412  PRICE_PRECISION */\n      sload(0x04)\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3397:3416  PRICE_PRECISION.mul */\n      tag_70\n      swap1\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3397:3433  PRICE_PRECISION.mul(PRICE_PRECISION) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_69:\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3397:3437  PRICE_PRECISION.mul(PRICE_PRECISION).mul */\n      swap1\n      tag_70\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3397:3454  PRICE_PRECISION.mul(PRICE_PRECISION).mul(EXTRA_PRECISION) */\n      jump\t// in\n    tag_68:\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3397:3458  PRICE_PRECISION.mul(PRICE_PRECISION).mul(EXTRA_PRECISION).div */\n      swap1\n      tag_71\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3397:3478  PRICE_PRECISION.mul(PRICE_PRECISION).mul(EXTRA_PRECISION).div(frax_precise_price) */\n      jump\t// in\n    tag_67:\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3390:3478  return PRICE_PRECISION.mul(PRICE_PRECISION).mul(EXTRA_PRECISION).div(frax_precise_price) */\n      swap2\n      pop\n      pop\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2971:3485  function consult(address token, uint amountIn) external view returns (uint amountOut) {... */\n    tag_59:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":532:798  function acceptOwnership() external {... */\n    tag_33:\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":600:614  nominatedOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":586:596  msg.sender */\n      caller\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":586:614  msg.sender == nominatedOwner */\n      eq\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":578:672  require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2600:2602   */\n      0x20\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":578:672  require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2582:2603   */\n      mstore\n        /* \"#utility.yul\":2639:2641   */\n      0x35\n        /* \"#utility.yul\":2619:2637   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2612:2642   */\n      mstore\n        /* \"#utility.yul\":2678:2712   */\n      0x596f75206d757374206265206e6f6d696e61746564206265666f726520796f75\n        /* \"#utility.yul\":2658:2676   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2651:2713   */\n      mstore\n      shl(0x5c, 0x02063616e20616363657074206f776e65727368697)\n        /* \"#utility.yul\":2729:2747   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2722:2773   */\n      mstore\n        /* \"#utility.yul\":2790:2809   */\n      0x84\n      add\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":578:672  require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\") */\n      tag_55\n        /* \"#utility.yul\":2398:2815   */\n      jump\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":578:672  require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\") */\n    tag_73:\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":700:705  owner */\n      sload(0x00)\n      0x01\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":707:721  nominatedOwner */\n      sload\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":687:722  OwnerChanged(owner, nominatedOwner) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":700:705  owner */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":3032:3066   */\n      dup2\n      mstore\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":707:721  nominatedOwner */\n      swap3\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3097:3099   */\n      0x20\n        /* \"#utility.yul\":3082:3100   */\n      dup4\n      add\n        /* \"#utility.yul\":3075:3118   */\n      mstore\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":687:722  OwnerChanged(owner, nominatedOwner) */\n      0xb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c\n      swap2\n        /* \"#utility.yul\":2967:2985   */\n      add\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":687:722  OwnerChanged(owner, nominatedOwner) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":740:754  nominatedOwner */\n      0x01\n      dup1\n      sload\n      0x00\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":732:754  owner = nominatedOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":740:754  nominatedOwner */\n      dup5\n      and\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":732:754  owner = nominatedOwner */\n      or\n      swap1\n      swap2\n      sstore\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":764:791  nominatedOwner = address(0) */\n      and\n      swap1\n      sstore\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":532:798  function acceptOwnership() external {... */\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3545:3790  function setChainlinkFRAXETHOracle(address _chainlink_frax_eth_oracle) external onlyByOwnGov {... */\n    tag_42:\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":1667:1672  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":1653:1663  msg.sender */\n      caller\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":1653:1672  msg.sender == owner */\n      eq\n      dup1\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":1653:1706  msg.sender == owner || msg.sender == timelock_address */\n      tag_79\n      jumpi\n      pop\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":1690:1706  timelock_address */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":1676:1686  msg.sender */\n      caller\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":1676:1706  msg.sender == timelock_address */\n      eq\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":1653:1706  msg.sender == owner || msg.sender == timelock_address */\n    tag_79:\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":1645:1732  require(msg.sender == owner || msg.sender == timelock_address, \"Not owner or timelock\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3331:3333   */\n      0x20\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":1645:1732  require(msg.sender == owner || msg.sender == timelock_address, \"Not owner or timelock\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3313:3334   */\n      mstore\n        /* \"#utility.yul\":3370:3372   */\n      0x15\n        /* \"#utility.yul\":3350:3368   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3343:3373   */\n      mstore\n      shl(0x58, 0x4e6f74206f776e6572206f722074696d656c6f636b)\n        /* \"#utility.yul\":3389:3407   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3382:3433   */\n      mstore\n        /* \"#utility.yul\":3450:3468   */\n      0x64\n      add\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":1645:1732  require(msg.sender == owner || msg.sender == timelock_address, \"Not owner or timelock\") */\n      tag_55\n        /* \"#utility.yul\":3129:3474   */\n      jump\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":1645:1732  require(msg.sender == owner || msg.sender == timelock_address, \"Not owner or timelock\") */\n    tag_80:\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3648:3664  priceFeedFRAXETH */\n      0x02\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3648:3716  priceFeedFRAXETH = AggregatorV3Interface(_chainlink_frax_eth_oracle) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3756:3783  priceFeedFRAXETH.decimals() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x313ce567)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3756:3781  priceFeedFRAXETH.decimals */\n      0x313ce567\n      swap2\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3756:3783  priceFeedFRAXETH.decimals() */\n      0x04\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3648:3716  priceFeedFRAXETH = AggregatorV3Interface(_chainlink_frax_eth_oracle) */\n      dup7\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3756:3783  priceFeedFRAXETH.decimals() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_86\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_86:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3726:3783  chainlink_frax_eth_decimals = priceFeedFRAXETH.decimals() */\n      0xff\n      and\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3726:3753  chainlink_frax_eth_decimals */\n      0x03\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3726:3783  chainlink_frax_eth_decimals = priceFeedFRAXETH.decimals() */\n      sstore\n      pop\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":3545:3790  function setChainlinkFRAXETHOracle(address _chainlink_frax_eth_oracle) external onlyByOwnGov {... */\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2195:2785  function getFRAXPrice() public view returns (uint256 raw_price, uint256 precise_price) {... */\n    tag_47:\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2240:2257  uint256 raw_price */\n      0x00\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2259:2280  uint256 precise_price */\n      dup1\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2293:2307  uint80 roundID */\n      0x00\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2309:2318  int price */\n      dup1\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2322:2339  uint256 updatedAt */\n      0x00\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2341:2363  uint80 answeredInRound */\n      dup1\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2367:2383  priceFeedFRAXETH */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2367:2399  priceFeedFRAXETH.latestRoundData */\n      and\n      0xfeaf968c\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2367:2401  priceFeedFRAXETH.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_92\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2292:2401  (uint80 roundID, int price, , uint256 updatedAt, uint80 answeredInRound) = priceFeedFRAXETH.latestRoundData() */\n      swap5\n      pop\n      swap5\n      pop\n      pop\n      swap4\n      pop\n      swap4\n      pop\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2428:2429  0 */\n      0x00\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2419:2424  price */\n      dup4\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2419:2429  price >= 0 */\n      slt\n      iszero\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2419:2446  price >= 0 && updatedAt!= 0 */\n      dup1\n      iszero\n      tag_95\n      jumpi\n      pop\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2433:2446  updatedAt!= 0 */\n      dup2\n      iszero\n      iszero\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2419:2446  price >= 0 && updatedAt!= 0 */\n    tag_95:\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2419:2476  price >= 0 && updatedAt!= 0 && answeredInRound >= roundID */\n      dup1\n      iszero\n      tag_96\n      jumpi\n      pop\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2469:2476  roundID */\n      dup4\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2450:2476  answeredInRound >= roundID */\n      0xffffffffffffffffffff\n      and\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2450:2465  answeredInRound */\n      dup2\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2450:2476  answeredInRound >= roundID */\n      0xffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2419:2476  price >= 0 && updatedAt!= 0 && answeredInRound >= roundID */\n    tag_96:\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2411:2504  require(price >= 0 && updatedAt!= 0 && answeredInRound >= roundID, \"Invalid chainlink price\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4621:4623   */\n      0x20\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2411:2504  require(price >= 0 && updatedAt!= 0 && answeredInRound >= roundID, \"Invalid chainlink price\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4603:4624   */\n      mstore\n        /* \"#utility.yul\":4660:4662   */\n      0x17\n        /* \"#utility.yul\":4640:4658   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4633:4663   */\n      mstore\n        /* \"#utility.yul\":4699:4724   */\n      0x496e76616c696420636861696e6c696e6b207072696365000000000000000000\n        /* \"#utility.yul\":4679:4697   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4672:4725   */\n      mstore\n        /* \"#utility.yul\":4742:4760   */\n      0x64\n      add\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2411:2504  require(price >= 0 && updatedAt!= 0 && answeredInRound >= roundID, \"Invalid chainlink price\") */\n      tag_55\n        /* \"#utility.yul\":4419:4766   */\n      jump\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2411:2504  require(price >= 0 && updatedAt!= 0 && answeredInRound >= roundID, \"Invalid chainlink price\") */\n    tag_97:\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2549:2632  uint256(price).mul(PRICE_PRECISION).div(uint256(10) ** chainlink_frax_eth_decimals) */\n      tag_100\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2604:2631  chainlink_frax_eth_decimals */\n      sload(0x03)\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2597:2599  10 */\n      0x0a\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2589:2631  uint256(10) ** chainlink_frax_eth_decimals */\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2568:2583  PRICE_PRECISION */\n      sload(0x04)\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2549:2584  uint256(price).mul(PRICE_PRECISION) */\n      tag_68\n      swap1\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2557:2562  price */\n      dup7\n      swap1\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2549:2567  uint256(price).mul */\n      tag_70\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2549:2584  uint256(price).mul(PRICE_PRECISION) */\n      jump\t// in\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2549:2632  uint256(price).mul(PRICE_PRECISION).div(uint256(10) ** chainlink_frax_eth_decimals) */\n    tag_100:\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2537:2632  raw_price = uint256(price).mul(PRICE_PRECISION).div(uint256(10) ** chainlink_frax_eth_decimals) */\n      swap6\n      pop\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2674:2778  uint256(price).mul(PRICE_PRECISION).mul(EXTRA_PRECISION).div(uint256(10) ** chainlink_frax_eth_decimals) */\n      tag_104\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2750:2777  chainlink_frax_eth_decimals */\n      sload(0x03)\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2743:2745  10 */\n      0x0a\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2735:2777  uint256(10) ** chainlink_frax_eth_decimals */\n      tag_105\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_105:\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2674:2730  uint256(price).mul(PRICE_PRECISION).mul(EXTRA_PRECISION) */\n      tag_68\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2714:2729  EXTRA_PRECISION */\n      sload(0x05)\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2674:2709  uint256(price).mul(PRICE_PRECISION) */\n      tag_69\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2693:2708  PRICE_PRECISION */\n      sload(0x04)\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2682:2687  price */\n      dup9\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2674:2692  uint256(price).mul */\n      tag_70\n      swap1\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2674:2709  uint256(price).mul(PRICE_PRECISION) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2674:2778  uint256(price).mul(PRICE_PRECISION).mul(EXTRA_PRECISION).div(uint256(10) ** chainlink_frax_eth_decimals) */\n    tag_104:\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2658:2778  precise_price = uint256(price).mul(PRICE_PRECISION).mul(EXTRA_PRECISION).div(uint256(10) ** chainlink_frax_eth_decimals) */\n      swap5\n      pop\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2282:2785  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":2195:2785  function getFRAXPrice() public view returns (uint256 raw_price, uint256 precise_price) {... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2193:2652  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_70:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2251:2258  uint256 */\n      0x00\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2492:2498  a == 0 */\n      dup3\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2488:2533  if (a == 0) {... */\n      tag_109\n      jumpi\n      pop\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2521:2522  0 */\n      0x00\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2514:2522  return 0 */\n      jump(tag_59)\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2488:2533  if (a == 0) {... */\n    tag_109:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2543:2552  uint256 c */\n      0x00\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2555:2560  a * b */\n      tag_110\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2559:2560  b */\n      dup4\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2555:2556  a */\n      dup6\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2555:2560  a * b */\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2543:2560  uint256 c = a * b */\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2587:2588  b */\n      dup3\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2578:2583  c / a */\n      tag_112\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2582:2583  a */\n      dup6\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2543:2560  uint256 c = a * b */\n      dup4\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2578:2583  c / a */\n      tag_113\n      jump\t// in\n    tag_112:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2578:2588  c / a == b */\n      eq\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2570:2626  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6874:6876   */\n      0x20\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2570:2626  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6856:6877   */\n      mstore\n        /* \"#utility.yul\":6913:6915   */\n      0x21\n        /* \"#utility.yul\":6893:6911   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6886:6916   */\n      mstore\n        /* \"#utility.yul\":6952:6986   */\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n        /* \"#utility.yul\":6932:6950   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6925:6987   */\n      mstore\n      shl(0xf8, 0x77)\n        /* \"#utility.yul\":7003:7021   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6996:7027   */\n      mstore\n        /* \"#utility.yul\":7044:7063   */\n      0x84\n      add\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2570:2626  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_55\n        /* \"#utility.yul\":6672:7069   */\n      jump\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2570:2626  require(c / a == b, \"SafeMath: multiplication overflow\") */\n    tag_114:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2644:2645  c */\n      swap4\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2193:2652  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3107:3237  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_71:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3165:3172  uint256 */\n      0x00\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3191:3230  div(a, b, \"SafeMath: division by zero\") */\n      tag_114\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3195:3196  a */\n      dup4\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3198:3199  b */\n      dup4\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3191:3230  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3838:3845  uint256 */\n      0x00\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3938:3950  errorMessage */\n      dup2\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3931:3936  b > 0 */\n      dup4\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3923:3951  require(b > 0, errorMessage) */\n      tag_121\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_121:\n      pop\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3961:3970  uint256 c */\n      0x00\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3973:3978  a / b */\n      tag_124\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3977:3978  b */\n      dup5\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3973:3974  a */\n      dup7\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3973:3978  a / b */\n      tag_113\n      jump\t// in\n    tag_124:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3961:3978  uint256 c = a / b */\n      swap6\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3752:4090  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_125:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_132\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_132:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_17:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_134\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_134:\n        /* \"#utility.yul\":343:372   */\n      tag_114\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_125\n      jump\t// in\n        /* \"#utility.yul\":565:819   */\n    tag_25:\n        /* \"#utility.yul\":633:639   */\n      0x00\n        /* \"#utility.yul\":641:647   */\n      dup1\n        /* \"#utility.yul\":694:696   */\n      0x40\n        /* \"#utility.yul\":682:691   */\n      dup4\n        /* \"#utility.yul\":673:680   */\n      dup6\n        /* \"#utility.yul\":669:692   */\n      sub\n        /* \"#utility.yul\":665:697   */\n      slt\n        /* \"#utility.yul\":662:714   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":710:711   */\n      0x00\n        /* \"#utility.yul\":707:708   */\n      dup1\n        /* \"#utility.yul\":700:712   */\n      revert\n        /* \"#utility.yul\":662:714   */\n    tag_138:\n        /* \"#utility.yul\":733:762   */\n      tag_139\n        /* \"#utility.yul\":752:761   */\n      dup4\n        /* \"#utility.yul\":733:762   */\n      tag_125\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":723:762   */\n      swap5\n        /* \"#utility.yul\":809:811   */\n      0x20\n        /* \"#utility.yul\":794:812   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":781:813   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":565:819   */\n      jump\t// out\n        /* \"#utility.yul\":3479:3752   */\n    tag_88:\n        /* \"#utility.yul\":3547:3553   */\n      0x00\n        /* \"#utility.yul\":3600:3602   */\n      0x20\n        /* \"#utility.yul\":3588:3597   */\n      dup3\n        /* \"#utility.yul\":3579:3586   */\n      dup5\n        /* \"#utility.yul\":3575:3598   */\n      sub\n        /* \"#utility.yul\":3571:3603   */\n      slt\n        /* \"#utility.yul\":3568:3620   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":3616:3617   */\n      0x00\n        /* \"#utility.yul\":3613:3614   */\n      dup1\n        /* \"#utility.yul\":3606:3618   */\n      revert\n        /* \"#utility.yul\":3568:3620   */\n    tag_149:\n        /* \"#utility.yul\":3648:3657   */\n      dup2\n        /* \"#utility.yul\":3642:3658   */\n      mload\n        /* \"#utility.yul\":3698:3702   */\n      0xff\n        /* \"#utility.yul\":3691:3696   */\n      dup2\n        /* \"#utility.yul\":3687:3703   */\n      and\n        /* \"#utility.yul\":3680:3685   */\n      dup2\n        /* \"#utility.yul\":3677:3704   */\n      eq\n        /* \"#utility.yul\":3667:3722   */\n      tag_114\n      jumpi\n        /* \"#utility.yul\":3718:3719   */\n      0x00\n        /* \"#utility.yul\":3715:3716   */\n      dup1\n        /* \"#utility.yul\":3708:3720   */\n      revert\n        /* \"#utility.yul\":3757:3936   */\n    tag_126:\n        /* \"#utility.yul\":3835:3848   */\n      dup1\n      mload\n        /* \"#utility.yul\":3888:3910   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":3877:3911   */\n      dup2\n      and\n        /* \"#utility.yul\":3867:3912   */\n      dup2\n      eq\n        /* \"#utility.yul\":3857:3930   */\n      tag_132\n      jumpi\n        /* \"#utility.yul\":3926:3927   */\n      0x00\n        /* \"#utility.yul\":3923:3924   */\n      dup1\n        /* \"#utility.yul\":3916:3928   */\n      revert\n        /* \"#utility.yul\":3941:4414   */\n    tag_94:\n        /* \"#utility.yul\":4044:4050   */\n      0x00\n        /* \"#utility.yul\":4052:4058   */\n      dup1\n        /* \"#utility.yul\":4060:4066   */\n      0x00\n        /* \"#utility.yul\":4068:4074   */\n      dup1\n        /* \"#utility.yul\":4076:4082   */\n      0x00\n        /* \"#utility.yul\":4129:4132   */\n      0xa0\n        /* \"#utility.yul\":4117:4126   */\n      dup7\n        /* \"#utility.yul\":4108:4115   */\n      dup9\n        /* \"#utility.yul\":4104:4127   */\n      sub\n        /* \"#utility.yul\":4100:4133   */\n      slt\n        /* \"#utility.yul\":4097:4150   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":4146:4147   */\n      0x00\n        /* \"#utility.yul\":4143:4144   */\n      dup1\n        /* \"#utility.yul\":4136:4148   */\n      revert\n        /* \"#utility.yul\":4097:4150   */\n    tag_154:\n        /* \"#utility.yul\":4169:4208   */\n      tag_155\n        /* \"#utility.yul\":4198:4207   */\n      dup7\n        /* \"#utility.yul\":4169:4208   */\n      tag_126\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":4159:4208   */\n      swap5\n      pop\n        /* \"#utility.yul\":4248:4250   */\n      0x20\n        /* \"#utility.yul\":4237:4246   */\n      dup7\n        /* \"#utility.yul\":4233:4251   */\n      add\n        /* \"#utility.yul\":4227:4252   */\n      mload\n        /* \"#utility.yul\":4217:4252   */\n      swap4\n      pop\n        /* \"#utility.yul\":4292:4294   */\n      0x40\n        /* \"#utility.yul\":4281:4290   */\n      dup7\n        /* \"#utility.yul\":4277:4295   */\n      add\n        /* \"#utility.yul\":4271:4296   */\n      mload\n        /* \"#utility.yul\":4261:4296   */\n      swap3\n      pop\n        /* \"#utility.yul\":4336:4338   */\n      0x60\n        /* \"#utility.yul\":4325:4334   */\n      dup7\n        /* \"#utility.yul\":4321:4339   */\n      add\n        /* \"#utility.yul\":4315:4340   */\n      mload\n        /* \"#utility.yul\":4305:4340   */\n      swap2\n      pop\n        /* \"#utility.yul\":4359:4408   */\n      tag_156\n        /* \"#utility.yul\":4403:4406   */\n      0x80\n        /* \"#utility.yul\":4392:4401   */\n      dup8\n        /* \"#utility.yul\":4388:4407   */\n      add\n        /* \"#utility.yul\":4359:4408   */\n      tag_126\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":4349:4408   */\n      swap1\n      pop\n        /* \"#utility.yul\":3941:4414   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4771:4898   */\n    tag_127:\n        /* \"#utility.yul\":4832:4842   */\n      0x4e487b71\n        /* \"#utility.yul\":4827:4830   */\n      0xe0\n        /* \"#utility.yul\":4823:4843   */\n      shl\n        /* \"#utility.yul\":4820:4821   */\n      0x00\n        /* \"#utility.yul\":4813:4844   */\n      mstore\n        /* \"#utility.yul\":4863:4867   */\n      0x11\n        /* \"#utility.yul\":4860:4861   */\n      0x04\n        /* \"#utility.yul\":4853:4868   */\n      mstore\n        /* \"#utility.yul\":4887:4891   */\n      0x24\n        /* \"#utility.yul\":4884:4885   */\n      0x00\n        /* \"#utility.yul\":4877:4892   */\n      revert\n        /* \"#utility.yul\":4903:5325   */\n    tag_128:\n        /* \"#utility.yul\":4992:4993   */\n      0x01\n        /* \"#utility.yul\":5035:5040   */\n      dup2\n        /* \"#utility.yul\":4992:4993   */\n      dup2\n        /* \"#utility.yul\":5049:5319   */\n    tag_160:\n        /* \"#utility.yul\":5070:5077   */\n      dup1\n        /* \"#utility.yul\":5060:5068   */\n      dup6\n        /* \"#utility.yul\":5057:5078   */\n      gt\n        /* \"#utility.yul\":5049:5319   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":5129:5133   */\n      dup2\n        /* \"#utility.yul\":5125:5126   */\n      0x00\n        /* \"#utility.yul\":5121:5127   */\n      not\n        /* \"#utility.yul\":5117:5134   */\n      div\n        /* \"#utility.yul\":5111:5115   */\n      dup3\n        /* \"#utility.yul\":5108:5135   */\n      gt\n        /* \"#utility.yul\":5105:5158   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":5138:5156   */\n      tag_164\n      tag_127\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":5188:5195   */\n      dup1\n        /* \"#utility.yul\":5178:5186   */\n      dup6\n        /* \"#utility.yul\":5174:5196   */\n      and\n        /* \"#utility.yul\":5171:5226   */\n      iszero\n      tag_165\n      jumpi\n        /* \"#utility.yul\":5208:5224   */\n      swap2\n      dup2\n      mul\n      swap2\n        /* \"#utility.yul\":5171:5226   */\n    tag_165:\n        /* \"#utility.yul\":5287:5309   */\n      swap4\n      dup5\n      shr\n      swap4\n        /* \"#utility.yul\":5247:5262   */\n      swap1\n      dup1\n      mul\n      swap1\n        /* \"#utility.yul\":5049:5319   */\n      jump(tag_160)\n    tag_162:\n        /* \"#utility.yul\":5053:5056   */\n      pop\n        /* \"#utility.yul\":4903:5325   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5330:6136   */\n    tag_129:\n        /* \"#utility.yul\":5379:5384   */\n      0x00\n        /* \"#utility.yul\":5409:5417   */\n      dup3\n        /* \"#utility.yul\":5399:5479   */\n      tag_167\n      jumpi\n      pop\n        /* \"#utility.yul\":5450:5451   */\n      0x01\n        /* \"#utility.yul\":5464:5469   */\n      jump(tag_59)\n        /* \"#utility.yul\":5399:5479   */\n    tag_167:\n        /* \"#utility.yul\":5498:5502   */\n      dup2\n        /* \"#utility.yul\":5488:5564   */\n      tag_168\n      jumpi\n      pop\n        /* \"#utility.yul\":5535:5536   */\n      0x00\n        /* \"#utility.yul\":5549:5554   */\n      jump(tag_59)\n        /* \"#utility.yul\":5488:5564   */\n    tag_168:\n        /* \"#utility.yul\":5580:5584   */\n      dup2\n        /* \"#utility.yul\":5598:5599   */\n      0x01\n        /* \"#utility.yul\":5593:5652   */\n      dup2\n      eq\n      tag_170\n      jumpi\n        /* \"#utility.yul\":5666:5667   */\n      0x02\n        /* \"#utility.yul\":5661:5791   */\n      dup2\n      eq\n      tag_171\n      jumpi\n        /* \"#utility.yul\":5573:5791   */\n      jump(tag_169)\n        /* \"#utility.yul\":5593:5652   */\n    tag_170:\n        /* \"#utility.yul\":5623:5624   */\n      0x01\n        /* \"#utility.yul\":5614:5624   */\n      swap2\n      pop\n        /* \"#utility.yul\":5637:5642   */\n      pop\n      jump(tag_59)\n        /* \"#utility.yul\":5661:5791   */\n    tag_171:\n        /* \"#utility.yul\":5698:5701   */\n      0xff\n        /* \"#utility.yul\":5688:5696   */\n      dup5\n        /* \"#utility.yul\":5685:5702   */\n      gt\n        /* \"#utility.yul\":5682:5725   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":5705:5723   */\n      tag_173\n      tag_127\n      jump\t// in\n    tag_173:\n      pop\n      pop\n        /* \"#utility.yul\":5761:5762   */\n      0x01\n        /* \"#utility.yul\":5747:5763   */\n      dup3\n      shl\n        /* \"#utility.yul\":5776:5781   */\n      jump(tag_59)\n        /* \"#utility.yul\":5573:5791   */\n    tag_169:\n      pop\n        /* \"#utility.yul\":5875:5877   */\n      0x20\n        /* \"#utility.yul\":5865:5873   */\n      dup4\n        /* \"#utility.yul\":5862:5878   */\n      lt\n        /* \"#utility.yul\":5856:5859   */\n      0x0133\n        /* \"#utility.yul\":5850:5854   */\n      dup4\n        /* \"#utility.yul\":5847:5860   */\n      lt\n        /* \"#utility.yul\":5843:5879   */\n      and\n        /* \"#utility.yul\":5837:5839   */\n      0x4e\n        /* \"#utility.yul\":5827:5835   */\n      dup5\n        /* \"#utility.yul\":5824:5840   */\n      lt\n        /* \"#utility.yul\":5819:5821   */\n      0x0b\n        /* \"#utility.yul\":5813:5817   */\n      dup5\n        /* \"#utility.yul\":5810:5822   */\n      lt\n        /* \"#utility.yul\":5806:5841   */\n      and\n        /* \"#utility.yul\":5803:5880   */\n      or\n        /* \"#utility.yul\":5800:5959   */\n      iszero\n      tag_174\n      jumpi\n      pop\n        /* \"#utility.yul\":5912:5931   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":5944:5949   */\n      jump(tag_59)\n        /* \"#utility.yul\":5800:5959   */\n    tag_174:\n        /* \"#utility.yul\":5991:6025   */\n      tag_175\n        /* \"#utility.yul\":6016:6024   */\n      dup4\n        /* \"#utility.yul\":6010:6014   */\n      dup4\n        /* \"#utility.yul\":5991:6025   */\n      tag_128\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":6061:6067   */\n      dup1\n        /* \"#utility.yul\":6057:6058   */\n      0x00\n        /* \"#utility.yul\":6053:6059   */\n      not\n        /* \"#utility.yul\":6049:6068   */\n      div\n        /* \"#utility.yul\":6040:6047   */\n      dup3\n        /* \"#utility.yul\":6037:6069   */\n      gt\n        /* \"#utility.yul\":6034:6092   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":6072:6090   */\n      tag_177\n      tag_127\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":6110:6130   */\n      mul\n      swap4\n        /* \"#utility.yul\":5330:6136   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6141:6272   */\n    tag_102:\n        /* \"#utility.yul\":6201:6206   */\n      0x00\n        /* \"#utility.yul\":6230:6266   */\n      tag_114\n        /* \"#utility.yul\":6257:6265   */\n      dup4\n        /* \"#utility.yul\":6251:6255   */\n      dup4\n        /* \"#utility.yul\":6230:6266   */\n      tag_129\n      jump\t// in\n        /* \"#utility.yul\":6277:6445   */\n    tag_111:\n        /* \"#utility.yul\":6317:6324   */\n      0x00\n        /* \"#utility.yul\":6383:6384   */\n      dup2\n        /* \"#utility.yul\":6379:6380   */\n      0x00\n        /* \"#utility.yul\":6375:6381   */\n      not\n        /* \"#utility.yul\":6371:6385   */\n      div\n        /* \"#utility.yul\":6368:6369   */\n      dup4\n        /* \"#utility.yul\":6365:6386   */\n      gt\n        /* \"#utility.yul\":6360:6361   */\n      dup3\n        /* \"#utility.yul\":6353:6362   */\n      iszero\n        /* \"#utility.yul\":6346:6363   */\n      iszero\n        /* \"#utility.yul\":6342:6387   */\n      and\n        /* \"#utility.yul\":6339:6410   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":6390:6408   */\n      tag_182\n      tag_127\n      jump\t// in\n    tag_182:\n      pop\n        /* \"#utility.yul\":6430:6439   */\n      mul\n      swap1\n        /* \"#utility.yul\":6277:6445   */\n      jump\t// out\n        /* \"#utility.yul\":6450:6667   */\n    tag_113:\n        /* \"#utility.yul\":6490:6491   */\n      0x00\n        /* \"#utility.yul\":6516:6517   */\n      dup3\n        /* \"#utility.yul\":6506:6638   */\n      tag_184\n      jumpi\n        /* \"#utility.yul\":6560:6570   */\n      0x4e487b71\n        /* \"#utility.yul\":6555:6558   */\n      0xe0\n        /* \"#utility.yul\":6551:6571   */\n      shl\n        /* \"#utility.yul\":6548:6549   */\n      0x00\n        /* \"#utility.yul\":6541:6572   */\n      mstore\n        /* \"#utility.yul\":6595:6599   */\n      0x12\n        /* \"#utility.yul\":6592:6593   */\n      0x04\n        /* \"#utility.yul\":6585:6600   */\n      mstore\n        /* \"#utility.yul\":6623:6627   */\n      0x24\n        /* \"#utility.yul\":6620:6621   */\n      0x00\n        /* \"#utility.yul\":6613:6628   */\n      revert\n        /* \"#utility.yul\":6506:6638   */\n    tag_184:\n      pop\n        /* \"#utility.yul\":6652:6661   */\n      div\n      swap1\n        /* \"#utility.yul\":6450:6667   */\n      jump\t// out\n        /* \"#utility.yul\":7074:7671   */\n    tag_123:\n        /* \"#utility.yul\":7186:7190   */\n      0x00\n        /* \"#utility.yul\":7215:7217   */\n      0x20\n        /* \"#utility.yul\":7244:7246   */\n      dup1\n        /* \"#utility.yul\":7233:7242   */\n      dup4\n        /* \"#utility.yul\":7226:7247   */\n      mstore\n        /* \"#utility.yul\":7276:7282   */\n      dup4\n        /* \"#utility.yul\":7270:7283   */\n      mload\n        /* \"#utility.yul\":7319:7325   */\n      dup1\n        /* \"#utility.yul\":7314:7316   */\n      dup3\n        /* \"#utility.yul\":7303:7312   */\n      dup6\n        /* \"#utility.yul\":7299:7317   */\n      add\n        /* \"#utility.yul\":7292:7326   */\n      mstore\n        /* \"#utility.yul\":7344:7345   */\n      0x00\n        /* \"#utility.yul\":7354:7494   */\n    tag_187:\n        /* \"#utility.yul\":7368:7374   */\n      dup2\n        /* \"#utility.yul\":7365:7366   */\n      dup2\n        /* \"#utility.yul\":7362:7375   */\n      lt\n        /* \"#utility.yul\":7354:7494   */\n      iszero\n      tag_189\n      jumpi\n        /* \"#utility.yul\":7463:7477   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":7459:7482   */\n      dup4\n      add\n        /* \"#utility.yul\":7453:7483   */\n      mload\n        /* \"#utility.yul\":7429:7446   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":7448:7450   */\n      0x40\n        /* \"#utility.yul\":7425:7451   */\n      add\n        /* \"#utility.yul\":7418:7484   */\n      mstore\n        /* \"#utility.yul\":7383:7393   */\n      dup3\n      add\n        /* \"#utility.yul\":7354:7494   */\n      jump(tag_187)\n    tag_189:\n        /* \"#utility.yul\":7512:7518   */\n      dup2\n        /* \"#utility.yul\":7509:7510   */\n      dup2\n        /* \"#utility.yul\":7506:7519   */\n      gt\n        /* \"#utility.yul\":7503:7594   */\n      iszero\n      tag_190\n      jumpi\n        /* \"#utility.yul\":7582:7583   */\n      0x00\n        /* \"#utility.yul\":7577:7579   */\n      0x40\n        /* \"#utility.yul\":7568:7574   */\n      dup4\n        /* \"#utility.yul\":7557:7566   */\n      dup8\n        /* \"#utility.yul\":7553:7575   */\n      add\n        /* \"#utility.yul\":7549:7580   */\n      add\n        /* \"#utility.yul\":7542:7584   */\n      mstore\n        /* \"#utility.yul\":7503:7594   */\n    tag_190:\n      pop\n        /* \"#utility.yul\":7655:7657   */\n      0x1f\n        /* \"#utility.yul\":7634:7649   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":7630:7659   */\n      and\n        /* \"#utility.yul\":7615:7660   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":7662:7664   */\n      0x40\n        /* \"#utility.yul\":7611:7665   */\n      add\n      swap4\n        /* \"#utility.yul\":7074:7671   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220bc5982a488d2e9f9f0abbaff0f302a7cd88e98561ee3e7be022abcb53526c47d64736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_477": {
									"entryPoint": null,
									"id": 477,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 504,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cbb17bca9ae641614fb20d9f081dbba535c7a48d3eadd7b25242a97252df8c96__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1432:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:4"
															},
															"nodeType": "YulIf",
															"src": "115:70:4"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:4",
														"type": ""
													}
												],
												"src": "14:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "294:195:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "340:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "349:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "352:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "336:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "307:32:4"
															},
															"nodeType": "YulIf",
															"src": "304:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "365:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "375:40:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "424:59:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "479:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "434:49:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "252:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "263:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "275:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "283:6:4",
														"type": ""
													}
												],
												"src": "196:293:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "668:175:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "685:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "696:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "678:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "678:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "678:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "719:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "730:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "715:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "715:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "735:2:4",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "708:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "708:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "708:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "758:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "769:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "754:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "754:18:4"
																	},
																	{
																		"hexValue": "4f776e657220616464726573732063616e6e6f742062652030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "774:27:4",
																		"type": "",
																		"value": "Owner address cannot be 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "747:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "747:55:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "747:55:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "823:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "834:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "819:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "819:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "811:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cbb17bca9ae641614fb20d9f081dbba535c7a48d3eadd7b25242a97252df8c96__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "645:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "659:4:4",
														"type": ""
													}
												],
												"src": "494:349:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "977:175:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "987:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "999:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1010:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "995:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "995:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "987:4:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1022:29:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1040:3:4",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1045:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1036:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:11:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1049:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1032:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1032:19:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1026:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1082:6:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1090:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1078:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1078:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1060:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1060:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1114:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1125:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1110:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1110:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "1134:6:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1142:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1130:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1130:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1103:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1103:43:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1103:43:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "938:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "949:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "957:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "968:4:4",
														"type": ""
													}
												],
												"src": "848:304:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1236:194:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1282:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1291:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1294:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1284:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1284:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1284:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1257:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1266:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1253:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1253:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1278:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1249:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1249:32:4"
															},
															"nodeType": "YulIf",
															"src": "1246:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1307:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1326:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1320:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1320:16:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1311:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1384:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1393:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1396:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1386:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1386:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1386:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1358:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1369:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1376:4:4",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1365:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1365:16:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1355:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1348:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1348:35:4"
															},
															"nodeType": "YulIf",
															"src": "1345:55:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1409:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1419:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1409:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1202:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1213:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1225:6:4",
														"type": ""
													}
												],
												"src": "1157:273:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_cbb17bca9ae641614fb20d9f081dbba535c7a48d3eadd7b25242a97252df8c96__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Owner address cannot be 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052620f4240600455620f424060055534801561001e57600080fd5b50604051610c7e380380610c7e83398101604081905261003d916101c5565b816001600160a01b0381166100985760405162461bcd60e51b815260206004820152601960248201527f4f776e657220616464726573732063616e6e6f74206265203000000000000000604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b03831690811782556040805192835260208301919091527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a150600680546001600160a01b03199081166001600160a01b038416179091556002805473551717d0d483d38a302fa4e48571450476597ef69216821790556040805163313ce56760e01b8152905163313ce56791600481810192602092909190829003018186803b15801561016357600080fd5b505afa158015610177573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019b91906101f8565b60ff16600355506102229050565b80516001600160a01b03811681146101c057600080fd5b919050565b600080604083850312156101d857600080fd5b6101e1836101a9565b91506101ef602084016101a9565b90509250929050565b60006020828403121561020a57600080fd5b815160ff8116811461021b57600080fd5b9392505050565b610a4d806102316000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b1461012557806395082d2514610138578063963f8e4c14610141578063dc6663c714610154578063ee88fc9114610167578063ffaa3b231461018457600080fd5b80631627540c146100ae5780631e47ba5c146100c35780633ddac953146100df57806353a47bb7146100f257806379ba50971461011d575b600080fd5b6100c16100bc3660046107a9565b61018d565b005b6100cc60035481565b6040519081526020015b60405180910390f35b6100cc6100ed3660046107c4565b610258565b600154610105906001600160a01b031681565b6040516001600160a01b0390911681526020016100d6565b6100c161033c565b600054610105906001600160a01b031681565b6100cc60045481565b6100c161014f3660046107a9565b610426565b600654610105906001600160a01b031681565b61016f610522565b604080519283526020830191909152016100d6565b6100cc60055481565b6000546001600160a01b031633146102045760405162461bcd60e51b815260206004820152602f60248201527f4f6e6c792074686520636f6e7472616374206f776e6572206d6179207065726660448201526e37b936903a3434b99030b1ba34b7b760891b60648201526084015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce229060200160405180910390a150565b60006006602160991b016001600160a01b038416146102b15760405162461bcd60e51b81526020600482015260156024820152746d757374207573652077657468206164647265737360581b60448201526064016101fb565b81620f4240146102f85760405162461bcd60e51b815260206004820152601260248201527136bab9ba1031b0b636103bb4ba341018b29b60711b60448201526064016101fb565b6000610302610522565b9150506103328161032c60055461032660045460045461069390919063ffffffff16565b90610693565b90610719565b9150505b92915050565b6001546001600160a01b031633146103b45760405162461bcd60e51b815260206004820152603560248201527f596f75206d757374206265206e6f6d696e61746564206265666f726520796f7560448201527402063616e20616363657074206f776e65727368697605c1b60648201526084016101fb565b600054600154604080516001600160a01b0393841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000546001600160a01b031633148061044957506006546001600160a01b031633145b61048d5760405162461bcd60e51b81526020600482015260156024820152744e6f74206f776e6572206f722074696d656c6f636b60581b60448201526064016101fb565b600280546001600160a01b0319166001600160a01b0383169081179091556040805163313ce56760e01b8152905163313ce56791600480820192602092909190829003018186803b1580156104e157600080fd5b505afa1580156104f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051991906107ee565b60ff1660035550565b600080600080600080600260009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561057957600080fd5b505afa15801561058d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b1919061082b565b945094505093509350600083121580156105ca57508115155b80156105ee57508369ffffffffffffffffffff168169ffffffffffffffffffff1610155b61063a5760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420636861696e6c696e6b20707269636500000000000000000060448201526064016101fb565b61065a600354600a61064c9190610975565b60045461032c908690610693565b9550610689600354600a61066e9190610975565b61032c6005546103266004548861069390919063ffffffff16565b9450505050509091565b6000826106a257506000610336565b60006106ae8385610981565b9050826106bb85836109a0565b146107125760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016101fb565b9392505050565b600061071283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250600081836107775760405162461bcd60e51b81526004016101fb91906109c2565b50600061078484866109a0565b95945050505050565b80356001600160a01b03811681146107a457600080fd5b919050565b6000602082840312156107bb57600080fd5b6107128261078d565b600080604083850312156107d757600080fd5b6107e08361078d565b946020939093013593505050565b60006020828403121561080057600080fd5b815160ff8116811461071257600080fd5b805169ffffffffffffffffffff811681146107a457600080fd5b600080600080600060a0868803121561084357600080fd5b61084c86610811565b945060208601519350604086015192506060860151915061086f60808701610811565b90509295509295909350565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156108cc5781600019048211156108b2576108b261087b565b808516156108bf57918102915b93841c9390800290610896565b509250929050565b6000826108e357506001610336565b816108f057506000610336565b816001811461090657600281146109105761092c565b6001915050610336565b60ff8411156109215761092161087b565b50506001821b610336565b5060208310610133831016604e8410600b841016171561094f575081810a610336565b6109598383610891565b806000190482111561096d5761096d61087b565b029392505050565b600061071283836108d4565b600081600019048311821515161561099b5761099b61087b565b500290565b6000826109bd57634e487b7160e01b600052601260045260246000fd5b500490565b600060208083528351808285015260005b818110156109ef578581018301518582016040015282016109d3565b81811115610a01576000604083870101525b50601f01601f191692909201604001939250505056fea2646970667358221220bc5982a488d2e9f9f0abbaff0f302a7cd88e98561ee3e7be022abcb53526c47d64736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0xF4240 PUSH1 0x4 SSTORE PUSH3 0xF4240 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xC7E CODESIZE SUB DUP1 PUSH2 0xC7E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x3D SWAP2 PUSH2 0x1C5 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E657220616464726573732063616E6E6F74206265203000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH20 0x551717D0D483D38A302FA4E48571450476597EF6 SWAP3 AND DUP3 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP2 DUP2 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x177 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x3 SSTORE POP PUSH2 0x222 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E1 DUP4 PUSH2 0x1A9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF PUSH1 0x20 DUP5 ADD PUSH2 0x1A9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xA4D DUP1 PUSH2 0x231 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x95082D25 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x963F8E4C EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0xDC6663C7 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xEE88FC91 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xFFAA3B23 EQ PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1627540C EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x1E47BA5C EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x3DDAC953 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x53A47BB7 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x11D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x7A9 JUMP JUMPDEST PUSH2 0x18D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCC PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH2 0xED CALLDATASIZE PUSH1 0x4 PUSH2 0x7C4 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x105 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD6 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x33C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x105 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xCC PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0x7A9 JUMP JUMPDEST PUSH2 0x426 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x105 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x522 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xD6 JUMP JUMPDEST PUSH2 0xCC PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x204 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792074686520636F6E7472616374206F776E6572206D61792070657266 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x37B936903A3434B99030B1BA34B7B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x21 PUSH1 0x99 SHL ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x2B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x6D7573742075736520776574682061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1FB JUMP JUMPDEST DUP2 PUSH3 0xF4240 EQ PUSH2 0x2F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x36BAB9BA1031B0B636103BB4BA341018B29B PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x302 PUSH2 0x522 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x332 DUP2 PUSH2 0x32C PUSH1 0x5 SLOAD PUSH2 0x326 PUSH1 0x4 SLOAD PUSH1 0x4 SLOAD PUSH2 0x693 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x693 JUMP JUMPDEST SWAP1 PUSH2 0x719 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206D757374206265206E6F6D696E61746564206265666F726520796F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x2063616E20616363657074206F776E65727368697 PUSH1 0x5C SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x449 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x48D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F74206F776E6572206F722074696D656C6F636B PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x519 SWAP2 SWAP1 PUSH2 0x7EE JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x3 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B1 SWAP2 SWAP1 PUSH2 0x82B JUMP JUMPDEST SWAP5 POP SWAP5 POP POP SWAP4 POP SWAP4 POP PUSH1 0x0 DUP4 SLT ISZERO DUP1 ISZERO PUSH2 0x5CA JUMPI POP DUP2 ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x5EE JUMPI POP DUP4 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND LT ISZERO JUMPDEST PUSH2 0x63A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420636861696E6C696E6B207072696365000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1FB JUMP JUMPDEST PUSH2 0x65A PUSH1 0x3 SLOAD PUSH1 0xA PUSH2 0x64C SWAP2 SWAP1 PUSH2 0x975 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x32C SWAP1 DUP7 SWAP1 PUSH2 0x693 JUMP JUMPDEST SWAP6 POP PUSH2 0x689 PUSH1 0x3 SLOAD PUSH1 0xA PUSH2 0x66E SWAP2 SWAP1 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x32C PUSH1 0x5 SLOAD PUSH2 0x326 PUSH1 0x4 SLOAD DUP9 PUSH2 0x693 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x6A2 JUMPI POP PUSH1 0x0 PUSH2 0x336 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AE DUP4 DUP6 PUSH2 0x981 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x6BB DUP6 DUP4 PUSH2 0x9A0 JUMP JUMPDEST EQ PUSH2 0x712 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1FB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x712 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x0 DUP2 DUP4 PUSH2 0x777 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x9C2 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x784 DUP5 DUP7 PUSH2 0x9A0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x712 DUP3 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7E0 DUP4 PUSH2 0x78D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x800 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x7A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x843 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x84C DUP7 PUSH2 0x811 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x86F PUSH1 0x80 DUP8 ADD PUSH2 0x811 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x8CC JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x8B2 JUMPI PUSH2 0x8B2 PUSH2 0x87B JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x8BF JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x896 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x8E3 JUMPI POP PUSH1 0x1 PUSH2 0x336 JUMP JUMPDEST DUP2 PUSH2 0x8F0 JUMPI POP PUSH1 0x0 PUSH2 0x336 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x906 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x910 JUMPI PUSH2 0x92C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x336 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x921 JUMPI PUSH2 0x921 PUSH2 0x87B JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x336 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x94F JUMPI POP DUP2 DUP2 EXP PUSH2 0x336 JUMP JUMPDEST PUSH2 0x959 DUP4 DUP4 PUSH2 0x891 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x96D JUMPI PUSH2 0x96D PUSH2 0x87B JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x712 DUP4 DUP4 PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x99B JUMPI PUSH2 0x99B PUSH2 0x87B JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x9BD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9EF JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x9D3 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xA01 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC MSIZE DUP3 LOG4 DUP9 0xD2 0xE9 0xF9 CREATE 0xAB 0xBA SELFDESTRUCT 0xF ADDRESS 0x2A PUSH29 0xD88E98561EE3E7BE022ABCB53526C47D64736F6C634300080900330000 ",
							"sourceMap": "1269:2524:2:-:0;;;1479:3;1446:36;;1521:3;1488:36;;1801:349;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1895:16;-1:-1:-1;;;;;254:20:3;;246:58;;;;-1:-1:-1;;;246:58:3;;696:2:4;246:58:3;;;678:21:4;735:2;715:18;;;708:30;774:27;754:18;;;747:55;819:18;;246:58:3;;;;;;;;314:5;:14;;-1:-1:-1;;;;;;314:14:3;-1:-1:-1;;;;;314:14:3;;;;;;;343:32;;;1060:34:4;;;1125:2;1110:18;;1103:43;;;;343:32:3;;995:18:4;343:32:3;;;;;;;-1:-1:-1;1923:16:2::1;:36:::0;;-1:-1:-1;;;;;;1923:36:2;;::::1;-1:-1:-1::0;;;;;1923:36:2;::::1;;::::0;;;1992:16:::1;:84:::0;;2033:42:::1;1992:84:::0;::::1;::::0;::::1;::::0;;2116:27:::1;::::0;;-1:-1:-1;;;2116:27:2;;;;:25:::1;::::0;-1:-1:-1;2116:27:2;;::::1;::::0;::::1;::::0;;;;;;;;;2033:42;2116:27;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2086:57;;:27;:57:::0;-1:-1:-1;1269:2524:2;;-1:-1:-1;1269:2524:2;14:177:4;93:13;;-1:-1:-1;;;;;135:31:4;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;1157:273::-;1225:6;1278:2;1266:9;1257:7;1253:23;1249:32;1246:52;;;1294:1;1291;1284:12;1246:52;1326:9;1320:16;1376:4;1369:5;1365:16;1358:5;1355:27;1345:55;;1396:1;1393;1386:12;1345:55;1419:5;1157:273;-1:-1:-1;;;1157:273:4:o;:::-;1269:2524:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@EXTRA_PRECISION_262": {
									"entryPoint": null,
									"id": 262,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PRICE_PRECISION_259": {
									"entryPoint": null,
									"id": 259,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@acceptOwnership_521": {
									"entryPoint": 828,
									"id": 521,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@chainlink_frax_eth_decimals_256": {
									"entryPoint": null,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@consult_422": {
									"entryPoint": 600,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_125": {
									"entryPoint": 1817,
									"id": 125,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_153": {
									"entryPoint": null,
									"id": 153,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getFRAXPrice_382": {
									"entryPoint": 1314,
									"id": 382,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@mul_108": {
									"entryPoint": 1683,
									"id": 108,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@nominateNewOwner_493": {
									"entryPoint": 397,
									"id": 493,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@nominatedOwner_449": {
									"entryPoint": null,
									"id": 449,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_447": {
									"entryPoint": null,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setChainlinkFRAXETHOracle_442": {
									"entryPoint": 1062,
									"id": 442,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@timelock_address_264": {
									"entryPoint": null,
									"id": 264,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 1933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 2091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 2030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint80_fromMemory": {
									"entryPoint": 2065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2341f105161714f01185492f4233d98f530a1e8435cfd3bb617e411e8f94580d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7cfd4f35ab8fcb6190c3524b53b79ab146a9c0a4fb320fe337eb730f1272bb12__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8f7cea8b044c17561008c31ba3e3f1e1850745f95f81afb164efa71262c8a172__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b838eb2b03d57c64344c196649920d623fd5c75f9bcd1c0173705b1e20f4783c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 2421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2171,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7673:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:4"
															},
															"nodeType": "YulIf",
															"src": "111:70:4"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "14:173:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:4"
															},
															"nodeType": "YulIf",
															"src": "272:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:4",
														"type": ""
													}
												],
												"src": "192:186:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "484:76:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "494:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "506:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "517:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "536:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "547:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "529:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "529:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "529:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "453:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "464:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "475:4:4",
														"type": ""
													}
												],
												"src": "383:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "652:167:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "698:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "707:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "710:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "700:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "700:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "700:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "673:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "682:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "669:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "669:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "694:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "665:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "665:32:4"
															},
															"nodeType": "YulIf",
															"src": "662:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "723:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "752:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "733:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "733:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "723:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "771:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "798:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "809:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "794:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "794:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "781:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "781:32:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "771:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "610:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "621:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "633:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "641:6:4",
														"type": ""
													}
												],
												"src": "565:254:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "925:102:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "935:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "947:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "958:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "943:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "943:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "935:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "977:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "992:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1008:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1013:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1004:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1004:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1017:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1000:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1000:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "988:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "970:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "970:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "894:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "905:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "916:4:4",
														"type": ""
													}
												],
												"src": "824:203:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1161:119:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1171:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1183:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1194:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1179:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1179:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1171:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1213:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1224:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1206:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1206:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1206:25:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1251:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1262:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1247:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1247:18:4"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1267:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1240:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1240:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1240:34:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1122:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1133:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1141:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1152:4:4",
														"type": ""
													}
												],
												"src": "1032:248:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1459:237:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1476:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1487:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1469:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1469:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1469:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1510:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1521:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1506:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1506:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1526:2:4",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1499:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1499:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1549:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1560:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1545:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1545:18:4"
																	},
																	{
																		"hexValue": "4f6e6c792074686520636f6e7472616374206f776e6572206d61792070657266",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1565:34:4",
																		"type": "",
																		"value": "Only the contract owner may perf"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1538:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1538:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1538:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1620:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1631:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1616:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1616:18:4"
																	},
																	{
																		"hexValue": "6f726d207468697320616374696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1636:17:4",
																		"type": "",
																		"value": "orm this action"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1609:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1609:45:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1609:45:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1663:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1675:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1686:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1671:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1671:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1663:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1436:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1450:4:4",
														"type": ""
													}
												],
												"src": "1285:411:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1875:171:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1892:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1903:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1885:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1885:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1885:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1926:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1937:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1922:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1922:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1942:2:4",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1915:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1915:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1915:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1965:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1976:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1961:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1961:18:4"
																	},
																	{
																		"hexValue": "6d7573742075736520776574682061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1981:23:4",
																		"type": "",
																		"value": "must use weth address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1954:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1954:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1954:51:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2014:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2026:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2037:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2022:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2022:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2014:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8f7cea8b044c17561008c31ba3e3f1e1850745f95f81afb164efa71262c8a172__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1852:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1866:4:4",
														"type": ""
													}
												],
												"src": "1701:345:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2225:168:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2242:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2253:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2235:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2235:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2235:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2276:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2287:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2272:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2272:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2292:2:4",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2265:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2265:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2265:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2315:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2326:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2311:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2311:18:4"
																	},
																	{
																		"hexValue": "6d7573742063616c6c207769746820316536",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2331:20:4",
																		"type": "",
																		"value": "must call with 1e6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2304:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2304:48:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2304:48:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2361:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2373:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2384:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2369:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2369:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2361:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7cfd4f35ab8fcb6190c3524b53b79ab146a9c0a4fb320fe337eb730f1272bb12__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2202:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2216:4:4",
														"type": ""
													}
												],
												"src": "2051:342:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2572:243:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2589:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2600:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2582:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2582:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2582:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2623:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2634:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2619:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2619:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2639:2:4",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2612:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2612:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2612:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2662:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2673:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2658:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2658:18:4"
																	},
																	{
																		"hexValue": "596f75206d757374206265206e6f6d696e61746564206265666f726520796f75",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2678:34:4",
																		"type": "",
																		"value": "You must be nominated before you"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2651:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2651:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2651:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2733:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2744:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2729:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2729:18:4"
																	},
																	{
																		"hexValue": "2063616e20616363657074206f776e657273686970",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2749:23:4",
																		"type": "",
																		"value": " can accept ownership"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2722:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2722:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2722:51:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2782:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2794:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2805:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2790:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2790:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2782:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2549:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2563:4:4",
														"type": ""
													}
												],
												"src": "2398:417:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2949:175:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2959:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2971:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2982:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2967:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2967:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2959:4:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2994:29:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3012:3:4",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3017:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3008:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3008:11:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3021:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3004:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3004:19:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2998:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3039:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3054:6:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3062:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3050:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3050:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3032:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3032:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3032:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3086:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3097:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3082:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3082:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3106:6:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3114:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3102:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3102:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3075:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3075:43:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3075:43:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2910:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2921:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2929:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2940:4:4",
														"type": ""
													}
												],
												"src": "2820:304:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3303:171:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3320:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3331:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3313:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3313:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3313:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3354:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3365:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3350:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3350:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3370:2:4",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3343:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3343:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3343:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3393:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3404:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3389:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3389:18:4"
																	},
																	{
																		"hexValue": "4e6f74206f776e6572206f722074696d656c6f636b",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3409:23:4",
																		"type": "",
																		"value": "Not owner or timelock"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3382:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3382:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3382:51:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3442:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3454:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3465:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3450:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3450:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3442:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2341f105161714f01185492f4233d98f530a1e8435cfd3bb617e411e8f94580d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3280:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3294:4:4",
														"type": ""
													}
												],
												"src": "3129:345:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3558:194:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3604:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3613:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3616:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3606:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3606:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3606:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3579:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3588:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3575:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3575:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3600:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3571:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3571:32:4"
															},
															"nodeType": "YulIf",
															"src": "3568:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3629:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3648:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3642:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3642:16:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3633:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3706:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3715:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3718:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3708:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3708:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3708:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3680:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3691:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3698:4:4",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3687:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3687:16:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3677:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3677:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3670:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3670:35:4"
															},
															"nodeType": "YulIf",
															"src": "3667:55:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3731:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3741:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3731:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3524:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3535:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3547:6:4",
														"type": ""
													}
												],
												"src": "3479:273:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3816:120:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3826:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3841:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3835:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3835:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3826:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3914:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3923:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3926:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3916:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3916:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3916:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3870:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3881:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3888:22:4",
																						"type": "",
																						"value": "0xffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3877:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3877:34:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3867:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3867:45:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:53:4"
															},
															"nodeType": "YulIf",
															"src": "3857:73:4"
														}
													]
												},
												"name": "abi_decode_uint80_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3795:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3806:5:4",
														"type": ""
													}
												],
												"src": "3757:179:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4087:327:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4134:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4143:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4146:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4136:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4136:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4136:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4108:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4117:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4104:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4104:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4129:3:4",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4100:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4100:33:4"
															},
															"nodeType": "YulIf",
															"src": "4097:53:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4159:49:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4198:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint80_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "4169:28:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4169:39:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4159:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4217:35:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4237:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4248:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4233:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4233:18:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4227:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4227:25:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4217:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4261:35:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4281:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4292:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4277:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4277:18:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4271:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4271:25:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4261:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4305:35:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4325:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4336:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4321:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4321:18:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4315:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4315:25:4"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4305:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4349:59:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4392:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4403:3:4",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4388:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4388:19:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint80_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "4359:28:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4359:49:4"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4349:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4021:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4032:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4044:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4052:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4060:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4068:6:4",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4076:6:4",
														"type": ""
													}
												],
												"src": "3941:473:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4593:173:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4610:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4621:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4603:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4603:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4603:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4644:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4655:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4640:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4640:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4660:2:4",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4633:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4633:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4633:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4683:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4694:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4679:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4679:18:4"
																	},
																	{
																		"hexValue": "496e76616c696420636861696e6c696e6b207072696365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4699:25:4",
																		"type": "",
																		"value": "Invalid chainlink price"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4672:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4672:53:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4672:53:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4734:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4746:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4757:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4742:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4742:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4734:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b838eb2b03d57c64344c196649920d623fd5c75f9bcd1c0173705b1e20f4783c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4570:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4584:4:4",
														"type": ""
													}
												],
												"src": "4419:347:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4803:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4820:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4827:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4832:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4823:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4823:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4813:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4813:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4813:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4860:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4863:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4853:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4853:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4853:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4884:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4887:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4877:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4877:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4877:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4771:127:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4967:358:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4977:16:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4992:1:4",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "4981:7:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5002:16:4",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "5011:7:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "5002:5:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5027:13:4",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "5035:5:4"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "5027:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5091:228:4",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5136:22:4",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "5138:16:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5138:18:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "5138:18:4"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "5111:4:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5125:1:4",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "5121:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5121:6:4"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "5129:4:4"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "5117:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5117:17:4"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "5108:2:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5108:27:4"
																		},
																		"nodeType": "YulIf",
																		"src": "5105:53:4"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5197:29:4",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "5199:25:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "5212:5:4"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "5219:4:4"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "5208:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5208:16:4"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "5199:5:4"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "5178:8:4"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "5188:7:4"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5174:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5174:22:4"
																		},
																		"nodeType": "YulIf",
																		"src": "5171:55:4"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5239:23:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "5251:4:4"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "5257:4:4"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "5247:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5247:15:4"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "5239:4:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5275:34:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "5291:7:4"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "5300:8:4"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "5287:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5287:22:4"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "5275:8:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "5060:8:4"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "5070:7:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5057:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5057:21:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5079:3:4",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5053:3:4",
																"statements": []
															},
															"src": "5049:270:4"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "4931:5:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "4938:8:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "4951:5:4",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "4958:4:4",
														"type": ""
													}
												],
												"src": "4903:422:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5389:747:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5427:52:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5441:10:4",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5450:1:4",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "5441:5:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "5464:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "5409:8:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5402:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5402:16:4"
															},
															"nodeType": "YulIf",
															"src": "5399:80:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5512:52:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5526:10:4",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5535:1:4",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "5526:5:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "5549:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "5498:4:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5491:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5491:12:4"
															},
															"nodeType": "YulIf",
															"src": "5488:76:4"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5600:52:4",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "5614:10:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5623:1:4",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "5614:5:4"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "5637:5:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5593:59:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5598:1:4",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5668:123:4",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5703:22:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "5705:16:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5705:18:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "5705:18:4"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "5688:8:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5698:3:4",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "5685:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5685:17:4"
																				},
																				"nodeType": "YulIf",
																				"src": "5682:43:4"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "5738:25:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "5751:8:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5761:1:4",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5747:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5747:16:4"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "5738:5:4"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "5776:5:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5661:130:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5666:1:4",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "5580:4:4"
															},
															"nodeType": "YulSwitch",
															"src": "5573:218:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5889:70:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5903:28:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "5916:4:4"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "5922:8:4"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "5912:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5912:19:4"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "5903:5:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "5944:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "5813:4:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5819:2:4",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "5810:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5810:12:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "5827:8:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5837:2:4",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "5824:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5824:16:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5806:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5806:35:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "5850:4:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5856:3:4",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "5847:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5847:13:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "5865:8:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5875:2:4",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "5862:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5862:16:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5843:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5843:36:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5803:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5803:77:4"
															},
															"nodeType": "YulIf",
															"src": "5800:159:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5968:57:4",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "6010:4:4"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "6016:8:4"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "5991:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5991:34:4"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "5972:7:4",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "5981:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6070:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6072:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6072:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6072:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "6040:7:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6057:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6053:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6053:6:4"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "6061:6:4"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6049:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6049:19:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6037:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6037:32:4"
															},
															"nodeType": "YulIf",
															"src": "6034:58:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6101:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "6114:7:4"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "6123:6:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6110:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6110:20:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "6101:5:4"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "5360:4:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "5366:8:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "5379:5:4",
														"type": ""
													}
												],
												"src": "5330:806:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6211:61:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6221:45:4",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "6251:4:4"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "6257:8:4"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "6230:20:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6230:36:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "6221:5:4"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "6182:4:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "6188:8:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "6201:5:4",
														"type": ""
													}
												],
												"src": "6141:131:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6329:116:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6388:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6390:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6390:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6390:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6360:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6353:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6353:9:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6346:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6346:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6368:1:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6379:1:4",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6375:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6375:6:4"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6383:1:4"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6371:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6371:14:4"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6365:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6365:21:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6342:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6342:45:4"
															},
															"nodeType": "YulIf",
															"src": "6339:71:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6419:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6434:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6437:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6430:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6430:9:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6419:7:4"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6308:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6311:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6317:7:4",
														"type": ""
													}
												],
												"src": "6277:168:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6496:171:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6527:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6548:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6555:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6560:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6551:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6551:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6541:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6541:31:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6541:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6592:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6595:4:4",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6585:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6585:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6585:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6620:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6623:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6613:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6613:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6613:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6516:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6509:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6509:9:4"
															},
															"nodeType": "YulIf",
															"src": "6506:132:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6647:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6656:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6659:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6652:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6652:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6647:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6481:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6484:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "6490:1:4",
														"type": ""
													}
												],
												"src": "6450:217:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6846:223:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6863:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6874:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6856:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6856:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6856:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6897:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6908:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6893:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6893:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6913:2:4",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6886:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6886:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6886:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6936:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6947:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6932:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6932:18:4"
																	},
																	{
																		"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6952:34:4",
																		"type": "",
																		"value": "SafeMath: multiplication overflo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6925:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6925:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6925:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7007:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7018:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7003:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7003:18:4"
																	},
																	{
																		"hexValue": "77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7023:3:4",
																		"type": "",
																		"value": "w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6996:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6996:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6996:31:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7036:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7048:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7059:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7044:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7044:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7036:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6823:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6837:4:4",
														"type": ""
													}
												],
												"src": "6672:397:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7195:476:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7205:12:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7215:2:4",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7209:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7233:9:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7244:2:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7226:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7226:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7226:21:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7256:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7276:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7270:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7270:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7260:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7303:9:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7314:2:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7299:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7299:18:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7319:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7292:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7292:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7292:34:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7335:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7344:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "7339:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7404:90:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "7433:9:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7444:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7429:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7429:17:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7448:2:4",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7425:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7425:26:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "7467:6:4"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "7475:1:4"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "7463:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "7463:14:4"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "7479:2:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7459:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7459:23:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7453:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7453:30:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7418:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7418:66:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7418:66:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7365:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7368:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7362:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7362:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7376:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7378:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7387:1:4"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7390:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7383:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7383:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7378:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7358:3:4",
																"statements": []
															},
															"src": "7354:140:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7528:66:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "7557:9:4"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "7568:6:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7553:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7553:22:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7577:2:4",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7549:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7549:31:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7582:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7542:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7542:42:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7542:42:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7509:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7512:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7506:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7506:13:4"
															},
															"nodeType": "YulIf",
															"src": "7503:91:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7603:62:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7619:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "7638:6:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7646:2:4",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "7634:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7634:15:4"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7655:2:4",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "7651:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7651:7:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "7630:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7630:29:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7615:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7615:45:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7662:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7611:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7611:54:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7603:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7164:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7175:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7186:4:4",
														"type": ""
													}
												],
												"src": "7074:597:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"Only the contract owner may perf\")\n        mstore(add(headStart, 96), \"orm this action\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8f7cea8b044c17561008c31ba3e3f1e1850745f95f81afb164efa71262c8a172__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"must use weth address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7cfd4f35ab8fcb6190c3524b53b79ab146a9c0a4fb320fe337eb730f1272bb12__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"must call with 1e6\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"You must be nominated before you\")\n        mstore(add(headStart, 96), \" can accept ownership\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_2341f105161714f01185492f4233d98f530a1e8435cfd3bb617e411e8f94580d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Not owner or timelock\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_b838eb2b03d57c64344c196649920d623fd5c75f9bcd1c0173705b1e20f4783c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Invalid chainlink price\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"SafeMath: multiplication overflo\")\n        mstore(add(headStart, 96), \"w\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b1461012557806395082d2514610138578063963f8e4c14610141578063dc6663c714610154578063ee88fc9114610167578063ffaa3b231461018457600080fd5b80631627540c146100ae5780631e47ba5c146100c35780633ddac953146100df57806353a47bb7146100f257806379ba50971461011d575b600080fd5b6100c16100bc3660046107a9565b61018d565b005b6100cc60035481565b6040519081526020015b60405180910390f35b6100cc6100ed3660046107c4565b610258565b600154610105906001600160a01b031681565b6040516001600160a01b0390911681526020016100d6565b6100c161033c565b600054610105906001600160a01b031681565b6100cc60045481565b6100c161014f3660046107a9565b610426565b600654610105906001600160a01b031681565b61016f610522565b604080519283526020830191909152016100d6565b6100cc60055481565b6000546001600160a01b031633146102045760405162461bcd60e51b815260206004820152602f60248201527f4f6e6c792074686520636f6e7472616374206f776e6572206d6179207065726660448201526e37b936903a3434b99030b1ba34b7b760891b60648201526084015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce229060200160405180910390a150565b60006006602160991b016001600160a01b038416146102b15760405162461bcd60e51b81526020600482015260156024820152746d757374207573652077657468206164647265737360581b60448201526064016101fb565b81620f4240146102f85760405162461bcd60e51b815260206004820152601260248201527136bab9ba1031b0b636103bb4ba341018b29b60711b60448201526064016101fb565b6000610302610522565b9150506103328161032c60055461032660045460045461069390919063ffffffff16565b90610693565b90610719565b9150505b92915050565b6001546001600160a01b031633146103b45760405162461bcd60e51b815260206004820152603560248201527f596f75206d757374206265206e6f6d696e61746564206265666f726520796f7560448201527402063616e20616363657074206f776e65727368697605c1b60648201526084016101fb565b600054600154604080516001600160a01b0393841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000546001600160a01b031633148061044957506006546001600160a01b031633145b61048d5760405162461bcd60e51b81526020600482015260156024820152744e6f74206f776e6572206f722074696d656c6f636b60581b60448201526064016101fb565b600280546001600160a01b0319166001600160a01b0383169081179091556040805163313ce56760e01b8152905163313ce56791600480820192602092909190829003018186803b1580156104e157600080fd5b505afa1580156104f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051991906107ee565b60ff1660035550565b600080600080600080600260009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561057957600080fd5b505afa15801561058d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b1919061082b565b945094505093509350600083121580156105ca57508115155b80156105ee57508369ffffffffffffffffffff168169ffffffffffffffffffff1610155b61063a5760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420636861696e6c696e6b20707269636500000000000000000060448201526064016101fb565b61065a600354600a61064c9190610975565b60045461032c908690610693565b9550610689600354600a61066e9190610975565b61032c6005546103266004548861069390919063ffffffff16565b9450505050509091565b6000826106a257506000610336565b60006106ae8385610981565b9050826106bb85836109a0565b146107125760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016101fb565b9392505050565b600061071283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250600081836107775760405162461bcd60e51b81526004016101fb91906109c2565b50600061078484866109a0565b95945050505050565b80356001600160a01b03811681146107a457600080fd5b919050565b6000602082840312156107bb57600080fd5b6107128261078d565b600080604083850312156107d757600080fd5b6107e08361078d565b946020939093013593505050565b60006020828403121561080057600080fd5b815160ff8116811461071257600080fd5b805169ffffffffffffffffffff811681146107a457600080fd5b600080600080600060a0868803121561084357600080fd5b61084c86610811565b945060208601519350604086015192506060860151915061086f60808701610811565b90509295509295909350565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156108cc5781600019048211156108b2576108b261087b565b808516156108bf57918102915b93841c9390800290610896565b509250929050565b6000826108e357506001610336565b816108f057506000610336565b816001811461090657600281146109105761092c565b6001915050610336565b60ff8411156109215761092161087b565b50506001821b610336565b5060208310610133831016604e8410600b841016171561094f575081810a610336565b6109598383610891565b806000190482111561096d5761096d61087b565b029392505050565b600061071283836108d4565b600081600019048311821515161561099b5761099b61087b565b500290565b6000826109bd57634e487b7160e01b600052601260045260246000fd5b500490565b600060208083528351808285015260005b818110156109ef578581018301518582016040015282016109d3565b81811115610a01576000604083870101525b50601f01601f191692909201604001939250505056fea2646970667358221220bc5982a488d2e9f9f0abbaff0f302a7cd88e98561ee3e7be022abcb53526c47d64736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x95082D25 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x963F8E4C EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0xDC6663C7 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xEE88FC91 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xFFAA3B23 EQ PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1627540C EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x1E47BA5C EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x3DDAC953 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x53A47BB7 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x11D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x7A9 JUMP JUMPDEST PUSH2 0x18D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCC PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH2 0xED CALLDATASIZE PUSH1 0x4 PUSH2 0x7C4 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x105 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD6 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x33C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x105 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xCC PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0x7A9 JUMP JUMPDEST PUSH2 0x426 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x105 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x522 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xD6 JUMP JUMPDEST PUSH2 0xCC PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x204 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792074686520636F6E7472616374206F776E6572206D61792070657266 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x37B936903A3434B99030B1BA34B7B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x21 PUSH1 0x99 SHL ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x2B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x6D7573742075736520776574682061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1FB JUMP JUMPDEST DUP2 PUSH3 0xF4240 EQ PUSH2 0x2F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x36BAB9BA1031B0B636103BB4BA341018B29B PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x302 PUSH2 0x522 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x332 DUP2 PUSH2 0x32C PUSH1 0x5 SLOAD PUSH2 0x326 PUSH1 0x4 SLOAD PUSH1 0x4 SLOAD PUSH2 0x693 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x693 JUMP JUMPDEST SWAP1 PUSH2 0x719 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206D757374206265206E6F6D696E61746564206265666F726520796F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x2063616E20616363657074206F776E65727368697 PUSH1 0x5C SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x449 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x48D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F74206F776E6572206F722074696D656C6F636B PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x519 SWAP2 SWAP1 PUSH2 0x7EE JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x3 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B1 SWAP2 SWAP1 PUSH2 0x82B JUMP JUMPDEST SWAP5 POP SWAP5 POP POP SWAP4 POP SWAP4 POP PUSH1 0x0 DUP4 SLT ISZERO DUP1 ISZERO PUSH2 0x5CA JUMPI POP DUP2 ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x5EE JUMPI POP DUP4 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND LT ISZERO JUMPDEST PUSH2 0x63A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420636861696E6C696E6B207072696365000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1FB JUMP JUMPDEST PUSH2 0x65A PUSH1 0x3 SLOAD PUSH1 0xA PUSH2 0x64C SWAP2 SWAP1 PUSH2 0x975 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x32C SWAP1 DUP7 SWAP1 PUSH2 0x693 JUMP JUMPDEST SWAP6 POP PUSH2 0x689 PUSH1 0x3 SLOAD PUSH1 0xA PUSH2 0x66E SWAP2 SWAP1 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x32C PUSH1 0x5 SLOAD PUSH2 0x326 PUSH1 0x4 SLOAD DUP9 PUSH2 0x693 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x6A2 JUMPI POP PUSH1 0x0 PUSH2 0x336 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AE DUP4 DUP6 PUSH2 0x981 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x6BB DUP6 DUP4 PUSH2 0x9A0 JUMP JUMPDEST EQ PUSH2 0x712 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1FB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x712 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x0 DUP2 DUP4 PUSH2 0x777 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x9C2 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x784 DUP5 DUP7 PUSH2 0x9A0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x712 DUP3 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7E0 DUP4 PUSH2 0x78D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x800 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x7A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x843 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x84C DUP7 PUSH2 0x811 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x86F PUSH1 0x80 DUP8 ADD PUSH2 0x811 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x8CC JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x8B2 JUMPI PUSH2 0x8B2 PUSH2 0x87B JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x8BF JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x896 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x8E3 JUMPI POP PUSH1 0x1 PUSH2 0x336 JUMP JUMPDEST DUP2 PUSH2 0x8F0 JUMPI POP PUSH1 0x0 PUSH2 0x336 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x906 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x910 JUMPI PUSH2 0x92C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x336 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x921 JUMPI PUSH2 0x921 PUSH2 0x87B JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x336 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x94F JUMPI POP DUP2 DUP2 EXP PUSH2 0x336 JUMP JUMPDEST PUSH2 0x959 DUP4 DUP4 PUSH2 0x891 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x96D JUMPI PUSH2 0x96D PUSH2 0x87B JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x712 DUP4 DUP4 PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x99B JUMPI PUSH2 0x99B PUSH2 0x87B JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x9BD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9EF JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x9D3 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xA01 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC MSIZE DUP3 LOG4 DUP9 0xD2 0xE9 0xF9 CREATE 0xAB 0xBA SELFDESTRUCT 0xF ADDRESS 0x2A PUSH29 0xD88E98561EE3E7BE022ABCB53526C47D64736F6C634300080900330000 ",
							"sourceMap": "1269:2524:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;388:138:3;;;;;;:::i;:::-;;:::i;:::-;;1397:42:2;;;;;;;;;529:25:4;;;517:2;502:18;1397:42:2;;;;;;;;2971:514;;;;;;:::i;:::-;;:::i;164:29:3:-;;;;;-1:-1:-1;;;;;164:29:3;;;;;;-1:-1:-1;;;;;988:32:4;;;970:51;;958:2;943:18;164:29:3;824:203:4;532:266:3;;;:::i;138:20::-;;;;;-1:-1:-1;;;;;138:20:3;;;1446:36:2;;;;;;3545:245;;;;;;:::i;:::-;;:::i;1530:31::-;;;;;-1:-1:-1;;;;;1530:31:2;;;2195:590;;;:::i;:::-;;;;1206:25:4;;;1262:2;1247:18;;1240:34;;;;1179:18;2195:590:2;1032:248:4;1488:36:2;;;;;;388:138:3;855:5;;-1:-1:-1;;;;;855:5:3;841:10;:19;833:79;;;;-1:-1:-1;;;833:79:3;;1487:2:4;833:79:3;;;1469:21:4;1526:2;1506:18;;;1499:30;1565:34;1545:18;;;1538:62;-1:-1:-1;;;1616:18:4;;;1609:45;1671:19;;833:79:3;;;;;;;;;459:14:::1;:23:::0;;-1:-1:-1;;;;;;459:23:3::1;-1:-1:-1::0;;;;;459:23:3;::::1;::::0;;::::1;::::0;;;497:22:::1;::::0;970:51:4;;;497:22:3::1;::::0;958:2:4;943:18;497:22:3::1;;;;;;;388:138:::0;:::o;2971:514:2:-;3041:14;-1:-1:-1;;;;;;;;;;3149:51:2;;;3141:85;;;;-1:-1:-1;;;3141:85:2;;1903:2:4;3141:85:2;;;1885:21:4;1942:2;1922:18;;;1915:30;-1:-1:-1;;;1961:18:4;;;1954:51;2022:18;;3141:85:2;1701:345:4;3141:85:2;3244:8;3256:3;3244:15;3236:46;;;;-1:-1:-1;;;3236:46:2;;2253:2:4;3236:46:2;;;2235:21:4;2292:2;2272:18;;;2265:30;-1:-1:-1;;;2311:18:4;;;2304:48;2369:18;;3236:46:2;2051:342:4;3236:46:2;3335:26;3365:14;:12;:14::i;:::-;3332:47;;;3397:81;3459:18;3397:57;3438:15;;3397:36;3417:15;;3397;;:19;;:36;;;;:::i;:::-;:40;;:57::i;:::-;:61;;:81::i;:::-;3390:88;;;2971:514;;;;;:::o;532:266:3:-;600:14;;-1:-1:-1;;;;;600:14:3;586:10;:28;578:94;;;;-1:-1:-1;;;578:94:3;;2600:2:4;578:94:3;;;2582:21:4;2639:2;2619:18;;;2612:30;2678:34;2658:18;;;2651:62;-1:-1:-1;;;2729:18:4;;;2722:51;2790:19;;578:94:3;2398:417:4;578:94:3;700:5;;;707:14;687:35;;;-1:-1:-1;;;;;700:5:3;;;3032:34:4;;707:14:3;;;;3097:2:4;3082:18;;3075:43;687:35:3;;2967:18:4;687:35:3;;;;;;;740:14;;;;732:22;;-1:-1:-1;;;;;;732:22:3;;;-1:-1:-1;;;;;740:14:3;;732:22;;;;764:27;;;532:266::o;3545:245:2:-;1667:5;;-1:-1:-1;;;;;1667:5:2;1653:10;:19;;:53;;-1:-1:-1;1690:16:2;;-1:-1:-1;;;;;1690:16:2;1676:10;:30;1653:53;1645:87;;;;-1:-1:-1;;;1645:87:2;;3331:2:4;1645:87:2;;;3313:21:4;3370:2;3350:18;;;3343:30;-1:-1:-1;;;3389:18:4;;;3382:51;3450:18;;1645:87:2;3129:345:4;1645:87:2;3648:16:::1;:68:::0;;-1:-1:-1;;;;;;3648:68:2::1;-1:-1:-1::0;;;;;3648:68:2;::::1;::::0;;::::1;::::0;;;3756:27:::1;::::0;;-1:-1:-1;;;3756:27:2;;;;:25:::1;::::0;:27:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;3648:68;3756:27;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3726:57;;:27;:57:::0;-1:-1:-1;3545:245:2:o;2195:590::-;2240:17;2259:21;2293:14;2309:9;2322:17;2341:22;2367:16;;;;;;;;;-1:-1:-1;;;;;2367:16:2;-1:-1:-1;;;;;2367:32:2;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2292:109;;;;;;;;;2428:1;2419:5;:10;;:27;;;;-1:-1:-1;2433:13:2;;;2419:27;:57;;;;;2469:7;2450:26;;:15;:26;;;;2419:57;2411:93;;;;-1:-1:-1;;;2411:93:2;;4621:2:4;2411:93:2;;;4603:21:4;4660:2;4640:18;;;4633:30;4699:25;4679:18;;;4672:53;4742:18;;2411:93:2;4419:347:4;2411:93:2;2549:83;2604:27;;2597:2;2589:42;;;;:::i;:::-;2568:15;;2549:35;;2557:5;;2549:18;:35::i;:83::-;2537:95;;2674:104;2750:27;;2743:2;2735:42;;;;:::i;:::-;2674:56;2714:15;;2674:35;2693:15;;2682:5;2674:18;;:35;;;;:::i;:104::-;2658:120;;2282:503;;;;2195:590;;:::o;2193:459:0:-;2251:7;2492:6;2488:45;;-1:-1:-1;2521:1:0;2514:8;;2488:45;2543:9;2555:5;2559:1;2555;:5;:::i;:::-;2543:17;-1:-1:-1;2587:1:0;2578:5;2582:1;2543:17;2578:5;:::i;:::-;:10;2570:56;;;;-1:-1:-1;;;2570:56:0;;6874:2:4;2570:56:0;;;6856:21:4;6913:2;6893:18;;;6886:30;6952:34;6932:18;;;6925:62;-1:-1:-1;;;7003:18:4;;;6996:31;7044:19;;2570:56:0;6672:397:4;2570:56:0;2644:1;2193:459;-1:-1:-1;;;2193:459:0:o;3107:130::-;3165:7;3191:39;3195:1;3198;3191:39;;;;;;;;;;;;;;;;;3838:7;3938:12;3931:5;3923:28;;;;-1:-1:-1;;;3923:28:0;;;;;;;;:::i;:::-;-1:-1:-1;3961:9:0;3973:5;3977:1;3973;:5;:::i;:::-;3961:17;3752:338;-1:-1:-1;;;;;3752:338:0:o;14:173:4:-;82:20;;-1:-1:-1;;;;;131:31:4;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;565:254::-;633:6;641;694:2;682:9;673:7;669:23;665:32;662:52;;;710:1;707;700:12;662:52;733:29;752:9;733:29;:::i;:::-;723:39;809:2;794:18;;;;781:32;;-1:-1:-1;;;565:254:4:o;3479:273::-;3547:6;3600:2;3588:9;3579:7;3575:23;3571:32;3568:52;;;3616:1;3613;3606:12;3568:52;3648:9;3642:16;3698:4;3691:5;3687:16;3680:5;3677:27;3667:55;;3718:1;3715;3708:12;3757:179;3835:13;;3888:22;3877:34;;3867:45;;3857:73;;3926:1;3923;3916:12;3941:473;4044:6;4052;4060;4068;4076;4129:3;4117:9;4108:7;4104:23;4100:33;4097:53;;;4146:1;4143;4136:12;4097:53;4169:39;4198:9;4169:39;:::i;:::-;4159:49;;4248:2;4237:9;4233:18;4227:25;4217:35;;4292:2;4281:9;4277:18;4271:25;4261:35;;4336:2;4325:9;4321:18;4315:25;4305:35;;4359:49;4403:3;4392:9;4388:19;4359:49;:::i;:::-;4349:59;;3941:473;;;;;;;;:::o;4771:127::-;4832:10;4827:3;4823:20;4820:1;4813:31;4863:4;4860:1;4853:15;4887:4;4884:1;4877:15;4903:422;4992:1;5035:5;4992:1;5049:270;5070:7;5060:8;5057:21;5049:270;;;5129:4;5125:1;5121:6;5117:17;5111:4;5108:27;5105:53;;;5138:18;;:::i;:::-;5188:7;5178:8;5174:22;5171:55;;;5208:16;;;;5171:55;5287:22;;;;5247:15;;;;5049:270;;;5053:3;4903:422;;;;;:::o;5330:806::-;5379:5;5409:8;5399:80;;-1:-1:-1;5450:1:4;5464:5;;5399:80;5498:4;5488:76;;-1:-1:-1;5535:1:4;5549:5;;5488:76;5580:4;5598:1;5593:59;;;;5666:1;5661:130;;;;5573:218;;5593:59;5623:1;5614:10;;5637:5;;;5661:130;5698:3;5688:8;5685:17;5682:43;;;5705:18;;:::i;:::-;-1:-1:-1;;5761:1:4;5747:16;;5776:5;;5573:218;;5875:2;5865:8;5862:16;5856:3;5850:4;5847:13;5843:36;5837:2;5827:8;5824:16;5819:2;5813:4;5810:12;5806:35;5803:77;5800:159;;;-1:-1:-1;5912:19:4;;;5944:5;;5800:159;5991:34;6016:8;6010:4;5991:34;:::i;:::-;6061:6;6057:1;6053:6;6049:19;6040:7;6037:32;6034:58;;;6072:18;;:::i;:::-;6110:20;;5330:806;-1:-1:-1;;;5330:806:4:o;6141:131::-;6201:5;6230:36;6257:8;6251:4;6230:36;:::i;6277:168::-;6317:7;6383:1;6379;6375:6;6371:14;6368:1;6365:21;6360:1;6353:9;6346:17;6342:45;6339:71;;;6390:18;;:::i;:::-;-1:-1:-1;6430:9:4;;6277:168::o;6450:217::-;6490:1;6516;6506:132;;6560:10;6555:3;6551:20;6548:1;6541:31;6595:4;6592:1;6585:15;6623:4;6620:1;6613:15;6506:132;-1:-1:-1;6652:9:4;;6450:217::o;7074:597::-;7186:4;7215:2;7244;7233:9;7226:21;7276:6;7270:13;7319:6;7314:2;7303:9;7299:18;7292:34;7344:1;7354:140;7368:6;7365:1;7362:13;7354:140;;;7463:14;;;7459:23;;7453:30;7429:17;;;7448:2;7425:26;7418:66;7383:10;;7354:140;;;7512:6;7509:1;7506:13;7503:91;;;7582:1;7577:2;7568:6;7557:9;7553:22;7549:31;7542:42;7503:91;-1:-1:-1;7655:2:4;7634:15;-1:-1:-1;;7630:29:4;7615:45;;;;7662:2;7611:54;;7074:597;-1:-1:-1;;;7074:597:4:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "527400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"EXTRA_PRECISION()": "2394",
								"PRICE_PRECISION()": "2306",
								"acceptOwnership()": "56415",
								"chainlink_frax_eth_decimals()": "2307",
								"consult(address,uint256)": "infinite",
								"getFRAXPrice()": "infinite",
								"nominateNewOwner(address)": "27765",
								"nominatedOwner()": "2404",
								"owner()": "2337",
								"setChainlinkFRAXETHOracle(address)": "infinite",
								"timelock_address()": "2403"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1269,
									"end": 3793,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1269,
									"end": 3793,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1269,
									"end": 3793,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1479,
									"end": 1482,
									"name": "PUSH",
									"source": 2,
									"value": "F4240"
								},
								{
									"begin": 1446,
									"end": 1482,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1446,
									"end": 1482,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1521,
									"end": 1524,
									"name": "PUSH",
									"source": 2,
									"value": "F4240"
								},
								{
									"begin": 1488,
									"end": 1524,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1488,
									"end": 1524,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1801,
									"end": 2150,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1801,
									"end": 2150,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1801,
									"end": 2150,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1801,
									"end": 2150,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 2150,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1801,
									"end": 2150,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1801,
									"end": 2150,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1801,
									"end": 2150,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1801,
									"end": 2150,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 2150,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1801,
									"end": 2150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1801,
									"end": 2150,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1801,
									"end": 2150,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1801,
									"end": 2150,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1801,
									"end": 2150,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1801,
									"end": 2150,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1801,
									"end": 2150,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1801,
									"end": 2150,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1801,
									"end": 2150,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1801,
									"end": 2150,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1801,
									"end": 2150,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1801,
									"end": 2150,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1801,
									"end": 2150,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1801,
									"end": 2150,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1801,
									"end": 2150,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1801,
									"end": 2150,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1801,
									"end": 2150,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1801,
									"end": 2150,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1801,
									"end": 2150,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1801,
									"end": 2150,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1801,
									"end": 2150,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1801,
									"end": 2150,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1895,
									"end": 1911,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 254,
									"end": 274,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 254,
									"end": 274,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 246,
									"end": 304,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 246,
									"end": 304,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 246,
									"end": 304,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 696,
									"end": 698,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 246,
									"end": 304,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 246,
									"end": 304,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 678,
									"end": 699,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 735,
									"end": 737,
									"name": "PUSH",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 715,
									"end": 733,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 715,
									"end": 733,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 715,
									"end": 733,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 708,
									"end": 738,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 774,
									"end": 801,
									"name": "PUSH",
									"source": 4,
									"value": "4F776E657220616464726573732063616E6E6F74206265203000000000000000"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 754,
									"end": 772,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 747,
									"end": 802,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 819,
									"end": 837,
									"name": "PUSH",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 819,
									"end": 837,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 246,
									"end": 304,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 246,
									"end": 304,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 246,
									"end": 304,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 314,
									"end": 319,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 328,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 314,
									"end": 328,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 314,
									"end": 328,
									"name": "AND",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 314,
									"end": 328,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 314,
									"end": 328,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 314,
									"end": 328,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 314,
									"end": 328,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 314,
									"end": 328,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 314,
									"end": 328,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 314,
									"end": 328,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 343,
									"end": 375,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 343,
									"end": 375,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 343,
									"end": 375,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1060,
									"end": 1094,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1060,
									"end": 1094,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1060,
									"end": 1094,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1125,
									"end": 1127,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1110,
									"end": 1128,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1110,
									"end": 1128,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1103,
									"end": 1146,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1103,
									"end": 1146,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1103,
									"end": 1146,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1103,
									"end": 1146,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 343,
									"end": 375,
									"name": "PUSH",
									"source": 3,
									"value": "B532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C"
								},
								{
									"begin": 343,
									"end": 375,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 995,
									"end": 1013,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 343,
									"end": 375,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 343,
									"end": 375,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 343,
									"end": 375,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 343,
									"end": 375,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 343,
									"end": 375,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 343,
									"end": 375,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 343,
									"end": 375,
									"name": "LOG1",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1923,
									"end": 1939,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1923,
									"end": 1959,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1923,
									"end": 1959,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1923,
									"end": 1959,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1923,
									"end": 1959,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1923,
									"end": 1959,
									"name": "AND",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1923,
									"end": 1959,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1923,
									"end": 1959,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1923,
									"end": 1959,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1923,
									"end": 1959,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1923,
									"end": 1959,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1923,
									"end": 1959,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1992,
									"end": 2008,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1992,
									"end": 2076,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1992,
									"end": 2076,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2033,
									"end": 2075,
									"name": "PUSH",
									"source": 2,
									"value": "551717D0D483D38A302FA4E48571450476597EF6"
								},
								{
									"begin": 1992,
									"end": 2076,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1992,
									"end": 2076,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1992,
									"end": 2076,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1992,
									"end": 2076,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1992,
									"end": 2076,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1992,
									"end": 2076,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "313CE567"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2141,
									"name": "PUSH",
									"source": 2,
									"value": "313CE567"
								},
								{
									"begin": 2116,
									"end": 2141,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2033,
									"end": 2075,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "EXTCODESIZE",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "GAS",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "STATICCALL",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "RETURNDATACOPY",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 2116,
									"end": 2143,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2086,
									"end": 2143,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 2086,
									"end": 2143,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2086,
									"end": 2113,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2086,
									"end": 2143,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1269,
									"end": 3793,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1269,
									"end": 3793,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1269,
									"end": 3793,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1157,
									"end": 1430,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 1157,
									"end": 1430,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1225,
									"end": 1231,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1278,
									"end": 1280,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1266,
									"end": 1275,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1257,
									"end": 1264,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1253,
									"end": 1276,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1249,
									"end": 1281,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 1246,
									"end": 1298,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1246,
									"end": 1298,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 1246,
									"end": 1298,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1294,
									"end": 1295,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1291,
									"end": 1292,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1296,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1246,
									"end": 1298,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 1246,
									"end": 1298,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1335,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1320,
									"end": 1336,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1376,
									"end": 1380,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 1369,
									"end": 1374,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1365,
									"end": 1381,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 1363,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1355,
									"end": 1382,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 1400,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1345,
									"end": 1400,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1396,
									"end": 1397,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1393,
									"end": 1394,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1386,
									"end": 1398,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 1400,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1345,
									"end": 1400,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1424,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1157,
									"end": 1430,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1157,
									"end": 1430,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1157,
									"end": 1430,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1157,
									"end": 1430,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1269,
									"end": 3793,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1269,
									"end": 3793,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1269,
									"end": 3793,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1269,
									"end": 3793,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1269,
									"end": 3793,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1269,
									"end": 3793,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1269,
									"end": 3793,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bc5982a488d2e9f9f0abbaff0f302a7cd88e98561ee3e7be022abcb53526c47d64736f6c63430008090033",
									".code": [
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH",
											"source": 2,
											"value": "95082D25"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH",
											"source": 2,
											"value": "963F8E4C"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH",
											"source": 2,
											"value": "DC6663C7"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH",
											"source": 2,
											"value": "EE88FC91"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH",
											"source": 2,
											"value": "FFAA3B23"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH",
											"source": 2,
											"value": "1627540C"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH",
											"source": 2,
											"value": "1E47BA5C"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH",
											"source": 2,
											"value": "3DDAC953"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH",
											"source": 2,
											"value": "53A47BB7"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH",
											"source": 2,
											"value": "79BA5097"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 3793,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 388,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 388,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 388,
											"end": 526,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 388,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 388,
											"end": 526,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1439,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1397,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1397,
											"end": 1439,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1397,
											"end": 1439,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 1439,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 1439,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 1439,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1397,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 1439,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1397,
											"end": 1439,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 529,
											"end": 554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1439,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1397,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 1439,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1397,
											"end": 1439,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 1439,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 1439,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 1439,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 1439,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 1439,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3485,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2971,
											"end": 3485,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2971,
											"end": 3485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2971,
											"end": 3485,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3485,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2971,
											"end": 3485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2971,
											"end": 3485,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2971,
											"end": 3485,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2971,
											"end": 3485,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2971,
											"end": 3485,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 164,
											"end": 193,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 164,
											"end": 193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 164,
											"end": 193,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 164,
											"end": 193,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 164,
											"end": 193,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 164,
											"end": 193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 164,
											"end": 193,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 988,
											"end": 1020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 988,
											"end": 1020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 988,
											"end": 1020,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 958,
											"end": 960,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 164,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 824,
											"end": 1027,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 532,
											"end": 798,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 532,
											"end": 798,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 532,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 532,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 532,
											"end": 798,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 138,
											"end": 158,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 138,
											"end": 158,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 138,
											"end": 158,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 158,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 138,
											"end": 158,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 138,
											"end": 158,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 138,
											"end": 158,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 138,
											"end": 158,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 138,
											"end": 158,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1446,
											"end": 1482,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1446,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1446,
											"end": 1482,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1446,
											"end": 1482,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1482,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3545,
											"end": 3790,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3545,
											"end": 3790,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3545,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3545,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3545,
											"end": 3790,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3545,
											"end": 3790,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3545,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3545,
											"end": 3790,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3545,
											"end": 3790,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3545,
											"end": 3790,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3545,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3545,
											"end": 3790,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2195,
											"end": 2785,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2195,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2195,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2195,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2195,
											"end": 2785,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2195,
											"end": 2785,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2195,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2195,
											"end": 2785,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2195,
											"end": 2785,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2195,
											"end": 2785,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1231,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1206,
											"end": 1231,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1206,
											"end": 1231,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1264,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1274,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1274,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1274,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1274,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1179,
											"end": 1197,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2195,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1032,
											"end": 1280,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1488,
											"end": 1524,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1488,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1488,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1488,
											"end": 1524,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1488,
											"end": 1524,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1488,
											"end": 1524,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1488,
											"end": 1524,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 388,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 855,
											"end": 860,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 855,
											"end": 860,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 855,
											"end": 860,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 841,
											"end": 851,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 841,
											"end": 860,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 833,
											"end": 912,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 833,
											"end": 912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 833,
											"end": 912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1489,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 833,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 833,
											"end": 912,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1490,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1528,
											"name": "PUSH",
											"source": 4,
											"value": "2F"
										},
										{
											"begin": 1506,
											"end": 1524,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1506,
											"end": 1524,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1524,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1529,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1565,
											"end": 1599,
											"name": "PUSH",
											"source": 4,
											"value": "4F6E6C792074686520636F6E7472616374206F776E6572206D61792070657266"
										},
										{
											"begin": 1545,
											"end": 1563,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1545,
											"end": 1563,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1545,
											"end": 1563,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1600,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37B936903A3434B99030B1BA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1609,
											"end": 1654,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1690,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1671,
											"end": 1690,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 833,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 833,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 833,
											"end": 912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 833,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 459,
											"end": 473,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 459,
											"end": 482,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 459,
											"end": 482,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 459,
											"end": 482,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 459,
											"end": 482,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 459,
											"end": 482,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 459,
											"end": 482,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 459,
											"end": 482,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 459,
											"end": 482,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 459,
											"end": 482,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 459,
											"end": 482,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 459,
											"end": 482,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 497,
											"end": 519,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 519,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 497,
											"end": 519,
											"name": "PUSH",
											"source": 3,
											"value": "906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22"
										},
										{
											"begin": 497,
											"end": 519,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 958,
											"end": 960,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 497,
											"end": 519,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 519,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 497,
											"end": 519,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 497,
											"end": 519,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 497,
											"end": 519,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 497,
											"end": 519,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 497,
											"end": 519,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 388,
											"end": 526,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 388,
											"end": 526,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2971,
											"end": 3485,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2971,
											"end": 3485,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3041,
											"end": 3055,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3149,
											"end": 3200,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3149,
											"end": 3200,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3149,
											"end": 3200,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3141,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3141,
											"end": 3226,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3141,
											"end": 3226,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3141,
											"end": 3226,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3141,
											"end": 3226,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3141,
											"end": 3226,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1905,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3141,
											"end": 3226,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3141,
											"end": 3226,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3141,
											"end": 3226,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1885,
											"end": 1906,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1942,
											"end": 1944,
											"name": "PUSH",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1922,
											"end": 1940,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1922,
											"end": 1940,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1922,
											"end": 1940,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1915,
											"end": 1945,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6D7573742075736520776574682061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 2005,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2040,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2022,
											"end": 2040,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3141,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1701,
											"end": 2046,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3141,
											"end": 3226,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3141,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3252,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3259,
											"name": "PUSH",
											"source": 2,
											"value": "F4240"
										},
										{
											"begin": 3244,
											"end": 3259,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3236,
											"end": 3282,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3282,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3236,
											"end": 3282,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3236,
											"end": 3282,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3282,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2253,
											"end": 2255,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3236,
											"end": 3282,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3236,
											"end": 3282,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3282,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2256,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2292,
											"end": 2294,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2272,
											"end": 2290,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2272,
											"end": 2290,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2272,
											"end": 2290,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2295,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "36BAB9BA1031B0B636103BB4BA341018B29B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2311,
											"end": 2329,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2311,
											"end": 2329,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2311,
											"end": 2329,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2304,
											"end": 2352,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2369,
											"end": 2387,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2369,
											"end": 2387,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3236,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2051,
											"end": 2393,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3236,
											"end": 3282,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3236,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3335,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3365,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3365,
											"end": 3379,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3365,
											"end": 3379,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3365,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3332,
											"end": 3379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3332,
											"end": 3379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3332,
											"end": 3379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3438,
											"end": 3453,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3438,
											"end": 3453,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3417,
											"end": 3432,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3417,
											"end": 3432,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3412,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3397,
											"end": 3412,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3397,
											"end": 3416,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3433,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3433,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3433,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3397,
											"end": 3433,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3433,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3397,
											"end": 3433,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3397,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3437,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3397,
											"end": 3454,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3397,
											"end": 3454,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3397,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3458,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3397,
											"end": 3478,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3397,
											"end": 3478,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3397,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3478,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3478,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3478,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3485,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2971,
											"end": 3485,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3485,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3485,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3485,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3485,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3485,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 532,
											"end": 798,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 532,
											"end": 798,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 600,
											"end": 614,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 600,
											"end": 614,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 600,
											"end": 614,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 586,
											"end": 596,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 586,
											"end": 614,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 578,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 578,
											"end": 672,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 578,
											"end": 672,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 578,
											"end": 672,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 578,
											"end": 672,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 578,
											"end": 672,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2600,
											"end": 2602,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 578,
											"end": 672,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 578,
											"end": 672,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 578,
											"end": 672,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2582,
											"end": 2603,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2641,
											"name": "PUSH",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2612,
											"end": 2642,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2678,
											"end": 2712,
											"name": "PUSH",
											"source": 4,
											"value": "596F75206D757374206265206E6F6D696E61746564206265666F726520796F75"
										},
										{
											"begin": 2658,
											"end": 2676,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2658,
											"end": 2676,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2658,
											"end": 2676,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2651,
											"end": 2713,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2063616E20616363657074206F776E65727368697"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2729,
											"end": 2747,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2729,
											"end": 2747,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2729,
											"end": 2747,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2722,
											"end": 2773,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2790,
											"end": 2809,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2790,
											"end": 2809,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 578,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2398,
											"end": 2815,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 578,
											"end": 672,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 578,
											"end": 672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 700,
											"end": 705,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 700,
											"end": 705,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 700,
											"end": 705,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 707,
											"end": 721,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 687,
											"end": 722,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 687,
											"end": 722,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 687,
											"end": 722,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 700,
											"end": 705,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 700,
											"end": 705,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 700,
											"end": 705,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3032,
											"end": 3066,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3032,
											"end": 3066,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 707,
											"end": 721,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 707,
											"end": 721,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 707,
											"end": 721,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 707,
											"end": 721,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3097,
											"end": 3099,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3082,
											"end": 3100,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3100,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3118,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 687,
											"end": 722,
											"name": "PUSH",
											"source": 3,
											"value": "B532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C"
										},
										{
											"begin": 687,
											"end": 722,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2985,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 687,
											"end": 722,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 687,
											"end": 722,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 687,
											"end": 722,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 687,
											"end": 722,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 687,
											"end": 722,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 687,
											"end": 722,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 687,
											"end": 722,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 740,
											"end": 754,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 740,
											"end": 754,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 740,
											"end": 754,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 740,
											"end": 754,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 754,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 732,
											"end": 754,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 732,
											"end": 754,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 732,
											"end": 754,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 732,
											"end": 754,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 740,
											"end": 754,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 740,
											"end": 754,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 732,
											"end": 754,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 732,
											"end": 754,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 732,
											"end": 754,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 732,
											"end": 754,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 764,
											"end": 791,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 764,
											"end": 791,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 764,
											"end": 791,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 532,
											"end": 798,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3545,
											"end": 3790,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3545,
											"end": 3790,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1653,
											"end": 1663,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1653,
											"end": 1672,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1653,
											"end": 1672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1653,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1653,
											"end": 1706,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1690,
											"end": 1706,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1690,
											"end": 1706,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1690,
											"end": 1706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1686,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1706,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1653,
											"end": 1706,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1653,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1645,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1645,
											"end": 1732,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1645,
											"end": 1732,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1645,
											"end": 1732,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1645,
											"end": 1732,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1645,
											"end": 1732,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3331,
											"end": 3333,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1645,
											"end": 1732,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1645,
											"end": 1732,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1645,
											"end": 1732,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3313,
											"end": 3334,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3372,
											"name": "PUSH",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3350,
											"end": 3368,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3350,
											"end": 3368,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3350,
											"end": 3368,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3373,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F74206F776E6572206F722074696D656C6F636B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3389,
											"end": 3407,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3389,
											"end": 3407,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3407,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3450,
											"end": 3468,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3450,
											"end": 3468,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1645,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3129,
											"end": 3474,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1645,
											"end": 1732,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1645,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3648,
											"end": 3664,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3648,
											"end": 3716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3648,
											"end": 3716,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3648,
											"end": 3716,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3648,
											"end": 3716,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3648,
											"end": 3716,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3648,
											"end": 3716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3648,
											"end": 3716,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3648,
											"end": 3716,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3648,
											"end": 3716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3648,
											"end": 3716,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3648,
											"end": 3716,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "313CE567"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 3756,
											"end": 3781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3648,
											"end": 3716,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3726,
											"end": 3783,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3726,
											"end": 3783,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3726,
											"end": 3753,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3726,
											"end": 3783,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3545,
											"end": 3790,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2195,
											"end": 2785,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2195,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2259,
											"end": 2280,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2307,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2318,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2339,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2341,
											"end": 2363,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2367,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2383,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2367,
											"end": 2383,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2383,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2367,
											"end": 2383,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2367,
											"end": 2399,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2399,
											"name": "PUSH",
											"source": 2,
											"value": "FEAF968C"
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2292,
											"end": 2401,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2292,
											"end": 2401,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2292,
											"end": 2401,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2292,
											"end": 2401,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2292,
											"end": 2401,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2292,
											"end": 2401,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2292,
											"end": 2401,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2292,
											"end": 2401,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2292,
											"end": 2401,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2428,
											"end": 2429,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2419,
											"end": 2424,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2419,
											"end": 2429,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2419,
											"end": 2429,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2419,
											"end": 2446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2419,
											"end": 2446,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2419,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2419,
											"end": 2446,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2433,
											"end": 2446,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2446,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2446,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2419,
											"end": 2446,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2419,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2419,
											"end": 2476,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2419,
											"end": 2476,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2419,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2419,
											"end": 2476,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2419,
											"end": 2476,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2469,
											"end": 2476,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2476,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2450,
											"end": 2476,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2476,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2450,
											"end": 2476,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2476,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2476,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2419,
											"end": 2476,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2419,
											"end": 2476,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2411,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2411,
											"end": 2504,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2411,
											"end": 2504,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2411,
											"end": 2504,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2411,
											"end": 2504,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2411,
											"end": 2504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4621,
											"end": 4623,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2411,
											"end": 2504,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2411,
											"end": 2504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2411,
											"end": 2504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4603,
											"end": 4624,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4662,
											"name": "PUSH",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 4640,
											"end": 4658,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4640,
											"end": 4658,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4640,
											"end": 4658,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4633,
											"end": 4663,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4699,
											"end": 4724,
											"name": "PUSH",
											"source": 4,
											"value": "496E76616C696420636861696E6C696E6B207072696365000000000000000000"
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4672,
											"end": 4725,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4742,
											"end": 4760,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4742,
											"end": 4760,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2411,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4419,
											"end": 4766,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2411,
											"end": 2504,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2411,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2549,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2604,
											"end": 2631,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2604,
											"end": 2631,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2597,
											"end": 2599,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 2589,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2589,
											"end": 2631,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2589,
											"end": 2631,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2589,
											"end": 2631,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2589,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2568,
											"end": 2583,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2568,
											"end": 2583,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2549,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2549,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2562,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2549,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2549,
											"end": 2584,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2549,
											"end": 2632,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2549,
											"end": 2632,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2537,
											"end": 2632,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 2537,
											"end": 2632,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2750,
											"end": 2777,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2750,
											"end": 2777,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2745,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 2735,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2735,
											"end": 2777,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2735,
											"end": 2777,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2735,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2735,
											"end": 2777,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2735,
											"end": 2777,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2735,
											"end": 2777,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2714,
											"end": 2729,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2714,
											"end": 2729,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2687,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2674,
											"end": 2692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2674,
											"end": 2778,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2674,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2658,
											"end": 2778,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2658,
											"end": 2778,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2785,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2785,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2785,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2785,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2195,
											"end": 2785,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2195,
											"end": 2785,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2195,
											"end": 2785,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2193,
											"end": 2652,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2193,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2251,
											"end": 2258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2498,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2488,
											"end": 2533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2521,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2514,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2514,
											"end": 2522,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2533,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2488,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2552,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2555,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2559,
											"end": 2560,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2556,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2555,
											"end": 2560,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2555,
											"end": 2560,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2555,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2587,
											"end": 2588,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2582,
											"end": 2583,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2560,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2578,
											"end": 2583,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2578,
											"end": 2583,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2578,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2588,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6874,
											"end": 6876,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6856,
											"end": 6877,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6913,
											"end": 6915,
											"name": "PUSH",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 6893,
											"end": 6911,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6893,
											"end": 6911,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6893,
											"end": 6911,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6886,
											"end": 6916,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6952,
											"end": 6986,
											"name": "PUSH",
											"source": 4,
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 6932,
											"end": 6950,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 6932,
											"end": 6950,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6932,
											"end": 6950,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6987,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7003,
											"end": 7021,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 7003,
											"end": 7021,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7003,
											"end": 7021,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6996,
											"end": 7027,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7044,
											"end": 7063,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 7044,
											"end": 7063,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 6672,
											"end": 7069,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2645,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2652,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2193,
											"end": 2652,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3107,
											"end": 3237,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3107,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 3195,
											"end": 3196,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3198,
											"end": 3199,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3838,
											"end": 3845,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3931,
											"end": 3936,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3961,
											"end": 3970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3977,
											"end": 3978,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 3974,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3973,
											"end": 3978,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3973,
											"end": 3978,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3973,
											"end": 3978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 3978,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 4090,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3752,
											"end": 4090,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 565,
											"end": 819,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 565,
											"end": 819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 633,
											"end": 639,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 641,
											"end": 647,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 694,
											"end": 696,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 682,
											"end": 691,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 673,
											"end": 680,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 669,
											"end": 692,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 665,
											"end": 697,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 662,
											"end": 714,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 662,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 662,
											"end": 714,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 710,
											"end": 711,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 700,
											"end": 712,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 662,
											"end": 714,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 662,
											"end": 714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 733,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 752,
											"end": 761,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 733,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 733,
											"end": 762,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 733,
											"end": 762,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 733,
											"end": 762,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 723,
											"end": 762,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 809,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 794,
											"end": 812,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 794,
											"end": 812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 794,
											"end": 812,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 794,
											"end": 812,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 781,
											"end": 813,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 781,
											"end": 813,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 565,
											"end": 819,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3479,
											"end": 3752,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3479,
											"end": 3752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3547,
											"end": 3553,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3602,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3588,
											"end": 3597,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3579,
											"end": 3586,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3575,
											"end": 3598,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3571,
											"end": 3603,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3568,
											"end": 3620,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3568,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 3568,
											"end": 3620,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3617,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3613,
											"end": 3614,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3568,
											"end": 3620,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 3568,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3648,
											"end": 3657,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3642,
											"end": 3658,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3702,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3691,
											"end": 3696,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3687,
											"end": 3703,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3677,
											"end": 3704,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3667,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3667,
											"end": 3722,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3719,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3715,
											"end": 3716,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3720,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3757,
											"end": 3936,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 3757,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3835,
											"end": 3848,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3835,
											"end": 3848,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3910,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3877,
											"end": 3911,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3877,
											"end": 3911,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3867,
											"end": 3912,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3867,
											"end": 3912,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3857,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3857,
											"end": 3930,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3926,
											"end": 3927,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3916,
											"end": 3928,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 4414,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3941,
											"end": 4414,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4044,
											"end": 4050,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4052,
											"end": 4058,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4060,
											"end": 4066,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4076,
											"end": 4082,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4129,
											"end": 4132,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 4117,
											"end": 4126,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4115,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 4104,
											"end": 4127,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4133,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 4097,
											"end": 4150,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4097,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 4097,
											"end": 4150,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4146,
											"end": 4147,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4143,
											"end": 4144,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4136,
											"end": 4148,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4097,
											"end": 4150,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 4097,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 4198,
											"end": 4207,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 4169,
											"end": 4208,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4169,
											"end": 4208,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 4169,
											"end": 4208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4159,
											"end": 4208,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4159,
											"end": 4208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4248,
											"end": 4250,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4237,
											"end": 4246,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4233,
											"end": 4251,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4227,
											"end": 4252,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4217,
											"end": 4252,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4217,
											"end": 4252,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4292,
											"end": 4294,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4281,
											"end": 4290,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4277,
											"end": 4295,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4271,
											"end": 4296,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4261,
											"end": 4296,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4261,
											"end": 4296,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4336,
											"end": 4338,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4325,
											"end": 4334,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4321,
											"end": 4339,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4315,
											"end": 4340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4305,
											"end": 4340,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4305,
											"end": 4340,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 4403,
											"end": 4406,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4392,
											"end": 4401,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4407,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 4359,
											"end": 4408,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4359,
											"end": 4408,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 4359,
											"end": 4408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4349,
											"end": 4408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4349,
											"end": 4408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 4414,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 4414,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 4414,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 4414,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 4414,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 4414,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 4414,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 4414,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 4414,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4771,
											"end": 4898,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 4771,
											"end": 4898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 4842,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 4827,
											"end": 4830,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 4823,
											"end": 4843,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4821,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4813,
											"end": 4844,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 4860,
											"end": 4861,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4853,
											"end": 4868,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4887,
											"end": 4891,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4884,
											"end": 4885,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4877,
											"end": 4892,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4903,
											"end": 5325,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 4903,
											"end": 5325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4992,
											"end": 4993,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5035,
											"end": 5040,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4992,
											"end": 4993,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5049,
											"end": 5319,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 5049,
											"end": 5319,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5070,
											"end": 5077,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5060,
											"end": 5068,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5057,
											"end": 5078,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5049,
											"end": 5319,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5049,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 5049,
											"end": 5319,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5133,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5126,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5121,
											"end": 5127,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5117,
											"end": 5134,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5108,
											"end": 5135,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5105,
											"end": 5158,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5105,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 5105,
											"end": 5158,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 5138,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5138,
											"end": 5156,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5138,
											"end": 5156,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 5138,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5188,
											"end": 5195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5178,
											"end": 5186,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5174,
											"end": 5196,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5171,
											"end": 5226,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5171,
											"end": 5226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 5171,
											"end": 5226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5208,
											"end": 5224,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5208,
											"end": 5224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5208,
											"end": 5224,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 5208,
											"end": 5224,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5171,
											"end": 5226,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 5171,
											"end": 5226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5287,
											"end": 5309,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5287,
											"end": 5309,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5287,
											"end": 5309,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 5287,
											"end": 5309,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5247,
											"end": 5262,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5247,
											"end": 5262,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5247,
											"end": 5262,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 5247,
											"end": 5262,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5049,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 5049,
											"end": 5319,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5049,
											"end": 5319,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 5049,
											"end": 5319,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5053,
											"end": 5056,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4903,
											"end": 5325,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4903,
											"end": 5325,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4903,
											"end": 5325,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4903,
											"end": 5325,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4903,
											"end": 5325,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4903,
											"end": 5325,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5330,
											"end": 6136,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 5330,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5379,
											"end": 5384,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5409,
											"end": 5417,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5399,
											"end": 5479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 5399,
											"end": 5479,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5450,
											"end": 5451,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5464,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5464,
											"end": 5469,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5399,
											"end": 5479,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 5399,
											"end": 5479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5498,
											"end": 5502,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5488,
											"end": 5564,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 5488,
											"end": 5564,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5535,
											"end": 5536,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5549,
											"end": 5554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5549,
											"end": 5554,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5488,
											"end": 5564,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 5488,
											"end": 5564,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5580,
											"end": 5584,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5598,
											"end": 5599,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5593,
											"end": 5652,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5652,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5652,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 5593,
											"end": 5652,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5666,
											"end": 5667,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5661,
											"end": 5791,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5661,
											"end": 5791,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5661,
											"end": 5791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 5661,
											"end": 5791,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5573,
											"end": 5791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 5573,
											"end": 5791,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5652,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 5593,
											"end": 5652,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5623,
											"end": 5624,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5614,
											"end": 5624,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5614,
											"end": 5624,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5637,
											"end": 5642,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5637,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5637,
											"end": 5642,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5661,
											"end": 5791,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 5661,
											"end": 5791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5698,
											"end": 5701,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 5688,
											"end": 5696,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5685,
											"end": 5702,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5682,
											"end": 5725,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5682,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 5682,
											"end": 5725,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5705,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 5705,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5705,
											"end": 5723,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5705,
											"end": 5723,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 5705,
											"end": 5723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5761,
											"end": 5762,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5747,
											"end": 5763,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5747,
											"end": 5763,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 5776,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5776,
											"end": 5781,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5573,
											"end": 5791,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 5573,
											"end": 5791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5573,
											"end": 5791,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5875,
											"end": 5877,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5865,
											"end": 5873,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5862,
											"end": 5878,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5856,
											"end": 5859,
											"name": "PUSH",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 5850,
											"end": 5854,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5847,
											"end": 5860,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5843,
											"end": 5879,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5837,
											"end": 5839,
											"name": "PUSH",
											"source": 4,
											"value": "4E"
										},
										{
											"begin": 5827,
											"end": 5835,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5819,
											"end": 5821,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 5813,
											"end": 5817,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5810,
											"end": 5822,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5806,
											"end": 5841,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5803,
											"end": 5880,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 5800,
											"end": 5959,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5800,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 5800,
											"end": 5959,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5912,
											"end": 5931,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5912,
											"end": 5931,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5912,
											"end": 5931,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 5944,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5944,
											"end": 5949,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5800,
											"end": 5959,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 5800,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 6016,
											"end": 6024,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6014,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 5991,
											"end": 6025,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5991,
											"end": 6025,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 5991,
											"end": 6025,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6061,
											"end": 6067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6057,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6053,
											"end": 6059,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 6049,
											"end": 6068,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 6040,
											"end": 6047,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6037,
											"end": 6069,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6092,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6092,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 6034,
											"end": 6092,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6072,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 6072,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 6072,
											"end": 6090,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6072,
											"end": 6090,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 6072,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6110,
											"end": 6130,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 6110,
											"end": 6130,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 6136,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5330,
											"end": 6136,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6141,
											"end": 6272,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 6141,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6201,
											"end": 6206,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6230,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 6257,
											"end": 6265,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6255,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6230,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 6230,
											"end": 6266,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6277,
											"end": 6445,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 6277,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6317,
											"end": 6324,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6383,
											"end": 6384,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6379,
											"end": 6380,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6375,
											"end": 6381,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 6371,
											"end": 6385,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 6368,
											"end": 6369,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6386,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6361,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6353,
											"end": 6362,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6346,
											"end": 6363,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6342,
											"end": 6387,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6339,
											"end": 6410,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6339,
											"end": 6410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 6339,
											"end": 6410,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6390,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 6390,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 6390,
											"end": 6408,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6390,
											"end": 6408,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 6390,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6430,
											"end": 6439,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 6430,
											"end": 6439,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6277,
											"end": 6445,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6450,
											"end": 6667,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 6450,
											"end": 6667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6490,
											"end": 6491,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6516,
											"end": 6517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6506,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 6506,
											"end": 6638,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6560,
											"end": 6570,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 6555,
											"end": 6558,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 6551,
											"end": 6571,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6549,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6572,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6595,
											"end": 6599,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 6592,
											"end": 6593,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6585,
											"end": 6600,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6623,
											"end": 6627,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6620,
											"end": 6621,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6613,
											"end": 6628,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6506,
											"end": 6638,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 6506,
											"end": 6638,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6652,
											"end": 6661,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 6652,
											"end": 6661,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6450,
											"end": 6667,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7074,
											"end": 7671,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 7074,
											"end": 7671,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7186,
											"end": 7190,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7215,
											"end": 7217,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7244,
											"end": 7246,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7233,
											"end": 7242,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7226,
											"end": 7247,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7276,
											"end": 7282,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7270,
											"end": 7283,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7319,
											"end": 7325,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7314,
											"end": 7316,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7303,
											"end": 7312,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7299,
											"end": 7317,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7292,
											"end": 7326,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7344,
											"end": 7345,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7354,
											"end": 7494,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 7354,
											"end": 7494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7374,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7365,
											"end": 7366,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7362,
											"end": 7375,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7354,
											"end": 7494,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7354,
											"end": 7494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 7354,
											"end": 7494,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7463,
											"end": 7477,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7463,
											"end": 7477,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7463,
											"end": 7477,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7459,
											"end": 7482,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7459,
											"end": 7482,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7483,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7429,
											"end": 7446,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7429,
											"end": 7446,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7429,
											"end": 7446,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7448,
											"end": 7450,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7425,
											"end": 7451,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7418,
											"end": 7484,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7383,
											"end": 7393,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7383,
											"end": 7393,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7354,
											"end": 7494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 7354,
											"end": 7494,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7354,
											"end": 7494,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 7354,
											"end": 7494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7512,
											"end": 7518,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7509,
											"end": 7510,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7506,
											"end": 7519,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7594,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7594,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 7503,
											"end": 7594,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7577,
											"end": 7579,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7568,
											"end": 7574,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7557,
											"end": 7566,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7553,
											"end": 7575,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7549,
											"end": 7580,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7542,
											"end": 7584,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7594,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 7503,
											"end": 7594,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7655,
											"end": 7657,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7634,
											"end": 7649,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7630,
											"end": 7659,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7615,
											"end": 7660,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7615,
											"end": 7660,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7615,
											"end": 7660,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7615,
											"end": 7660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7662,
											"end": 7664,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7611,
											"end": 7665,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7611,
											"end": 7665,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7074,
											"end": 7671,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7074,
											"end": 7671,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"EXTRA_PRECISION()": "ffaa3b23",
							"PRICE_PRECISION()": "95082d25",
							"acceptOwnership()": "79ba5097",
							"chainlink_frax_eth_decimals()": "1e47ba5c",
							"consult(address,uint256)": "3ddac953",
							"getFRAXPrice()": "ee88fc91",
							"nominateNewOwner(address)": "1627540c",
							"nominatedOwner()": "53a47bb7",
							"owner()": "8da5cb5b",
							"setChainlinkFRAXETHOracle(address)": "963f8e4c",
							"timelock_address()": "dc6663c7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creator_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_timelock_address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerNominated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"EXTRA_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRICE_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainlink_frax_eth_decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"consult\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFRAXPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"raw_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"precise_price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"nominateNewOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nominatedOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_chainlink_frax_eth_oracle\",\"type\":\"address\"}],\"name\":\"setChainlinkFRAXETHOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelock_address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":\"FRAXOracleWrapper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"NewFraxProtocol/contracts/Math/SafeMath.sol\":{\"keccak256\":\"0x43a20f7cf4c4319f81450d53779455e88a7ab80bdfc43925156ed4083b74a180\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85317e177f613c29156ffe0b1c1c29c31fedfea1ffc373c9d7f393ef51372728\",\"dweb:/ipfs/QmckZqe6wjgKWd4BTPUjRY1ofC9CsZKxAgXPFCKBisuJdr\"]},\"NewFraxProtocol/contracts/Oracle/AggregatorV3Interface.sol\":{\"keccak256\":\"0x5e7761d06fea8192b159f3e287600cba23c5bdbe3a1bbe1050cc3ab9ed4273a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b6956df5c8ad84b2aba10e7d07c9f4976ae9ebdd65509729e752900a6f6475d\",\"dweb:/ipfs/QmP2MJZdZsJWRozMHmCtq4SU5ePKEHxCzhyqtBFpAjCDny\"]},\"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol\":{\"keccak256\":\"0x1d2312636b48d3f4c3751f6b4f3b9e475a0cfb63569cfbff91240d8daee3b3d0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e13eccd41831e6cd7ce3b6e77fe7a9fecdc21e32c6b06252f8af5f6253f8e077\",\"dweb:/ipfs/QmQAVitEs4wgS6KZudEwdk3sPzwGhXBCadM2XzC8dZK7pJ\"]},\"NewFraxProtocol/contracts/Staking/Owned.sol\":{\"keccak256\":\"0x89e1dde7e13d0109febf812e7d97dda7f24feb7cfe90239c0f7585d1143407d1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://917add49808f1df4025a7a33e8444661261ebf3ea9f02bcd44c698b1c1e4e7e6\",\"dweb:/ipfs/QmVSVA3swHsqEy5F2n8YBGB91cL66xVkJCezkjY9VAjnwE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 447,
								"contract": "NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol:FRAXOracleWrapper",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 449,
								"contract": "NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol:FRAXOracleWrapper",
								"label": "nominatedOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 254,
								"contract": "NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol:FRAXOracleWrapper",
								"label": "priceFeedFRAXETH",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(AggregatorV3Interface)241"
							},
							{
								"astId": 256,
								"contract": "NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol:FRAXOracleWrapper",
								"label": "chainlink_frax_eth_decimals",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 259,
								"contract": "NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol:FRAXOracleWrapper",
								"label": "PRICE_PRECISION",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 262,
								"contract": "NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol:FRAXOracleWrapper",
								"label": "EXTRA_PRECISION",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 264,
								"contract": "NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol:FRAXOracleWrapper",
								"label": "timelock_address",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(AggregatorV3Interface)241": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"NewFraxProtocol/contracts/Staking/Owned.sol": {
				"Owned": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerNominated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "nominateNewOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nominatedOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":117:1037  contract Owned {... */\n  mstore(0x40, 0x80)\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":200:382  constructor (address _owner) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":254:274  _owner != address(0) */\n  dup2\n  and\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":246:304  require(_owner != address(0), \"Owner address cannot be 0\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":511:513   */\n  0x20\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":246:304  require(_owner != address(0), \"Owner address cannot be 0\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":493:514   */\n  mstore\n    /* \"#utility.yul\":550:552   */\n  0x19\n    /* \"#utility.yul\":530:548   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":523:553   */\n  mstore\n    /* \"#utility.yul\":589:616   */\n  0x4f776e657220616464726573732063616e6e6f74206265203000000000000000\n    /* \"#utility.yul\":569:587   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":562:617   */\n  mstore\n    /* \"#utility.yul\":634:652   */\n  0x64\n  add\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":246:304  require(_owner != address(0), \"Owner address cannot be 0\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":314:319  owner */\n  0x00\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":314:328  owner = _owner */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":343:375  OwnerChanged(address(0), _owner) */\n  0x40\n  dup1\n  mload\n    /* \"#utility.yul\":875:909   */\n  swap3\n  dup4\n  mstore\n    /* \"#utility.yul\":940:942   */\n  0x20\n    /* \"#utility.yul\":925:943   */\n  dup4\n  add\n    /* \"#utility.yul\":918:961   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":343:375  OwnerChanged(address(0), _owner) */\n  0xb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c\n  swap2\n    /* \"#utility.yul\":810:828   */\n  add\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":343:375  OwnerChanged(address(0), _owner) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":200:382  constructor (address _owner) public {... */\n  pop\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":117:1037  contract Owned {... */\n  jump(tag_12)\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_14\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_14:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_15\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_15:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":663:967   */\ntag_12:\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":117:1037  contract Owned {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":117:1037  contract Owned {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1627540c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x53a47bb7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x79ba5097\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":388:526  function nominateNewOwner(address _owner) external onlyOwner {... */\n    tag_3:\n      tag_7\n      tag_8\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      stop\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":164:193  address public nominatedOwner */\n    tag_4:\n      sload(0x01)\n      tag_11\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_11:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":469:501   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":451:502   */\n      dup2\n      mstore\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":164:193  address public nominatedOwner */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":532:798  function acceptOwnership() external {... */\n    tag_5:\n      tag_7\n      tag_16\n      jump\t// in\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":138:158  address public owner */\n    tag_6:\n      sload(0x00)\n      tag_11\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":388:526  function nominateNewOwner(address _owner) external onlyOwner {... */\n    tag_10:\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":855:860  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":841:851  msg.sender */\n      caller\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":841:860  msg.sender == owner */\n      eq\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":833:912  require(msg.sender == owner, \"Only the contract owner may perform this action\") */\n      tag_21\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":715:717   */\n      0x20\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":833:912  require(msg.sender == owner, \"Only the contract owner may perform this action\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":697:718   */\n      mstore\n        /* \"#utility.yul\":754:756   */\n      0x2f\n        /* \"#utility.yul\":734:752   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":727:757   */\n      mstore\n        /* \"#utility.yul\":793:827   */\n      0x4f6e6c792074686520636f6e7472616374206f776e6572206d61792070657266\n        /* \"#utility.yul\":773:791   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":766:828   */\n      mstore\n      shl(0x89, 0x37b936903a3434b99030b1ba34b7b7)\n        /* \"#utility.yul\":844:862   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":837:882   */\n      mstore\n        /* \"#utility.yul\":899:918   */\n      0x84\n      add\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":833:912  require(msg.sender == owner, \"Only the contract owner may perform this action\") */\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_21:\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":459:473  nominatedOwner */\n      0x01\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":459:482  nominatedOwner = _owner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":497:519  OwnerNominated(_owner) */\n      mload(0x40)\n        /* \"#utility.yul\":451:502   */\n      swap1\n      dup2\n      mstore\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":497:519  OwnerNominated(_owner) */\n      0x906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce22\n      swap1\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":497:519  OwnerNominated(_owner) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":388:526  function nominateNewOwner(address _owner) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":532:798  function acceptOwnership() external {... */\n    tag_16:\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":600:614  nominatedOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":586:596  msg.sender */\n      caller\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":586:614  msg.sender == nominatedOwner */\n      eq\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":578:672  require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\") */\n      tag_27\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1131:1133   */\n      0x20\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":578:672  require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1113:1134   */\n      mstore\n        /* \"#utility.yul\":1170:1172   */\n      0x35\n        /* \"#utility.yul\":1150:1168   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1143:1173   */\n      mstore\n        /* \"#utility.yul\":1209:1243   */\n      0x596f75206d757374206265206e6f6d696e61746564206265666f726520796f75\n        /* \"#utility.yul\":1189:1207   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1182:1244   */\n      mstore\n      shl(0x5c, 0x02063616e20616363657074206f776e65727368697)\n        /* \"#utility.yul\":1260:1278   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1253:1304   */\n      mstore\n        /* \"#utility.yul\":1321:1340   */\n      0x84\n      add\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":578:672  require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\") */\n      tag_22\n        /* \"#utility.yul\":929:1346   */\n      jump\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":578:672  require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\") */\n    tag_27:\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":700:705  owner */\n      sload(0x00)\n      0x01\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":707:721  nominatedOwner */\n      sload\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":687:722  OwnerChanged(owner, nominatedOwner) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":700:705  owner */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":1563:1597   */\n      dup2\n      mstore\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":707:721  nominatedOwner */\n      swap3\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1628:1630   */\n      0x20\n        /* \"#utility.yul\":1613:1631   */\n      dup4\n      add\n        /* \"#utility.yul\":1606:1649   */\n      mstore\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":687:722  OwnerChanged(owner, nominatedOwner) */\n      0xb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c\n      swap2\n        /* \"#utility.yul\":1498:1516   */\n      add\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":687:722  OwnerChanged(owner, nominatedOwner) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":740:754  nominatedOwner */\n      0x01\n      dup1\n      sload\n      0x00\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":732:754  owner = nominatedOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":740:754  nominatedOwner */\n      dup5\n      and\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":732:754  owner = nominatedOwner */\n      or\n      swap1\n      swap2\n      sstore\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":764:791  nominatedOwner = address(0) */\n      and\n      swap1\n      sstore\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":532:798  function acceptOwnership() external {... */\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_9:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_34\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_34:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_35\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_35:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208f9cd1993cea0476260708e7a68db6c3ff669c1ad9909b04bfe43a65a166b5b664736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_477": {
									"entryPoint": null,
									"id": 477,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cbb17bca9ae641614fb20d9f081dbba535c7a48d3eadd7b25242a97252df8c96__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:969:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:4"
															},
															"nodeType": "YulIf",
															"src": "105:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:4"
															},
															"nodeType": "YulIf",
															"src": "204:70:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:4",
														"type": ""
													}
												],
												"src": "14:290:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "483:175:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "500:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "511:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "493:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "493:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "534:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "545:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "530:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "530:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "550:2:4",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "523:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "573:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "584:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "569:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "569:18:4"
																	},
																	{
																		"hexValue": "4f776e657220616464726573732063616e6e6f742062652030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "589:27:4",
																		"type": "",
																		"value": "Owner address cannot be 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:55:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "562:55:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "626:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "638:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "649:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "634:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "634:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "626:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cbb17bca9ae641614fb20d9f081dbba535c7a48d3eadd7b25242a97252df8c96__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "460:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "474:4:4",
														"type": ""
													}
												],
												"src": "309:349:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "792:175:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "802:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "814:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "825:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "810:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "810:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "802:4:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "837:29:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "855:3:4",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "860:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "851:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "851:11:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "864:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "847:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:19:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "841:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "882:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "897:6:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "905:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "893:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "893:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "875:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "875:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "875:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "929:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "940:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "925:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "925:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "949:6:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "957:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "945:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "945:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "918:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "918:43:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "918:43:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "753:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "764:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "772:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "783:4:4",
														"type": ""
													}
												],
												"src": "663:304:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_cbb17bca9ae641614fb20d9f081dbba535c7a48d3eadd7b25242a97252df8c96__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Owner address cannot be 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516103f03803806103f083398101604081905261002f916100e6565b6001600160a01b0381166100895760405162461bcd60e51b815260206004820152601960248201527f4f776e657220616464726573732063616e6e6f74206265203000000000000000604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b03831690811782556040805192835260208301919091527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a150610116565b6000602082840312156100f857600080fd5b81516001600160a01b038116811461010f57600080fd5b9392505050565b6102cb806101256000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631627540c1461005157806353a47bb71461006657806379ba5097146100955780638da5cb5b1461009d575b600080fd5b61006461005f366004610265565b6100b0565b005b600154610079906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61006461017b565b600054610079906001600160a01b031681565b6000546001600160a01b031633146101275760405162461bcd60e51b815260206004820152602f60248201527f4f6e6c792074686520636f6e7472616374206f776e6572206d6179207065726660448201526e37b936903a3434b99030b1ba34b7b760891b60648201526084015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce229060200160405180910390a150565b6001546001600160a01b031633146101f35760405162461bcd60e51b815260206004820152603560248201527f596f75206d757374206265206e6f6d696e61746564206265666f726520796f7560448201527402063616e20616363657074206f776e65727368697605c1b606482015260840161011e565b600054600154604080516001600160a01b0393841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b60006020828403121561027757600080fd5b81356001600160a01b038116811461028e57600080fd5b939250505056fea26469706673582212208f9cd1993cea0476260708e7a68db6c3ff669c1ad9909b04bfe43a65a166b5b664736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3F0 CODESIZE SUB DUP1 PUSH2 0x3F0 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xE6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E657220616464726573732063616E6E6F74206265203000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x116 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2CB DUP1 PUSH2 0x125 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1627540C EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x53A47BB7 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x265 JUMP JUMPDEST PUSH2 0xB0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x79 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH2 0x17B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x79 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x127 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792074686520636F6E7472616374206F776E6572206D61792070657266 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x37B936903A3434B99030B1BA34B7B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206D757374206265206E6F6D696E61746564206265666F726520796F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x2063616E20616363657074206F776E65727368697 PUSH1 0x5C SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x11E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 SWAP13 0xD1 SWAP10 EXTCODECOPY 0xEA DIV PUSH23 0x260708E7A68DB6C3FF669C1AD9909B04BFE43A65A166B5 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "117:920:3:-:0;;;200:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;254:20:3;;246:58;;;;-1:-1:-1;;;246:58:3;;511:2:4;246:58:3;;;493:21:4;550:2;530:18;;;523:30;589:27;569:18;;;562:55;634:18;;246:58:3;;;;;;;;314:5;:14;;-1:-1:-1;;;;;;314:14:3;-1:-1:-1;;;;;314:14:3;;;;;;;343:32;;;875:34:4;;;940:2;925:18;;918:43;;;;343:32:3;;810:18:4;343:32:3;;;;;;;200:182;117:920;;14:290:4;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:4;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:4:o;663:304::-;117:920:3;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@acceptOwnership_521": {
									"entryPoint": 379,
									"id": 521,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nominateNewOwner_493": {
									"entryPoint": 176,
									"id": 493,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@nominatedOwner_449": {
									"entryPoint": null,
									"id": 449,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_447": {
									"entryPoint": null,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1657:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:216:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:4"
															},
															"nodeType": "YulIf",
															"src": "94:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "239:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "244:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "248:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:50:4"
															},
															"nodeType": "YulIf",
															"src": "200:70:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:4",
														"type": ""
													}
												],
												"src": "14:286:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "406:102:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "416:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "428:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "439:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "424:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "424:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "416:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "458:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "473:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "489:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "494:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "485:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "485:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "498:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "481:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "481:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "469:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "469:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "451:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "451:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "451:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "375:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "386:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "397:4:4",
														"type": ""
													}
												],
												"src": "305:203:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "687:237:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "704:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "715:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "697:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "697:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "697:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "738:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "749:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "734:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "734:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "754:2:4",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "727:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "727:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "727:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "777:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "788:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:18:4"
																	},
																	{
																		"hexValue": "4f6e6c792074686520636f6e7472616374206f776e6572206d61792070657266",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "793:34:4",
																		"type": "",
																		"value": "Only the contract owner may perf"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "766:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "766:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "766:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "848:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "859:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "844:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "844:18:4"
																	},
																	{
																		"hexValue": "6f726d207468697320616374696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "864:17:4",
																		"type": "",
																		"value": "orm this action"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "837:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "837:45:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "837:45:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "891:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "903:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "914:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "899:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "899:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "891:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "664:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "678:4:4",
														"type": ""
													}
												],
												"src": "513:411:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1103:243:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1120:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1131:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1113:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1113:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1113:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1154:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1165:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1150:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1150:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1170:2:4",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1143:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1143:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1143:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1193:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1204:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1189:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1189:18:4"
																	},
																	{
																		"hexValue": "596f75206d757374206265206e6f6d696e61746564206265666f726520796f75",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1209:34:4",
																		"type": "",
																		"value": "You must be nominated before you"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1182:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1182:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1182:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1264:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1275:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1260:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1260:18:4"
																	},
																	{
																		"hexValue": "2063616e20616363657074206f776e657273686970",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1280:23:4",
																		"type": "",
																		"value": " can accept ownership"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1253:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1253:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1253:51:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1313:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1325:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1336:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1321:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1321:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1313:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1080:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1094:4:4",
														"type": ""
													}
												],
												"src": "929:417:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1480:175:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1490:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1502:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1513:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1498:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1490:4:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1525:29:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1543:3:4",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1548:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1539:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1539:11:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1535:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1535:19:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1529:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1570:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1585:6:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1593:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1581:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1581:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1563:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1563:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1617:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1628:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1613:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1613:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "1637:6:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1645:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1633:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1633:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1606:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1606:43:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1606:43:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1441:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1452:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1460:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1471:4:4",
														"type": ""
													}
												],
												"src": "1351:304:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"Only the contract owner may perf\")\n        mstore(add(headStart, 96), \"orm this action\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"You must be nominated before you\")\n        mstore(add(headStart, 96), \" can accept ownership\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80631627540c1461005157806353a47bb71461006657806379ba5097146100955780638da5cb5b1461009d575b600080fd5b61006461005f366004610265565b6100b0565b005b600154610079906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61006461017b565b600054610079906001600160a01b031681565b6000546001600160a01b031633146101275760405162461bcd60e51b815260206004820152602f60248201527f4f6e6c792074686520636f6e7472616374206f776e6572206d6179207065726660448201526e37b936903a3434b99030b1ba34b7b760891b60648201526084015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce229060200160405180910390a150565b6001546001600160a01b031633146101f35760405162461bcd60e51b815260206004820152603560248201527f596f75206d757374206265206e6f6d696e61746564206265666f726520796f7560448201527402063616e20616363657074206f776e65727368697605c1b606482015260840161011e565b600054600154604080516001600160a01b0393841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b60006020828403121561027757600080fd5b81356001600160a01b038116811461028e57600080fd5b939250505056fea26469706673582212208f9cd1993cea0476260708e7a68db6c3ff669c1ad9909b04bfe43a65a166b5b664736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1627540C EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x53A47BB7 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x265 JUMP JUMPDEST PUSH2 0xB0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x79 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH2 0x17B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x79 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x127 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792074686520636F6E7472616374206F776E6572206D61792070657266 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x37B936903A3434B99030B1BA34B7B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206D757374206265206E6F6D696E61746564206265666F726520796F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x2063616E20616363657074206F776E65727368697 PUSH1 0x5C SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x11E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 SWAP13 0xD1 SWAP10 EXTCODECOPY 0xEA DIV PUSH23 0x260708E7A68DB6C3FF669C1AD9909B04BFE43A65A166B5 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "117:920:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;388:138;;;;;;:::i;:::-;;:::i;:::-;;164:29;;;;;-1:-1:-1;;;;;164:29:3;;;;;;-1:-1:-1;;;;;469:32:4;;;451:51;;439:2;424:18;164:29:3;;;;;;;532:266;;;:::i;138:20::-;;;;;-1:-1:-1;;;;;138:20:3;;;388:138;855:5;;-1:-1:-1;;;;;855:5:3;841:10;:19;833:79;;;;-1:-1:-1;;;833:79:3;;715:2:4;833:79:3;;;697:21:4;754:2;734:18;;;727:30;793:34;773:18;;;766:62;-1:-1:-1;;;844:18:4;;;837:45;899:19;;833:79:3;;;;;;;;;459:14:::1;:23:::0;;-1:-1:-1;;;;;;459:23:3::1;-1:-1:-1::0;;;;;459:23:3;::::1;::::0;;::::1;::::0;;;497:22:::1;::::0;451:51:4;;;497:22:3::1;::::0;439:2:4;424:18;497:22:3::1;;;;;;;388:138:::0;:::o;532:266::-;600:14;;-1:-1:-1;;;;;600:14:3;586:10;:28;578:94;;;;-1:-1:-1;;;578:94:3;;1131:2:4;578:94:3;;;1113:21:4;1170:2;1150:18;;;1143:30;1209:34;1189:18;;;1182:62;-1:-1:-1;;;1260:18:4;;;1253:51;1321:19;;578:94:3;929:417:4;578:94:3;700:5;;;707:14;687:35;;;-1:-1:-1;;;;;700:5:3;;;1563:34:4;;707:14:3;;;;1628:2:4;1613:18;;1606:43;687:35:3;;1498:18:4;687:35:3;;;;;;;740:14;;;;732:22;;-1:-1:-1;;;;;;732:22:3;;;-1:-1:-1;;;;;740:14:3;;732:22;;;;764:27;;;532:266::o;14:286:4:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:4;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:4:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "143000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptOwnership()": "56348",
								"nominateNewOwner(address)": "27707",
								"nominatedOwner()": "2325",
								"owner()": "2369"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 117,
									"end": 1037,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 117,
									"end": 1037,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 117,
									"end": 1037,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 200,
									"end": 382,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 382,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 200,
									"end": 382,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 200,
									"end": 382,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 200,
									"end": 382,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 200,
									"end": 382,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 200,
									"end": 382,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 200,
									"end": 382,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 200,
									"end": 382,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 254,
									"end": 274,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 254,
									"end": 274,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 246,
									"end": 304,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 246,
									"end": 304,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 246,
									"end": 304,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 511,
									"end": 513,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 246,
									"end": 304,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 246,
									"end": 304,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 493,
									"end": 514,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 550,
									"end": 552,
									"name": "PUSH",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 530,
									"end": 548,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 530,
									"end": 548,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 530,
									"end": 548,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 523,
									"end": 553,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 589,
									"end": 616,
									"name": "PUSH",
									"source": 4,
									"value": "4F776E657220616464726573732063616E6E6F74206265203000000000000000"
								},
								{
									"begin": 569,
									"end": 587,
									"name": "PUSH",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 569,
									"end": 587,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 569,
									"end": 587,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 562,
									"end": 617,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 634,
									"end": 652,
									"name": "PUSH",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 634,
									"end": 652,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 246,
									"end": 304,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 246,
									"end": 304,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 246,
									"end": 304,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 314,
									"end": 319,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 328,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 314,
									"end": 328,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 314,
									"end": 328,
									"name": "AND",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 314,
									"end": 328,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 314,
									"end": 328,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 314,
									"end": 328,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 314,
									"end": 328,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 314,
									"end": 328,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 314,
									"end": 328,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 314,
									"end": 328,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 343,
									"end": 375,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 343,
									"end": 375,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 343,
									"end": 375,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 875,
									"end": 909,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 875,
									"end": 909,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 875,
									"end": 909,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 940,
									"end": 942,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 925,
									"end": 943,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 925,
									"end": 943,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 918,
									"end": 961,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 918,
									"end": 961,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 918,
									"end": 961,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 918,
									"end": 961,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 343,
									"end": 375,
									"name": "PUSH",
									"source": 3,
									"value": "B532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C"
								},
								{
									"begin": 343,
									"end": 375,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 810,
									"end": 828,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 343,
									"end": 375,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 343,
									"end": 375,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 343,
									"end": 375,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 343,
									"end": 375,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 343,
									"end": 375,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 343,
									"end": 375,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 343,
									"end": 375,
									"name": "LOG1",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 117,
									"end": 1037,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 117,
									"end": 1037,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 663,
									"end": 967,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 663,
									"end": 967,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 117,
									"end": 1037,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 1037,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 117,
									"end": 1037,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 1037,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 1037,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 117,
									"end": 1037,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 1037,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208f9cd1993cea0476260708e7a68db6c3ff669c1ad9909b04bfe43a65a166b5b664736f6c63430008090033",
									".code": [
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "1627540C"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "53A47BB7"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "79BA5097"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 388,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 388,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 388,
											"end": 526,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 388,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 388,
											"end": 526,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 164,
											"end": 193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 164,
											"end": 193,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 164,
											"end": 193,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 164,
											"end": 193,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 164,
											"end": 193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 164,
											"end": 193,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 469,
											"end": 501,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 469,
											"end": 501,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 469,
											"end": 501,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 451,
											"end": 502,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 451,
											"end": 502,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 164,
											"end": 193,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 164,
											"end": 193,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 532,
											"end": 798,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 532,
											"end": 798,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 532,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 532,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 532,
											"end": 798,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 138,
											"end": 158,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 138,
											"end": 158,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 138,
											"end": 158,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 158,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 138,
											"end": 158,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 138,
											"end": 158,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 138,
											"end": 158,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 138,
											"end": 158,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 138,
											"end": 158,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 388,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 855,
											"end": 860,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 855,
											"end": 860,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 855,
											"end": 860,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 841,
											"end": 851,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 841,
											"end": 860,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 833,
											"end": 912,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 833,
											"end": 912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 833,
											"end": 912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 833,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 833,
											"end": 912,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 697,
											"end": 718,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 754,
											"end": 756,
											"name": "PUSH",
											"source": 4,
											"value": "2F"
										},
										{
											"begin": 734,
											"end": 752,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 734,
											"end": 752,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 734,
											"end": 752,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 727,
											"end": 757,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 793,
											"end": 827,
											"name": "PUSH",
											"source": 4,
											"value": "4F6E6C792074686520636F6E7472616374206F776E6572206D61792070657266"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 773,
											"end": 791,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 766,
											"end": 828,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37B936903A3434B99030B1BA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 844,
											"end": 862,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 844,
											"end": 862,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 844,
											"end": 862,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 837,
											"end": 882,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 899,
											"end": 918,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 899,
											"end": 918,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 833,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 833,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 833,
											"end": 912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 833,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 459,
											"end": 473,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 459,
											"end": 482,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 459,
											"end": 482,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 459,
											"end": 482,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 459,
											"end": 482,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 459,
											"end": 482,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 459,
											"end": 482,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 459,
											"end": 482,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 459,
											"end": 482,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 459,
											"end": 482,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 459,
											"end": 482,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 459,
											"end": 482,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 497,
											"end": 519,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 519,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 451,
											"end": 502,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 451,
											"end": 502,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 451,
											"end": 502,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 497,
											"end": 519,
											"name": "PUSH",
											"source": 3,
											"value": "906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22"
										},
										{
											"begin": 497,
											"end": 519,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 497,
											"end": 519,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 519,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 497,
											"end": 519,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 497,
											"end": 519,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 497,
											"end": 519,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 497,
											"end": 519,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 497,
											"end": 519,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 388,
											"end": 526,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 388,
											"end": 526,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 532,
											"end": 798,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 532,
											"end": 798,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 600,
											"end": 614,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 600,
											"end": 614,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 600,
											"end": 614,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 586,
											"end": 596,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 586,
											"end": 614,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 578,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 578,
											"end": 672,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 578,
											"end": 672,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 578,
											"end": 672,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 578,
											"end": 672,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 578,
											"end": 672,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1133,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 578,
											"end": 672,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 578,
											"end": 672,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 578,
											"end": 672,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1113,
											"end": 1134,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1170,
											"end": 1172,
											"name": "PUSH",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1150,
											"end": 1168,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1150,
											"end": 1168,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1150,
											"end": 1168,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1173,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1243,
											"name": "PUSH",
											"source": 4,
											"value": "596F75206D757374206265206E6F6D696E61746564206265666F726520796F75"
										},
										{
											"begin": 1189,
											"end": 1207,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1189,
											"end": 1207,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1189,
											"end": 1207,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1244,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2063616E20616363657074206F776E65727368697"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1253,
											"end": 1304,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 1340,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1321,
											"end": 1340,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 578,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 929,
											"end": 1346,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 578,
											"end": 672,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 578,
											"end": 672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 700,
											"end": 705,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 700,
											"end": 705,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 700,
											"end": 705,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 707,
											"end": 721,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 687,
											"end": 722,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 687,
											"end": 722,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 687,
											"end": 722,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 700,
											"end": 705,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 700,
											"end": 705,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 700,
											"end": 705,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1597,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1563,
											"end": 1597,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 707,
											"end": 721,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 707,
											"end": 721,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 707,
											"end": 721,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 707,
											"end": 721,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1630,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1613,
											"end": 1631,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 1631,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1649,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 687,
											"end": 722,
											"name": "PUSH",
											"source": 3,
											"value": "B532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C"
										},
										{
											"begin": 687,
											"end": 722,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 687,
											"end": 722,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 687,
											"end": 722,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 687,
											"end": 722,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 687,
											"end": 722,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 687,
											"end": 722,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 687,
											"end": 722,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 687,
											"end": 722,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 740,
											"end": 754,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 740,
											"end": 754,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 740,
											"end": 754,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 740,
											"end": 754,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 754,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 732,
											"end": 754,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 732,
											"end": 754,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 732,
											"end": 754,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 732,
											"end": 754,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 740,
											"end": 754,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 740,
											"end": 754,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 732,
											"end": 754,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 732,
											"end": 754,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 732,
											"end": 754,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 732,
											"end": 754,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 764,
											"end": 791,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 764,
											"end": 791,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 764,
											"end": 791,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 532,
											"end": 798,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"nominateNewOwner(address)": "1627540c",
							"nominatedOwner()": "53a47bb7",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerNominated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"nominateNewOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nominatedOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NewFraxProtocol/contracts/Staking/Owned.sol\":\"Owned\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"NewFraxProtocol/contracts/Staking/Owned.sol\":{\"keccak256\":\"0x89e1dde7e13d0109febf812e7d97dda7f24feb7cfe90239c0f7585d1143407d1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://917add49808f1df4025a7a33e8444661261ebf3ea9f02bcd44c698b1c1e4e7e6\",\"dweb:/ipfs/QmVSVA3swHsqEy5F2n8YBGB91cL66xVkJCezkjY9VAjnwE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 447,
								"contract": "NewFraxProtocol/contracts/Staking/Owned.sol:Owned",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 449,
								"contract": "NewFraxProtocol/contracts/Staking/Owned.sol:Owned",
								"label": "nominatedOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n --> NewFraxProtocol/contracts/Staking/Owned.sol:9:5:\n  |\n9 |     constructor (address _owner) public {\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 382,
					"file": "NewFraxProtocol/contracts/Staking/Owned.sol",
					"start": 200
				},
				"type": "Warning"
			}
		],
		"sources": {
			"NewFraxProtocol/contracts/Math/SafeMath.sol": {
				"ast": {
					"absolutePath": "NewFraxProtocol/contracts/Math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							195
						]
					},
					"id": 196,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "32:25:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "59:563:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 195,
							"linearizedBaseContracts": [
								195
							],
							"name": "SafeMath",
							"nameLocation": "631:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "935:109:0",
										"statements": [
											{
												"assignments": [
													13
												],
												"declarations": [
													{
														"constant": false,
														"id": 13,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "953:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 27,
														"src": "945:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 12,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "945:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 17,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 14,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "957:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 15,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "961:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "957:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "945:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 19,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "980:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 20,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "985:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "980:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "988:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 18,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "972:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "972:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "972:46:0"
											},
											{
												"expression": {
													"id": 25,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 13,
													"src": "1036:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 11,
												"id": 26,
												"nodeType": "Return",
												"src": "1029:8:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "646:217:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "877:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "889:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "881:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "900:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "892:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "880:22:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "926:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:0"
									},
									"scope": 195,
									"src": "868:176:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "1375:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 39,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "1396:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 40,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "1399:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1402:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 38,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															45,
															73
														],
														"referencedDeclaration": 73,
														"src": "1392:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1392:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 37,
												"id": 43,
												"nodeType": "Return",
												"src": "1385:50:0"
											}
										]
									},
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "1050:253:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 45,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1317:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1329:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1321:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1340:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1332:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1320:22:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1366:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1365:9:0"
									},
									"scope": 195,
									"src": "1308:134:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "1861:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 58,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "1879:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 59,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "1884:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1879:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 61,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "1887:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 57,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1871:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1871:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "1871:29:0"
											},
											{
												"assignments": [
													65
												],
												"declarations": [
													{
														"constant": false,
														"id": 65,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1918:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 72,
														"src": "1910:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 64,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1910:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 69,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 66,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "1922:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 67,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "1926:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1922:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1910:17:0"
											},
											{
												"expression": {
													"id": 70,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 65,
													"src": "1945:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 56,
												"id": 71,
												"nodeType": "Return",
												"src": "1938:8:0"
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1448:313:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow.\n _Available since v2.4.0._"
									},
									"id": 73,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1775:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1787:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1779:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1798:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1790:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1815:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1801:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 51,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1801:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:50:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1852:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1851:9:0"
									},
									"scope": 195,
									"src": "1766:187:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "2260:392:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 83,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "2492:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2497:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2492:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 89,
												"nodeType": "IfStatement",
												"src": "2488:45:0",
												"trueBody": {
													"id": 88,
													"nodeType": "Block",
													"src": "2500:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2521:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 82,
															"id": 87,
															"nodeType": "Return",
															"src": "2514:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													91
												],
												"declarations": [
													{
														"constant": false,
														"id": 91,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2551:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 107,
														"src": "2543:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 90,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2543:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 95,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 92,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "2555:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 93,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 78,
														"src": "2559:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2555:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2543:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 97,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "2578:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 98,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 76,
																	"src": "2582:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2578:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 100,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "2587:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2578:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2590:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 96,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2570:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2570:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2570:56:0"
											},
											{
												"expression": {
													"id": 105,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 91,
													"src": "2644:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 82,
												"id": 106,
												"nodeType": "Return",
												"src": "2637:8:0"
											}
										]
									},
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "1959:229:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "2202:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2214:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "2206:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2225:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "2217:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2217:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2205:22:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "2251:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 80,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2251:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2250:9:0"
									},
									"scope": 195,
									"src": "2193:459:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "3174:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 119,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "3195:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 120,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "3198:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3201:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 118,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															125,
															153
														],
														"referencedDeclaration": 153,
														"src": "3191:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3191:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 117,
												"id": 123,
												"nodeType": "Return",
												"src": "3184:46:0"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "2658:444:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3116:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3128:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "3120:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3120:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3139:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "3131:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3131:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3119:22:0"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "3165:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:9:0"
									},
									"scope": 195,
									"src": "3107:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "3847:243:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 138,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "3931:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3935:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3931:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 141,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "3938:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 137,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3923:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3923:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "3923:28:0"
											},
											{
												"assignments": [
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "3969:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "3961:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 144,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3961:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 149,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 146,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "3973:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 147,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "3977:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3973:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3961:17:0"
											},
											{
												"expression": {
													"id": 150,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 145,
													"src": "4082:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 136,
												"id": 151,
												"nodeType": "Return",
												"src": "4075:8:0"
											}
										]
									},
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "3243:504:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3761:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3773:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3765:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3784:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3776:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3776:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3801:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3787:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 131,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3787:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3764:50:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3838:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3838:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3837:9:0"
									},
									"scope": 195,
									"src": "3752:338:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "4601:61:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 164,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "4622:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 165,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "4625:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4628:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 163,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															170,
															194
														],
														"referencedDeclaration": 194,
														"src": "4618:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 162,
												"id": 168,
												"nodeType": "Return",
												"src": "4611:44:0"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "4096:433:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4543:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4555:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4547:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4566:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4558:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4546:22:0"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4592:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4592:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4591:9:0"
									},
									"scope": 195,
									"src": "4534:128:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "5261:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 183,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 175,
																"src": "5279:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5284:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5279:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 186,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "5287:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 182,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5271:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5271:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5271:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 189,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "5317:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 190,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "5321:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5317:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 181,
												"id": 192,
												"nodeType": "Return",
												"src": "5310:12:0"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "4668:493:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "5175:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5187:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "5179:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5179:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5198:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "5190:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5190:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5215:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "5201:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5201:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5178:50:0"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "5252:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5252:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5251:9:0"
									},
									"scope": 195,
									"src": "5166:163:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 196,
							"src": "623:4708:0",
							"usedErrors": []
						}
					],
					"src": "32:5299:0"
				},
				"id": 0
			},
			"NewFraxProtocol/contracts/Oracle/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "NewFraxProtocol/contracts/Oracle/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							241
						]
					},
					"id": 242,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 197,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 241,
							"linearizedBaseContracts": [
								241
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "68:21:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "104:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "112:2:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "138:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 199,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "138:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "137:7:1"
									},
									"scope": 241,
									"src": "95:50:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "157:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "168:2:1"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "194:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 204,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "194:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "193:15:1"
									},
									"scope": 241,
									"src": "148:61:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "254:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:1"
									},
									"scope": 241,
									"src": "212:51:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "487:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "507:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "500:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 213,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "500:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:17:1"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "566:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "559:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 216,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "559:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "588:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "581:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 218,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "581:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "610:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "602:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "635:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "627:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "659:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "652:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 224,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "652:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "551:129:1"
									},
									"scope": 241,
									"src": "478:203:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 240,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "693:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "708:2:1"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "760:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "753:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 229,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "753:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "782:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "775:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 231,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "775:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "804:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "796:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "829:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "821:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "853:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "846:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 237,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "846:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:129:1"
									},
									"scope": 241,
									"src": "684:191:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 242,
							"src": "58:820:1",
							"usedErrors": []
						}
					],
					"src": "32:846:1"
				},
				"id": 1
			},
			"NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol": {
				"ast": {
					"absolutePath": "NewFraxProtocol/contracts/Oracle/FRAXOracleWrapper.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							241
						],
						"FRAXOracleWrapper": [
							443
						],
						"Owned": [
							544
						],
						"SafeMath": [
							195
						]
					},
					"id": 444,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 243,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "45:25:2"
						},
						{
							"absolutePath": "NewFraxProtocol/contracts/Math/SafeMath.sol",
							"file": "../Math/SafeMath.sol",
							"id": 244,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 444,
							"sourceUnit": 196,
							"src": "1168:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "NewFraxProtocol/contracts/Oracle/AggregatorV3Interface.sol",
							"file": "./AggregatorV3Interface.sol",
							"id": 245,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 444,
							"sourceUnit": 242,
							"src": "1199:37:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "NewFraxProtocol/contracts/Staking/Owned.sol",
							"file": "../Staking/Owned.sol",
							"id": 246,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 444,
							"sourceUnit": 545,
							"src": "1237:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 247,
										"name": "Owned",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 544,
										"src": "1299:5:2"
									},
									"id": 248,
									"nodeType": "InheritanceSpecifier",
									"src": "1299:5:2"
								}
							],
							"canonicalName": "FRAXOracleWrapper",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 443,
							"linearizedBaseContracts": [
								443,
								544
							],
							"name": "FRAXOracleWrapper",
							"nameLocation": "1278:17:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 251,
									"libraryName": {
										"id": 249,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 195,
										"src": "1317:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "1311:27:2",
									"typeName": {
										"id": 250,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1330:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 254,
									"mutability": "mutable",
									"name": "priceFeedFRAXETH",
									"nameLocation": "1374:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 443,
									"src": "1344:46:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 253,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 252,
											"name": "AggregatorV3Interface",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 241,
											"src": "1344:21:2"
										},
										"referencedDeclaration": 241,
										"src": "1344:21:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "1e47ba5c",
									"id": 256,
									"mutability": "mutable",
									"name": "chainlink_frax_eth_decimals",
									"nameLocation": "1412:27:2",
									"nodeType": "VariableDeclaration",
									"scope": 443,
									"src": "1397:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 255,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1397:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "95082d25",
									"id": 259,
									"mutability": "mutable",
									"name": "PRICE_PRECISION",
									"nameLocation": "1461:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 443,
									"src": "1446:36:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 257,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1446:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "316536",
										"id": 258,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1479:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000_by_1",
											"typeString": "int_const 1000000"
										},
										"value": "1e6"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ffaa3b23",
									"id": 262,
									"mutability": "mutable",
									"name": "EXTRA_PRECISION",
									"nameLocation": "1503:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 443,
									"src": "1488:36:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 260,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1488:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "316536",
										"id": 261,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1521:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000_by_1",
											"typeString": "int_const 1000000"
										},
										"value": "1e6"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dc6663c7",
									"id": 264,
									"mutability": "mutable",
									"name": "timelock_address",
									"nameLocation": "1545:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 443,
									"src": "1530:31:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 263,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1530:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "1635:115:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 267,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1653:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1653:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 269,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 447,
																	"src": "1667:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1653:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 271,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1676:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1676:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 273,
																	"name": "timelock_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 264,
																	"src": "1690:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1676:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1653:53:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206f776e6572206f722074696d656c6f636b",
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1708:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2341f105161714f01185492f4233d98f530a1e8435cfd3bb617e411e8f94580d",
																"typeString": "literal_string \"Not owner or timelock\""
															},
															"value": "Not owner or timelock"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2341f105161714f01185492f4233d98f530a1e8435cfd3bb617e411e8f94580d",
																"typeString": "literal_string \"Not owner or timelock\""
															}
														],
														"id": 266,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1645:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1645:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 278,
												"nodeType": "ExpressionStatement",
												"src": "1645:87:2"
											},
											{
												"id": 279,
												"nodeType": "PlaceholderStatement",
												"src": "1742:1:2"
											}
										]
									},
									"id": 281,
									"name": "onlyByOwnGov",
									"nameLocation": "1620:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1632:2:2"
									},
									"src": "1611:139:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "1913:237:2",
										"statements": [
											{
												"expression": {
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 291,
														"name": "timelock_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "1923:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 292,
														"name": "_timelock_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 285,
														"src": "1942:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1923:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "1923:36:2"
											},
											{
												"expression": {
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 295,
														"name": "priceFeedFRAXETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "1992:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307835353137313744304434383364333861333032664134653438353731343530343736353937456636",
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2033:42:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x551717D0D483d38a302fA4e48571450476597Ef6"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 296,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "2011:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$241_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 298,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2011:65:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "1992:84:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "1992:84:2"
											},
											{
												"expression": {
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 301,
														"name": "chainlink_frax_eth_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "2086:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 302,
																"name": "priceFeedFRAXETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "2116:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
																	"typeString": "contract AggregatorV3Interface"
																}
															},
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "decimals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 202,
															"src": "2116:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																"typeString": "function () view external returns (uint8)"
															}
														},
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2116:27:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "2086:57:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "2086:57:2"
											}
										]
									},
									"id": 308,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 288,
													"name": "_creator_address",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 283,
													"src": "1895:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 289,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 287,
												"name": "Owned",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 544,
												"src": "1889:5:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1889:23:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "_creator_address",
												"nameLocation": "1831:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "1823:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1823:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "_timelock_address",
												"nameLocation": "1865:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "1857:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1857:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:75:2"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1913:0:2"
									},
									"scope": 443,
									"src": "1801:349:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "2282:503:2",
										"statements": [
											{
												"assignments": [
													316,
													318,
													null,
													320,
													322
												],
												"declarations": [
													{
														"constant": false,
														"id": 316,
														"mutability": "mutable",
														"name": "roundID",
														"nameLocation": "2300:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 381,
														"src": "2293:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														},
														"typeName": {
															"id": 315,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "2293:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint80",
																"typeString": "uint80"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 318,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "2313:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 381,
														"src": "2309:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 317,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "2309:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													{
														"constant": false,
														"id": 320,
														"mutability": "mutable",
														"name": "updatedAt",
														"nameLocation": "2330:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 381,
														"src": "2322:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 319,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2322:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 322,
														"mutability": "mutable",
														"name": "answeredInRound",
														"nameLocation": "2348:15:2",
														"nodeType": "VariableDeclaration",
														"scope": 381,
														"src": "2341:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														},
														"typeName": {
															"id": 321,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "2341:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint80",
																"typeString": "uint80"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 326,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 323,
															"name": "priceFeedFRAXETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "2367:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 240,
														"src": "2367:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2367:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2292:109:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 328,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "2419:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2428:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "2419:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 331,
																		"name": "updatedAt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 320,
																		"src": "2433:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2445:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "2433:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2419:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint80",
																	"typeString": "uint80"
																},
																"id": 337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 335,
																	"name": "answeredInRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "2450:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint80",
																		"typeString": "uint80"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 336,
																	"name": "roundID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 316,
																	"src": "2469:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint80",
																		"typeString": "uint80"
																	}
																},
																"src": "2450:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2419:57:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420636861696e6c696e6b207072696365",
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2478:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b838eb2b03d57c64344c196649920d623fd5c75f9bcd1c0173705b1e20f4783c",
																"typeString": "literal_string \"Invalid chainlink price\""
															},
															"value": "Invalid chainlink price"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b838eb2b03d57c64344c196649920d623fd5c75f9bcd1c0173705b1e20f4783c",
																"typeString": "literal_string \"Invalid chainlink price\""
															}
														],
														"id": 327,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2411:93:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "2411:93:2"
											},
											{
												"expression": {
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 342,
														"name": "raw_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "2537:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"hexValue": "3130",
																			"id": 353,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2597:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			}
																		],
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2589:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 351,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "2589:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2589:11:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"id": 355,
																	"name": "chainlink_frax_eth_decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "2604:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2589:42:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 348,
																		"name": "PRICE_PRECISION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "2568:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 345,
																				"name": "price",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 318,
																				"src": "2557:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2549:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 343,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "2549:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2549:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 108,
																	"src": "2549:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2549:35:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 125,
															"src": "2549:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2549:83:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2537:95:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "2537:95:2"
											},
											{
												"expression": {
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 360,
														"name": "precise_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "2658:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"hexValue": "3130",
																			"id": 374,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2743:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			}
																		],
																		"id": 373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2735:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 372,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "2735:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2735:11:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"id": 376,
																	"name": "chainlink_frax_eth_decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "2750:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2735:42:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 369,
																		"name": "EXTRA_PRECISION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "2714:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 366,
																				"name": "PRICE_PRECISION",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "2693:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 363,
																						"name": "price",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 318,
																						"src": "2682:5:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 362,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2674:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 361,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "2674:7:2",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 364,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2674:14:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 108,
																			"src": "2674:18:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2674:35:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 108,
																	"src": "2674:39:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2674:56:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 125,
															"src": "2674:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2674:104:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2658:120:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "2658:120:2"
											}
										]
									},
									"functionSelector": "ee88fc91",
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFRAXPrice",
									"nameLocation": "2204:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2216:2:2"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "raw_price",
												"nameLocation": "2248:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "2240:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "precise_price",
												"nameLocation": "2267:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "2259:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2259:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:42:2"
									},
									"scope": 443,
									"src": "2195:590:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "3057:428:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 392,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 384,
																"src": "3149:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "307834323030303030303030303030303030303030303030303030303030303030303030303030303036",
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3158:42:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x4200000000000000000000000000000000000006"
															},
															"src": "3149:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d7573742075736520776574682061646472657373",
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3202:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8f7cea8b044c17561008c31ba3e3f1e1850745f95f81afb164efa71262c8a172",
																"typeString": "literal_string \"must use weth address\""
															},
															"value": "must use weth address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8f7cea8b044c17561008c31ba3e3f1e1850745f95f81afb164efa71262c8a172",
																"typeString": "literal_string \"must use weth address\""
															}
														],
														"id": 391,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3141:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3141:85:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "3141:85:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 399,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "3244:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "316536",
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3256:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000_by_1",
																	"typeString": "int_const 1000000"
																},
																"value": "1e6"
															},
															"src": "3244:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d7573742063616c6c207769746820316536",
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3261:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7cfd4f35ab8fcb6190c3524b53b79ab146a9c0a4fb320fe337eb730f1272bb12",
																"typeString": "literal_string \"must call with 1e6\""
															},
															"value": "must call with 1e6"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7cfd4f35ab8fcb6190c3524b53b79ab146a9c0a4fb320fe337eb730f1272bb12",
																"typeString": "literal_string \"must call with 1e6\""
															}
														],
														"id": 398,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3236:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3236:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "3236:46:2"
											},
											{
												"assignments": [
													null,
													406
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 406,
														"mutability": "mutable",
														"name": "frax_precise_price",
														"nameLocation": "3343:18:2",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "3335:26:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 405,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3335:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 409,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 407,
														"name": "getFRAXPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "3365:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function () view returns (uint256,uint256)"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3365:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3332:47:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 418,
															"name": "frax_precise_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "3459:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 415,
																	"name": "EXTRA_PRECISION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 262,
																	"src": "3438:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 412,
																			"name": "PRICE_PRECISION",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 259,
																			"src": "3417:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 410,
																			"name": "PRICE_PRECISION",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 259,
																			"src": "3397:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 108,
																		"src": "3397:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3397:36:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 108,
																"src": "3397:40:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3397:57:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 125,
														"src": "3397:61:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 390,
												"id": 420,
												"nodeType": "Return",
												"src": "3390:88:2"
											}
										]
									},
									"functionSelector": "3ddac953",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "consult",
									"nameLocation": "2980:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2996:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "2988:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2988:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3008:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "3003:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3003:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2987:30:2"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3046:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "3041:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3041:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3040:16:2"
									},
									"scope": 443,
									"src": "2971:514:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "3638:152:2",
										"statements": [
											{
												"expression": {
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 429,
														"name": "priceFeedFRAXETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "3648:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 431,
																"name": "_chainlink_frax_eth_oracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "3689:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 430,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "3667:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$241_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3667:49:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "3648:68:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "3648:68:2"
											},
											{
												"expression": {
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 435,
														"name": "chainlink_frax_eth_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3726:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 436,
																"name": "priceFeedFRAXETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "3756:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
																	"typeString": "contract AggregatorV3Interface"
																}
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "decimals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 202,
															"src": "3756:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																"typeString": "function () view external returns (uint8)"
															}
														},
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3756:27:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "3726:57:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "3726:57:2"
											}
										]
									},
									"functionSelector": "963f8e4c",
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 427,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 426,
												"name": "onlyByOwnGov",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 281,
												"src": "3625:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3625:12:2"
										}
									],
									"name": "setChainlinkFRAXETHOracle",
									"nameLocation": "3554:25:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "_chainlink_frax_eth_oracle",
												"nameLocation": "3588:26:2",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "3580:34:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3580:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3579:36:2"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3638:0:2"
									},
									"scope": 443,
									"src": "3545:245:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 444,
							"src": "1269:2524:2",
							"usedErrors": []
						}
					],
					"src": "45:3748:2"
				},
				"id": 2
			},
			"NewFraxProtocol/contracts/Staking/Owned.sol": {
				"ast": {
					"absolutePath": "NewFraxProtocol/contracts/Staking/Owned.sol",
					"exportedSymbols": {
						"Owned": [
							544
						]
					},
					"id": 545,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 445,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "45:25:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Owned",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 544,
							"linearizedBaseContracts": [
								544
							],
							"name": "Owned",
							"nameLocation": "126:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 447,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "153:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 544,
									"src": "138:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 446,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "138:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "53a47bb7",
									"id": 449,
									"mutability": "mutable",
									"name": "nominatedOwner",
									"nameLocation": "179:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 544,
									"src": "164:29:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 448,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "164:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "236:146:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 455,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 451,
																"src": "254:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "272:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "264:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 456,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "264:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "264:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "254:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e657220616464726573732063616e6e6f742062652030",
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "276:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cbb17bca9ae641614fb20d9f081dbba535c7a48d3eadd7b25242a97252df8c96",
																"typeString": "literal_string \"Owner address cannot be 0\""
															},
															"value": "Owner address cannot be 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cbb17bca9ae641614fb20d9f081dbba535c7a48d3eadd7b25242a97252df8c96",
																"typeString": "literal_string \"Owner address cannot be 0\""
															}
														],
														"id": 454,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "246:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "246:58:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "246:58:3"
											},
											{
												"expression": {
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 464,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "314:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 465,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "322:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "314:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 467,
												"nodeType": "ExpressionStatement",
												"src": "314:14:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "364:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "356:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 469,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "356:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "356:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 473,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "368:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 468,
														"name": "OwnerChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "343:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "343:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 475,
												"nodeType": "EmitStatement",
												"src": "338:37:3"
											}
										]
									},
									"id": 477,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "221:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "213:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "213:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "212:16:3"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "236:0:3"
									},
									"scope": 544,
									"src": "200:182:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "449:77:3",
										"statements": [
											{
												"expression": {
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 484,
														"name": "nominatedOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "459:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 485,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "476:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "459:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "459:23:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 489,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "512:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 488,
														"name": "OwnerNominated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "497:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "497:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 491,
												"nodeType": "EmitStatement",
												"src": "492:27:3"
											}
										]
									},
									"functionSelector": "1627540c",
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 482,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 481,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 533,
												"src": "439:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "439:9:3"
										}
									],
									"name": "nominateNewOwner",
									"nameLocation": "397:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "422:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "414:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:16:3"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "449:0:3"
									},
									"scope": 544,
									"src": "388:138:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "568:230:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 497,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "586:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "586:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 499,
																"name": "nominatedOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "600:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "586:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75206d757374206265206e6f6d696e61746564206265666f726520796f752063616e20616363657074206f776e657273686970",
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "616:55:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b",
																"typeString": "literal_string \"You must be nominated before you can accept ownership\""
															},
															"value": "You must be nominated before you can accept ownership"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b",
																"typeString": "literal_string \"You must be nominated before you can accept ownership\""
															}
														],
														"id": 496,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "578:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "578:94:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "578:94:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 505,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "700:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 506,
															"name": "nominatedOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "707:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 504,
														"name": "OwnerChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "687:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "687:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "EmitStatement",
												"src": "682:40:3"
											},
											{
												"expression": {
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 509,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "732:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 510,
														"name": "nominatedOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "740:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "732:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "732:22:3"
											},
											{
												"expression": {
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 513,
														"name": "nominatedOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "764:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "789:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "781:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 514,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "781:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 517,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "781:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "764:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "764:27:3"
											}
										]
									},
									"functionSelector": "79ba5097",
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "acceptOwnership",
									"nameLocation": "541:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "556:2:3"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "568:0:3"
									},
									"scope": 544,
									"src": "532:266:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "823:107:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 524,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "841:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "841:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 526,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "855:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "841:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792074686520636f6e7472616374206f776e6572206d617920706572666f726d207468697320616374696f6e",
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "862:49:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a",
																"typeString": "literal_string \"Only the contract owner may perform this action\""
															},
															"value": "Only the contract owner may perform this action"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a",
																"typeString": "literal_string \"Only the contract owner may perform this action\""
															}
														],
														"id": 523,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "833:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "833:79:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "833:79:3"
											},
											{
												"id": 531,
												"nodeType": "PlaceholderStatement",
												"src": "922:1:3"
											}
										]
									},
									"id": 533,
									"name": "onlyOwner",
									"nameLocation": "813:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "823:0:3"
									},
									"src": "804:126:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 537,
									"name": "OwnerNominated",
									"nameLocation": "942:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"indexed": false,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "965:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "957:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "957:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "956:18:3"
									},
									"src": "936:39:3"
								},
								{
									"anonymous": false,
									"id": 543,
									"name": "OwnerChanged",
									"nameLocation": "986:12:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldOwner",
												"nameLocation": "1007:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "999:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "999:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"indexed": false,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1025:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "1017:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1017:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "998:36:3"
									},
									"src": "980:55:3"
								}
							],
							"scope": 545,
							"src": "117:920:3",
							"usedErrors": []
						}
					],
					"src": "45:992:3"
				},
				"id": 3
			}
		}
	}
}