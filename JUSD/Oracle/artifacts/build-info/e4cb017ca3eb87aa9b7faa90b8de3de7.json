{
	"id": "e4cb017ca3eb87aa9b7faa90b8de3de7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.11;\n\n// ====================================================================\n// |     ______                   _______                             |\n// |    / _____________ __  __   / ____(_____  ____ _____  ________   |\n// |   / /_  / ___/ __ `| |/_/  / /_  / / __ \\/ __ `/ __ \\/ ___/ _ \\  |\n// |  / __/ / /  / /_/ _>  <   / __/ / / / / / /_/ / / / / /__/  __/  |\n// | /_/   /_/   \\__,_/_/|_|  /_/   /_/_/ /_/\\__,_/_/ /_/\\___/\\___/   |\n// |                                                                  |\n// ====================================================================\n// ========================= FXSOracleWrapper =========================\n// ====================================================================\n// The Frax.sol contract needs an oracle with a specific ABI, so this is a\n// 'middleman' one that lets it read Chainlink data.\n\n// Frax Finance: https://github.com/FraxFinance\n\n// Primary Author(s)\n// Jason Huan: https://github.com/jasonhuan\n\n// Reviewer(s) / Contributor(s)\n// Travis Moore: https://github.com/FortisFortuna\n// Sam Kazemian: https://github.com/samkazemian\n\nimport \"../Math/SafeMath.sol\";\nimport \"./AggregatorV3Interface.sol\";\nimport \"../Staking/Owned.sol\";\n\ncontract FXSOracleWrapper is Owned {\n    using SafeMath for uint256;\n\n    AggregatorV3Interface private priceFeedFXSUSD;\n    AggregatorV3Interface private priceFeedETHUSD;\n\n    uint256 public chainlink_fxs_usd_decimals;\n    uint256 public chainlink_eth_usd_decimals;\n\n    uint256 public PRICE_PRECISION = 1e6;\n    address public timelock_address;\n\n    /* ========== MODIFIERS ========== */\n\n    modifier onlyByOwnGov() {\n        require(msg.sender == owner || msg.sender == timelock_address, \"Not owner or timelock\");\n        _;\n    }\n\n    /* ========== CONSTRUCTOR ========== */\n\n    constructor (\n        address _creator_address,\n        address _timelock_address\n    ) Owned(_creator_address) {\n        timelock_address = _timelock_address;\n\n        // FXS/USD\n        priceFeedFXSUSD = AggregatorV3Interface(0x74dCbd8b2128437B78B77dA6D387b8AB0E5d4ACb);\n        chainlink_fxs_usd_decimals = priceFeedFXSUSD.decimals();\n\n        // ETH/USD\n        priceFeedETHUSD = AggregatorV3Interface(0xcD2A119bD1F7DF95d706DE6F2057fDD45A0503E2);\n        chainlink_eth_usd_decimals = priceFeedETHUSD.decimals();\n    }\n\n    /* ========== VIEWS ========== */\n\n    function getFXSPrice() public view returns (uint256) {\n        (uint80 roundID, int price, , uint256 updatedAt, uint80 answeredInRound) = priceFeedFXSUSD.latestRoundData();\n        require(price >= 0 && updatedAt!= 0 && answeredInRound >= roundID, \"Invalid chainlink price\");\n\n        return uint256(price).mul(PRICE_PRECISION).div(10 ** chainlink_fxs_usd_decimals);\n    }\n\n    function getETHPrice() public view returns (uint256) {\n        (uint80 roundID, int price, , uint256 updatedAt, uint80 answeredInRound) = priceFeedETHUSD.latestRoundData();\n        require(price >= 0 && updatedAt!= 0 && answeredInRound >= roundID, \"Invalid chainlink price\");\n        \n        return uint256(price).mul(PRICE_PRECISION).div(10 ** chainlink_eth_usd_decimals);\n    }\n\n    // Override the logic of the FXS-WETH Uniswap TWAP Oracle\n    // Expected Parameters: weth address, uint256 1e6\n    // Returns: FXS Chainlink price (with 1e6 precision)\n    function consult(address token, uint amountIn) external view returns (uint amountOut) {\n        // safety checks (replacing regular FXS-WETH oracle in FRAX.sol)\n        require(token == 0x4200000000000000000000000000000000000006, \"must use weth address\");\n        require(amountIn == 1e6, \"must call with 1e6\");\n\n        // needs to return it inverted\n        return getETHPrice().mul(PRICE_PRECISION).div(getFXSPrice());\n    }\n\n    /* ========== RESTRICTED FUNCTIONS ========== */\n\n    function setChainlinkFXSUSDOracle(address _chainlink_fxs_usd_oracle) external onlyByOwnGov {\n        priceFeedFXSUSD = AggregatorV3Interface(_chainlink_fxs_usd_oracle);\n        chainlink_fxs_usd_decimals = priceFeedFXSUSD.decimals();\n    }\n\n    function setChainlinkETHUSDOracle(address _chainlink_eth_usd_oracle) external onlyByOwnGov {\n        priceFeedETHUSD = AggregatorV3Interface(_chainlink_eth_usd_oracle);\n        chainlink_eth_usd_decimals = priceFeedETHUSD.decimals();\n    }\n}"
			},
			"NewFraxProtocol/contracts/Staking/Owned.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.11;\n\n// https://docs.synthetix.io/contracts/Owned\ncontract Owned {\n    address public owner;\n    address public nominatedOwner;\n\n    constructor (address _owner) public {\n        require(_owner != address(0), \"Owner address cannot be 0\");\n        owner = _owner;\n        emit OwnerChanged(address(0), _owner);\n    }\n\n    function nominateNewOwner(address _owner) external onlyOwner {\n        nominatedOwner = _owner;\n        emit OwnerNominated(_owner);\n    }\n\n    function acceptOwnership() external {\n        require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\");\n        emit OwnerChanged(owner, nominatedOwner);\n        owner = nominatedOwner;\n        nominatedOwner = address(0);\n    }\n\n    modifier onlyOwner {\n        require(msg.sender == owner, \"Only the contract owner may perform this action\");\n        _;\n    }\n\n    event OwnerNominated(address newOwner);\n    event OwnerChanged(address oldOwner, address newOwner);\n}"
			},
			"NewFraxProtocol/contracts/Oracle/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.0;\n\ninterface AggregatorV3Interface {\n\n  function decimals() external view returns (uint8);\n  function description() external view returns (string memory);\n  function version() external view returns (uint256);\n\n  // getRoundData and latestRoundData should both raise \"No data present\"\n  // if they do not have data to report, instead of returning unset values\n  // which could be misinterpreted as actual reported values.\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n}"
			},
			"NewFraxProtocol/contracts/Math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.11;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     *\n     * _Available since v2.4.0._\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"NewFraxProtocol/contracts/Math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":623:5331  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":623:5331  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220263538fbb1d2d619d007e8ebbb9fda8b77fab4455d3f1facf1705d0d9e2065a264736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220263538fbb1d2d619d007e8ebbb9fda8b77fab4455d3f1facf1705d0d9e2065a264736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 CALLDATALOAD CODESIZE 0xFB 0xB1 0xD2 0xD6 NOT 0xD0 SMOD 0xE8 0xEB 0xBB SWAP16 0xDA DUP12 PUSH24 0xFAB4455D3F1FACF1705D0D9E2065A264736F6C6343000815 STOP CALLER ",
							"sourceMap": "623:4708:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;623:4708:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220263538fbb1d2d619d007e8ebbb9fda8b77fab4455d3f1facf1705d0d9e2065a264736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 CALLDATALOAD CODESIZE 0xFB 0xB1 0xD2 0xD6 NOT 0xD0 SMOD 0xE8 0xEB 0xBB SWAP16 0xDA DUP12 PUSH24 0xFAB4455D3F1FACF1705D0D9E2065A264736F6C6343000815 STOP CALLER ",
							"sourceMap": "623:4708:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 623,
									"end": 5331,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220263538fbb1d2d619d007e8ebbb9fda8b77fab4455d3f1facf1705d0d9e2065a264736f6c63430008150033",
									".code": [
										{
											"begin": 623,
											"end": 5331,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 623,
											"end": 5331,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"NewFraxProtocol/contracts/Math/SafeMath.sol",
								"NewFraxProtocol/contracts/Oracle/AggregatorV3Interface.sol",
								"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol",
								"NewFraxProtocol/contracts/Staking/Owned.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NewFraxProtocol/contracts/Math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"NewFraxProtocol/contracts/Math/SafeMath.sol\":{\"keccak256\":\"0x43a20f7cf4c4319f81450d53779455e88a7ab80bdfc43925156ed4083b74a180\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85317e177f613c29156ffe0b1c1c29c31fedfea1ffc373c9d7f393ef51372728\",\"dweb:/ipfs/QmckZqe6wjgKWd4BTPUjRY1ofC9CsZKxAgXPFCKBisuJdr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"NewFraxProtocol/contracts/Oracle/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NewFraxProtocol/contracts/Oracle/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"NewFraxProtocol/contracts/Oracle/AggregatorV3Interface.sol\":{\"keccak256\":\"0x5e7761d06fea8192b159f3e287600cba23c5bdbe3a1bbe1050cc3ab9ed4273a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b6956df5c8ad84b2aba10e7d07c9f4976ae9ebdd65509729e752900a6f6475d\",\"dweb:/ipfs/QmP2MJZdZsJWRozMHmCtq4SU5ePKEHxCzhyqtBFpAjCDny\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol": {
				"FXSOracleWrapper": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_creator_address",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_timelock_address",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerNominated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "PRICE_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "chainlink_eth_usd_decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "chainlink_fxs_usd_decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "consult",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getETHPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getFXSPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "nominateNewOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nominatedOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_chainlink_eth_usd_oracle",
									"type": "address"
								}
							],
							"name": "setChainlinkETHUSDOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_chainlink_fxs_usd_oracle",
									"type": "address"
								}
							],
							"name": "setChainlinkFXSUSDOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "timelock_address",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1268:4329  contract FXSOracleWrapper is Owned {... */\n  mstore(0x40, 0x80)\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1573:1576  1e6 */\n  0x0f4240\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1540:1576  uint256 public PRICE_PRECISION = 1e6 */\n  0x06\n  sstore\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1853:2374  constructor (... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1947:1963  _creator_address */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":254:274  _owner != address(0) */\n  dup2\n  and\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":246:304  require(_owner != address(0), \"Owner address cannot be 0\") */\n  tag_7\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":696:698   */\n  0x20\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":246:304  require(_owner != address(0), \"Owner address cannot be 0\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":678:699   */\n  mstore\n    /* \"#utility.yul\":735:737   */\n  0x19\n    /* \"#utility.yul\":715:733   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":708:738   */\n  mstore\n    /* \"#utility.yul\":774:801   */\n  0x4f776e657220616464726573732063616e6e6f74206265203000000000000000\n    /* \"#utility.yul\":754:772   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":747:802   */\n  mstore\n    /* \"#utility.yul\":819:837   */\n  0x64\n  add\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":246:304  require(_owner != address(0), \"Owner address cannot be 0\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_7:\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":314:319  owner */\n  0x00\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":314:328  owner = _owner */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":343:375  OwnerChanged(address(0), _owner) */\n  0x40\n  dup1\n  mload\n    /* \"#utility.yul\":1060:1094   */\n  swap3\n  dup4\n  mstore\n    /* \"#utility.yul\":1125:1127   */\n  0x20\n    /* \"#utility.yul\":1110:1128   */\n  dup4\n  add\n    /* \"#utility.yul\":1103:1146   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":343:375  OwnerChanged(address(0), _owner) */\n  0xb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c\n  swap2\n    /* \"#utility.yul\":995:1013   */\n  add\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":343:375  OwnerChanged(address(0), _owner) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n  pop\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1975:1991  timelock_address */\n  0x07\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1975:2011  timelock_address = _timelock_address */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2041:2056  priceFeedFXSUSD */\n  0x02\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2041:2124  priceFeedFXSUSD = AggregatorV3Interface(0x74dCbd8b2128437B78B77dA6D387b8AB0E5d4ACb) */\n  dup1\n  sload\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2081:2123  0x74dCbd8b2128437B78B77dA6D387b8AB0E5d4ACb */\n  0x74dcbd8b2128437b78b77da6d387b8ab0e5d4acb\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2041:2124  priceFeedFXSUSD = AggregatorV3Interface(0x74dCbd8b2128437B78B77dA6D387b8AB0E5d4ACb) */\n  swap3\n  and\n  dup3\n  or\n  swap1\n  sstore\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2163:2189  priceFeedFXSUSD.decimals() */\n  0x40\n  dup1\n  mload\n  shl(0xe0, 0x313ce567)\n  dup2\n  mstore\n  swap1\n  mload\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2163:2187  priceFeedFXSUSD.decimals */\n  0x313ce567\n  swap2\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2163:2189  priceFeedFXSUSD.decimals() */\n  0x04\n  dup1\n  dup3\n  add\n  swap3\n  0x20\n  swap3\n  swap1\n  swap2\n  swap1\n  dup3\n  swap1\n  sub\n  add\n  dup2\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2081:2123  0x74dCbd8b2128437B78B77dA6D387b8AB0E5d4ACb */\n  dup7\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2163:2189  priceFeedFXSUSD.decimals() */\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_14\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_14:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_15\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2134:2189  chainlink_fxs_usd_decimals = priceFeedFXSUSD.decimals() */\n  0xff\n  and\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2134:2160  chainlink_fxs_usd_decimals */\n  0x04\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2134:2189  chainlink_fxs_usd_decimals = priceFeedFXSUSD.decimals() */\n  swap1\n  dup2\n  sstore\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2219:2234  priceFeedETHUSD */\n  0x03\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2219:2302  priceFeedETHUSD = AggregatorV3Interface(0xcD2A119bD1F7DF95d706DE6F2057fDD45A0503E2) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2259:2301  0xcD2A119bD1F7DF95d706DE6F2057fDD45A0503E2 */\n  0xcd2a119bd1f7df95d706de6f2057fdd45a0503e2\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2219:2302  priceFeedETHUSD = AggregatorV3Interface(0xcD2A119bD1F7DF95d706DE6F2057fDD45A0503E2) */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2341:2367  priceFeedETHUSD.decimals() */\n  0x40\n  dup1\n  mload\n  shl(0xe0, 0x313ce567)\n  dup2\n  mstore\n  swap1\n  mload\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2259:2301  0xcD2A119bD1F7DF95d706DE6F2057fDD45A0503E2 */\n  swap2\n  swap3\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2341:2365  priceFeedETHUSD.decimals */\n  0x313ce567\n  swap3\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2341:2367  priceFeedETHUSD.decimals() */\n  dup3\n  dup3\n  add\n  swap3\n  0x20\n  swap3\n  swap1\n  dup3\n  swap1\n  sub\n  add\n  dup2\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2259:2301  0xcD2A119bD1F7DF95d706DE6F2057fDD45A0503E2 */\n  dup7\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2341:2367  priceFeedETHUSD.decimals() */\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_18\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_18:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_19\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_19:\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2312:2367  chainlink_eth_usd_decimals = priceFeedETHUSD.decimals() */\n  0xff\n  and\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2312:2338  chainlink_eth_usd_decimals */\n  0x05\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2312:2367  chainlink_eth_usd_decimals = priceFeedETHUSD.decimals() */\n  sstore\n  pop\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1268:4329  contract FXSOracleWrapper is Owned {... */\n  tag_22\n  swap1\n  pop\n  jump\n    /* \"#utility.yul\":14:191   */\ntag_21:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_24:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  dup1\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  dup1\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_26:\n    /* \"#utility.yul\":375:415   */\n  tag_27\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_21\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_28\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_21\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1157:1430   */\ntag_16:\n    /* \"#utility.yul\":1225:1231   */\n  0x00\n    /* \"#utility.yul\":1278:1280   */\n  0x20\n    /* \"#utility.yul\":1266:1275   */\n  dup3\n    /* \"#utility.yul\":1257:1264   */\n  dup5\n    /* \"#utility.yul\":1253:1276   */\n  sub\n    /* \"#utility.yul\":1249:1281   */\n  slt\n    /* \"#utility.yul\":1246:1298   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1294:1295   */\n  0x00\n    /* \"#utility.yul\":1291:1292   */\n  dup1\n    /* \"#utility.yul\":1284:1296   */\n  revert\n    /* \"#utility.yul\":1246:1298   */\ntag_32:\n    /* \"#utility.yul\":1326:1335   */\n  dup2\n    /* \"#utility.yul\":1320:1336   */\n  mload\n    /* \"#utility.yul\":1376:1380   */\n  0xff\n    /* \"#utility.yul\":1369:1374   */\n  dup2\n    /* \"#utility.yul\":1365:1381   */\n  and\n    /* \"#utility.yul\":1358:1363   */\n  dup2\n    /* \"#utility.yul\":1355:1382   */\n  eq\n    /* \"#utility.yul\":1345:1400   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1396:1397   */\n  0x00\n    /* \"#utility.yul\":1393:1394   */\n  dup1\n    /* \"#utility.yul\":1386:1398   */\n  revert\n    /* \"#utility.yul\":1345:1400   */\ntag_33:\n    /* \"#utility.yul\":1419:1424   */\n  swap4\n    /* \"#utility.yul\":1157:1430   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_22:\n    /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1268:4329  contract FXSOracleWrapper is Owned {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1268:4329  contract FXSOracleWrapper is Owned {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa2dcb4f5\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa2dcb4f5\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa607a8d9\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd6c6c4ac\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdc6663c7\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8e409a79\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95082d25\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x1627540c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3ddac953\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x53a47bb7\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x753b5f8a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x79ba5097\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x88e5a491\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":388:526  function nominateNewOwner(address _owner) external onlyOwner {... */\n    tag_3:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      stop\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3356:3783  function consult(address token, uint amountIn) external view returns (uint amountOut) {... */\n    tag_4:\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n        /* \"#utility.yul\":788:813   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":776:778   */\n      0x20\n        /* \"#utility.yul\":761:779   */\n      add\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3356:3783  function consult(address token, uint amountIn) external view returns (uint amountOut) {... */\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":164:193  address public nominatedOwner */\n    tag_5:\n      sload(0x01)\n      tag_28\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_28:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":988:1020   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":970:1021   */\n      dup2\n      mstore\n        /* \"#utility.yul\":958:960   */\n      0x20\n        /* \"#utility.yul\":943:961   */\n      add\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":164:193  address public nominatedOwner */\n      tag_26\n        /* \"#utility.yul\":824:1027   */\n      jump\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1492:1533  uint256 public chainlink_eth_usd_decimals */\n    tag_6:\n      tag_22\n      sload(0x05)\n      dup2\n      jump\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":532:798  function acceptOwnership() external {... */\n    tag_7:\n      tag_18\n      tag_36\n      jump\t// in\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2419:2791  function getFXSPrice() public view returns (uint256) {... */\n    tag_8:\n      tag_22\n      tag_38\n      jump\t// in\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":138:158  address public owner */\n    tag_9:\n      sload(0x00)\n      tag_28\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":4088:4327  function setChainlinkETHUSDOracle(address _chainlink_eth_usd_oracle) external onlyByOwnGov {... */\n    tag_10:\n      tag_18\n      tag_44\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1540:1576  uint256 public PRICE_PRECISION = 1e6 */\n    tag_11:\n      tag_22\n      sload(0x06)\n      dup2\n      jump\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3843:4082  function setChainlinkFXSUSDOracle(address _chainlink_fxs_usd_oracle) external onlyByOwnGov {... */\n    tag_12:\n      tag_18\n      tag_50\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2797:3177  function getETHPrice() public view returns (uint256) {... */\n    tag_13:\n      tag_22\n      tag_53\n      jump\t// in\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1445:1486  uint256 public chainlink_fxs_usd_decimals */\n    tag_14:\n      tag_22\n      sload(0x04)\n      dup2\n      jump\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1582:1613  address public timelock_address */\n    tag_15:\n      sload(0x07)\n      tag_28\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":388:526  function nominateNewOwner(address _owner) external onlyOwner {... */\n    tag_21:\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":855:860  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":841:851  msg.sender */\n      caller\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":841:860  msg.sender == owner */\n      eq\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":833:912  require(msg.sender == owner, \"Only the contract owner may perform this action\") */\n      tag_62\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1234:1236   */\n      0x20\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":833:912  require(msg.sender == owner, \"Only the contract owner may perform this action\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1216:1237   */\n      mstore\n        /* \"#utility.yul\":1273:1275   */\n      0x2f\n        /* \"#utility.yul\":1253:1271   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1246:1276   */\n      mstore\n        /* \"#utility.yul\":1312:1346   */\n      0x4f6e6c792074686520636f6e7472616374206f776e6572206d61792070657266\n        /* \"#utility.yul\":1292:1310   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1285:1347   */\n      mstore\n      shl(0x89, 0x37b936903a3434b99030b1ba34b7b7)\n        /* \"#utility.yul\":1363:1381   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1356:1401   */\n      mstore\n        /* \"#utility.yul\":1418:1437   */\n      0x84\n      add\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":833:912  require(msg.sender == owner, \"Only the contract owner may perform this action\") */\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_62:\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":459:473  nominatedOwner */\n      0x01\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":459:482  nominatedOwner = _owner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":497:519  OwnerNominated(_owner) */\n      mload(0x40)\n        /* \"#utility.yul\":970:1021   */\n      swap1\n      dup2\n      mstore\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":497:519  OwnerNominated(_owner) */\n      0x906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce22\n      swap1\n        /* \"#utility.yul\":958:960   */\n      0x20\n        /* \"#utility.yul\":943:961   */\n      add\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":497:519  OwnerNominated(_owner) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":388:526  function nominateNewOwner(address _owner) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3356:3783  function consult(address token, uint amountIn) external view returns (uint amountOut) {... */\n    tag_25:\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3426:3440  uint amountOut */\n      0x00\n      add(shl(0x99, 0x21), 0x06)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3533:3584  token == 0x4200000000000000000000000000000000000006 */\n      dup5\n      and\n      eq\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3525:3610  require(token == 0x4200000000000000000000000000000000000006, \"must use weth address\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1650:1652   */\n      0x20\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3525:3610  require(token == 0x4200000000000000000000000000000000000006, \"must use weth address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1632:1653   */\n      mstore\n        /* \"#utility.yul\":1689:1691   */\n      0x15\n        /* \"#utility.yul\":1669:1687   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1662:1692   */\n      mstore\n      shl(0x58, 0x6d7573742075736520776574682061646472657373)\n        /* \"#utility.yul\":1708:1726   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1701:1752   */\n      mstore\n        /* \"#utility.yul\":1769:1787   */\n      0x64\n      add\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3525:3610  require(token == 0x4200000000000000000000000000000000000006, \"must use weth address\") */\n      tag_63\n        /* \"#utility.yul\":1448:1793   */\n      jump\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3525:3610  require(token == 0x4200000000000000000000000000000000000006, \"must use weth address\") */\n    tag_68:\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3628:3636  amountIn */\n      dup2\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3640:3643  1e6 */\n      0x0f4240\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3628:3643  amountIn == 1e6 */\n      eq\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3620:3666  require(amountIn == 1e6, \"must call with 1e6\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2000:2002   */\n      0x20\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3620:3666  require(amountIn == 1e6, \"must call with 1e6\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1982:2003   */\n      mstore\n        /* \"#utility.yul\":2039:2041   */\n      0x12\n        /* \"#utility.yul\":2019:2037   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2012:2042   */\n      mstore\n      shl(0x71, 0x36bab9ba1031b0b636103bb4ba341018b29b)\n        /* \"#utility.yul\":2058:2076   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2051:2099   */\n      mstore\n        /* \"#utility.yul\":2116:2134   */\n      0x64\n      add\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3620:3666  require(amountIn == 1e6, \"must call with 1e6\") */\n      tag_63\n        /* \"#utility.yul\":1798:2140   */\n      jump\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3620:3666  require(amountIn == 1e6, \"must call with 1e6\") */\n    tag_71:\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3723:3776  getETHPrice().mul(PRICE_PRECISION).div(getFXSPrice()) */\n      tag_74\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3762:3775  getFXSPrice() */\n      tag_75\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3762:3773  getFXSPrice */\n      tag_38\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3762:3775  getFXSPrice() */\n      jump\t// in\n    tag_75:\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3723:3757  getETHPrice().mul(PRICE_PRECISION) */\n      tag_76\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3741:3756  PRICE_PRECISION */\n      sload(0x06)\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3723:3736  getETHPrice() */\n      tag_77\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3723:3734  getETHPrice */\n      tag_53\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3723:3736  getETHPrice() */\n      jump\t// in\n    tag_77:\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3723:3740  getETHPrice().mul */\n      swap1\n      tag_78\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3723:3757  getETHPrice().mul(PRICE_PRECISION) */\n      jump\t// in\n    tag_76:\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3723:3761  getETHPrice().mul(PRICE_PRECISION).div */\n      swap1\n      tag_79\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3723:3776  getETHPrice().mul(PRICE_PRECISION).div(getFXSPrice()) */\n      jump\t// in\n    tag_74:\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3716:3776  return getETHPrice().mul(PRICE_PRECISION).div(getFXSPrice()) */\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3356:3783  function consult(address token, uint amountIn) external view returns (uint amountOut) {... */\n    tag_67:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":532:798  function acceptOwnership() external {... */\n    tag_36:\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":600:614  nominatedOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":586:596  msg.sender */\n      caller\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":586:614  msg.sender == nominatedOwner */\n      eq\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":578:672  require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2347:2349   */\n      0x20\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":578:672  require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2329:2350   */\n      mstore\n        /* \"#utility.yul\":2386:2388   */\n      0x35\n        /* \"#utility.yul\":2366:2384   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2359:2389   */\n      mstore\n        /* \"#utility.yul\":2425:2459   */\n      0x596f75206d757374206265206e6f6d696e61746564206265666f726520796f75\n        /* \"#utility.yul\":2405:2423   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2398:2460   */\n      mstore\n      shl(0x5c, 0x02063616e20616363657074206f776e65727368697)\n        /* \"#utility.yul\":2476:2494   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2469:2520   */\n      mstore\n        /* \"#utility.yul\":2537:2556   */\n      0x84\n      add\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":578:672  require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\") */\n      tag_63\n        /* \"#utility.yul\":2145:2562   */\n      jump\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":578:672  require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\") */\n    tag_81:\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":700:705  owner */\n      sload(0x00)\n      0x01\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":707:721  nominatedOwner */\n      sload\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":687:722  OwnerChanged(owner, nominatedOwner) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":700:705  owner */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":2779:2813   */\n      dup2\n      mstore\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":707:721  nominatedOwner */\n      swap3\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2844:2846   */\n      0x20\n        /* \"#utility.yul\":2829:2847   */\n      dup4\n      add\n        /* \"#utility.yul\":2822:2865   */\n      mstore\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":687:722  OwnerChanged(owner, nominatedOwner) */\n      0xb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c\n      swap2\n        /* \"#utility.yul\":2714:2732   */\n      add\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":687:722  OwnerChanged(owner, nominatedOwner) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":740:754  nominatedOwner */\n      0x01\n      dup1\n      sload\n      0x00\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":732:754  owner = nominatedOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":740:754  nominatedOwner */\n      dup5\n      and\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":732:754  owner = nominatedOwner */\n      or\n      swap1\n      swap2\n      sstore\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":764:791  nominatedOwner = address(0) */\n      and\n      swap1\n      sstore\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":532:798  function acceptOwnership() external {... */\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2419:2791  function getFXSPrice() public view returns (uint256) {... */\n    tag_38:\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2463:2470  uint256 */\n      0x00\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2483:2497  uint80 roundID */\n      dup1\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2499:2508  int price */\n      0x00\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2512:2529  uint256 updatedAt */\n      dup1\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2531:2553  uint80 answeredInRound */\n      0x00\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2557:2572  priceFeedFXSUSD */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2557:2588  priceFeedFXSUSD.latestRoundData */\n      and\n      0xfeaf968c\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2557:2590  priceFeedFXSUSD.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2482:2590  (uint80 roundID, int price, , uint256 updatedAt, uint80 answeredInRound) = priceFeedFXSUSD.latestRoundData() */\n      swap5\n      pop\n      swap5\n      pop\n      pop\n      swap4\n      pop\n      swap4\n      pop\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2617:2618  0 */\n      0x00\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2608:2613  price */\n      dup4\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2608:2618  price >= 0 */\n      slt\n      iszero\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2608:2635  price >= 0 && updatedAt!= 0 */\n      dup1\n      iszero\n      tag_91\n      jumpi\n      pop\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2622:2635  updatedAt!= 0 */\n      dup2\n      iszero\n      iszero\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2608:2635  price >= 0 && updatedAt!= 0 */\n    tag_91:\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2608:2665  price >= 0 && updatedAt!= 0 && answeredInRound >= roundID */\n      dup1\n      iszero\n      tag_92\n      jumpi\n      pop\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2658:2665  roundID */\n      dup4\n      sub(shl(0x50, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2639:2665  answeredInRound >= roundID */\n      and\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2639:2654  answeredInRound */\n      dup2\n      sub(shl(0x50, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2639:2665  answeredInRound >= roundID */\n      and\n      lt\n      iszero\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2608:2665  price >= 0 && updatedAt!= 0 && answeredInRound >= roundID */\n    tag_92:\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2600:2693  require(price >= 0 && updatedAt!= 0 && answeredInRound >= roundID, \"Invalid chainlink price\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3740:3742   */\n      0x20\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2600:2693  require(price >= 0 && updatedAt!= 0 && answeredInRound >= roundID, \"Invalid chainlink price\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3722:3743   */\n      mstore\n        /* \"#utility.yul\":3779:3781   */\n      0x17\n        /* \"#utility.yul\":3759:3777   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3752:3782   */\n      mstore\n      shl(0x48, 0x496e76616c696420636861696e6c696e6b207072696365)\n        /* \"#utility.yul\":3798:3816   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3791:3844   */\n      mstore\n        /* \"#utility.yul\":3861:3879   */\n      0x64\n      add\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2600:2693  require(price >= 0 && updatedAt!= 0 && answeredInRound >= roundID, \"Invalid chainlink price\") */\n      tag_63\n        /* \"#utility.yul\":3538:3885   */\n      jump\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2600:2693  require(price >= 0 && updatedAt!= 0 && answeredInRound >= roundID, \"Invalid chainlink price\") */\n    tag_93:\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2711:2784  uint256(price).mul(PRICE_PRECISION).div(10 ** chainlink_fxs_usd_decimals) */\n      tag_96\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2757:2783  chainlink_fxs_usd_decimals */\n      sload(0x04)\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2751:2753  10 */\n      0x0a\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2751:2783  10 ** chainlink_fxs_usd_decimals */\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2730:2745  PRICE_PRECISION */\n      sload(0x06)\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2711:2746  uint256(price).mul(PRICE_PRECISION) */\n      tag_76\n      swap1\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2719:2724  price */\n      dup7\n      swap1\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2711:2729  uint256(price).mul */\n      tag_78\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2711:2746  uint256(price).mul(PRICE_PRECISION) */\n      jump\t// in\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2711:2784  uint256(price).mul(PRICE_PRECISION).div(10 ** chainlink_fxs_usd_decimals) */\n    tag_96:\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2704:2784  return uint256(price).mul(PRICE_PRECISION).div(10 ** chainlink_fxs_usd_decimals) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2419:2791  function getFXSPrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":4088:4327  function setChainlinkETHUSDOracle(address _chainlink_eth_usd_oracle) external onlyByOwnGov {... */\n    tag_45:\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1719:1724  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1705:1715  msg.sender */\n      caller\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1705:1724  msg.sender == owner */\n      eq\n      dup1\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1705:1758  msg.sender == owner || msg.sender == timelock_address */\n      tag_101\n      jumpi\n      pop\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1742:1758  timelock_address */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1728:1738  msg.sender */\n      caller\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1728:1758  msg.sender == timelock_address */\n      eq\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1705:1758  msg.sender == owner || msg.sender == timelock_address */\n    tag_101:\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1697:1784  require(msg.sender == owner || msg.sender == timelock_address, \"Not owner or timelock\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5598:5600   */\n      0x20\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1697:1784  require(msg.sender == owner || msg.sender == timelock_address, \"Not owner or timelock\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5580:5601   */\n      mstore\n        /* \"#utility.yul\":5637:5639   */\n      0x15\n        /* \"#utility.yul\":5617:5635   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5610:5640   */\n      mstore\n      shl(0x58, 0x4e6f74206f776e6572206f722074696d656c6f636b)\n        /* \"#utility.yul\":5656:5674   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5649:5700   */\n      mstore\n        /* \"#utility.yul\":5717:5735   */\n      0x64\n      add\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1697:1784  require(msg.sender == owner || msg.sender == timelock_address, \"Not owner or timelock\") */\n      tag_63\n        /* \"#utility.yul\":5396:5741   */\n      jump\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1697:1784  require(msg.sender == owner || msg.sender == timelock_address, \"Not owner or timelock\") */\n    tag_102:\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":4189:4204  priceFeedETHUSD */\n      0x03\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":4189:4255  priceFeedETHUSD = AggregatorV3Interface(_chainlink_eth_usd_oracle) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":4294:4320  priceFeedETHUSD.decimals() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x313ce567)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":4294:4318  priceFeedETHUSD.decimals */\n      0x313ce567\n      swap2\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":4294:4320  priceFeedETHUSD.decimals() */\n      0x04\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":4189:4255  priceFeedETHUSD = AggregatorV3Interface(_chainlink_eth_usd_oracle) */\n      dup7\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":4294:4320  priceFeedETHUSD.decimals() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_107\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_107:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":4265:4320  chainlink_eth_usd_decimals = priceFeedETHUSD.decimals() */\n      0xff\n      and\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":4265:4291  chainlink_eth_usd_decimals */\n      0x05\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":4265:4320  chainlink_eth_usd_decimals = priceFeedETHUSD.decimals() */\n      sstore\n      pop\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":4088:4327  function setChainlinkETHUSDOracle(address _chainlink_eth_usd_oracle) external onlyByOwnGov {... */\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3843:4082  function setChainlinkFXSUSDOracle(address _chainlink_fxs_usd_oracle) external onlyByOwnGov {... */\n    tag_51:\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1719:1724  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1705:1715  msg.sender */\n      caller\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1705:1724  msg.sender == owner */\n      eq\n      dup1\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1705:1758  msg.sender == owner || msg.sender == timelock_address */\n      tag_111\n      jumpi\n      pop\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1742:1758  timelock_address */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1728:1738  msg.sender */\n      caller\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1728:1758  msg.sender == timelock_address */\n      eq\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1705:1758  msg.sender == owner || msg.sender == timelock_address */\n    tag_111:\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1697:1784  require(msg.sender == owner || msg.sender == timelock_address, \"Not owner or timelock\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5598:5600   */\n      0x20\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1697:1784  require(msg.sender == owner || msg.sender == timelock_address, \"Not owner or timelock\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5580:5601   */\n      mstore\n        /* \"#utility.yul\":5637:5639   */\n      0x15\n        /* \"#utility.yul\":5617:5635   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5610:5640   */\n      mstore\n      shl(0x58, 0x4e6f74206f776e6572206f722074696d656c6f636b)\n        /* \"#utility.yul\":5656:5674   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5649:5700   */\n      mstore\n        /* \"#utility.yul\":5717:5735   */\n      0x64\n      add\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1697:1784  require(msg.sender == owner || msg.sender == timelock_address, \"Not owner or timelock\") */\n      tag_63\n        /* \"#utility.yul\":5396:5741   */\n      jump\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":1697:1784  require(msg.sender == owner || msg.sender == timelock_address, \"Not owner or timelock\") */\n    tag_112:\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3944:3959  priceFeedFXSUSD */\n      0x02\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3944:4010  priceFeedFXSUSD = AggregatorV3Interface(_chainlink_fxs_usd_oracle) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":4049:4075  priceFeedFXSUSD.decimals() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x313ce567)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":4049:4073  priceFeedFXSUSD.decimals */\n      0x313ce567\n      swap2\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":4049:4075  priceFeedFXSUSD.decimals() */\n      0x04\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3944:4010  priceFeedFXSUSD = AggregatorV3Interface(_chainlink_fxs_usd_oracle) */\n      dup7\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":4049:4075  priceFeedFXSUSD.decimals() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_116\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_116:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_117:\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":4020:4075  chainlink_fxs_usd_decimals = priceFeedFXSUSD.decimals() */\n      0xff\n      and\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":4020:4046  chainlink_fxs_usd_decimals */\n      0x04\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":4020:4075  chainlink_fxs_usd_decimals = priceFeedFXSUSD.decimals() */\n      sstore\n      pop\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3843:4082  function setChainlinkFXSUSDOracle(address _chainlink_fxs_usd_oracle) external onlyByOwnGov {... */\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2797:3177  function getETHPrice() public view returns (uint256) {... */\n    tag_53:\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2841:2848  uint256 */\n      0x00\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2861:2875  uint80 roundID */\n      dup1\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2877:2886  int price */\n      0x00\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2890:2907  uint256 updatedAt */\n      dup1\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2909:2931  uint80 answeredInRound */\n      0x00\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2935:2950  priceFeedETHUSD */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2935:2966  priceFeedETHUSD.latestRoundData */\n      and\n      0xfeaf968c\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2935:2968  priceFeedETHUSD.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_120\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_121:\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2860:2968  (uint80 roundID, int price, , uint256 updatedAt, uint80 answeredInRound) = priceFeedETHUSD.latestRoundData() */\n      swap5\n      pop\n      swap5\n      pop\n      pop\n      swap4\n      pop\n      swap4\n      pop\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2995:2996  0 */\n      0x00\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2986:2991  price */\n      dup4\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2986:2996  price >= 0 */\n      slt\n      iszero\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2986:3013  price >= 0 && updatedAt!= 0 */\n      dup1\n      iszero\n      tag_122\n      jumpi\n      pop\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3000:3013  updatedAt!= 0 */\n      dup2\n      iszero\n      iszero\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2986:3013  price >= 0 && updatedAt!= 0 */\n    tag_122:\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2986:3043  price >= 0 && updatedAt!= 0 && answeredInRound >= roundID */\n      dup1\n      iszero\n      tag_123\n      jumpi\n      pop\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3036:3043  roundID */\n      dup4\n      sub(shl(0x50, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3017:3043  answeredInRound >= roundID */\n      and\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3017:3032  answeredInRound */\n      dup2\n      sub(shl(0x50, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3017:3043  answeredInRound >= roundID */\n      and\n      lt\n      iszero\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2986:3043  price >= 0 && updatedAt!= 0 && answeredInRound >= roundID */\n    tag_123:\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2978:3071  require(price >= 0 && updatedAt!= 0 && answeredInRound >= roundID, \"Invalid chainlink price\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3740:3742   */\n      0x20\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2978:3071  require(price >= 0 && updatedAt!= 0 && answeredInRound >= roundID, \"Invalid chainlink price\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3722:3743   */\n      mstore\n        /* \"#utility.yul\":3779:3781   */\n      0x17\n        /* \"#utility.yul\":3759:3777   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3752:3782   */\n      mstore\n      shl(0x48, 0x496e76616c696420636861696e6c696e6b207072696365)\n        /* \"#utility.yul\":3798:3816   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3791:3844   */\n      mstore\n        /* \"#utility.yul\":3861:3879   */\n      0x64\n      add\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2978:3071  require(price >= 0 && updatedAt!= 0 && answeredInRound >= roundID, \"Invalid chainlink price\") */\n      tag_63\n        /* \"#utility.yul\":3538:3885   */\n      jump\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":2978:3071  require(price >= 0 && updatedAt!= 0 && answeredInRound >= roundID, \"Invalid chainlink price\") */\n    tag_124:\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3097:3170  uint256(price).mul(PRICE_PRECISION).div(10 ** chainlink_eth_usd_decimals) */\n      tag_96\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3143:3169  chainlink_eth_usd_decimals */\n      sload(0x05)\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3137:3139  10 */\n      0x0a\n        /* \"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":3137:3169  10 ** chainlink_eth_usd_decimals */\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2193:2652  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_78:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2251:2258  uint256 */\n      0x00\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2492:2493  a */\n      dup3\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2497:2498  0 */\n      0x00\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2492:2498  a == 0 */\n      sub\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2488:2533  if (a == 0) {... */\n      tag_130\n      jumpi\n      pop\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2521:2522  0 */\n      0x00\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2514:2522  return 0 */\n      jump(tag_67)\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2488:2533  if (a == 0) {... */\n    tag_130:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2543:2552  uint256 c */\n      0x00\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2555:2560  a * b */\n      tag_131\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2559:2560  b */\n      dup4\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2555:2556  a */\n      dup6\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2555:2560  a * b */\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2543:2560  uint256 c = a * b */\n      swap1\n      pop\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2587:2588  b */\n      dup3\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2578:2583  c / a */\n      tag_133\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2582:2583  a */\n      dup6\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2543:2560  uint256 c = a * b */\n      dup4\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2578:2583  c / a */\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2578:2588  c / a == b */\n      eq\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2570:2626  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6621:6623   */\n      0x20\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2570:2626  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6603:6624   */\n      mstore\n        /* \"#utility.yul\":6660:6662   */\n      0x21\n        /* \"#utility.yul\":6640:6658   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6633:6663   */\n      mstore\n        /* \"#utility.yul\":6699:6733   */\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n        /* \"#utility.yul\":6679:6697   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6672:6734   */\n      mstore\n      shl(0xf8, 0x77)\n        /* \"#utility.yul\":6750:6768   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6743:6774   */\n      mstore\n        /* \"#utility.yul\":6791:6810   */\n      0x84\n      add\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":2570:2626  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_63\n        /* \"#utility.yul\":6419:6816   */\n      jump\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3107:3237  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_79:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3165:3172  uint256 */\n      0x00\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3191:3230  div(a, b, \"SafeMath: division by zero\") */\n      tag_74\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3195:3196  a */\n      dup4\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3198:3199  b */\n      dup4\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3191:3230  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3838:3845  uint256 */\n      0x00\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3938:3950  errorMessage */\n      dup2\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3931:3936  b > 0 */\n      dup4\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3923:3951  require(b > 0, errorMessage) */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_63\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_142:\n      pop\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3961:3970  uint256 c */\n      0x00\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3973:3978  a / b */\n      tag_145\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3977:3978  b */\n      dup5\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3973:3974  a */\n      dup7\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3973:3978  a / b */\n      tag_134\n      jump\t// in\n    tag_145:\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3961:3978  uint256 c = a / b */\n      swap6\n        /* \"NewFraxProtocol/contracts/Math/SafeMath.sol\":3752:4090  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_146:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_153\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_153:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_20:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_155:\n        /* \"#utility.yul\":343:372   */\n      tag_74\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_146\n      jump\t// in\n        /* \"#utility.yul\":383:637   */\n    tag_24:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_158:\n        /* \"#utility.yul\":551:580   */\n      tag_159\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_146\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":541:580   */\n      swap5\n        /* \"#utility.yul\":627:629   */\n      0x20\n        /* \"#utility.yul\":612:630   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":599:631   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":383:637   */\n      jump\t// out\n        /* \"#utility.yul\":2876:3055   */\n    tag_147:\n        /* \"#utility.yul\":2954:2967   */\n      dup1\n      mload\n      sub(shl(0x50, 0x01), 0x01)\n        /* \"#utility.yul\":2996:3030   */\n      dup2\n      and\n        /* \"#utility.yul\":2986:3031   */\n      dup2\n      eq\n        /* \"#utility.yul\":2976:3049   */\n      tag_153\n      jumpi\n        /* \"#utility.yul\":3045:3046   */\n      0x00\n        /* \"#utility.yul\":3042:3043   */\n      dup1\n        /* \"#utility.yul\":3035:3047   */\n      revert\n        /* \"#utility.yul\":3060:3533   */\n    tag_90:\n        /* \"#utility.yul\":3163:3169   */\n      0x00\n        /* \"#utility.yul\":3171:3177   */\n      dup1\n        /* \"#utility.yul\":3179:3185   */\n      0x00\n        /* \"#utility.yul\":3187:3193   */\n      dup1\n        /* \"#utility.yul\":3195:3201   */\n      0x00\n        /* \"#utility.yul\":3248:3251   */\n      0xa0\n        /* \"#utility.yul\":3236:3245   */\n      dup7\n        /* \"#utility.yul\":3227:3234   */\n      dup9\n        /* \"#utility.yul\":3223:3246   */\n      sub\n        /* \"#utility.yul\":3219:3252   */\n      slt\n        /* \"#utility.yul\":3216:3269   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":3265:3266   */\n      0x00\n        /* \"#utility.yul\":3262:3263   */\n      dup1\n        /* \"#utility.yul\":3255:3267   */\n      revert\n        /* \"#utility.yul\":3216:3269   */\n    tag_170:\n        /* \"#utility.yul\":3288:3327   */\n      tag_171\n        /* \"#utility.yul\":3317:3326   */\n      dup7\n        /* \"#utility.yul\":3288:3327   */\n      tag_147\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":3278:3327   */\n      swap5\n      pop\n        /* \"#utility.yul\":3367:3369   */\n      0x20\n        /* \"#utility.yul\":3356:3365   */\n      dup7\n        /* \"#utility.yul\":3352:3370   */\n      add\n        /* \"#utility.yul\":3346:3371   */\n      mload\n        /* \"#utility.yul\":3336:3371   */\n      swap4\n      pop\n        /* \"#utility.yul\":3411:3413   */\n      0x40\n        /* \"#utility.yul\":3400:3409   */\n      dup7\n        /* \"#utility.yul\":3396:3414   */\n      add\n        /* \"#utility.yul\":3390:3415   */\n      mload\n        /* \"#utility.yul\":3380:3415   */\n      swap3\n      pop\n        /* \"#utility.yul\":3455:3457   */\n      0x60\n        /* \"#utility.yul\":3444:3453   */\n      dup7\n        /* \"#utility.yul\":3440:3458   */\n      add\n        /* \"#utility.yul\":3434:3459   */\n      mload\n        /* \"#utility.yul\":3424:3459   */\n      swap2\n      pop\n        /* \"#utility.yul\":3478:3527   */\n      tag_172\n        /* \"#utility.yul\":3522:3525   */\n      0x80\n        /* \"#utility.yul\":3511:3520   */\n      dup8\n        /* \"#utility.yul\":3507:3526   */\n      add\n        /* \"#utility.yul\":3478:3527   */\n      tag_147\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":3468:3527   */\n      swap1\n      pop\n        /* \"#utility.yul\":3060:3533   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3890:4017   */\n    tag_148:\n        /* \"#utility.yul\":3951:3961   */\n      0x4e487b71\n        /* \"#utility.yul\":3946:3949   */\n      0xe0\n        /* \"#utility.yul\":3942:3962   */\n      shl\n        /* \"#utility.yul\":3939:3940   */\n      0x00\n        /* \"#utility.yul\":3932:3963   */\n      mstore\n        /* \"#utility.yul\":3982:3986   */\n      0x11\n        /* \"#utility.yul\":3979:3980   */\n      0x04\n        /* \"#utility.yul\":3972:3987   */\n      mstore\n        /* \"#utility.yul\":4006:4010   */\n      0x24\n        /* \"#utility.yul\":4003:4004   */\n      0x00\n        /* \"#utility.yul\":3996:4011   */\n      revert\n        /* \"#utility.yul\":4022:4444   */\n    tag_149:\n        /* \"#utility.yul\":4111:4112   */\n      0x01\n        /* \"#utility.yul\":4154:4159   */\n      dup2\n        /* \"#utility.yul\":4111:4112   */\n      dup2\n        /* \"#utility.yul\":4168:4438   */\n    tag_176:\n        /* \"#utility.yul\":4189:4196   */\n      dup1\n        /* \"#utility.yul\":4179:4187   */\n      dup6\n        /* \"#utility.yul\":4176:4197   */\n      gt\n        /* \"#utility.yul\":4168:4438   */\n      iszero\n      tag_178\n      jumpi\n        /* \"#utility.yul\":4248:4252   */\n      dup2\n        /* \"#utility.yul\":4244:4245   */\n      0x00\n        /* \"#utility.yul\":4240:4246   */\n      not\n        /* \"#utility.yul\":4236:4253   */\n      div\n        /* \"#utility.yul\":4230:4234   */\n      dup3\n        /* \"#utility.yul\":4227:4254   */\n      gt\n        /* \"#utility.yul\":4224:4277   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":4257:4275   */\n      tag_180\n      tag_148\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":4307:4314   */\n      dup1\n        /* \"#utility.yul\":4297:4305   */\n      dup6\n        /* \"#utility.yul\":4293:4315   */\n      and\n        /* \"#utility.yul\":4290:4345   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":4327:4343   */\n      swap2\n      dup2\n      mul\n      swap2\n        /* \"#utility.yul\":4290:4345   */\n    tag_181:\n        /* \"#utility.yul\":4406:4428   */\n      swap4\n      dup5\n      shr\n      swap4\n        /* \"#utility.yul\":4366:4381   */\n      swap1\n      dup1\n      mul\n      swap1\n        /* \"#utility.yul\":4168:4438   */\n      jump(tag_176)\n    tag_178:\n        /* \"#utility.yul\":4172:4175   */\n      pop\n        /* \"#utility.yul\":4022:4444   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4449:5255   */\n    tag_150:\n        /* \"#utility.yul\":4498:4503   */\n      0x00\n        /* \"#utility.yul\":4528:4536   */\n      dup3\n        /* \"#utility.yul\":4518:4598   */\n      tag_183\n      jumpi\n      pop\n        /* \"#utility.yul\":4569:4570   */\n      0x01\n        /* \"#utility.yul\":4583:4588   */\n      jump(tag_67)\n        /* \"#utility.yul\":4518:4598   */\n    tag_183:\n        /* \"#utility.yul\":4617:4621   */\n      dup2\n        /* \"#utility.yul\":4607:4683   */\n      tag_184\n      jumpi\n      pop\n        /* \"#utility.yul\":4654:4655   */\n      0x00\n        /* \"#utility.yul\":4668:4673   */\n      jump(tag_67)\n        /* \"#utility.yul\":4607:4683   */\n    tag_184:\n        /* \"#utility.yul\":4699:4703   */\n      dup2\n        /* \"#utility.yul\":4717:4718   */\n      0x01\n        /* \"#utility.yul\":4712:4771   */\n      dup2\n      eq\n      tag_186\n      jumpi\n        /* \"#utility.yul\":4785:4786   */\n      0x02\n        /* \"#utility.yul\":4780:4910   */\n      dup2\n      eq\n      tag_187\n      jumpi\n        /* \"#utility.yul\":4692:4910   */\n      jump(tag_185)\n        /* \"#utility.yul\":4712:4771   */\n    tag_186:\n        /* \"#utility.yul\":4742:4743   */\n      0x01\n        /* \"#utility.yul\":4733:4743   */\n      swap2\n      pop\n        /* \"#utility.yul\":4756:4761   */\n      pop\n      jump(tag_67)\n        /* \"#utility.yul\":4780:4910   */\n    tag_187:\n        /* \"#utility.yul\":4817:4820   */\n      0xff\n        /* \"#utility.yul\":4807:4815   */\n      dup5\n        /* \"#utility.yul\":4804:4821   */\n      gt\n        /* \"#utility.yul\":4801:4844   */\n      iszero\n      tag_189\n      jumpi\n        /* \"#utility.yul\":4824:4842   */\n      tag_189\n      tag_148\n      jump\t// in\n    tag_189:\n      pop\n      pop\n        /* \"#utility.yul\":4880:4881   */\n      0x01\n        /* \"#utility.yul\":4866:4882   */\n      dup3\n      shl\n        /* \"#utility.yul\":4895:4900   */\n      jump(tag_67)\n        /* \"#utility.yul\":4692:4910   */\n    tag_185:\n      pop\n        /* \"#utility.yul\":4994:4996   */\n      0x20\n        /* \"#utility.yul\":4984:4992   */\n      dup4\n        /* \"#utility.yul\":4981:4997   */\n      lt\n        /* \"#utility.yul\":4975:4978   */\n      0x0133\n        /* \"#utility.yul\":4969:4973   */\n      dup4\n        /* \"#utility.yul\":4966:4979   */\n      lt\n        /* \"#utility.yul\":4962:4998   */\n      and\n        /* \"#utility.yul\":4956:4958   */\n      0x4e\n        /* \"#utility.yul\":4946:4954   */\n      dup5\n        /* \"#utility.yul\":4943:4959   */\n      lt\n        /* \"#utility.yul\":4938:4940   */\n      0x0b\n        /* \"#utility.yul\":4932:4936   */\n      dup5\n        /* \"#utility.yul\":4929:4941   */\n      lt\n        /* \"#utility.yul\":4925:4960   */\n      and\n        /* \"#utility.yul\":4922:4999   */\n      or\n        /* \"#utility.yul\":4919:5078   */\n      iszero\n      tag_190\n      jumpi\n      pop\n        /* \"#utility.yul\":5031:5050   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":5063:5068   */\n      jump(tag_67)\n        /* \"#utility.yul\":4919:5078   */\n    tag_190:\n        /* \"#utility.yul\":5110:5144   */\n      tag_191\n        /* \"#utility.yul\":5135:5143   */\n      dup4\n        /* \"#utility.yul\":5129:5133   */\n      dup4\n        /* \"#utility.yul\":5110:5144   */\n      tag_149\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":5180:5186   */\n      dup1\n        /* \"#utility.yul\":5176:5177   */\n      0x00\n        /* \"#utility.yul\":5172:5178   */\n      not\n        /* \"#utility.yul\":5168:5187   */\n      div\n        /* \"#utility.yul\":5159:5166   */\n      dup3\n        /* \"#utility.yul\":5156:5188   */\n      gt\n        /* \"#utility.yul\":5153:5211   */\n      iszero\n      tag_193\n      jumpi\n        /* \"#utility.yul\":5191:5209   */\n      tag_193\n      tag_148\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":5229:5249   */\n      mul\n      swap4\n        /* \"#utility.yul\":4449:5255   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5260:5391   */\n    tag_98:\n        /* \"#utility.yul\":5320:5325   */\n      0x00\n        /* \"#utility.yul\":5349:5385   */\n      tag_74\n        /* \"#utility.yul\":5376:5384   */\n      dup4\n        /* \"#utility.yul\":5370:5374   */\n      dup4\n        /* \"#utility.yul\":5349:5385   */\n      tag_150\n      jump\t// in\n        /* \"#utility.yul\":5746:6019   */\n    tag_109:\n        /* \"#utility.yul\":5814:5820   */\n      0x00\n        /* \"#utility.yul\":5867:5869   */\n      0x20\n        /* \"#utility.yul\":5855:5864   */\n      dup3\n        /* \"#utility.yul\":5846:5853   */\n      dup5\n        /* \"#utility.yul\":5842:5865   */\n      sub\n        /* \"#utility.yul\":5838:5870   */\n      slt\n        /* \"#utility.yul\":5835:5887   */\n      iszero\n      tag_198\n      jumpi\n        /* \"#utility.yul\":5883:5884   */\n      0x00\n        /* \"#utility.yul\":5880:5881   */\n      dup1\n        /* \"#utility.yul\":5873:5885   */\n      revert\n        /* \"#utility.yul\":5835:5887   */\n    tag_198:\n        /* \"#utility.yul\":5915:5924   */\n      dup2\n        /* \"#utility.yul\":5909:5925   */\n      mload\n        /* \"#utility.yul\":5965:5969   */\n      0xff\n        /* \"#utility.yul\":5958:5963   */\n      dup2\n        /* \"#utility.yul\":5954:5970   */\n      and\n        /* \"#utility.yul\":5947:5952   */\n      dup2\n        /* \"#utility.yul\":5944:5971   */\n      eq\n        /* \"#utility.yul\":5934:5989   */\n      tag_74\n      jumpi\n        /* \"#utility.yul\":5985:5986   */\n      0x00\n        /* \"#utility.yul\":5982:5983   */\n      dup1\n        /* \"#utility.yul\":5975:5987   */\n      revert\n        /* \"#utility.yul\":6024:6192   */\n    tag_132:\n        /* \"#utility.yul\":6097:6106   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":6128:6137   */\n      dup2\n      iszero\n        /* \"#utility.yul\":6145:6160   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":6139:6161   */\n      dup5\n      eq\n        /* \"#utility.yul\":6125:6162   */\n      or\n        /* \"#utility.yul\":6115:6186   */\n      tag_67\n      jumpi\n        /* \"#utility.yul\":6166:6184   */\n      tag_67\n      tag_148\n      jump\t// in\n        /* \"#utility.yul\":6197:6414   */\n    tag_134:\n        /* \"#utility.yul\":6237:6238   */\n      0x00\n        /* \"#utility.yul\":6263:6264   */\n      dup3\n        /* \"#utility.yul\":6253:6385   */\n      tag_204\n      jumpi\n        /* \"#utility.yul\":6307:6317   */\n      0x4e487b71\n        /* \"#utility.yul\":6302:6305   */\n      0xe0\n        /* \"#utility.yul\":6298:6318   */\n      shl\n        /* \"#utility.yul\":6295:6296   */\n      0x00\n        /* \"#utility.yul\":6288:6319   */\n      mstore\n        /* \"#utility.yul\":6342:6346   */\n      0x12\n        /* \"#utility.yul\":6339:6340   */\n      0x04\n        /* \"#utility.yul\":6332:6347   */\n      mstore\n        /* \"#utility.yul\":6370:6374   */\n      0x24\n        /* \"#utility.yul\":6367:6368   */\n      0x00\n        /* \"#utility.yul\":6360:6375   */\n      revert\n        /* \"#utility.yul\":6253:6385   */\n    tag_204:\n      pop\n        /* \"#utility.yul\":6399:6408   */\n      div\n      swap1\n        /* \"#utility.yul\":6197:6414   */\n      jump\t// out\n        /* \"#utility.yul\":6821:7369   */\n    tag_144:\n        /* \"#utility.yul\":6933:6937   */\n      0x00\n        /* \"#utility.yul\":6962:6964   */\n      0x20\n        /* \"#utility.yul\":6991:6993   */\n      dup1\n        /* \"#utility.yul\":6980:6989   */\n      dup4\n        /* \"#utility.yul\":6973:6994   */\n      mstore\n        /* \"#utility.yul\":7023:7029   */\n      dup4\n        /* \"#utility.yul\":7017:7030   */\n      mload\n        /* \"#utility.yul\":7066:7072   */\n      dup1\n        /* \"#utility.yul\":7061:7063   */\n      dup3\n        /* \"#utility.yul\":7050:7059   */\n      dup6\n        /* \"#utility.yul\":7046:7064   */\n      add\n        /* \"#utility.yul\":7039:7073   */\n      mstore\n        /* \"#utility.yul\":7091:7092   */\n      0x00\n        /* \"#utility.yul\":7101:7241   */\n    tag_207:\n        /* \"#utility.yul\":7115:7121   */\n      dup2\n        /* \"#utility.yul\":7112:7113   */\n      dup2\n        /* \"#utility.yul\":7109:7122   */\n      lt\n        /* \"#utility.yul\":7101:7241   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":7210:7224   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":7206:7229   */\n      dup4\n      add\n        /* \"#utility.yul\":7200:7230   */\n      mload\n        /* \"#utility.yul\":7176:7193   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":7195:7197   */\n      0x40\n        /* \"#utility.yul\":7172:7198   */\n      add\n        /* \"#utility.yul\":7165:7231   */\n      mstore\n        /* \"#utility.yul\":7130:7140   */\n      dup3\n      add\n        /* \"#utility.yul\":7101:7241   */\n      jump(tag_207)\n    tag_209:\n        /* \"#utility.yul\":7105:7108   */\n      pop\n        /* \"#utility.yul\":7290:7291   */\n      0x00\n        /* \"#utility.yul\":7285:7287   */\n      0x40\n        /* \"#utility.yul\":7276:7282   */\n      dup3\n        /* \"#utility.yul\":7265:7274   */\n      dup7\n        /* \"#utility.yul\":7261:7283   */\n      add\n        /* \"#utility.yul\":7257:7288   */\n      add\n        /* \"#utility.yul\":7250:7292   */\n      mstore\n        /* \"#utility.yul\":7360:7362   */\n      0x40\n        /* \"#utility.yul\":7353:7355   */\n      0x1f\n        /* \"#utility.yul\":7349:7356   */\n      not\n        /* \"#utility.yul\":7344:7346   */\n      0x1f\n        /* \"#utility.yul\":7336:7342   */\n      dup4\n        /* \"#utility.yul\":7332:7347   */\n      add\n        /* \"#utility.yul\":7328:7357   */\n      and\n        /* \"#utility.yul\":7317:7326   */\n      dup6\n        /* \"#utility.yul\":7313:7358   */\n      add\n        /* \"#utility.yul\":7309:7363   */\n      add\n        /* \"#utility.yul\":7301:7363   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6821:7369   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122059adb05277171557398b71241c7ab68ce942286a187981e383467c28e7e37e4864736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_322": {
									"entryPoint": null,
									"id": 322,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_523": {
									"entryPoint": null,
									"id": 523,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cbb17bca9ae641614fb20d9f081dbba535c7a48d3eadd7b25242a97252df8c96__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1432:4",
										"nodeType": "YulBlock",
										"src": "0:1432:4",
										"statements": [
											{
												"nativeSrc": "6:3:4",
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:4",
													"nodeType": "YulBlock",
													"src": "74:117:4",
													"statements": [
														{
															"nativeSrc": "84:22:4",
															"nodeType": "YulAssignment",
															"src": "84:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:4"
																},
																"nativeSrc": "93:13:4",
																"nodeType": "YulFunctionCall",
																"src": "93:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:4",
																"nodeType": "YulBlock",
																"src": "169:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:4",
																					"nodeType": "YulLiteral",
																					"src": "178:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:4",
																					"nodeType": "YulLiteral",
																					"src": "181:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:4"
																			},
																			"nativeSrc": "171:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:4"
																		},
																		"nativeSrc": "171:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:4",
																										"nodeType": "YulLiteral",
																										"src": "154:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:4",
																										"nodeType": "YulLiteral",
																										"src": "159:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:4"
																								},
																								"nativeSrc": "150:11:4",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:4"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:4",
																								"nodeType": "YulLiteral",
																								"src": "163:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:4"
																						},
																						"nativeSrc": "146:19:4",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:4"
																				},
																				"nativeSrc": "135:31:4",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:4"
																		},
																		"nativeSrc": "125:42:4",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:4"
																},
																"nativeSrc": "118:50:4",
																"nodeType": "YulFunctionCall",
																"src": "118:50:4"
															},
															"nativeSrc": "115:70:4",
															"nodeType": "YulIf",
															"src": "115:70:4"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:4",
														"nodeType": "YulTypedName",
														"src": "53:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:4",
														"nodeType": "YulTypedName",
														"src": "64:5:4",
														"type": ""
													}
												],
												"src": "14:177:4"
											},
											{
												"body": {
													"nativeSrc": "294:195:4",
													"nodeType": "YulBlock",
													"src": "294:195:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "340:16:4",
																"nodeType": "YulBlock",
																"src": "340:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "349:1:4",
																					"nodeType": "YulLiteral",
																					"src": "349:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "352:1:4",
																					"nodeType": "YulLiteral",
																					"src": "352:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "342:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:4"
																			},
																			"nativeSrc": "342:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:4"
																		},
																		"nativeSrc": "342:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "315:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "324:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "311:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:4"
																		},
																		"nativeSrc": "311:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "336:2:4",
																		"nodeType": "YulLiteral",
																		"src": "336:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "307:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:4"
																},
																"nativeSrc": "307:32:4",
																"nodeType": "YulFunctionCall",
																"src": "307:32:4"
															},
															"nativeSrc": "304:52:4",
															"nodeType": "YulIf",
															"src": "304:52:4"
														},
														{
															"nativeSrc": "365:50:4",
															"nodeType": "YulAssignment",
															"src": "365:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "405:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "375:29:4",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:4"
																},
																"nativeSrc": "375:40:4",
																"nodeType": "YulFunctionCall",
																"src": "375:40:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "365:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:4"
																}
															]
														},
														{
															"nativeSrc": "424:59:4",
															"nodeType": "YulAssignment",
															"src": "424:59:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "468:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "479:2:4",
																				"nodeType": "YulLiteral",
																				"src": "479:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "464:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:4"
																		},
																		"nativeSrc": "464:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "434:29:4",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:4"
																},
																"nativeSrc": "434:49:4",
																"nodeType": "YulFunctionCall",
																"src": "434:49:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "424:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "196:293:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "252:9:4",
														"nodeType": "YulTypedName",
														"src": "252:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "263:7:4",
														"nodeType": "YulTypedName",
														"src": "263:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "275:6:4",
														"nodeType": "YulTypedName",
														"src": "275:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "283:6:4",
														"nodeType": "YulTypedName",
														"src": "283:6:4",
														"type": ""
													}
												],
												"src": "196:293:4"
											},
											{
												"body": {
													"nativeSrc": "668:175:4",
													"nodeType": "YulBlock",
													"src": "668:175:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "685:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "685:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "696:2:4",
																		"nodeType": "YulLiteral",
																		"src": "696:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "678:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "678:6:4"
																},
																"nativeSrc": "678:21:4",
																"nodeType": "YulFunctionCall",
																"src": "678:21:4"
															},
															"nativeSrc": "678:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "678:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "719:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "719:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "730:2:4",
																				"nodeType": "YulLiteral",
																				"src": "730:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "715:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "715:3:4"
																		},
																		"nativeSrc": "715:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "715:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "735:2:4",
																		"nodeType": "YulLiteral",
																		"src": "735:2:4",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "708:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "708:6:4"
																},
																"nativeSrc": "708:30:4",
																"nodeType": "YulFunctionCall",
																"src": "708:30:4"
															},
															"nativeSrc": "708:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "708:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "758:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "758:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "769:2:4",
																				"nodeType": "YulLiteral",
																				"src": "769:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "754:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "754:3:4"
																		},
																		"nativeSrc": "754:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "754:18:4"
																	},
																	{
																		"hexValue": "4f776e657220616464726573732063616e6e6f742062652030",
																		"kind": "string",
																		"nativeSrc": "774:27:4",
																		"nodeType": "YulLiteral",
																		"src": "774:27:4",
																		"type": "",
																		"value": "Owner address cannot be 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "747:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "747:6:4"
																},
																"nativeSrc": "747:55:4",
																"nodeType": "YulFunctionCall",
																"src": "747:55:4"
															},
															"nativeSrc": "747:55:4",
															"nodeType": "YulExpressionStatement",
															"src": "747:55:4"
														},
														{
															"nativeSrc": "811:26:4",
															"nodeType": "YulAssignment",
															"src": "811:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "823:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "823:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "834:2:4",
																		"nodeType": "YulLiteral",
																		"src": "834:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "819:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "819:3:4"
																},
																"nativeSrc": "819:18:4",
																"nodeType": "YulFunctionCall",
																"src": "819:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "811:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "811:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cbb17bca9ae641614fb20d9f081dbba535c7a48d3eadd7b25242a97252df8c96__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "494:349:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "645:9:4",
														"nodeType": "YulTypedName",
														"src": "645:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "659:4:4",
														"nodeType": "YulTypedName",
														"src": "659:4:4",
														"type": ""
													}
												],
												"src": "494:349:4"
											},
											{
												"body": {
													"nativeSrc": "977:175:4",
													"nodeType": "YulBlock",
													"src": "977:175:4",
													"statements": [
														{
															"nativeSrc": "987:26:4",
															"nodeType": "YulAssignment",
															"src": "987:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "999:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "999:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1010:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1010:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "995:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "995:3:4"
																},
																"nativeSrc": "995:18:4",
																"nodeType": "YulFunctionCall",
																"src": "995:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "987:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "987:4:4"
																}
															]
														},
														{
															"nativeSrc": "1022:29:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1022:29:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1040:3:4",
																				"nodeType": "YulLiteral",
																				"src": "1040:3:4",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1045:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1045:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1036:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1036:3:4"
																		},
																		"nativeSrc": "1036:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:11:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1049:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1049:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1032:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1032:3:4"
																},
																"nativeSrc": "1032:19:4",
																"nodeType": "YulFunctionCall",
																"src": "1032:19:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1026:2:4",
																	"nodeType": "YulTypedName",
																	"src": "1026:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1067:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1082:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1082:6:4"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "1090:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "1090:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1078:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1078:3:4"
																		},
																		"nativeSrc": "1078:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1078:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1060:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:4"
																},
																"nativeSrc": "1060:34:4",
																"nodeType": "YulFunctionCall",
																"src": "1060:34:4"
															},
															"nativeSrc": "1060:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "1060:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1114:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1114:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1125:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1125:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1110:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1110:3:4"
																		},
																		"nativeSrc": "1110:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1110:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "1134:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1134:6:4"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "1142:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "1142:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1130:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1130:3:4"
																		},
																		"nativeSrc": "1130:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1130:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1103:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1103:6:4"
																},
																"nativeSrc": "1103:43:4",
																"nodeType": "YulFunctionCall",
																"src": "1103:43:4"
															},
															"nativeSrc": "1103:43:4",
															"nodeType": "YulExpressionStatement",
															"src": "1103:43:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "848:304:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "938:9:4",
														"nodeType": "YulTypedName",
														"src": "938:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "949:6:4",
														"nodeType": "YulTypedName",
														"src": "949:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "957:6:4",
														"nodeType": "YulTypedName",
														"src": "957:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "968:4:4",
														"nodeType": "YulTypedName",
														"src": "968:4:4",
														"type": ""
													}
												],
												"src": "848:304:4"
											},
											{
												"body": {
													"nativeSrc": "1236:194:4",
													"nodeType": "YulBlock",
													"src": "1236:194:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1282:16:4",
																"nodeType": "YulBlock",
																"src": "1282:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1291:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1291:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1294:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1294:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1284:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1284:6:4"
																			},
																			"nativeSrc": "1284:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1284:12:4"
																		},
																		"nativeSrc": "1284:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1284:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1257:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1257:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1266:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1266:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1253:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1253:3:4"
																		},
																		"nativeSrc": "1253:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1253:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1278:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1278:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1249:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1249:3:4"
																},
																"nativeSrc": "1249:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1249:32:4"
															},
															"nativeSrc": "1246:52:4",
															"nodeType": "YulIf",
															"src": "1246:52:4"
														},
														{
															"nativeSrc": "1307:29:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1307:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1326:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1326:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1320:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1320:5:4"
																},
																"nativeSrc": "1320:16:4",
																"nodeType": "YulFunctionCall",
																"src": "1320:16:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1311:5:4",
																	"nodeType": "YulTypedName",
																	"src": "1311:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1384:16:4",
																"nodeType": "YulBlock",
																"src": "1384:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1393:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1393:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1396:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1396:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1386:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1386:6:4"
																			},
																			"nativeSrc": "1386:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1386:12:4"
																		},
																		"nativeSrc": "1386:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1386:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1358:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1358:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1369:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1369:5:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1376:4:4",
																						"nodeType": "YulLiteral",
																						"src": "1376:4:4",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1365:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1365:3:4"
																				},
																				"nativeSrc": "1365:16:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1365:16:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1355:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "1355:2:4"
																		},
																		"nativeSrc": "1355:27:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1355:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1348:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1348:6:4"
																},
																"nativeSrc": "1348:35:4",
																"nodeType": "YulFunctionCall",
																"src": "1348:35:4"
															},
															"nativeSrc": "1345:55:4",
															"nodeType": "YulIf",
															"src": "1345:55:4"
														},
														{
															"nativeSrc": "1409:15:4",
															"nodeType": "YulAssignment",
															"src": "1409:15:4",
															"value": {
																"name": "value",
																"nativeSrc": "1419:5:4",
																"nodeType": "YulIdentifier",
																"src": "1419:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1409:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1409:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nativeSrc": "1157:273:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1202:9:4",
														"nodeType": "YulTypedName",
														"src": "1202:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1213:7:4",
														"nodeType": "YulTypedName",
														"src": "1213:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1225:6:4",
														"nodeType": "YulTypedName",
														"src": "1225:6:4",
														"type": ""
													}
												],
												"src": "1157:273:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_cbb17bca9ae641614fb20d9f081dbba535c7a48d3eadd7b25242a97252df8c96__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Owner address cannot be 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052620f4240600655348015610016575f80fd5b50604051610e49380380610e4983398101604081905261003591610236565b816001600160a01b0381166100905760405162461bcd60e51b815260206004820152601960248201527f4f776e657220616464726573732063616e6e6f74206265203000000000000000604482015260640160405180910390fd5b5f80546001600160a01b0319166001600160a01b03831690811782556040805192835260208301919091527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a150600780546001600160a01b03199081166001600160a01b03841617909155600280547374dcbd8b2128437b78b77da6d387b8ab0e5d4acb9216821790556040805163313ce56760e01b8152905163313ce567916004808201926020929091908290030181865afa15801561015d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101819190610267565b60ff166004908155600380546001600160a01b03191673cd2a119bd1f7df95d706de6f2057fdd45a0503e29081179091556040805163313ce56760e01b81529051919263313ce5679282820192602092908290030181865afa1580156101e9573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061020d9190610267565b60ff166005555061028e9050565b80516001600160a01b0381168114610231575f80fd5b919050565b5f8060408385031215610247575f80fd5b6102508361021b565b915061025e6020840161021b565b90509250929050565b5f60208284031215610277575f80fd5b815160ff81168114610287575f80fd5b9392505050565b610bae8061029b5f395ff3fe608060405234801561000f575f80fd5b50600436106100cb575f3560e01c80638da5cb5b11610088578063a2dcb4f511610063578063a2dcb4f51461017c578063a607a8d91461018f578063d6c6c4ac14610197578063dc6663c7146101a0575f80fd5b80638da5cb5b1461014e5780638e409a791461016057806395082d2514610173575f80fd5b80631627540c146100cf5780633ddac953146100e457806353a47bb71461010a578063753b5f8a1461013557806379ba50971461013e57806388e5a49114610146575b5f80fd5b6100e26100dd366004610935565b6101b3565b005b6100f76100f236600461094e565b61027d565b6040519081526020015b60405180910390f35b60015461011d906001600160a01b031681565b6040516001600160a01b039091168152602001610101565b6100f760055481565b6100e261034a565b6100f7610432565b5f5461011d906001600160a01b031681565b6100e261016e366004610935565b610550565b6100f760065481565b6100e261018a366004610935565b61063a565b6100f7610724565b6100f760045481565b60075461011d906001600160a01b031681565b5f546001600160a01b031633146102295760405162461bcd60e51b815260206004820152602f60248201527f4f6e6c792074686520636f6e7472616374206f776e6572206d6179207065726660448201526e37b936903a3434b99030b1ba34b7b760891b60648201526084015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce229060200160405180910390a150565b5f6006602160991b016001600160a01b038416146102d55760405162461bcd60e51b81526020600482015260156024820152746d757374207573652077657468206164647265737360581b6044820152606401610220565b81620f42401461031c5760405162461bcd60e51b815260206004820152601260248201527136bab9ba1031b0b636103bb4ba341018b29b60711b6044820152606401610220565b610341610327610432565b61033b600654610335610724565b9061082b565b906108a9565b90505b92915050565b6001546001600160a01b031633146103c25760405162461bcd60e51b815260206004820152603560248201527f596f75206d757374206265206e6f6d696e61746564206265666f726520796f7560448201527402063616e20616363657074206f776e65727368697605c1b6064820152608401610220565b5f54600154604080516001600160a01b0393841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a1600180545f80546001600160a01b03199081166001600160a01b03841617909155169055565b5f805f805f60025f9054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610487573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104ab919061098c565b9450945050935093505f83121580156104c357508115155b80156104e15750836001600160501b0316816001600160501b031610155b6105275760405162461bcd60e51b8152602060048201526017602482015276496e76616c696420636861696e6c696e6b20707269636560481b6044820152606401610220565b610547600454600a6105399190610acc565b60065461033b90869061082b565b94505050505090565b5f546001600160a01b031633148061057257506007546001600160a01b031633145b6105b65760405162461bcd60e51b81526020600482015260156024820152744e6f74206f776e6572206f722074696d656c6f636b60581b6044820152606401610220565b600380546001600160a01b0319166001600160a01b0383169081179091556040805163313ce56760e01b8152905163313ce567916004808201926020929091908290030181865afa15801561060d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106319190610ad7565b60ff1660055550565b5f546001600160a01b031633148061065c57506007546001600160a01b031633145b6106a05760405162461bcd60e51b81526020600482015260156024820152744e6f74206f776e6572206f722074696d656c6f636b60581b6044820152606401610220565b600280546001600160a01b0319166001600160a01b0383169081179091556040805163313ce56760e01b8152905163313ce567916004808201926020929091908290030181865afa1580156106f7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061071b9190610ad7565b60ff1660045550565b5f805f805f60035f9054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610779573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061079d919061098c565b9450945050935093505f83121580156107b557508115155b80156107d35750836001600160501b0316816001600160501b031610155b6108195760405162461bcd60e51b8152602060048201526017602482015276496e76616c696420636861696e6c696e6b20707269636560481b6044820152606401610220565b610547600554600a6105399190610acc565b5f825f0361083a57505f610344565b5f6108458385610af7565b9050826108528583610b0e565b146103415760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610220565b5f61034183836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152505f81836109055760405162461bcd60e51b81526004016102209190610b2d565b505f6109118486610b0e565b95945050505050565b80356001600160a01b0381168114610930575f80fd5b919050565b5f60208284031215610945575f80fd5b6103418261091a565b5f806040838503121561095f575f80fd5b6109688361091a565b946020939093013593505050565b80516001600160501b0381168114610930575f80fd5b5f805f805f60a086880312156109a0575f80fd5b6109a986610976565b94506020860151935060408601519250606086015191506109cc60808701610976565b90509295509295909350565b634e487b7160e01b5f52601160045260245ffd5b600181815b80851115610a2657815f1904821115610a0c57610a0c6109d8565b80851615610a1957918102915b93841c93908002906109f1565b509250929050565b5f82610a3c57506001610344565b81610a4857505f610344565b8160018114610a5e5760028114610a6857610a84565b6001915050610344565b60ff841115610a7957610a796109d8565b50506001821b610344565b5060208310610133831016604e8410600b8410161715610aa7575081810a610344565b610ab183836109ec565b805f1904821115610ac457610ac46109d8565b029392505050565b5f6103418383610a2e565b5f60208284031215610ae7575f80fd5b815160ff81168114610341575f80fd5b8082028115828204841417610344576103446109d8565b5f82610b2857634e487b7160e01b5f52601260045260245ffd5b500490565b5f6020808352835180828501525f5b81811015610b5857858101830151858201604001528201610b3c565b505f604082860101526040601f19601f830116850101925050509291505056fea264697066735822122059adb05277171557398b71241c7ab68ce942286a187981e383467c28e7e37e4864736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0xF4240 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x16 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xE49 CODESIZE SUB DUP1 PUSH2 0xE49 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x35 SWAP2 PUSH2 0x236 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E657220616464726573732063616E6E6F74206265203000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH20 0x74DCBD8B2128437B78B77DA6D387B8AB0E5D4ACB SWAP3 AND DUP3 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x267 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x4 SWAP1 DUP2 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0xCD2A119BD1F7DF95D706DE6F2057FDD45A0503E2 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 PUSH4 0x313CE567 SWAP3 DUP3 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x267 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x5 SSTORE POP PUSH2 0x28E SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x231 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x247 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x250 DUP4 PUSH2 0x21B JUMP JUMPDEST SWAP2 POP PUSH2 0x25E PUSH1 0x20 DUP5 ADD PUSH2 0x21B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x277 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x287 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xBAE DUP1 PUSH2 0x29B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x88 JUMPI DUP1 PUSH4 0xA2DCB4F5 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA2DCB4F5 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xA607A8D9 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0xD6C6C4AC EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0xDC6663C7 EQ PUSH2 0x1A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x8E409A79 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x95082D25 EQ PUSH2 0x173 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1627540C EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x3DDAC953 EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x53A47BB7 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x753B5F8A EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x88E5A491 EQ PUSH2 0x146 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE2 PUSH2 0xDD CALLDATASIZE PUSH1 0x4 PUSH2 0x935 JUMP JUMPDEST PUSH2 0x1B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF7 PUSH2 0xF2 CALLDATASIZE PUSH1 0x4 PUSH2 0x94E JUMP JUMPDEST PUSH2 0x27D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x11D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x101 JUMP JUMPDEST PUSH2 0xF7 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE2 PUSH2 0x34A JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x432 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x11D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xE2 PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0x935 JUMP JUMPDEST PUSH2 0x550 JUMP JUMPDEST PUSH2 0xF7 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE2 PUSH2 0x18A CALLDATASIZE PUSH1 0x4 PUSH2 0x935 JUMP JUMPDEST PUSH2 0x63A JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x724 JUMP JUMPDEST PUSH2 0xF7 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x11D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x229 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792074686520636F6E7472616374206F776E6572206D61792070657266 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x37B936903A3434B99030B1BA34B7B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH1 0x21 PUSH1 0x99 SHL ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x2D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x6D7573742075736520776574682061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x220 JUMP JUMPDEST DUP2 PUSH3 0xF4240 EQ PUSH2 0x31C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x36BAB9BA1031B0B636103BB4BA341018B29B PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x220 JUMP JUMPDEST PUSH2 0x341 PUSH2 0x327 PUSH2 0x432 JUMP JUMPDEST PUSH2 0x33B PUSH1 0x6 SLOAD PUSH2 0x335 PUSH2 0x724 JUMP JUMPDEST SWAP1 PUSH2 0x82B JUMP JUMPDEST SWAP1 PUSH2 0x8A9 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206D757374206265206E6F6D696E61746564206265666F726520796F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x2063616E20616363657074206F776E65727368697 PUSH1 0x5C SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x220 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x487 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x98C JUMP JUMPDEST SWAP5 POP SWAP5 POP POP SWAP4 POP SWAP4 POP PUSH0 DUP4 SLT ISZERO DUP1 ISZERO PUSH2 0x4C3 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x4E1 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND LT ISZERO JUMPDEST PUSH2 0x527 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x496E76616C696420636861696E6C696E6B207072696365 PUSH1 0x48 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x220 JUMP JUMPDEST PUSH2 0x547 PUSH1 0x4 SLOAD PUSH1 0xA PUSH2 0x539 SWAP2 SWAP1 PUSH2 0xACC JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x33B SWAP1 DUP7 SWAP1 PUSH2 0x82B JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x572 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x5B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F74206F776E6572206F722074696D656C6F636B PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x220 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x60D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x631 SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x5 SSTORE POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x65C JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x6A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F74206F776E6572206F722074696D656C6F636B PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x220 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6F7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x71B SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x4 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x779 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x79D SWAP2 SWAP1 PUSH2 0x98C JUMP JUMPDEST SWAP5 POP SWAP5 POP POP SWAP4 POP SWAP4 POP PUSH0 DUP4 SLT ISZERO DUP1 ISZERO PUSH2 0x7B5 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x7D3 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND LT ISZERO JUMPDEST PUSH2 0x819 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x496E76616C696420636861696E6C696E6B207072696365 PUSH1 0x48 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x220 JUMP JUMPDEST PUSH2 0x547 PUSH1 0x5 SLOAD PUSH1 0xA PUSH2 0x539 SWAP2 SWAP1 PUSH2 0xACC JUMP JUMPDEST PUSH0 DUP3 PUSH0 SUB PUSH2 0x83A JUMPI POP PUSH0 PUSH2 0x344 JUMP JUMPDEST PUSH0 PUSH2 0x845 DUP4 DUP6 PUSH2 0xAF7 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x852 DUP6 DUP4 PUSH2 0xB0E JUMP JUMPDEST EQ PUSH2 0x341 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x220 JUMP JUMPDEST PUSH0 PUSH2 0x341 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH0 DUP2 DUP4 PUSH2 0x905 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0xB2D JUMP JUMPDEST POP PUSH0 PUSH2 0x911 DUP5 DUP7 PUSH2 0xB0E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x930 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x945 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x341 DUP3 PUSH2 0x91A JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x95F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x968 DUP4 PUSH2 0x91A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x930 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x9A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9A9 DUP7 PUSH2 0x976 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x9CC PUSH1 0x80 DUP8 ADD PUSH2 0x976 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0xA26 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0xA0C JUMPI PUSH2 0xA0C PUSH2 0x9D8 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0xA19 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x9F1 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xA3C JUMPI POP PUSH1 0x1 PUSH2 0x344 JUMP JUMPDEST DUP2 PUSH2 0xA48 JUMPI POP PUSH0 PUSH2 0x344 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xA5E JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xA68 JUMPI PUSH2 0xA84 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x344 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xA79 JUMPI PUSH2 0xA79 PUSH2 0x9D8 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x344 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xAA7 JUMPI POP DUP2 DUP2 EXP PUSH2 0x344 JUMP JUMPDEST PUSH2 0xAB1 DUP4 DUP4 PUSH2 0x9EC JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0xAC4 JUMPI PUSH2 0xAC4 PUSH2 0x9D8 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x341 DUP4 DUP4 PUSH2 0xA2E JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAE7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x341 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x344 JUMPI PUSH2 0x344 PUSH2 0x9D8 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xB28 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB58 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xB3C JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0xAD 0xB0 MSTORE PUSH24 0x171557398B71241C7AB68CE942286A187981E383467C28E7 0xE3 PUSH31 0x4864736F6C6343000815003300000000000000000000000000000000000000 ",
							"sourceMap": "1268:3061:2:-:0;;;1573:3;1540:36;;1853:521;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1947:16;-1:-1:-1;;;;;254:20:3;;246:58;;;;-1:-1:-1;;;246:58:3;;696:2:4;246:58:3;;;678:21:4;735:2;715:18;;;708:30;774:27;754:18;;;747:55;819:18;;246:58:3;;;;;;;;314:5;:14;;-1:-1:-1;;;;;;314:14:3;-1:-1:-1;;;;;314:14:3;;;;;;;343:32;;;1060:34:4;;;1125:2;1110:18;;1103:43;;;;343:32:3;;995:18:4;343:32:3;;;;;;;-1:-1:-1;1975:16:2::1;:36:::0;;-1:-1:-1;;;;;;1975:36:2;;::::1;-1:-1:-1::0;;;;;1975:36:2;::::1;;::::0;;;2041:15:::1;:83:::0;;2081:42:::1;2041:83:::0;::::1;::::0;::::1;::::0;;2163:26:::1;::::0;;-1:-1:-1;;;2163:26:2;;;;:24:::1;::::0;:26:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;2081:42;2163:26:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2134:55;;:26;:55:::0;;;2219:15:::1;:83:::0;;-1:-1:-1;;;;;;2219:83:2::1;2259:42;2219:83:::0;;::::1;::::0;;;2341:26:::1;::::0;;-1:-1:-1;;;2341:26:2;;;;2259:42;;2341:24:::1;::::0;:26;;::::1;::::0;::::1;::::0;;;;;;;2259:42;2341:26:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2312:55;;:26;:55:::0;-1:-1:-1;1268:3061:2;;-1:-1:-1;1268:3061:2;14:177:4;93:13;;-1:-1:-1;;;;;135:31:4;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;1157:273::-;1225:6;1278:2;1266:9;1257:7;1253:23;1249:32;1246:52;;;1294:1;1291;1284:12;1246:52;1326:9;1320:16;1376:4;1369:5;1365:16;1358:5;1355:27;1345:55;;1396:1;1393;1386:12;1345:55;1419:5;1157:273;-1:-1:-1;;;1157:273:4:o;:::-;1268:3061:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@PRICE_PRECISION_264": {
									"entryPoint": null,
									"id": 264,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@acceptOwnership_567": {
									"entryPoint": 842,
									"id": 567,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@chainlink_eth_usd_decimals_261": {
									"entryPoint": null,
									"id": 261,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@chainlink_fxs_usd_decimals_259": {
									"entryPoint": null,
									"id": 259,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@consult_448": {
									"entryPoint": 637,
									"id": 448,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_125": {
									"entryPoint": 2217,
									"id": 125,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_153": {
									"entryPoint": null,
									"id": 153,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getETHPrice_414": {
									"entryPoint": 1828,
									"id": 414,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getFXSPrice_368": {
									"entryPoint": 1074,
									"id": 368,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mul_108": {
									"entryPoint": 2091,
									"id": 108,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@nominateNewOwner_539": {
									"entryPoint": 435,
									"id": 539,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@nominatedOwner_495": {
									"entryPoint": null,
									"id": 495,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_493": {
									"entryPoint": null,
									"id": 493,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setChainlinkETHUSDOracle_488": {
									"entryPoint": 1360,
									"id": 488,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setChainlinkFXSUSDOracle_468": {
									"entryPoint": 1594,
									"id": 468,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@timelock_address_266": {
									"entryPoint": null,
									"id": 266,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 2330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 2444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 2775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint80_fromMemory": {
									"entryPoint": 2422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2341f105161714f01185492f4233d98f530a1e8435cfd3bb617e411e8f94580d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7cfd4f35ab8fcb6190c3524b53b79ab146a9c0a4fb320fe337eb730f1272bb12__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8f7cea8b044c17561008c31ba3e3f1e1850745f95f81afb164efa71262c8a172__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b838eb2b03d57c64344c196649920d623fd5c75f9bcd1c0173705b1e20f4783c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 2764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2520,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7371:4",
										"nodeType": "YulBlock",
										"src": "0:7371:4",
										"statements": [
											{
												"nativeSrc": "6:3:4",
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "63:124:4",
													"nodeType": "YulBlock",
													"src": "63:124:4",
													"statements": [
														{
															"nativeSrc": "73:29:4",
															"nodeType": "YulAssignment",
															"src": "73:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "95:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "82:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:4"
																},
																"nativeSrc": "82:20:4",
																"nodeType": "YulFunctionCall",
																"src": "82:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "73:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "165:16:4",
																"nodeType": "YulBlock",
																"src": "165:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "174:1:4",
																					"nodeType": "YulLiteral",
																					"src": "174:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "177:1:4",
																					"nodeType": "YulLiteral",
																					"src": "177:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "167:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:4"
																			},
																			"nativeSrc": "167:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:4"
																		},
																		"nativeSrc": "167:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "124:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "135:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "150:3:4",
																										"nodeType": "YulLiteral",
																										"src": "150:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "155:1:4",
																										"nodeType": "YulLiteral",
																										"src": "155:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "146:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:4"
																								},
																								"nativeSrc": "146:11:4",
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:4"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "159:1:4",
																								"nodeType": "YulLiteral",
																								"src": "159:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "142:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:4"
																						},
																						"nativeSrc": "142:19:4",
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "131:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:4"
																				},
																				"nativeSrc": "131:31:4",
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "121:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:4"
																		},
																		"nativeSrc": "121:42:4",
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "114:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:4"
																},
																"nativeSrc": "114:50:4",
																"nodeType": "YulFunctionCall",
																"src": "114:50:4"
															},
															"nativeSrc": "111:70:4",
															"nodeType": "YulIf",
															"src": "111:70:4"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "14:173:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "42:6:4",
														"nodeType": "YulTypedName",
														"src": "42:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "53:5:4",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "14:173:4"
											},
											{
												"body": {
													"nativeSrc": "262:116:4",
													"nodeType": "YulBlock",
													"src": "262:116:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "308:16:4",
																"nodeType": "YulBlock",
																"src": "308:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "317:1:4",
																					"nodeType": "YulLiteral",
																					"src": "317:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "320:1:4",
																					"nodeType": "YulLiteral",
																					"src": "320:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "310:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:4"
																			},
																			"nativeSrc": "310:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:4"
																		},
																		"nativeSrc": "310:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "283:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "292:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "279:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:4"
																		},
																		"nativeSrc": "279:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "304:2:4",
																		"nodeType": "YulLiteral",
																		"src": "304:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "275:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:4"
																},
																"nativeSrc": "275:32:4",
																"nodeType": "YulFunctionCall",
																"src": "275:32:4"
															},
															"nativeSrc": "272:52:4",
															"nodeType": "YulIf",
															"src": "272:52:4"
														},
														{
															"nativeSrc": "333:39:4",
															"nodeType": "YulAssignment",
															"src": "333:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "362:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "343:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:4"
																},
																"nativeSrc": "343:29:4",
																"nodeType": "YulFunctionCall",
																"src": "343:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "333:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "192:186:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "228:9:4",
														"nodeType": "YulTypedName",
														"src": "228:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "239:7:4",
														"nodeType": "YulTypedName",
														"src": "239:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "251:6:4",
														"nodeType": "YulTypedName",
														"src": "251:6:4",
														"type": ""
													}
												],
												"src": "192:186:4"
											},
											{
												"body": {
													"nativeSrc": "470:167:4",
													"nodeType": "YulBlock",
													"src": "470:167:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "516:16:4",
																"nodeType": "YulBlock",
																"src": "516:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "525:1:4",
																					"nodeType": "YulLiteral",
																					"src": "525:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "528:1:4",
																					"nodeType": "YulLiteral",
																					"src": "528:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "518:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:4"
																			},
																			"nativeSrc": "518:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:4"
																		},
																		"nativeSrc": "518:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "491:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "500:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "487:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:4"
																		},
																		"nativeSrc": "487:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "512:2:4",
																		"nodeType": "YulLiteral",
																		"src": "512:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "483:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:4"
																},
																"nativeSrc": "483:32:4",
																"nodeType": "YulFunctionCall",
																"src": "483:32:4"
															},
															"nativeSrc": "480:52:4",
															"nodeType": "YulIf",
															"src": "480:52:4"
														},
														{
															"nativeSrc": "541:39:4",
															"nodeType": "YulAssignment",
															"src": "541:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "570:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "551:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:4"
																},
																"nativeSrc": "551:29:4",
																"nodeType": "YulFunctionCall",
																"src": "551:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "541:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:4"
																}
															]
														},
														{
															"nativeSrc": "589:42:4",
															"nodeType": "YulAssignment",
															"src": "589:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "616:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "616:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "627:2:4",
																				"nodeType": "YulLiteral",
																				"src": "627:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "612:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "612:3:4"
																		},
																		"nativeSrc": "612:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "612:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "599:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "599:12:4"
																},
																"nativeSrc": "599:32:4",
																"nodeType": "YulFunctionCall",
																"src": "599:32:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "589:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "383:254:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "428:9:4",
														"nodeType": "YulTypedName",
														"src": "428:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "439:7:4",
														"nodeType": "YulTypedName",
														"src": "439:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "451:6:4",
														"nodeType": "YulTypedName",
														"src": "451:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "459:6:4",
														"nodeType": "YulTypedName",
														"src": "459:6:4",
														"type": ""
													}
												],
												"src": "383:254:4"
											},
											{
												"body": {
													"nativeSrc": "743:76:4",
													"nodeType": "YulBlock",
													"src": "743:76:4",
													"statements": [
														{
															"nativeSrc": "753:26:4",
															"nodeType": "YulAssignment",
															"src": "753:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "765:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "765:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "776:2:4",
																		"nodeType": "YulLiteral",
																		"src": "776:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "761:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "761:3:4"
																},
																"nativeSrc": "761:18:4",
																"nodeType": "YulFunctionCall",
																"src": "761:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "753:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "753:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "795:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "795:9:4"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "806:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "806:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "788:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "788:6:4"
																},
																"nativeSrc": "788:25:4",
																"nodeType": "YulFunctionCall",
																"src": "788:25:4"
															},
															"nativeSrc": "788:25:4",
															"nodeType": "YulExpressionStatement",
															"src": "788:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "642:177:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "712:9:4",
														"nodeType": "YulTypedName",
														"src": "712:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "723:6:4",
														"nodeType": "YulTypedName",
														"src": "723:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "734:4:4",
														"nodeType": "YulTypedName",
														"src": "734:4:4",
														"type": ""
													}
												],
												"src": "642:177:4"
											},
											{
												"body": {
													"nativeSrc": "925:102:4",
													"nodeType": "YulBlock",
													"src": "925:102:4",
													"statements": [
														{
															"nativeSrc": "935:26:4",
															"nodeType": "YulAssignment",
															"src": "935:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "947:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "947:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "958:2:4",
																		"nodeType": "YulLiteral",
																		"src": "958:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "943:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "943:3:4"
																},
																"nativeSrc": "943:18:4",
																"nodeType": "YulFunctionCall",
																"src": "943:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "935:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "935:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "977:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "977:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "992:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "992:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1008:3:4",
																								"nodeType": "YulLiteral",
																								"src": "1008:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1013:1:4",
																								"nodeType": "YulLiteral",
																								"src": "1013:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1004:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "1004:3:4"
																						},
																						"nativeSrc": "1004:11:4",
																						"nodeType": "YulFunctionCall",
																						"src": "1004:11:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1017:1:4",
																						"nodeType": "YulLiteral",
																						"src": "1017:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1000:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1000:3:4"
																				},
																				"nativeSrc": "1000:19:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1000:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "988:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "988:3:4"
																		},
																		"nativeSrc": "988:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "988:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "970:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "970:6:4"
																},
																"nativeSrc": "970:51:4",
																"nodeType": "YulFunctionCall",
																"src": "970:51:4"
															},
															"nativeSrc": "970:51:4",
															"nodeType": "YulExpressionStatement",
															"src": "970:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "824:203:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "894:9:4",
														"nodeType": "YulTypedName",
														"src": "894:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "905:6:4",
														"nodeType": "YulTypedName",
														"src": "905:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "916:4:4",
														"nodeType": "YulTypedName",
														"src": "916:4:4",
														"type": ""
													}
												],
												"src": "824:203:4"
											},
											{
												"body": {
													"nativeSrc": "1206:237:4",
													"nodeType": "YulBlock",
													"src": "1206:237:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1223:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1223:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1234:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1234:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1216:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1216:6:4"
																},
																"nativeSrc": "1216:21:4",
																"nodeType": "YulFunctionCall",
																"src": "1216:21:4"
															},
															"nativeSrc": "1216:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "1216:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1257:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1257:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1268:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1268:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1253:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1253:3:4"
																		},
																		"nativeSrc": "1253:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1253:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1273:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1273:2:4",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1246:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1246:6:4"
																},
																"nativeSrc": "1246:30:4",
																"nodeType": "YulFunctionCall",
																"src": "1246:30:4"
															},
															"nativeSrc": "1246:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "1246:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1296:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1296:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1307:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1307:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1292:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1292:3:4"
																		},
																		"nativeSrc": "1292:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1292:18:4"
																	},
																	{
																		"hexValue": "4f6e6c792074686520636f6e7472616374206f776e6572206d61792070657266",
																		"kind": "string",
																		"nativeSrc": "1312:34:4",
																		"nodeType": "YulLiteral",
																		"src": "1312:34:4",
																		"type": "",
																		"value": "Only the contract owner may perf"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1285:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1285:6:4"
																},
																"nativeSrc": "1285:62:4",
																"nodeType": "YulFunctionCall",
																"src": "1285:62:4"
															},
															"nativeSrc": "1285:62:4",
															"nodeType": "YulExpressionStatement",
															"src": "1285:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1367:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1367:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1378:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1378:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1363:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1363:3:4"
																		},
																		"nativeSrc": "1363:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1363:18:4"
																	},
																	{
																		"hexValue": "6f726d207468697320616374696f6e",
																		"kind": "string",
																		"nativeSrc": "1383:17:4",
																		"nodeType": "YulLiteral",
																		"src": "1383:17:4",
																		"type": "",
																		"value": "orm this action"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1356:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1356:6:4"
																},
																"nativeSrc": "1356:45:4",
																"nodeType": "YulFunctionCall",
																"src": "1356:45:4"
															},
															"nativeSrc": "1356:45:4",
															"nodeType": "YulExpressionStatement",
															"src": "1356:45:4"
														},
														{
															"nativeSrc": "1410:27:4",
															"nodeType": "YulAssignment",
															"src": "1410:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1422:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1422:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1433:3:4",
																		"nodeType": "YulLiteral",
																		"src": "1433:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1418:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1418:3:4"
																},
																"nativeSrc": "1418:19:4",
																"nodeType": "YulFunctionCall",
																"src": "1418:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1410:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1410:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1032:411:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1183:9:4",
														"nodeType": "YulTypedName",
														"src": "1183:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1197:4:4",
														"nodeType": "YulTypedName",
														"src": "1197:4:4",
														"type": ""
													}
												],
												"src": "1032:411:4"
											},
											{
												"body": {
													"nativeSrc": "1622:171:4",
													"nodeType": "YulBlock",
													"src": "1622:171:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1639:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1639:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1650:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1650:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1632:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1632:6:4"
																},
																"nativeSrc": "1632:21:4",
																"nodeType": "YulFunctionCall",
																"src": "1632:21:4"
															},
															"nativeSrc": "1632:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "1632:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1673:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1673:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1684:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1684:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1669:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1669:3:4"
																		},
																		"nativeSrc": "1669:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1669:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1689:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1689:2:4",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1662:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1662:6:4"
																},
																"nativeSrc": "1662:30:4",
																"nodeType": "YulFunctionCall",
																"src": "1662:30:4"
															},
															"nativeSrc": "1662:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "1662:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1712:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1712:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1723:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1723:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1708:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1708:3:4"
																		},
																		"nativeSrc": "1708:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1708:18:4"
																	},
																	{
																		"hexValue": "6d7573742075736520776574682061646472657373",
																		"kind": "string",
																		"nativeSrc": "1728:23:4",
																		"nodeType": "YulLiteral",
																		"src": "1728:23:4",
																		"type": "",
																		"value": "must use weth address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1701:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1701:6:4"
																},
																"nativeSrc": "1701:51:4",
																"nodeType": "YulFunctionCall",
																"src": "1701:51:4"
															},
															"nativeSrc": "1701:51:4",
															"nodeType": "YulExpressionStatement",
															"src": "1701:51:4"
														},
														{
															"nativeSrc": "1761:26:4",
															"nodeType": "YulAssignment",
															"src": "1761:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1773:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1773:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1784:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1784:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1769:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1769:3:4"
																},
																"nativeSrc": "1769:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1769:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1761:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1761:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8f7cea8b044c17561008c31ba3e3f1e1850745f95f81afb164efa71262c8a172__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1448:345:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1599:9:4",
														"nodeType": "YulTypedName",
														"src": "1599:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1613:4:4",
														"nodeType": "YulTypedName",
														"src": "1613:4:4",
														"type": ""
													}
												],
												"src": "1448:345:4"
											},
											{
												"body": {
													"nativeSrc": "1972:168:4",
													"nodeType": "YulBlock",
													"src": "1972:168:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1989:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1989:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2000:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2000:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1982:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1982:6:4"
																},
																"nativeSrc": "1982:21:4",
																"nodeType": "YulFunctionCall",
																"src": "1982:21:4"
															},
															"nativeSrc": "1982:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "1982:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2023:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2023:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2034:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2034:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2019:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2019:3:4"
																		},
																		"nativeSrc": "2019:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2019:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2039:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2039:2:4",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2012:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2012:6:4"
																},
																"nativeSrc": "2012:30:4",
																"nodeType": "YulFunctionCall",
																"src": "2012:30:4"
															},
															"nativeSrc": "2012:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "2012:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2062:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2062:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2073:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2073:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2058:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2058:3:4"
																		},
																		"nativeSrc": "2058:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2058:18:4"
																	},
																	{
																		"hexValue": "6d7573742063616c6c207769746820316536",
																		"kind": "string",
																		"nativeSrc": "2078:20:4",
																		"nodeType": "YulLiteral",
																		"src": "2078:20:4",
																		"type": "",
																		"value": "must call with 1e6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2051:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:4"
																},
																"nativeSrc": "2051:48:4",
																"nodeType": "YulFunctionCall",
																"src": "2051:48:4"
															},
															"nativeSrc": "2051:48:4",
															"nodeType": "YulExpressionStatement",
															"src": "2051:48:4"
														},
														{
															"nativeSrc": "2108:26:4",
															"nodeType": "YulAssignment",
															"src": "2108:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2120:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2120:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2131:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2131:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2116:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2116:3:4"
																},
																"nativeSrc": "2116:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2116:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2108:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2108:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7cfd4f35ab8fcb6190c3524b53b79ab146a9c0a4fb320fe337eb730f1272bb12__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1798:342:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1949:9:4",
														"nodeType": "YulTypedName",
														"src": "1949:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1963:4:4",
														"nodeType": "YulTypedName",
														"src": "1963:4:4",
														"type": ""
													}
												],
												"src": "1798:342:4"
											},
											{
												"body": {
													"nativeSrc": "2319:243:4",
													"nodeType": "YulBlock",
													"src": "2319:243:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2336:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2336:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2347:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2347:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2329:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2329:6:4"
																},
																"nativeSrc": "2329:21:4",
																"nodeType": "YulFunctionCall",
																"src": "2329:21:4"
															},
															"nativeSrc": "2329:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "2329:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2370:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2370:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2381:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2381:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2366:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2366:3:4"
																		},
																		"nativeSrc": "2366:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2366:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2386:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2386:2:4",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2359:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2359:6:4"
																},
																"nativeSrc": "2359:30:4",
																"nodeType": "YulFunctionCall",
																"src": "2359:30:4"
															},
															"nativeSrc": "2359:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "2359:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2409:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2409:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2420:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2420:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2405:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2405:3:4"
																		},
																		"nativeSrc": "2405:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2405:18:4"
																	},
																	{
																		"hexValue": "596f75206d757374206265206e6f6d696e61746564206265666f726520796f75",
																		"kind": "string",
																		"nativeSrc": "2425:34:4",
																		"nodeType": "YulLiteral",
																		"src": "2425:34:4",
																		"type": "",
																		"value": "You must be nominated before you"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2398:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2398:6:4"
																},
																"nativeSrc": "2398:62:4",
																"nodeType": "YulFunctionCall",
																"src": "2398:62:4"
															},
															"nativeSrc": "2398:62:4",
															"nodeType": "YulExpressionStatement",
															"src": "2398:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2480:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2480:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2491:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2491:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2476:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2476:3:4"
																		},
																		"nativeSrc": "2476:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2476:18:4"
																	},
																	{
																		"hexValue": "2063616e20616363657074206f776e657273686970",
																		"kind": "string",
																		"nativeSrc": "2496:23:4",
																		"nodeType": "YulLiteral",
																		"src": "2496:23:4",
																		"type": "",
																		"value": " can accept ownership"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2469:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2469:6:4"
																},
																"nativeSrc": "2469:51:4",
																"nodeType": "YulFunctionCall",
																"src": "2469:51:4"
															},
															"nativeSrc": "2469:51:4",
															"nodeType": "YulExpressionStatement",
															"src": "2469:51:4"
														},
														{
															"nativeSrc": "2529:27:4",
															"nodeType": "YulAssignment",
															"src": "2529:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2541:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2541:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2552:3:4",
																		"nodeType": "YulLiteral",
																		"src": "2552:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2537:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2537:3:4"
																},
																"nativeSrc": "2537:19:4",
																"nodeType": "YulFunctionCall",
																"src": "2537:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2529:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2529:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2145:417:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2296:9:4",
														"nodeType": "YulTypedName",
														"src": "2296:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2310:4:4",
														"nodeType": "YulTypedName",
														"src": "2310:4:4",
														"type": ""
													}
												],
												"src": "2145:417:4"
											},
											{
												"body": {
													"nativeSrc": "2696:175:4",
													"nodeType": "YulBlock",
													"src": "2696:175:4",
													"statements": [
														{
															"nativeSrc": "2706:26:4",
															"nodeType": "YulAssignment",
															"src": "2706:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2718:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2718:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2729:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2729:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2714:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2714:3:4"
																},
																"nativeSrc": "2714:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2714:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2706:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2706:4:4"
																}
															]
														},
														{
															"nativeSrc": "2741:29:4",
															"nodeType": "YulVariableDeclaration",
															"src": "2741:29:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2759:3:4",
																				"nodeType": "YulLiteral",
																				"src": "2759:3:4",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2764:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2764:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2755:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2755:3:4"
																		},
																		"nativeSrc": "2755:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2755:11:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2768:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2768:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "2751:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2751:3:4"
																},
																"nativeSrc": "2751:19:4",
																"nodeType": "YulFunctionCall",
																"src": "2751:19:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2745:2:4",
																	"nodeType": "YulTypedName",
																	"src": "2745:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2786:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2786:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2801:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2801:6:4"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "2809:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "2809:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2797:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2797:3:4"
																		},
																		"nativeSrc": "2797:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2797:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2779:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2779:6:4"
																},
																"nativeSrc": "2779:34:4",
																"nodeType": "YulFunctionCall",
																"src": "2779:34:4"
															},
															"nativeSrc": "2779:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "2779:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2833:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2833:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2844:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2844:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2829:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2829:3:4"
																		},
																		"nativeSrc": "2829:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2829:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "2853:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2853:6:4"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "2861:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "2861:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2849:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2849:3:4"
																		},
																		"nativeSrc": "2849:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2849:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2822:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2822:6:4"
																},
																"nativeSrc": "2822:43:4",
																"nodeType": "YulFunctionCall",
																"src": "2822:43:4"
															},
															"nativeSrc": "2822:43:4",
															"nodeType": "YulExpressionStatement",
															"src": "2822:43:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "2567:304:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2657:9:4",
														"nodeType": "YulTypedName",
														"src": "2657:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2668:6:4",
														"nodeType": "YulTypedName",
														"src": "2668:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2676:6:4",
														"nodeType": "YulTypedName",
														"src": "2676:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2687:4:4",
														"nodeType": "YulTypedName",
														"src": "2687:4:4",
														"type": ""
													}
												],
												"src": "2567:304:4"
											},
											{
												"body": {
													"nativeSrc": "2935:120:4",
													"nodeType": "YulBlock",
													"src": "2935:120:4",
													"statements": [
														{
															"nativeSrc": "2945:22:4",
															"nodeType": "YulAssignment",
															"src": "2945:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2960:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2960:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2954:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "2954:5:4"
																},
																"nativeSrc": "2954:13:4",
																"nodeType": "YulFunctionCall",
																"src": "2954:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2945:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "2945:5:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3033:16:4",
																"nodeType": "YulBlock",
																"src": "3033:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3042:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3042:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3045:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3045:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3035:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3035:6:4"
																			},
																			"nativeSrc": "3035:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3035:12:4"
																		},
																		"nativeSrc": "3035:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3035:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3000:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "3000:5:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3007:22:4",
																						"nodeType": "YulLiteral",
																						"src": "3007:22:4",
																						"type": "",
																						"value": "0xffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2996:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2996:3:4"
																				},
																				"nativeSrc": "2996:34:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2996:34:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2986:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "2986:2:4"
																		},
																		"nativeSrc": "2986:45:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2986:45:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2979:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2979:6:4"
																},
																"nativeSrc": "2979:53:4",
																"nodeType": "YulFunctionCall",
																"src": "2979:53:4"
															},
															"nativeSrc": "2976:73:4",
															"nodeType": "YulIf",
															"src": "2976:73:4"
														}
													]
												},
												"name": "abi_decode_uint80_fromMemory",
												"nativeSrc": "2876:179:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2914:6:4",
														"nodeType": "YulTypedName",
														"src": "2914:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2925:5:4",
														"nodeType": "YulTypedName",
														"src": "2925:5:4",
														"type": ""
													}
												],
												"src": "2876:179:4"
											},
											{
												"body": {
													"nativeSrc": "3206:327:4",
													"nodeType": "YulBlock",
													"src": "3206:327:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "3253:16:4",
																"nodeType": "YulBlock",
																"src": "3253:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3262:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3262:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3265:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3265:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3255:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3255:6:4"
																			},
																			"nativeSrc": "3255:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3255:12:4"
																		},
																		"nativeSrc": "3255:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3255:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3227:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3227:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3236:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3236:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3223:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3223:3:4"
																		},
																		"nativeSrc": "3223:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3223:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:3:4",
																		"nodeType": "YulLiteral",
																		"src": "3248:3:4",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3219:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3219:3:4"
																},
																"nativeSrc": "3219:33:4",
																"nodeType": "YulFunctionCall",
																"src": "3219:33:4"
															},
															"nativeSrc": "3216:53:4",
															"nodeType": "YulIf",
															"src": "3216:53:4"
														},
														{
															"nativeSrc": "3278:49:4",
															"nodeType": "YulAssignment",
															"src": "3278:49:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3317:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3317:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint80_fromMemory",
																	"nativeSrc": "3288:28:4",
																	"nodeType": "YulIdentifier",
																	"src": "3288:28:4"
																},
																"nativeSrc": "3288:39:4",
																"nodeType": "YulFunctionCall",
																"src": "3288:39:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3278:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3278:6:4"
																}
															]
														},
														{
															"nativeSrc": "3336:35:4",
															"nodeType": "YulAssignment",
															"src": "3336:35:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3356:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3356:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3367:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3367:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3352:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3352:3:4"
																		},
																		"nativeSrc": "3352:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3352:18:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3346:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "3346:5:4"
																},
																"nativeSrc": "3346:25:4",
																"nodeType": "YulFunctionCall",
																"src": "3346:25:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3336:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3336:6:4"
																}
															]
														},
														{
															"nativeSrc": "3380:35:4",
															"nodeType": "YulAssignment",
															"src": "3380:35:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3400:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3400:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3411:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3411:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3396:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3396:3:4"
																		},
																		"nativeSrc": "3396:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3396:18:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3390:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "3390:5:4"
																},
																"nativeSrc": "3390:25:4",
																"nodeType": "YulFunctionCall",
																"src": "3390:25:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3380:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3380:6:4"
																}
															]
														},
														{
															"nativeSrc": "3424:35:4",
															"nodeType": "YulAssignment",
															"src": "3424:35:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3444:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3444:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3455:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3455:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3440:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3440:3:4"
																		},
																		"nativeSrc": "3440:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3440:18:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3434:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "3434:5:4"
																},
																"nativeSrc": "3434:25:4",
																"nodeType": "YulFunctionCall",
																"src": "3434:25:4"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "3424:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3424:6:4"
																}
															]
														},
														{
															"nativeSrc": "3468:59:4",
															"nodeType": "YulAssignment",
															"src": "3468:59:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3511:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3511:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3522:3:4",
																				"nodeType": "YulLiteral",
																				"src": "3522:3:4",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3507:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3507:3:4"
																		},
																		"nativeSrc": "3507:19:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3507:19:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint80_fromMemory",
																	"nativeSrc": "3478:28:4",
																	"nodeType": "YulIdentifier",
																	"src": "3478:28:4"
																},
																"nativeSrc": "3478:49:4",
																"nodeType": "YulFunctionCall",
																"src": "3478:49:4"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "3468:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3468:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "3060:473:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3140:9:4",
														"nodeType": "YulTypedName",
														"src": "3140:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3151:7:4",
														"nodeType": "YulTypedName",
														"src": "3151:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3163:6:4",
														"nodeType": "YulTypedName",
														"src": "3163:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3171:6:4",
														"nodeType": "YulTypedName",
														"src": "3171:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3179:6:4",
														"nodeType": "YulTypedName",
														"src": "3179:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3187:6:4",
														"nodeType": "YulTypedName",
														"src": "3187:6:4",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3195:6:4",
														"nodeType": "YulTypedName",
														"src": "3195:6:4",
														"type": ""
													}
												],
												"src": "3060:473:4"
											},
											{
												"body": {
													"nativeSrc": "3712:173:4",
													"nodeType": "YulBlock",
													"src": "3712:173:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3729:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3729:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3740:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3740:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3722:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3722:6:4"
																},
																"nativeSrc": "3722:21:4",
																"nodeType": "YulFunctionCall",
																"src": "3722:21:4"
															},
															"nativeSrc": "3722:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "3722:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3763:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3763:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3774:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3774:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3759:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3759:3:4"
																		},
																		"nativeSrc": "3759:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3759:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3779:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3779:2:4",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3752:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3752:6:4"
																},
																"nativeSrc": "3752:30:4",
																"nodeType": "YulFunctionCall",
																"src": "3752:30:4"
															},
															"nativeSrc": "3752:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "3752:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3802:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3802:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3813:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3813:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3798:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3798:3:4"
																		},
																		"nativeSrc": "3798:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3798:18:4"
																	},
																	{
																		"hexValue": "496e76616c696420636861696e6c696e6b207072696365",
																		"kind": "string",
																		"nativeSrc": "3818:25:4",
																		"nodeType": "YulLiteral",
																		"src": "3818:25:4",
																		"type": "",
																		"value": "Invalid chainlink price"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3791:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3791:6:4"
																},
																"nativeSrc": "3791:53:4",
																"nodeType": "YulFunctionCall",
																"src": "3791:53:4"
															},
															"nativeSrc": "3791:53:4",
															"nodeType": "YulExpressionStatement",
															"src": "3791:53:4"
														},
														{
															"nativeSrc": "3853:26:4",
															"nodeType": "YulAssignment",
															"src": "3853:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3865:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3865:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3876:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3876:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3861:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3861:3:4"
																},
																"nativeSrc": "3861:18:4",
																"nodeType": "YulFunctionCall",
																"src": "3861:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3853:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3853:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b838eb2b03d57c64344c196649920d623fd5c75f9bcd1c0173705b1e20f4783c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3538:347:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3689:9:4",
														"nodeType": "YulTypedName",
														"src": "3689:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3703:4:4",
														"nodeType": "YulTypedName",
														"src": "3703:4:4",
														"type": ""
													}
												],
												"src": "3538:347:4"
											},
											{
												"body": {
													"nativeSrc": "3922:95:4",
													"nodeType": "YulBlock",
													"src": "3922:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3939:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3939:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3946:3:4",
																				"nodeType": "YulLiteral",
																				"src": "3946:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3951:10:4",
																				"nodeType": "YulLiteral",
																				"src": "3951:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3942:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3942:3:4"
																		},
																		"nativeSrc": "3942:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3942:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3932:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3932:6:4"
																},
																"nativeSrc": "3932:31:4",
																"nodeType": "YulFunctionCall",
																"src": "3932:31:4"
															},
															"nativeSrc": "3932:31:4",
															"nodeType": "YulExpressionStatement",
															"src": "3932:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3979:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3979:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3982:4:4",
																		"nodeType": "YulLiteral",
																		"src": "3982:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3972:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3972:6:4"
																},
																"nativeSrc": "3972:15:4",
																"nodeType": "YulFunctionCall",
																"src": "3972:15:4"
															},
															"nativeSrc": "3972:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "3972:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4003:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4003:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4006:4:4",
																		"nodeType": "YulLiteral",
																		"src": "4006:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3996:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3996:6:4"
																},
																"nativeSrc": "3996:15:4",
																"nodeType": "YulFunctionCall",
																"src": "3996:15:4"
															},
															"nativeSrc": "3996:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "3996:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3890:127:4",
												"nodeType": "YulFunctionDefinition",
												"src": "3890:127:4"
											},
											{
												"body": {
													"nativeSrc": "4086:358:4",
													"nodeType": "YulBlock",
													"src": "4086:358:4",
													"statements": [
														{
															"nativeSrc": "4096:16:4",
															"nodeType": "YulVariableDeclaration",
															"src": "4096:16:4",
															"value": {
																"kind": "number",
																"nativeSrc": "4111:1:4",
																"nodeType": "YulLiteral",
																"src": "4111:1:4",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "4100:7:4",
																	"nodeType": "YulTypedName",
																	"src": "4100:7:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4121:16:4",
															"nodeType": "YulAssignment",
															"src": "4121:16:4",
															"value": {
																"name": "power_1",
																"nativeSrc": "4130:7:4",
																"nodeType": "YulIdentifier",
																"src": "4130:7:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4121:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "4121:5:4"
																}
															]
														},
														{
															"nativeSrc": "4146:13:4",
															"nodeType": "YulAssignment",
															"src": "4146:13:4",
															"value": {
																"name": "_base",
																"nativeSrc": "4154:5:4",
																"nodeType": "YulIdentifier",
																"src": "4154:5:4"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "4146:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4146:4:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4210:228:4",
																"nodeType": "YulBlock",
																"src": "4210:228:4",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "4255:22:4",
																			"nodeType": "YulBlock",
																			"src": "4255:22:4",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "4257:16:4",
																							"nodeType": "YulIdentifier",
																							"src": "4257:16:4"
																						},
																						"nativeSrc": "4257:18:4",
																						"nodeType": "YulFunctionCall",
																						"src": "4257:18:4"
																					},
																					"nativeSrc": "4257:18:4",
																					"nodeType": "YulExpressionStatement",
																					"src": "4257:18:4"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "4230:4:4",
																					"nodeType": "YulIdentifier",
																					"src": "4230:4:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4244:1:4",
																									"nodeType": "YulLiteral",
																									"src": "4244:1:4",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4240:3:4",
																								"nodeType": "YulIdentifier",
																								"src": "4240:3:4"
																							},
																							"nativeSrc": "4240:6:4",
																							"nodeType": "YulFunctionCall",
																							"src": "4240:6:4"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "4248:4:4",
																							"nodeType": "YulIdentifier",
																							"src": "4248:4:4"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "4236:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "4236:3:4"
																					},
																					"nativeSrc": "4236:17:4",
																					"nodeType": "YulFunctionCall",
																					"src": "4236:17:4"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "4227:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "4227:2:4"
																			},
																			"nativeSrc": "4227:27:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4227:27:4"
																		},
																		"nativeSrc": "4224:53:4",
																		"nodeType": "YulIf",
																		"src": "4224:53:4"
																	},
																	{
																		"body": {
																			"nativeSrc": "4316:29:4",
																			"nodeType": "YulBlock",
																			"src": "4316:29:4",
																			"statements": [
																				{
																					"nativeSrc": "4318:25:4",
																					"nodeType": "YulAssignment",
																					"src": "4318:25:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "4331:5:4",
																								"nodeType": "YulIdentifier",
																								"src": "4331:5:4"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "4338:4:4",
																								"nodeType": "YulIdentifier",
																								"src": "4338:4:4"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "4327:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "4327:3:4"
																						},
																						"nativeSrc": "4327:16:4",
																						"nodeType": "YulFunctionCall",
																						"src": "4327:16:4"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "4318:5:4",
																							"nodeType": "YulIdentifier",
																							"src": "4318:5:4"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "4297:8:4",
																					"nodeType": "YulIdentifier",
																					"src": "4297:8:4"
																				},
																				{
																					"name": "power_1",
																					"nativeSrc": "4307:7:4",
																					"nodeType": "YulIdentifier",
																					"src": "4307:7:4"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4293:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "4293:3:4"
																			},
																			"nativeSrc": "4293:22:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4293:22:4"
																		},
																		"nativeSrc": "4290:55:4",
																		"nodeType": "YulIf",
																		"src": "4290:55:4"
																	},
																	{
																		"nativeSrc": "4358:23:4",
																		"nodeType": "YulAssignment",
																		"src": "4358:23:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "4370:4:4",
																					"nodeType": "YulIdentifier",
																					"src": "4370:4:4"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "4376:4:4",
																					"nodeType": "YulIdentifier",
																					"src": "4376:4:4"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "4366:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "4366:3:4"
																			},
																			"nativeSrc": "4366:15:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4366:15:4"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "4358:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "4358:4:4"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4394:34:4",
																		"nodeType": "YulAssignment",
																		"src": "4394:34:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nativeSrc": "4410:7:4",
																					"nodeType": "YulIdentifier",
																					"src": "4410:7:4"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "4419:8:4",
																					"nodeType": "YulIdentifier",
																					"src": "4419:8:4"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "4406:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "4406:3:4"
																			},
																			"nativeSrc": "4406:22:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4406:22:4"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "4394:8:4",
																				"nodeType": "YulIdentifier",
																				"src": "4394:8:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "4179:8:4",
																		"nodeType": "YulIdentifier",
																		"src": "4179:8:4"
																	},
																	{
																		"name": "power_1",
																		"nativeSrc": "4189:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "4189:7:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4176:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "4176:2:4"
																},
																"nativeSrc": "4176:21:4",
																"nodeType": "YulFunctionCall",
																"src": "4176:21:4"
															},
															"nativeSrc": "4168:270:4",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4198:3:4",
																"nodeType": "YulBlock",
																"src": "4198:3:4",
																"statements": []
															},
															"pre": {
																"nativeSrc": "4172:3:4",
																"nodeType": "YulBlock",
																"src": "4172:3:4",
																"statements": []
															},
															"src": "4168:270:4"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "4022:422:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "4050:5:4",
														"nodeType": "YulTypedName",
														"src": "4050:5:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4057:8:4",
														"nodeType": "YulTypedName",
														"src": "4057:8:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4070:5:4",
														"nodeType": "YulTypedName",
														"src": "4070:5:4",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "4077:4:4",
														"nodeType": "YulTypedName",
														"src": "4077:4:4",
														"type": ""
													}
												],
												"src": "4022:422:4"
											},
											{
												"body": {
													"nativeSrc": "4508:747:4",
													"nodeType": "YulBlock",
													"src": "4508:747:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "4546:52:4",
																"nodeType": "YulBlock",
																"src": "4546:52:4",
																"statements": [
																	{
																		"nativeSrc": "4560:10:4",
																		"nodeType": "YulAssignment",
																		"src": "4560:10:4",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4569:1:4",
																			"nodeType": "YulLiteral",
																			"src": "4569:1:4",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4560:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "4560:5:4"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4583:5:4",
																		"nodeType": "YulLeave",
																		"src": "4583:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "4528:8:4",
																		"nodeType": "YulIdentifier",
																		"src": "4528:8:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4521:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4521:6:4"
																},
																"nativeSrc": "4521:16:4",
																"nodeType": "YulFunctionCall",
																"src": "4521:16:4"
															},
															"nativeSrc": "4518:80:4",
															"nodeType": "YulIf",
															"src": "4518:80:4"
														},
														{
															"body": {
																"nativeSrc": "4631:52:4",
																"nodeType": "YulBlock",
																"src": "4631:52:4",
																"statements": [
																	{
																		"nativeSrc": "4645:10:4",
																		"nodeType": "YulAssignment",
																		"src": "4645:10:4",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4654:1:4",
																			"nodeType": "YulLiteral",
																			"src": "4654:1:4",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4645:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "4645:5:4"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4668:5:4",
																		"nodeType": "YulLeave",
																		"src": "4668:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4617:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "4617:4:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4610:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4610:6:4"
																},
																"nativeSrc": "4610:12:4",
																"nodeType": "YulFunctionCall",
																"src": "4610:12:4"
															},
															"nativeSrc": "4607:76:4",
															"nodeType": "YulIf",
															"src": "4607:76:4"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4719:52:4",
																		"nodeType": "YulBlock",
																		"src": "4719:52:4",
																		"statements": [
																			{
																				"nativeSrc": "4733:10:4",
																				"nodeType": "YulAssignment",
																				"src": "4733:10:4",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4742:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4742:1:4",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "4733:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "4733:5:4"
																					}
																				]
																			},
																			{
																				"nativeSrc": "4756:5:4",
																				"nodeType": "YulLeave",
																				"src": "4756:5:4"
																			}
																		]
																	},
																	"nativeSrc": "4712:59:4",
																	"nodeType": "YulCase",
																	"src": "4712:59:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4717:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4717:1:4",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "4787:123:4",
																		"nodeType": "YulBlock",
																		"src": "4787:123:4",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "4822:22:4",
																					"nodeType": "YulBlock",
																					"src": "4822:22:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "4824:16:4",
																									"nodeType": "YulIdentifier",
																									"src": "4824:16:4"
																								},
																								"nativeSrc": "4824:18:4",
																								"nodeType": "YulFunctionCall",
																								"src": "4824:18:4"
																							},
																							"nativeSrc": "4824:18:4",
																							"nodeType": "YulExpressionStatement",
																							"src": "4824:18:4"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "4807:8:4",
																							"nodeType": "YulIdentifier",
																							"src": "4807:8:4"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4817:3:4",
																							"nodeType": "YulLiteral",
																							"src": "4817:3:4",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "4804:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "4804:2:4"
																					},
																					"nativeSrc": "4804:17:4",
																					"nodeType": "YulFunctionCall",
																					"src": "4804:17:4"
																				},
																				"nativeSrc": "4801:43:4",
																				"nodeType": "YulIf",
																				"src": "4801:43:4"
																			},
																			{
																				"nativeSrc": "4857:25:4",
																				"nodeType": "YulAssignment",
																				"src": "4857:25:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "4870:8:4",
																							"nodeType": "YulIdentifier",
																							"src": "4870:8:4"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4880:1:4",
																							"nodeType": "YulLiteral",
																							"src": "4880:1:4",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4866:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "4866:3:4"
																					},
																					"nativeSrc": "4866:16:4",
																					"nodeType": "YulFunctionCall",
																					"src": "4866:16:4"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "4857:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "4857:5:4"
																					}
																				]
																			},
																			{
																				"nativeSrc": "4895:5:4",
																				"nodeType": "YulLeave",
																				"src": "4895:5:4"
																			}
																		]
																	},
																	"nativeSrc": "4780:130:4",
																	"nodeType": "YulCase",
																	"src": "4780:130:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4785:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4785:1:4",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "4699:4:4",
																"nodeType": "YulIdentifier",
																"src": "4699:4:4"
															},
															"nativeSrc": "4692:218:4",
															"nodeType": "YulSwitch",
															"src": "4692:218:4"
														},
														{
															"body": {
																"nativeSrc": "5008:70:4",
																"nodeType": "YulBlock",
																"src": "5008:70:4",
																"statements": [
																	{
																		"nativeSrc": "5022:28:4",
																		"nodeType": "YulAssignment",
																		"src": "5022:28:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "5035:4:4",
																					"nodeType": "YulIdentifier",
																					"src": "5035:4:4"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "5041:8:4",
																					"nodeType": "YulIdentifier",
																					"src": "5041:8:4"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "5031:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "5031:3:4"
																			},
																			"nativeSrc": "5031:19:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5031:19:4"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "5022:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "5022:5:4"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5063:5:4",
																		"nodeType": "YulLeave",
																		"src": "5063:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "4932:4:4",
																						"nodeType": "YulIdentifier",
																						"src": "4932:4:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4938:2:4",
																						"nodeType": "YulLiteral",
																						"src": "4938:2:4",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4929:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "4929:2:4"
																				},
																				"nativeSrc": "4929:12:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4929:12:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "4946:8:4",
																						"nodeType": "YulIdentifier",
																						"src": "4946:8:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4956:2:4",
																						"nodeType": "YulLiteral",
																						"src": "4956:2:4",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4943:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "4943:2:4"
																				},
																				"nativeSrc": "4943:16:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4943:16:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4925:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4925:3:4"
																		},
																		"nativeSrc": "4925:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4925:35:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "4969:4:4",
																						"nodeType": "YulIdentifier",
																						"src": "4969:4:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4975:3:4",
																						"nodeType": "YulLiteral",
																						"src": "4975:3:4",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4966:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "4966:2:4"
																				},
																				"nativeSrc": "4966:13:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4966:13:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "4984:8:4",
																						"nodeType": "YulIdentifier",
																						"src": "4984:8:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4994:2:4",
																						"nodeType": "YulLiteral",
																						"src": "4994:2:4",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4981:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "4981:2:4"
																				},
																				"nativeSrc": "4981:16:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4981:16:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4962:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4962:3:4"
																		},
																		"nativeSrc": "4962:36:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4962:36:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4922:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "4922:2:4"
																},
																"nativeSrc": "4922:77:4",
																"nodeType": "YulFunctionCall",
																"src": "4922:77:4"
															},
															"nativeSrc": "4919:159:4",
															"nodeType": "YulIf",
															"src": "4919:159:4"
														},
														{
															"nativeSrc": "5087:57:4",
															"nodeType": "YulVariableDeclaration",
															"src": "5087:57:4",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "5129:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "5129:4:4"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "5135:8:4",
																		"nodeType": "YulIdentifier",
																		"src": "5135:8:4"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "5110:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "5110:18:4"
																},
																"nativeSrc": "5110:34:4",
																"nodeType": "YulFunctionCall",
																"src": "5110:34:4"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "5091:7:4",
																	"nodeType": "YulTypedName",
																	"src": "5091:7:4",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "5100:6:4",
																	"nodeType": "YulTypedName",
																	"src": "5100:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5189:22:4",
																"nodeType": "YulBlock",
																"src": "5189:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5191:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "5191:16:4"
																			},
																			"nativeSrc": "5191:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5191:18:4"
																		},
																		"nativeSrc": "5191:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5191:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "5159:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "5159:7:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5176:1:4",
																						"nodeType": "YulLiteral",
																						"src": "5176:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5172:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "5172:3:4"
																				},
																				"nativeSrc": "5172:6:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5172:6:4"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "5180:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5180:6:4"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "5168:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5168:3:4"
																		},
																		"nativeSrc": "5168:19:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:19:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5156:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "5156:2:4"
																},
																"nativeSrc": "5156:32:4",
																"nodeType": "YulFunctionCall",
																"src": "5156:32:4"
															},
															"nativeSrc": "5153:58:4",
															"nodeType": "YulIf",
															"src": "5153:58:4"
														},
														{
															"nativeSrc": "5220:29:4",
															"nodeType": "YulAssignment",
															"src": "5220:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "5233:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "5233:7:4"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "5242:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5242:6:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5229:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5229:3:4"
																},
																"nativeSrc": "5229:20:4",
																"nodeType": "YulFunctionCall",
																"src": "5229:20:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "5220:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "5220:5:4"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "4449:806:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "4479:4:4",
														"nodeType": "YulTypedName",
														"src": "4479:4:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4485:8:4",
														"nodeType": "YulTypedName",
														"src": "4485:8:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4498:5:4",
														"nodeType": "YulTypedName",
														"src": "4498:5:4",
														"type": ""
													}
												],
												"src": "4449:806:4"
											},
											{
												"body": {
													"nativeSrc": "5330:61:4",
													"nodeType": "YulBlock",
													"src": "5330:61:4",
													"statements": [
														{
															"nativeSrc": "5340:45:4",
															"nodeType": "YulAssignment",
															"src": "5340:45:4",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "5370:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "5370:4:4"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "5376:8:4",
																		"nodeType": "YulIdentifier",
																		"src": "5376:8:4"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "5349:20:4",
																	"nodeType": "YulIdentifier",
																	"src": "5349:20:4"
																},
																"nativeSrc": "5349:36:4",
																"nodeType": "YulFunctionCall",
																"src": "5349:36:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "5340:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "5340:5:4"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nativeSrc": "5260:131:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "5301:4:4",
														"nodeType": "YulTypedName",
														"src": "5301:4:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "5307:8:4",
														"nodeType": "YulTypedName",
														"src": "5307:8:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "5320:5:4",
														"nodeType": "YulTypedName",
														"src": "5320:5:4",
														"type": ""
													}
												],
												"src": "5260:131:4"
											},
											{
												"body": {
													"nativeSrc": "5570:171:4",
													"nodeType": "YulBlock",
													"src": "5570:171:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5587:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "5587:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5598:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5598:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5580:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5580:6:4"
																},
																"nativeSrc": "5580:21:4",
																"nodeType": "YulFunctionCall",
																"src": "5580:21:4"
															},
															"nativeSrc": "5580:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "5580:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5621:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5621:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5632:2:4",
																				"nodeType": "YulLiteral",
																				"src": "5632:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5617:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5617:3:4"
																		},
																		"nativeSrc": "5617:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5617:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5637:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5637:2:4",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5610:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5610:6:4"
																},
																"nativeSrc": "5610:30:4",
																"nodeType": "YulFunctionCall",
																"src": "5610:30:4"
															},
															"nativeSrc": "5610:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "5610:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5660:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5660:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5671:2:4",
																				"nodeType": "YulLiteral",
																				"src": "5671:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5656:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5656:3:4"
																		},
																		"nativeSrc": "5656:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5656:18:4"
																	},
																	{
																		"hexValue": "4e6f74206f776e6572206f722074696d656c6f636b",
																		"kind": "string",
																		"nativeSrc": "5676:23:4",
																		"nodeType": "YulLiteral",
																		"src": "5676:23:4",
																		"type": "",
																		"value": "Not owner or timelock"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5649:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5649:6:4"
																},
																"nativeSrc": "5649:51:4",
																"nodeType": "YulFunctionCall",
																"src": "5649:51:4"
															},
															"nativeSrc": "5649:51:4",
															"nodeType": "YulExpressionStatement",
															"src": "5649:51:4"
														},
														{
															"nativeSrc": "5709:26:4",
															"nodeType": "YulAssignment",
															"src": "5709:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5721:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "5721:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5732:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5732:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5717:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5717:3:4"
																},
																"nativeSrc": "5717:18:4",
																"nodeType": "YulFunctionCall",
																"src": "5717:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5709:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "5709:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2341f105161714f01185492f4233d98f530a1e8435cfd3bb617e411e8f94580d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5396:345:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5547:9:4",
														"nodeType": "YulTypedName",
														"src": "5547:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5561:4:4",
														"nodeType": "YulTypedName",
														"src": "5561:4:4",
														"type": ""
													}
												],
												"src": "5396:345:4"
											},
											{
												"body": {
													"nativeSrc": "5825:194:4",
													"nodeType": "YulBlock",
													"src": "5825:194:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "5871:16:4",
																"nodeType": "YulBlock",
																"src": "5871:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5880:1:4",
																					"nodeType": "YulLiteral",
																					"src": "5880:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5883:1:4",
																					"nodeType": "YulLiteral",
																					"src": "5883:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5873:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5873:6:4"
																			},
																			"nativeSrc": "5873:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5873:12:4"
																		},
																		"nativeSrc": "5873:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5873:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5846:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "5846:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5855:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5855:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5842:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5842:3:4"
																		},
																		"nativeSrc": "5842:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5842:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5867:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5867:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5838:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5838:3:4"
																},
																"nativeSrc": "5838:32:4",
																"nodeType": "YulFunctionCall",
																"src": "5838:32:4"
															},
															"nativeSrc": "5835:52:4",
															"nodeType": "YulIf",
															"src": "5835:52:4"
														},
														{
															"nativeSrc": "5896:29:4",
															"nodeType": "YulVariableDeclaration",
															"src": "5896:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5915:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "5915:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5909:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "5909:5:4"
																},
																"nativeSrc": "5909:16:4",
																"nodeType": "YulFunctionCall",
																"src": "5909:16:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5900:5:4",
																	"nodeType": "YulTypedName",
																	"src": "5900:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5973:16:4",
																"nodeType": "YulBlock",
																"src": "5973:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5982:1:4",
																					"nodeType": "YulLiteral",
																					"src": "5982:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5985:1:4",
																					"nodeType": "YulLiteral",
																					"src": "5985:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5975:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5975:6:4"
																			},
																			"nativeSrc": "5975:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5975:12:4"
																		},
																		"nativeSrc": "5975:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5975:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5947:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "5947:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5958:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "5958:5:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5965:4:4",
																						"nodeType": "YulLiteral",
																						"src": "5965:4:4",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "5954:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "5954:3:4"
																				},
																				"nativeSrc": "5954:16:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5954:16:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5944:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "5944:2:4"
																		},
																		"nativeSrc": "5944:27:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5944:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5937:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5937:6:4"
																},
																"nativeSrc": "5937:35:4",
																"nodeType": "YulFunctionCall",
																"src": "5937:35:4"
															},
															"nativeSrc": "5934:55:4",
															"nodeType": "YulIf",
															"src": "5934:55:4"
														},
														{
															"nativeSrc": "5998:15:4",
															"nodeType": "YulAssignment",
															"src": "5998:15:4",
															"value": {
																"name": "value",
																"nativeSrc": "6008:5:4",
																"nodeType": "YulIdentifier",
																"src": "6008:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5998:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5998:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nativeSrc": "5746:273:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5791:9:4",
														"nodeType": "YulTypedName",
														"src": "5791:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5802:7:4",
														"nodeType": "YulTypedName",
														"src": "5802:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5814:6:4",
														"nodeType": "YulTypedName",
														"src": "5814:6:4",
														"type": ""
													}
												],
												"src": "5746:273:4"
											},
											{
												"body": {
													"nativeSrc": "6076:116:4",
													"nodeType": "YulBlock",
													"src": "6076:116:4",
													"statements": [
														{
															"nativeSrc": "6086:20:4",
															"nodeType": "YulAssignment",
															"src": "6086:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6101:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "6101:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6104:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "6104:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6097:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6097:3:4"
																},
																"nativeSrc": "6097:9:4",
																"nodeType": "YulFunctionCall",
																"src": "6097:9:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "6086:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "6086:7:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6164:22:4",
																"nodeType": "YulBlock",
																"src": "6164:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6166:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "6166:16:4"
																			},
																			"nativeSrc": "6166:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6166:18:4"
																		},
																		"nativeSrc": "6166:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6166:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "6135:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "6135:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6128:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "6128:6:4"
																				},
																				"nativeSrc": "6128:9:4",
																				"nodeType": "YulFunctionCall",
																				"src": "6128:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "6142:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "6142:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "6149:7:4",
																								"nodeType": "YulIdentifier",
																								"src": "6149:7:4"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "6158:1:4",
																								"nodeType": "YulIdentifier",
																								"src": "6158:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "6145:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "6145:3:4"
																						},
																						"nativeSrc": "6145:15:4",
																						"nodeType": "YulFunctionCall",
																						"src": "6145:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "6139:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "6139:2:4"
																				},
																				"nativeSrc": "6139:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "6139:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "6125:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "6125:2:4"
																		},
																		"nativeSrc": "6125:37:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6125:37:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6118:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6118:6:4"
																},
																"nativeSrc": "6118:45:4",
																"nodeType": "YulFunctionCall",
																"src": "6118:45:4"
															},
															"nativeSrc": "6115:71:4",
															"nodeType": "YulIf",
															"src": "6115:71:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "6024:168:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6055:1:4",
														"nodeType": "YulTypedName",
														"src": "6055:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6058:1:4",
														"nodeType": "YulTypedName",
														"src": "6058:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "6064:7:4",
														"nodeType": "YulTypedName",
														"src": "6064:7:4",
														"type": ""
													}
												],
												"src": "6024:168:4"
											},
											{
												"body": {
													"nativeSrc": "6243:171:4",
													"nodeType": "YulBlock",
													"src": "6243:171:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "6274:111:4",
																"nodeType": "YulBlock",
																"src": "6274:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6295:1:4",
																					"nodeType": "YulLiteral",
																					"src": "6295:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6302:3:4",
																							"nodeType": "YulLiteral",
																							"src": "6302:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6307:10:4",
																							"nodeType": "YulLiteral",
																							"src": "6307:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6298:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "6298:3:4"
																					},
																					"nativeSrc": "6298:20:4",
																					"nodeType": "YulFunctionCall",
																					"src": "6298:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6288:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6288:6:4"
																			},
																			"nativeSrc": "6288:31:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6288:31:4"
																		},
																		"nativeSrc": "6288:31:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6288:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6339:1:4",
																					"nodeType": "YulLiteral",
																					"src": "6339:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6342:4:4",
																					"nodeType": "YulLiteral",
																					"src": "6342:4:4",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6332:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6332:6:4"
																			},
																			"nativeSrc": "6332:15:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6332:15:4"
																		},
																		"nativeSrc": "6332:15:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6332:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6367:1:4",
																					"nodeType": "YulLiteral",
																					"src": "6367:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6370:4:4",
																					"nodeType": "YulLiteral",
																					"src": "6370:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6360:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6360:6:4"
																			},
																			"nativeSrc": "6360:15:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6360:15:4"
																		},
																		"nativeSrc": "6360:15:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6360:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6263:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "6263:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6256:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6256:6:4"
																},
																"nativeSrc": "6256:9:4",
																"nodeType": "YulFunctionCall",
																"src": "6256:9:4"
															},
															"nativeSrc": "6253:132:4",
															"nodeType": "YulIf",
															"src": "6253:132:4"
														},
														{
															"nativeSrc": "6394:14:4",
															"nodeType": "YulAssignment",
															"src": "6394:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6403:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "6403:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6406:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "6406:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6399:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6399:3:4"
																},
																"nativeSrc": "6399:9:4",
																"nodeType": "YulFunctionCall",
																"src": "6399:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6394:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "6394:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "6197:217:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6228:1:4",
														"nodeType": "YulTypedName",
														"src": "6228:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6231:1:4",
														"nodeType": "YulTypedName",
														"src": "6231:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "6237:1:4",
														"nodeType": "YulTypedName",
														"src": "6237:1:4",
														"type": ""
													}
												],
												"src": "6197:217:4"
											},
											{
												"body": {
													"nativeSrc": "6593:223:4",
													"nodeType": "YulBlock",
													"src": "6593:223:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6610:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "6610:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6621:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6621:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6603:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6603:6:4"
																},
																"nativeSrc": "6603:21:4",
																"nodeType": "YulFunctionCall",
																"src": "6603:21:4"
															},
															"nativeSrc": "6603:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "6603:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6644:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6644:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6655:2:4",
																				"nodeType": "YulLiteral",
																				"src": "6655:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6640:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6640:3:4"
																		},
																		"nativeSrc": "6640:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6640:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6660:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6660:2:4",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6633:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6633:6:4"
																},
																"nativeSrc": "6633:30:4",
																"nodeType": "YulFunctionCall",
																"src": "6633:30:4"
															},
															"nativeSrc": "6633:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "6633:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6683:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6683:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6694:2:4",
																				"nodeType": "YulLiteral",
																				"src": "6694:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6679:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6679:3:4"
																		},
																		"nativeSrc": "6679:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6679:18:4"
																	},
																	{
																		"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f",
																		"kind": "string",
																		"nativeSrc": "6699:34:4",
																		"nodeType": "YulLiteral",
																		"src": "6699:34:4",
																		"type": "",
																		"value": "SafeMath: multiplication overflo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6672:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6672:6:4"
																},
																"nativeSrc": "6672:62:4",
																"nodeType": "YulFunctionCall",
																"src": "6672:62:4"
															},
															"nativeSrc": "6672:62:4",
															"nodeType": "YulExpressionStatement",
															"src": "6672:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:2:4",
																				"nodeType": "YulLiteral",
																				"src": "6765:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:4"
																		},
																		"nativeSrc": "6750:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:18:4"
																	},
																	{
																		"hexValue": "77",
																		"kind": "string",
																		"nativeSrc": "6770:3:4",
																		"nodeType": "YulLiteral",
																		"src": "6770:3:4",
																		"type": "",
																		"value": "w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6743:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6743:6:4"
																},
																"nativeSrc": "6743:31:4",
																"nodeType": "YulFunctionCall",
																"src": "6743:31:4"
															},
															"nativeSrc": "6743:31:4",
															"nodeType": "YulExpressionStatement",
															"src": "6743:31:4"
														},
														{
															"nativeSrc": "6783:27:4",
															"nodeType": "YulAssignment",
															"src": "6783:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6795:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "6795:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6806:3:4",
																		"nodeType": "YulLiteral",
																		"src": "6806:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6791:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6791:3:4"
																},
																"nativeSrc": "6791:19:4",
																"nodeType": "YulFunctionCall",
																"src": "6791:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6783:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "6783:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6419:397:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6570:9:4",
														"nodeType": "YulTypedName",
														"src": "6570:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6584:4:4",
														"nodeType": "YulTypedName",
														"src": "6584:4:4",
														"type": ""
													}
												],
												"src": "6419:397:4"
											},
											{
												"body": {
													"nativeSrc": "6942:427:4",
													"nodeType": "YulBlock",
													"src": "6942:427:4",
													"statements": [
														{
															"nativeSrc": "6952:12:4",
															"nodeType": "YulVariableDeclaration",
															"src": "6952:12:4",
															"value": {
																"kind": "number",
																"nativeSrc": "6962:2:4",
																"nodeType": "YulLiteral",
																"src": "6962:2:4",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6956:2:4",
																	"nodeType": "YulTypedName",
																	"src": "6956:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6980:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "6980:9:4"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "6991:2:4",
																		"nodeType": "YulIdentifier",
																		"src": "6991:2:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6973:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6973:6:4"
																},
																"nativeSrc": "6973:21:4",
																"nodeType": "YulFunctionCall",
																"src": "6973:21:4"
															},
															"nativeSrc": "6973:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "6973:21:4"
														},
														{
															"nativeSrc": "7003:27:4",
															"nodeType": "YulVariableDeclaration",
															"src": "7003:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7023:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "7023:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7017:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "7017:5:4"
																},
																"nativeSrc": "7017:13:4",
																"nodeType": "YulFunctionCall",
																"src": "7017:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7007:6:4",
																	"nodeType": "YulTypedName",
																	"src": "7007:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7050:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "7050:9:4"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "7061:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "7061:2:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7046:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7046:3:4"
																		},
																		"nativeSrc": "7046:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7046:18:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7066:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "7066:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7039:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7039:6:4"
																},
																"nativeSrc": "7039:34:4",
																"nodeType": "YulFunctionCall",
																"src": "7039:34:4"
															},
															"nativeSrc": "7039:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "7039:34:4"
														},
														{
															"nativeSrc": "7082:10:4",
															"nodeType": "YulVariableDeclaration",
															"src": "7082:10:4",
															"value": {
																"kind": "number",
																"nativeSrc": "7091:1:4",
																"nodeType": "YulLiteral",
																"src": "7091:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "7086:1:4",
																	"nodeType": "YulTypedName",
																	"src": "7086:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7151:90:4",
																"nodeType": "YulBlock",
																"src": "7151:90:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "7180:9:4",
																									"nodeType": "YulIdentifier",
																									"src": "7180:9:4"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "7191:1:4",
																									"nodeType": "YulIdentifier",
																									"src": "7191:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7176:3:4",
																								"nodeType": "YulIdentifier",
																								"src": "7176:3:4"
																							},
																							"nativeSrc": "7176:17:4",
																							"nodeType": "YulFunctionCall",
																							"src": "7176:17:4"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7195:2:4",
																							"nodeType": "YulLiteral",
																							"src": "7195:2:4",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7172:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "7172:3:4"
																					},
																					"nativeSrc": "7172:26:4",
																					"nodeType": "YulFunctionCall",
																					"src": "7172:26:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "7214:6:4",
																											"nodeType": "YulIdentifier",
																											"src": "7214:6:4"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "7222:1:4",
																											"nodeType": "YulIdentifier",
																											"src": "7222:1:4"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "7210:3:4",
																										"nodeType": "YulIdentifier",
																										"src": "7210:3:4"
																									},
																									"nativeSrc": "7210:14:4",
																									"nodeType": "YulFunctionCall",
																									"src": "7210:14:4"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "7226:2:4",
																									"nodeType": "YulIdentifier",
																									"src": "7226:2:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7206:3:4",
																								"nodeType": "YulIdentifier",
																								"src": "7206:3:4"
																							},
																							"nativeSrc": "7206:23:4",
																							"nodeType": "YulFunctionCall",
																							"src": "7206:23:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "7200:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "7200:5:4"
																					},
																					"nativeSrc": "7200:30:4",
																					"nodeType": "YulFunctionCall",
																					"src": "7200:30:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7165:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "7165:6:4"
																			},
																			"nativeSrc": "7165:66:4",
																			"nodeType": "YulFunctionCall",
																			"src": "7165:66:4"
																		},
																		"nativeSrc": "7165:66:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "7165:66:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "7112:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "7112:1:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7115:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "7115:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7109:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "7109:2:4"
																},
																"nativeSrc": "7109:13:4",
																"nodeType": "YulFunctionCall",
																"src": "7109:13:4"
															},
															"nativeSrc": "7101:140:4",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7123:19:4",
																"nodeType": "YulBlock",
																"src": "7123:19:4",
																"statements": [
																	{
																		"nativeSrc": "7125:15:4",
																		"nodeType": "YulAssignment",
																		"src": "7125:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "7134:1:4",
																					"nodeType": "YulIdentifier",
																					"src": "7134:1:4"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "7137:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "7137:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7130:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "7130:3:4"
																			},
																			"nativeSrc": "7130:10:4",
																			"nodeType": "YulFunctionCall",
																			"src": "7130:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "7125:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "7125:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7105:3:4",
																"nodeType": "YulBlock",
																"src": "7105:3:4",
																"statements": []
															},
															"src": "7101:140:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7265:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "7265:9:4"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "7276:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "7276:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7261:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "7261:3:4"
																				},
																				"nativeSrc": "7261:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "7261:22:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7285:2:4",
																				"nodeType": "YulLiteral",
																				"src": "7285:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7257:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7257:3:4"
																		},
																		"nativeSrc": "7257:31:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7257:31:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7290:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7290:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7250:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7250:6:4"
																},
																"nativeSrc": "7250:42:4",
																"nodeType": "YulFunctionCall",
																"src": "7250:42:4"
															},
															"nativeSrc": "7250:42:4",
															"nodeType": "YulExpressionStatement",
															"src": "7250:42:4"
														},
														{
															"nativeSrc": "7301:62:4",
															"nodeType": "YulAssignment",
															"src": "7301:62:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7317:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "7317:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "7336:6:4",
																								"nodeType": "YulIdentifier",
																								"src": "7336:6:4"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7344:2:4",
																								"nodeType": "YulLiteral",
																								"src": "7344:2:4",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "7332:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "7332:3:4"
																						},
																						"nativeSrc": "7332:15:4",
																						"nodeType": "YulFunctionCall",
																						"src": "7332:15:4"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7353:2:4",
																								"nodeType": "YulLiteral",
																								"src": "7353:2:4",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "7349:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "7349:3:4"
																						},
																						"nativeSrc": "7349:7:4",
																						"nodeType": "YulFunctionCall",
																						"src": "7349:7:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "7328:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "7328:3:4"
																				},
																				"nativeSrc": "7328:29:4",
																				"nodeType": "YulFunctionCall",
																				"src": "7328:29:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7313:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7313:3:4"
																		},
																		"nativeSrc": "7313:45:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7313:45:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7360:2:4",
																		"nodeType": "YulLiteral",
																		"src": "7360:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7309:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7309:3:4"
																},
																"nativeSrc": "7309:54:4",
																"nodeType": "YulFunctionCall",
																"src": "7309:54:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7301:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7301:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6821:548:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6911:9:4",
														"nodeType": "YulTypedName",
														"src": "6911:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6922:6:4",
														"nodeType": "YulTypedName",
														"src": "6922:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6933:4:4",
														"nodeType": "YulTypedName",
														"src": "6933:4:4",
														"type": ""
													}
												],
												"src": "6821:548:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"Only the contract owner may perf\")\n        mstore(add(headStart, 96), \"orm this action\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8f7cea8b044c17561008c31ba3e3f1e1850745f95f81afb164efa71262c8a172__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"must use weth address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7cfd4f35ab8fcb6190c3524b53b79ab146a9c0a4fb320fe337eb730f1272bb12__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"must call with 1e6\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"You must be nominated before you\")\n        mstore(add(headStart, 96), \" can accept ownership\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_b838eb2b03d57c64344c196649920d623fd5c75f9bcd1c0173705b1e20f4783c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Invalid chainlink price\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function abi_encode_tuple_t_stringliteral_2341f105161714f01185492f4233d98f530a1e8435cfd3bb617e411e8f94580d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Not owner or timelock\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"SafeMath: multiplication overflo\")\n        mstore(add(headStart, 96), \"w\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100cb575f3560e01c80638da5cb5b11610088578063a2dcb4f511610063578063a2dcb4f51461017c578063a607a8d91461018f578063d6c6c4ac14610197578063dc6663c7146101a0575f80fd5b80638da5cb5b1461014e5780638e409a791461016057806395082d2514610173575f80fd5b80631627540c146100cf5780633ddac953146100e457806353a47bb71461010a578063753b5f8a1461013557806379ba50971461013e57806388e5a49114610146575b5f80fd5b6100e26100dd366004610935565b6101b3565b005b6100f76100f236600461094e565b61027d565b6040519081526020015b60405180910390f35b60015461011d906001600160a01b031681565b6040516001600160a01b039091168152602001610101565b6100f760055481565b6100e261034a565b6100f7610432565b5f5461011d906001600160a01b031681565b6100e261016e366004610935565b610550565b6100f760065481565b6100e261018a366004610935565b61063a565b6100f7610724565b6100f760045481565b60075461011d906001600160a01b031681565b5f546001600160a01b031633146102295760405162461bcd60e51b815260206004820152602f60248201527f4f6e6c792074686520636f6e7472616374206f776e6572206d6179207065726660448201526e37b936903a3434b99030b1ba34b7b760891b60648201526084015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce229060200160405180910390a150565b5f6006602160991b016001600160a01b038416146102d55760405162461bcd60e51b81526020600482015260156024820152746d757374207573652077657468206164647265737360581b6044820152606401610220565b81620f42401461031c5760405162461bcd60e51b815260206004820152601260248201527136bab9ba1031b0b636103bb4ba341018b29b60711b6044820152606401610220565b610341610327610432565b61033b600654610335610724565b9061082b565b906108a9565b90505b92915050565b6001546001600160a01b031633146103c25760405162461bcd60e51b815260206004820152603560248201527f596f75206d757374206265206e6f6d696e61746564206265666f726520796f7560448201527402063616e20616363657074206f776e65727368697605c1b6064820152608401610220565b5f54600154604080516001600160a01b0393841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a1600180545f80546001600160a01b03199081166001600160a01b03841617909155169055565b5f805f805f60025f9054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610487573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104ab919061098c565b9450945050935093505f83121580156104c357508115155b80156104e15750836001600160501b0316816001600160501b031610155b6105275760405162461bcd60e51b8152602060048201526017602482015276496e76616c696420636861696e6c696e6b20707269636560481b6044820152606401610220565b610547600454600a6105399190610acc565b60065461033b90869061082b565b94505050505090565b5f546001600160a01b031633148061057257506007546001600160a01b031633145b6105b65760405162461bcd60e51b81526020600482015260156024820152744e6f74206f776e6572206f722074696d656c6f636b60581b6044820152606401610220565b600380546001600160a01b0319166001600160a01b0383169081179091556040805163313ce56760e01b8152905163313ce567916004808201926020929091908290030181865afa15801561060d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106319190610ad7565b60ff1660055550565b5f546001600160a01b031633148061065c57506007546001600160a01b031633145b6106a05760405162461bcd60e51b81526020600482015260156024820152744e6f74206f776e6572206f722074696d656c6f636b60581b6044820152606401610220565b600280546001600160a01b0319166001600160a01b0383169081179091556040805163313ce56760e01b8152905163313ce567916004808201926020929091908290030181865afa1580156106f7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061071b9190610ad7565b60ff1660045550565b5f805f805f60035f9054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610779573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061079d919061098c565b9450945050935093505f83121580156107b557508115155b80156107d35750836001600160501b0316816001600160501b031610155b6108195760405162461bcd60e51b8152602060048201526017602482015276496e76616c696420636861696e6c696e6b20707269636560481b6044820152606401610220565b610547600554600a6105399190610acc565b5f825f0361083a57505f610344565b5f6108458385610af7565b9050826108528583610b0e565b146103415760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610220565b5f61034183836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152505f81836109055760405162461bcd60e51b81526004016102209190610b2d565b505f6109118486610b0e565b95945050505050565b80356001600160a01b0381168114610930575f80fd5b919050565b5f60208284031215610945575f80fd5b6103418261091a565b5f806040838503121561095f575f80fd5b6109688361091a565b946020939093013593505050565b80516001600160501b0381168114610930575f80fd5b5f805f805f60a086880312156109a0575f80fd5b6109a986610976565b94506020860151935060408601519250606086015191506109cc60808701610976565b90509295509295909350565b634e487b7160e01b5f52601160045260245ffd5b600181815b80851115610a2657815f1904821115610a0c57610a0c6109d8565b80851615610a1957918102915b93841c93908002906109f1565b509250929050565b5f82610a3c57506001610344565b81610a4857505f610344565b8160018114610a5e5760028114610a6857610a84565b6001915050610344565b60ff841115610a7957610a796109d8565b50506001821b610344565b5060208310610133831016604e8410600b8410161715610aa7575081810a610344565b610ab183836109ec565b805f1904821115610ac457610ac46109d8565b029392505050565b5f6103418383610a2e565b5f60208284031215610ae7575f80fd5b815160ff81168114610341575f80fd5b8082028115828204841417610344576103446109d8565b5f82610b2857634e487b7160e01b5f52601260045260245ffd5b500490565b5f6020808352835180828501525f5b81811015610b5857858101830151858201604001528201610b3c565b505f604082860101526040601f19601f830116850101925050509291505056fea264697066735822122059adb05277171557398b71241c7ab68ce942286a187981e383467c28e7e37e4864736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x88 JUMPI DUP1 PUSH4 0xA2DCB4F5 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA2DCB4F5 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xA607A8D9 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0xD6C6C4AC EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0xDC6663C7 EQ PUSH2 0x1A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x8E409A79 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x95082D25 EQ PUSH2 0x173 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1627540C EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x3DDAC953 EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x53A47BB7 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x753B5F8A EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x88E5A491 EQ PUSH2 0x146 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE2 PUSH2 0xDD CALLDATASIZE PUSH1 0x4 PUSH2 0x935 JUMP JUMPDEST PUSH2 0x1B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF7 PUSH2 0xF2 CALLDATASIZE PUSH1 0x4 PUSH2 0x94E JUMP JUMPDEST PUSH2 0x27D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x11D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x101 JUMP JUMPDEST PUSH2 0xF7 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE2 PUSH2 0x34A JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x432 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x11D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xE2 PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0x935 JUMP JUMPDEST PUSH2 0x550 JUMP JUMPDEST PUSH2 0xF7 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE2 PUSH2 0x18A CALLDATASIZE PUSH1 0x4 PUSH2 0x935 JUMP JUMPDEST PUSH2 0x63A JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x724 JUMP JUMPDEST PUSH2 0xF7 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x11D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x229 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792074686520636F6E7472616374206F776E6572206D61792070657266 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x37B936903A3434B99030B1BA34B7B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH1 0x21 PUSH1 0x99 SHL ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x2D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x6D7573742075736520776574682061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x220 JUMP JUMPDEST DUP2 PUSH3 0xF4240 EQ PUSH2 0x31C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x36BAB9BA1031B0B636103BB4BA341018B29B PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x220 JUMP JUMPDEST PUSH2 0x341 PUSH2 0x327 PUSH2 0x432 JUMP JUMPDEST PUSH2 0x33B PUSH1 0x6 SLOAD PUSH2 0x335 PUSH2 0x724 JUMP JUMPDEST SWAP1 PUSH2 0x82B JUMP JUMPDEST SWAP1 PUSH2 0x8A9 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206D757374206265206E6F6D696E61746564206265666F726520796F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x2063616E20616363657074206F776E65727368697 PUSH1 0x5C SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x220 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x487 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x98C JUMP JUMPDEST SWAP5 POP SWAP5 POP POP SWAP4 POP SWAP4 POP PUSH0 DUP4 SLT ISZERO DUP1 ISZERO PUSH2 0x4C3 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x4E1 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND LT ISZERO JUMPDEST PUSH2 0x527 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x496E76616C696420636861696E6C696E6B207072696365 PUSH1 0x48 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x220 JUMP JUMPDEST PUSH2 0x547 PUSH1 0x4 SLOAD PUSH1 0xA PUSH2 0x539 SWAP2 SWAP1 PUSH2 0xACC JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x33B SWAP1 DUP7 SWAP1 PUSH2 0x82B JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x572 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x5B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F74206F776E6572206F722074696D656C6F636B PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x220 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x60D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x631 SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x5 SSTORE POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x65C JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x6A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F74206F776E6572206F722074696D656C6F636B PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x220 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6F7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x71B SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x4 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x779 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x79D SWAP2 SWAP1 PUSH2 0x98C JUMP JUMPDEST SWAP5 POP SWAP5 POP POP SWAP4 POP SWAP4 POP PUSH0 DUP4 SLT ISZERO DUP1 ISZERO PUSH2 0x7B5 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x7D3 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND LT ISZERO JUMPDEST PUSH2 0x819 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x496E76616C696420636861696E6C696E6B207072696365 PUSH1 0x48 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x220 JUMP JUMPDEST PUSH2 0x547 PUSH1 0x5 SLOAD PUSH1 0xA PUSH2 0x539 SWAP2 SWAP1 PUSH2 0xACC JUMP JUMPDEST PUSH0 DUP3 PUSH0 SUB PUSH2 0x83A JUMPI POP PUSH0 PUSH2 0x344 JUMP JUMPDEST PUSH0 PUSH2 0x845 DUP4 DUP6 PUSH2 0xAF7 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x852 DUP6 DUP4 PUSH2 0xB0E JUMP JUMPDEST EQ PUSH2 0x341 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x220 JUMP JUMPDEST PUSH0 PUSH2 0x341 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH0 DUP2 DUP4 PUSH2 0x905 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0xB2D JUMP JUMPDEST POP PUSH0 PUSH2 0x911 DUP5 DUP7 PUSH2 0xB0E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x930 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x945 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x341 DUP3 PUSH2 0x91A JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x95F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x968 DUP4 PUSH2 0x91A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x930 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x9A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9A9 DUP7 PUSH2 0x976 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x9CC PUSH1 0x80 DUP8 ADD PUSH2 0x976 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0xA26 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0xA0C JUMPI PUSH2 0xA0C PUSH2 0x9D8 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0xA19 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x9F1 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xA3C JUMPI POP PUSH1 0x1 PUSH2 0x344 JUMP JUMPDEST DUP2 PUSH2 0xA48 JUMPI POP PUSH0 PUSH2 0x344 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xA5E JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xA68 JUMPI PUSH2 0xA84 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x344 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xA79 JUMPI PUSH2 0xA79 PUSH2 0x9D8 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x344 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xAA7 JUMPI POP DUP2 DUP2 EXP PUSH2 0x344 JUMP JUMPDEST PUSH2 0xAB1 DUP4 DUP4 PUSH2 0x9EC JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0xAC4 JUMPI PUSH2 0xAC4 PUSH2 0x9D8 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x341 DUP4 DUP4 PUSH2 0xA2E JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAE7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x341 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x344 JUMPI PUSH2 0x344 PUSH2 0x9D8 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xB28 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB58 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xB3C JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0xAD 0xB0 MSTORE PUSH24 0x171557398B71241C7AB68CE942286A187981E383467C28E7 0xE3 PUSH31 0x4864736F6C6343000815003300000000000000000000000000000000000000 ",
							"sourceMap": "1268:3061:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;388:138:3;;;;;;:::i;:::-;;:::i;:::-;;3356:427:2;;;;;;:::i;:::-;;:::i;:::-;;;788:25:4;;;776:2;761:18;3356:427:2;;;;;;;;164:29:3;;;;;-1:-1:-1;;;;;164:29:3;;;;;;-1:-1:-1;;;;;988:32:4;;;970:51;;958:2;943:18;164:29:3;824:203:4;1492:41:2;;;;;;532:266:3;;;:::i;2419:372:2:-;;;:::i;138:20:3:-;;;;;-1:-1:-1;;;;;138:20:3;;;4088:239:2;;;;;;:::i;:::-;;:::i;1540:36::-;;;;;;3843:239;;;;;;:::i;:::-;;:::i;2797:380::-;;;:::i;1445:41::-;;;;;;1582:31;;;;;-1:-1:-1;;;;;1582:31:2;;;388:138:3;855:5;;-1:-1:-1;;;;;855:5:3;841:10;:19;833:79;;;;-1:-1:-1;;;833:79:3;;1234:2:4;833:79:3;;;1216:21:4;1273:2;1253:18;;;1246:30;1312:34;1292:18;;;1285:62;-1:-1:-1;;;1363:18:4;;;1356:45;1418:19;;833:79:3;;;;;;;;;459:14:::1;:23:::0;;-1:-1:-1;;;;;;459:23:3::1;-1:-1:-1::0;;;;;459:23:3;::::1;::::0;;::::1;::::0;;;497:22:::1;::::0;970:51:4;;;497:22:3::1;::::0;958:2:4;943:18;497:22:3::1;;;;;;;388:138:::0;:::o;3356:427:2:-;3426:14;-1:-1:-1;;;;;;;;;;3533:51:2;;;3525:85;;;;-1:-1:-1;;;3525:85:2;;1650:2:4;3525:85:2;;;1632:21:4;1689:2;1669:18;;;1662:30;-1:-1:-1;;;1708:18:4;;;1701:51;1769:18;;3525:85:2;1448:345:4;3525:85:2;3628:8;3640:3;3628:15;3620:46;;;;-1:-1:-1;;;3620:46:2;;2000:2:4;3620:46:2;;;1982:21:4;2039:2;2019:18;;;2012:30;-1:-1:-1;;;2058:18:4;;;2051:48;2116:18;;3620:46:2;1798:342:4;3620:46:2;3723:53;3762:13;:11;:13::i;:::-;3723:34;3741:15;;3723:13;:11;:13::i;:::-;:17;;:34::i;:::-;:38;;:53::i;:::-;3716:60;;3356:427;;;;;:::o;532:266:3:-;600:14;;-1:-1:-1;;;;;600:14:3;586:10;:28;578:94;;;;-1:-1:-1;;;578:94:3;;2347:2:4;578:94:3;;;2329:21:4;2386:2;2366:18;;;2359:30;2425:34;2405:18;;;2398:62;-1:-1:-1;;;2476:18:4;;;2469:51;2537:19;;578:94:3;2145:417:4;578:94:3;700:5;;;707:14;687:35;;;-1:-1:-1;;;;;700:5:3;;;2779:34:4;;707:14:3;;;;2844:2:4;2829:18;;2822:43;687:35:3;;2714:18:4;687:35:3;;;;;;;740:14;;;;732:22;;-1:-1:-1;;;;;;732:22:3;;;-1:-1:-1;;;;;740:14:3;;732:22;;;;764:27;;;532:266::o;2419:372:2:-;2463:7;2483:14;2499:9;2512:17;2531:22;2557:15;;;;;;;;;-1:-1:-1;;;;;2557:15:2;-1:-1:-1;;;;;2557:31:2;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2482:108;;;;;;;;;2617:1;2608:5;:10;;:27;;;;-1:-1:-1;2622:13:2;;;2608:27;:57;;;;;2658:7;-1:-1:-1;;;;;2639:26:2;:15;-1:-1:-1;;;;;2639:26:2;;;2608:57;2600:93;;;;-1:-1:-1;;;2600:93:2;;3740:2:4;2600:93:2;;;3722:21:4;3779:2;3759:18;;;3752:30;-1:-1:-1;;;3798:18:4;;;3791:53;3861:18;;2600:93:2;3538:347:4;2600:93:2;2711:73;2757:26;;2751:2;:32;;;;:::i;:::-;2730:15;;2711:35;;2719:5;;2711:18;:35::i;:73::-;2704:80;;;;;;2419:372;:::o;4088:239::-;1719:5;;-1:-1:-1;;;;;1719:5:2;1705:10;:19;;:53;;-1:-1:-1;1742:16:2;;-1:-1:-1;;;;;1742:16:2;1728:10;:30;1705:53;1697:87;;;;-1:-1:-1;;;1697:87:2;;5598:2:4;1697:87:2;;;5580:21:4;5637:2;5617:18;;;5610:30;-1:-1:-1;;;5656:18:4;;;5649:51;5717:18;;1697:87:2;5396:345:4;1697:87:2;4189:15:::1;:66:::0;;-1:-1:-1;;;;;;4189:66:2::1;-1:-1:-1::0;;;;;4189:66:2;::::1;::::0;;::::1;::::0;;;4294:26:::1;::::0;;-1:-1:-1;;;4294:26:2;;;;:24:::1;::::0;:26:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;4189:66;4294:26:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4265:55;;:26;:55:::0;-1:-1:-1;4088:239:2:o;3843:::-;1719:5;;-1:-1:-1;;;;;1719:5:2;1705:10;:19;;:53;;-1:-1:-1;1742:16:2;;-1:-1:-1;;;;;1742:16:2;1728:10;:30;1705:53;1697:87;;;;-1:-1:-1;;;1697:87:2;;5598:2:4;1697:87:2;;;5580:21:4;5637:2;5617:18;;;5610:30;-1:-1:-1;;;5656:18:4;;;5649:51;5717:18;;1697:87:2;5396:345:4;1697:87:2;3944:15:::1;:66:::0;;-1:-1:-1;;;;;;3944:66:2::1;-1:-1:-1::0;;;;;3944:66:2;::::1;::::0;;::::1;::::0;;;4049:26:::1;::::0;;-1:-1:-1;;;4049:26:2;;;;:24:::1;::::0;:26:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;3944:66;4049:26:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4020:55;;:26;:55:::0;-1:-1:-1;3843:239:2:o;2797:380::-;2841:7;2861:14;2877:9;2890:17;2909:22;2935:15;;;;;;;;;-1:-1:-1;;;;;2935:15:2;-1:-1:-1;;;;;2935:31:2;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2860:108;;;;;;;;;2995:1;2986:5;:10;;:27;;;;-1:-1:-1;3000:13:2;;;2986:27;:57;;;;;3036:7;-1:-1:-1;;;;;3017:26:2;:15;-1:-1:-1;;;;;3017:26:2;;;2986:57;2978:93;;;;-1:-1:-1;;;2978:93:2;;3740:2:4;2978:93:2;;;3722:21:4;3779:2;3759:18;;;3752:30;-1:-1:-1;;;3798:18:4;;;3791:53;3861:18;;2978:93:2;3538:347:4;2978:93:2;3097:73;3143:26;;3137:2;:32;;;;:::i;2193:459:0:-;2251:7;2492:1;2497;2492:6;2488:45;;-1:-1:-1;2521:1:0;2514:8;;2488:45;2543:9;2555:5;2559:1;2555;:5;:::i;:::-;2543:17;-1:-1:-1;2587:1:0;2578:5;2582:1;2543:17;2578:5;:::i;:::-;:10;2570:56;;;;-1:-1:-1;;;2570:56:0;;6621:2:4;2570:56:0;;;6603:21:4;6660:2;6640:18;;;6633:30;6699:34;6679:18;;;6672:62;-1:-1:-1;;;6750:18:4;;;6743:31;6791:19;;2570:56:0;6419:397:4;3107:130:0;3165:7;3191:39;3195:1;3198;3191:39;;;;;;;;;;;;;;;;;3838:7;3938:12;3931:5;3923:28;;;;-1:-1:-1;;;3923:28:0;;;;;;;;:::i;:::-;-1:-1:-1;3961:9:0;3973:5;3977:1;3973;:5;:::i;:::-;3961:17;3752:338;-1:-1:-1;;;;;3752:338:0:o;14:173:4:-;82:20;;-1:-1:-1;;;;;131:31:4;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:254::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;627:2;612:18;;;;599:32;;-1:-1:-1;;;383:254:4:o;2876:179::-;2954:13;;-1:-1:-1;;;;;2996:34:4;;2986:45;;2976:73;;3045:1;3042;3035:12;3060:473;3163:6;3171;3179;3187;3195;3248:3;3236:9;3227:7;3223:23;3219:33;3216:53;;;3265:1;3262;3255:12;3216:53;3288:39;3317:9;3288:39;:::i;:::-;3278:49;;3367:2;3356:9;3352:18;3346:25;3336:35;;3411:2;3400:9;3396:18;3390:25;3380:35;;3455:2;3444:9;3440:18;3434:25;3424:35;;3478:49;3522:3;3511:9;3507:19;3478:49;:::i;:::-;3468:59;;3060:473;;;;;;;;:::o;3890:127::-;3951:10;3946:3;3942:20;3939:1;3932:31;3982:4;3979:1;3972:15;4006:4;4003:1;3996:15;4022:422;4111:1;4154:5;4111:1;4168:270;4189:7;4179:8;4176:21;4168:270;;;4248:4;4244:1;4240:6;4236:17;4230:4;4227:27;4224:53;;;4257:18;;:::i;:::-;4307:7;4297:8;4293:22;4290:55;;;4327:16;;;;4290:55;4406:22;;;;4366:15;;;;4168:270;;;4172:3;4022:422;;;;;:::o;4449:806::-;4498:5;4528:8;4518:80;;-1:-1:-1;4569:1:4;4583:5;;4518:80;4617:4;4607:76;;-1:-1:-1;4654:1:4;4668:5;;4607:76;4699:4;4717:1;4712:59;;;;4785:1;4780:130;;;;4692:218;;4712:59;4742:1;4733:10;;4756:5;;;4780:130;4817:3;4807:8;4804:17;4801:43;;;4824:18;;:::i;:::-;-1:-1:-1;;4880:1:4;4866:16;;4895:5;;4692:218;;4994:2;4984:8;4981:16;4975:3;4969:4;4966:13;4962:36;4956:2;4946:8;4943:16;4938:2;4932:4;4929:12;4925:35;4922:77;4919:159;;;-1:-1:-1;5031:19:4;;;5063:5;;4919:159;5110:34;5135:8;5129:4;5110:34;:::i;:::-;5180:6;5176:1;5172:6;5168:19;5159:7;5156:32;5153:58;;;5191:18;;:::i;:::-;5229:20;;4449:806;-1:-1:-1;;;4449:806:4:o;5260:131::-;5320:5;5349:36;5376:8;5370:4;5349:36;:::i;5746:273::-;5814:6;5867:2;5855:9;5846:7;5842:23;5838:32;5835:52;;;5883:1;5880;5873:12;5835:52;5915:9;5909:16;5965:4;5958:5;5954:16;5947:5;5944:27;5934:55;;5985:1;5982;5975:12;6024:168;6097:9;;;6128;;6145:15;;;6139:22;;6125:37;6115:71;;6166:18;;:::i;6197:217::-;6237:1;6263;6253:132;;6307:10;6302:3;6298:20;6295:1;6288:31;6342:4;6339:1;6332:15;6370:4;6367:1;6360:15;6253:132;-1:-1:-1;6399:9:4;;6197:217::o;6821:548::-;6933:4;6962:2;6991;6980:9;6973:21;7023:6;7017:13;7066:6;7061:2;7050:9;7046:18;7039:34;7091:1;7101:140;7115:6;7112:1;7109:13;7101:140;;;7210:14;;;7206:23;;7200:30;7176:17;;;7195:2;7172:26;7165:66;7130:10;;7101:140;;;7105:3;7290:1;7285:2;7276:6;7265:9;7261:22;7257:31;7250:42;7360:2;7353;7349:7;7344:2;7336:6;7332:15;7328:29;7317:9;7313:45;7309:54;7301:62;;;;6821:548;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "598000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"PRICE_PRECISION()": "2350",
								"acceptOwnership()": "56412",
								"chainlink_eth_usd_decimals()": "2350",
								"chainlink_fxs_usd_decimals()": "2349",
								"consult(address,uint256)": "infinite",
								"getETHPrice()": "infinite",
								"getFXSPrice()": "infinite",
								"nominateNewOwner(address)": "27766",
								"nominatedOwner()": "2381",
								"owner()": "2358",
								"setChainlinkETHUSDOracle(address)": "infinite",
								"setChainlinkFXSUSDOracle(address)": "infinite",
								"timelock_address()": "2424"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1268,
									"end": 4329,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1268,
									"end": 4329,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1268,
									"end": 4329,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1573,
									"end": 1576,
									"name": "PUSH",
									"source": 2,
									"value": "F4240"
								},
								{
									"begin": 1540,
									"end": 1576,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1540,
									"end": 1576,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1853,
									"end": 2374,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1853,
									"end": 2374,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1853,
									"end": 2374,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1853,
									"end": 2374,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1853,
									"end": 2374,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1853,
									"end": 2374,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1853,
									"end": 2374,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1853,
									"end": 2374,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1853,
									"end": 2374,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1853,
									"end": 2374,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1853,
									"end": 2374,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1853,
									"end": 2374,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1853,
									"end": 2374,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1853,
									"end": 2374,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1853,
									"end": 2374,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1853,
									"end": 2374,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1853,
									"end": 2374,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1853,
									"end": 2374,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1853,
									"end": 2374,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1853,
									"end": 2374,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1853,
									"end": 2374,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1853,
									"end": 2374,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1853,
									"end": 2374,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1853,
									"end": 2374,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1853,
									"end": 2374,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1853,
									"end": 2374,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1853,
									"end": 2374,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1853,
									"end": 2374,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1853,
									"end": 2374,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1853,
									"end": 2374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1853,
									"end": 2374,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1853,
									"end": 2374,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1947,
									"end": 1963,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 254,
									"end": 274,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 254,
									"end": 274,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 246,
									"end": 304,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 246,
									"end": 304,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 246,
									"end": 304,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 696,
									"end": 698,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 246,
									"end": 304,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 246,
									"end": 304,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 678,
									"end": 699,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 735,
									"end": 737,
									"name": "PUSH",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 715,
									"end": 733,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 715,
									"end": 733,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 715,
									"end": 733,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 708,
									"end": 738,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 774,
									"end": 801,
									"name": "PUSH",
									"source": 4,
									"value": "4F776E657220616464726573732063616E6E6F74206265203000000000000000"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 754,
									"end": 772,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 747,
									"end": 802,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 819,
									"end": 837,
									"name": "PUSH",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 819,
									"end": 837,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 246,
									"end": 304,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 246,
									"end": 304,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 246,
									"end": 304,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 314,
									"end": 319,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 328,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 314,
									"end": 328,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 314,
									"end": 328,
									"name": "AND",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 314,
									"end": 328,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 314,
									"end": 328,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 314,
									"end": 328,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 314,
									"end": 328,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 314,
									"end": 328,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 314,
									"end": 328,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 314,
									"end": 328,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 343,
									"end": 375,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 343,
									"end": 375,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 343,
									"end": 375,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1060,
									"end": 1094,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1060,
									"end": 1094,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1060,
									"end": 1094,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1125,
									"end": 1127,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1110,
									"end": 1128,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1110,
									"end": 1128,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1103,
									"end": 1146,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1103,
									"end": 1146,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1103,
									"end": 1146,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1103,
									"end": 1146,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 343,
									"end": 375,
									"name": "PUSH",
									"source": 3,
									"value": "B532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C"
								},
								{
									"begin": 343,
									"end": 375,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 995,
									"end": 1013,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 343,
									"end": 375,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 343,
									"end": 375,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 343,
									"end": 375,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 343,
									"end": 375,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 343,
									"end": 375,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 343,
									"end": 375,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 343,
									"end": 375,
									"name": "LOG1",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1975,
									"end": 1991,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1975,
									"end": 2011,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1975,
									"end": 2011,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1975,
									"end": 2011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1975,
									"end": 2011,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1975,
									"end": 2011,
									"modifierDepth": 1,
									"name": "AND",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1975,
									"end": 2011,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1975,
									"end": 2011,
									"modifierDepth": 1,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1975,
									"end": 2011,
									"modifierDepth": 1,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1975,
									"end": 2011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1975,
									"end": 2011,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1975,
									"end": 2011,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2041,
									"end": 2056,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 2041,
									"end": 2124,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2041,
									"end": 2124,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2081,
									"end": 2123,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "74DCBD8B2128437B78B77DA6D387B8AB0E5D4ACB"
								},
								{
									"begin": 2041,
									"end": 2124,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2041,
									"end": 2124,
									"modifierDepth": 1,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2041,
									"end": 2124,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2041,
									"end": 2124,
									"modifierDepth": 1,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2041,
									"end": 2124,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2041,
									"end": 2124,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "313CE567"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2187,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "313CE567"
								},
								{
									"begin": 2163,
									"end": 2187,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2081,
									"end": 2123,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "GAS",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "STATICCALL",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "RETURNDATACOPY",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 2163,
									"end": 2189,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 2163,
									"end": 2189,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2134,
									"end": 2189,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 2134,
									"end": 2189,
									"modifierDepth": 1,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2134,
									"end": 2160,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2134,
									"end": 2189,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2134,
									"end": 2189,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2134,
									"end": 2189,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2219,
									"end": 2234,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2219,
									"end": 2302,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2219,
									"end": 2302,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2219,
									"end": 2302,
									"modifierDepth": 1,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2259,
									"end": 2301,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "CD2A119BD1F7DF95D706DE6F2057FDD45A0503E2"
								},
								{
									"begin": 2219,
									"end": 2302,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2219,
									"end": 2302,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2219,
									"end": 2302,
									"modifierDepth": 1,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2219,
									"end": 2302,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2219,
									"end": 2302,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2219,
									"end": 2302,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2341,
									"end": 2367,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "313CE567"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2341,
									"end": 2367,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2259,
									"end": 2301,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2259,
									"end": 2301,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2365,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "313CE567"
								},
								{
									"begin": 2341,
									"end": 2365,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2341,
									"end": 2367,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2259,
									"end": 2301,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "GAS",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "STATICCALL",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2341,
									"end": 2367,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "RETURNDATACOPY",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 2341,
									"end": 2367,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 2341,
									"end": 2367,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2312,
									"end": 2367,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 2312,
									"end": 2367,
									"modifierDepth": 1,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2312,
									"end": 2338,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 2312,
									"end": 2367,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1268,
									"end": 4329,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1268,
									"end": 4329,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1268,
									"end": 4329,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1157,
									"end": 1430,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1157,
									"end": 1430,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1225,
									"end": 1231,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1278,
									"end": 1280,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1266,
									"end": 1275,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1257,
									"end": 1264,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1253,
									"end": 1276,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1249,
									"end": 1281,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 1246,
									"end": 1298,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1246,
									"end": 1298,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 1246,
									"end": 1298,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1294,
									"end": 1295,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1291,
									"end": 1292,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1296,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1246,
									"end": 1298,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 1246,
									"end": 1298,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1335,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1320,
									"end": 1336,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1376,
									"end": 1380,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 1369,
									"end": 1374,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1365,
									"end": 1381,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 1363,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1355,
									"end": 1382,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 1400,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 1345,
									"end": 1400,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1396,
									"end": 1397,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1393,
									"end": 1394,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1386,
									"end": 1398,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1345,
									"end": 1400,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 1345,
									"end": 1400,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1424,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1157,
									"end": 1430,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1157,
									"end": 1430,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1157,
									"end": 1430,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1157,
									"end": 1430,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1268,
									"end": 4329,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1268,
									"end": 4329,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1268,
									"end": 4329,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1268,
									"end": 4329,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1268,
									"end": 4329,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1268,
									"end": 4329,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1268,
									"end": 4329,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122059adb05277171557398b71241c7ab68ce942286a187981e383467c28e7e37e4864736f6c63430008150033",
									".code": [
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH",
											"source": 2,
											"value": "A2DCB4F5"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH",
											"source": 2,
											"value": "A2DCB4F5"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH",
											"source": 2,
											"value": "A607A8D9"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH",
											"source": 2,
											"value": "D6C6C4AC"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH",
											"source": 2,
											"value": "DC6663C7"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH",
											"source": 2,
											"value": "8E409A79"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH",
											"source": 2,
											"value": "95082D25"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH",
											"source": 2,
											"value": "1627540C"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH",
											"source": 2,
											"value": "3DDAC953"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH",
											"source": 2,
											"value": "53A47BB7"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH",
											"source": 2,
											"value": "753B5F8A"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH",
											"source": 2,
											"value": "79BA5097"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH",
											"source": 2,
											"value": "88E5A491"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 4329,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 388,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 388,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 388,
											"end": 526,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 388,
											"end": 526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 388,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 388,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 388,
											"end": 526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 388,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 388,
											"end": 526,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 3356,
											"end": 3783,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3356,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3356,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3356,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3356,
											"end": 3783,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3356,
											"end": 3783,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3356,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3356,
											"end": 3783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3356,
											"end": 3783,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3356,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3356,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3356,
											"end": 3783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3356,
											"end": 3783,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3356,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3356,
											"end": 3783,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3356,
											"end": 3783,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 788,
											"end": 813,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 788,
											"end": 813,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 776,
											"end": 778,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 761,
											"end": 779,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3356,
											"end": 3783,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3356,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3356,
											"end": 3783,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3356,
											"end": 3783,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3356,
											"end": 3783,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3356,
											"end": 3783,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3356,
											"end": 3783,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3356,
											"end": 3783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3356,
											"end": 3783,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 164,
											"end": 193,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 164,
											"end": 193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 164,
											"end": 193,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 164,
											"end": 193,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 164,
											"end": 193,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 164,
											"end": 193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 164,
											"end": 193,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 988,
											"end": 1020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 988,
											"end": 1020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 988,
											"end": 1020,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 958,
											"end": 960,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 164,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 824,
											"end": 1027,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1492,
											"end": 1533,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1492,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1492,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1492,
											"end": 1533,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1492,
											"end": 1533,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1492,
											"end": 1533,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1492,
											"end": 1533,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 532,
											"end": 798,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 532,
											"end": 798,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 532,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 532,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 532,
											"end": 798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2419,
											"end": 2791,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2419,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2419,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2419,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2419,
											"end": 2791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 138,
											"end": 158,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 138,
											"end": 158,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 138,
											"end": 158,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 158,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 138,
											"end": 158,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 138,
											"end": 158,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 138,
											"end": 158,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 138,
											"end": 158,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 138,
											"end": 158,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4088,
											"end": 4327,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 4088,
											"end": 4327,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4088,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 4088,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4088,
											"end": 4327,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4088,
											"end": 4327,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4088,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4088,
											"end": 4327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4088,
											"end": 4327,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4088,
											"end": 4327,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4088,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4088,
											"end": 4327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1576,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1540,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1540,
											"end": 1576,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1540,
											"end": 1576,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1576,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1576,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3843,
											"end": 4082,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3843,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3843,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3843,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3843,
											"end": 4082,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3843,
											"end": 4082,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3843,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3843,
											"end": 4082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3843,
											"end": 4082,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3843,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3843,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3843,
											"end": 4082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 3177,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2797,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2797,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2797,
											"end": 3177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1486,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1445,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1445,
											"end": 1486,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1445,
											"end": 1486,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1486,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1486,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1613,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1582,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1613,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1582,
											"end": 1613,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1582,
											"end": 1613,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1582,
											"end": 1613,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1613,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1613,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 388,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 855,
											"end": 860,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 855,
											"end": 860,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 855,
											"end": 860,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 841,
											"end": 851,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 841,
											"end": 860,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 833,
											"end": 912,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 833,
											"end": 912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 833,
											"end": 912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1234,
											"end": 1236,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 833,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 833,
											"end": 912,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1216,
											"end": 1237,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1273,
											"end": 1275,
											"name": "PUSH",
											"source": 4,
											"value": "2F"
										},
										{
											"begin": 1253,
											"end": 1271,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1253,
											"end": 1271,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1253,
											"end": 1271,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1276,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1312,
											"end": 1346,
											"name": "PUSH",
											"source": 4,
											"value": "4F6E6C792074686520636F6E7472616374206F776E6572206D61792070657266"
										},
										{
											"begin": 1292,
											"end": 1310,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1292,
											"end": 1310,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1292,
											"end": 1310,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1285,
											"end": 1347,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37B936903A3434B99030B1BA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1363,
											"end": 1381,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1363,
											"end": 1381,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1363,
											"end": 1381,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1401,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1418,
											"end": 1437,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1418,
											"end": 1437,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 833,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 833,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 833,
											"end": 912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 833,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 459,
											"end": 473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 459,
											"end": 482,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 459,
											"end": 482,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 459,
											"end": 482,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 459,
											"end": 482,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 459,
											"end": 482,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 459,
											"end": 482,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 459,
											"end": 482,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 459,
											"end": 482,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 459,
											"end": 482,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 459,
											"end": 482,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 459,
											"end": 482,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 497,
											"end": 519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 519,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 497,
											"end": 519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22"
										},
										{
											"begin": 497,
											"end": 519,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 958,
											"end": 960,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 497,
											"end": 519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 519,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 497,
											"end": 519,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 497,
											"end": 519,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 497,
											"end": 519,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 497,
											"end": 519,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 497,
											"end": 519,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 388,
											"end": 526,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 388,
											"end": 526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3356,
											"end": 3783,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3356,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3426,
											"end": 3440,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3533,
											"end": 3584,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3533,
											"end": 3584,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3533,
											"end": 3584,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3525,
											"end": 3610,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3610,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3525,
											"end": 3610,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3525,
											"end": 3610,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3610,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1652,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3525,
											"end": 3610,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3525,
											"end": 3610,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3610,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1632,
											"end": 1653,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1691,
											"name": "PUSH",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1669,
											"end": 1687,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1669,
											"end": 1687,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1687,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6D7573742075736520776574682061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1708,
											"end": 1726,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1708,
											"end": 1726,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1708,
											"end": 1726,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1752,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 1787,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1769,
											"end": 1787,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3525,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1448,
											"end": 1793,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3525,
											"end": 3610,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3525,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3636,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3640,
											"end": 3643,
											"name": "PUSH",
											"source": 2,
											"value": "F4240"
										},
										{
											"begin": 3628,
											"end": 3643,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3620,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3620,
											"end": 3666,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3620,
											"end": 3666,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3620,
											"end": 3666,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3620,
											"end": 3666,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3620,
											"end": 3666,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2000,
											"end": 2002,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3620,
											"end": 3666,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3620,
											"end": 3666,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3620,
											"end": 3666,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1982,
											"end": 2003,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2039,
											"end": 2041,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2019,
											"end": 2037,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2019,
											"end": 2037,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2037,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2012,
											"end": 2042,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "36BAB9BA1031B0B636103BB4BA341018B29B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2058,
											"end": 2076,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2058,
											"end": 2076,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2058,
											"end": 2076,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2099,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2134,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2116,
											"end": 2134,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3620,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1798,
											"end": 2140,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3620,
											"end": 3666,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3620,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3762,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3762,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3762,
											"end": 3775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3762,
											"end": 3775,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3762,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3741,
											"end": 3756,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3741,
											"end": 3756,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3723,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3723,
											"end": 3736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3736,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3723,
											"end": 3736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3723,
											"end": 3757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3757,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3723,
											"end": 3757,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3761,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3761,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3723,
											"end": 3776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3776,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3723,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3716,
											"end": 3776,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3716,
											"end": 3776,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3356,
											"end": 3783,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3356,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3356,
											"end": 3783,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3356,
											"end": 3783,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3356,
											"end": 3783,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3356,
											"end": 3783,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3356,
											"end": 3783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 532,
											"end": 798,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 532,
											"end": 798,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 600,
											"end": 614,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 600,
											"end": 614,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 600,
											"end": 614,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 586,
											"end": 596,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 586,
											"end": 614,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 578,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 578,
											"end": 672,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 578,
											"end": 672,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 578,
											"end": 672,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 578,
											"end": 672,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 578,
											"end": 672,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2347,
											"end": 2349,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 578,
											"end": 672,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 578,
											"end": 672,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 578,
											"end": 672,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2329,
											"end": 2350,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2386,
											"end": 2388,
											"name": "PUSH",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2366,
											"end": 2384,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2366,
											"end": 2384,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2384,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2389,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2459,
											"name": "PUSH",
											"source": 4,
											"value": "596F75206D757374206265206E6F6D696E61746564206265666F726520796F75"
										},
										{
											"begin": 2405,
											"end": 2423,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2405,
											"end": 2423,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2423,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2398,
											"end": 2460,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2063616E20616363657074206F776E65727368697"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2476,
											"end": 2494,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2476,
											"end": 2494,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2476,
											"end": 2494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2469,
											"end": 2520,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2556,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2537,
											"end": 2556,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 578,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2145,
											"end": 2562,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 578,
											"end": 672,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 578,
											"end": 672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 700,
											"end": 705,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 700,
											"end": 705,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 700,
											"end": 705,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 707,
											"end": 721,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 687,
											"end": 722,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 687,
											"end": 722,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 687,
											"end": 722,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 700,
											"end": 705,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 700,
											"end": 705,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 700,
											"end": 705,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2779,
											"end": 2813,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2813,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 707,
											"end": 721,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 707,
											"end": 721,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 707,
											"end": 721,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 707,
											"end": 721,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2844,
											"end": 2846,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2822,
											"end": 2865,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 687,
											"end": 722,
											"name": "PUSH",
											"source": 3,
											"value": "B532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C"
										},
										{
											"begin": 687,
											"end": 722,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 687,
											"end": 722,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 687,
											"end": 722,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 687,
											"end": 722,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 687,
											"end": 722,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 687,
											"end": 722,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 687,
											"end": 722,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 687,
											"end": 722,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 740,
											"end": 754,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 740,
											"end": 754,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 740,
											"end": 754,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 740,
											"end": 754,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 754,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 732,
											"end": 754,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 732,
											"end": 754,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 732,
											"end": 754,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 732,
											"end": 754,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 740,
											"end": 754,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 740,
											"end": 754,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 732,
											"end": 754,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 732,
											"end": 754,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 732,
											"end": 754,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 732,
											"end": 754,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 764,
											"end": 791,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 764,
											"end": 791,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 764,
											"end": 791,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 532,
											"end": 798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2419,
											"end": 2791,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2419,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2463,
											"end": 2470,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2483,
											"end": 2497,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2499,
											"end": 2508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2512,
											"end": 2529,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2553,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2572,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2557,
											"end": 2572,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2572,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2572,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2557,
											"end": 2572,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2572,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2557,
											"end": 2572,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2557,
											"end": 2588,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2588,
											"name": "PUSH",
											"source": 2,
											"value": "FEAF968C"
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2557,
											"end": 2590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2557,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2590,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2590,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2590,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2590,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2618,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 2613,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2618,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2618,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2635,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2635,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2608,
											"end": 2635,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2635,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2608,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2665,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2665,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2608,
											"end": 2665,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2658,
											"end": 2665,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2639,
											"end": 2665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2639,
											"end": 2654,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2639,
											"end": 2665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2639,
											"end": 2665,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2639,
											"end": 2665,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2665,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2608,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2600,
											"end": 2693,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2600,
											"end": 2693,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2600,
											"end": 2693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2693,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3742,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2600,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2600,
											"end": 2693,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2693,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3743,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3779,
											"end": 3781,
											"name": "PUSH",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 3759,
											"end": 3777,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3759,
											"end": 3777,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3759,
											"end": 3777,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420636861696E6C696E6B207072696365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "48"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3798,
											"end": 3816,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3798,
											"end": 3816,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3798,
											"end": 3816,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3844,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3879,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3861,
											"end": 3879,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3538,
											"end": 3885,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2693,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2600,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2711,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2757,
											"end": 2783,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2757,
											"end": 2783,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2751,
											"end": 2753,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 2751,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2751,
											"end": 2783,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2751,
											"end": 2783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2751,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2751,
											"end": 2783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2751,
											"end": 2783,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2751,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2745,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2730,
											"end": 2745,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2711,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2711,
											"end": 2746,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2719,
											"end": 2724,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2719,
											"end": 2724,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2711,
											"end": 2729,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2711,
											"end": 2746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2711,
											"end": 2784,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2711,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2784,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2784,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2784,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2784,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2784,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2784,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2419,
											"end": 2791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2419,
											"end": 2791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4088,
											"end": 4327,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4088,
											"end": 4327,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1719,
											"end": 1724,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1719,
											"end": 1724,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1719,
											"end": 1724,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1705,
											"end": 1715,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1705,
											"end": 1724,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1705,
											"end": 1724,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1705,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1705,
											"end": 1758,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1742,
											"end": 1758,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1742,
											"end": 1758,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1742,
											"end": 1758,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1738,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1758,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1705,
											"end": 1758,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1705,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1697,
											"end": 1784,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1784,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1697,
											"end": 1784,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1784,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1784,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5598,
											"end": 5600,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1697,
											"end": 1784,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1697,
											"end": 1784,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1784,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5601,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5637,
											"end": 5639,
											"name": "PUSH",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 5617,
											"end": 5635,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5617,
											"end": 5635,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5617,
											"end": 5635,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5640,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F74206F776E6572206F722074696D656C6F636B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5700,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5717,
											"end": 5735,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5717,
											"end": 5735,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 5396,
											"end": 5741,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1784,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1697,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4189,
											"end": 4204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 4189,
											"end": 4255,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4189,
											"end": 4255,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4189,
											"end": 4255,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4189,
											"end": 4255,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4189,
											"end": 4255,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4189,
											"end": 4255,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4189,
											"end": 4255,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4189,
											"end": 4255,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 4189,
											"end": 4255,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4189,
											"end": 4255,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4189,
											"end": 4255,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4294,
											"end": 4320,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "313CE567"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4294,
											"end": 4320,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4318,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 4294,
											"end": 4318,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4294,
											"end": 4320,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4320,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4189,
											"end": 4255,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4294,
											"end": 4320,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4294,
											"end": 4320,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4294,
											"end": 4320,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4265,
											"end": 4320,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4265,
											"end": 4291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4265,
											"end": 4320,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4088,
											"end": 4327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3843,
											"end": 4082,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3843,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1719,
											"end": 1724,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1719,
											"end": 1724,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1719,
											"end": 1724,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1705,
											"end": 1715,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1705,
											"end": 1724,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1705,
											"end": 1724,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1705,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1705,
											"end": 1758,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1742,
											"end": 1758,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1742,
											"end": 1758,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1742,
											"end": 1758,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1738,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1758,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1705,
											"end": 1758,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1705,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1697,
											"end": 1784,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1784,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1697,
											"end": 1784,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1784,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1784,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5598,
											"end": 5600,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1697,
											"end": 1784,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1697,
											"end": 1784,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1784,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5601,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5637,
											"end": 5639,
											"name": "PUSH",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 5617,
											"end": 5635,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5617,
											"end": 5635,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5617,
											"end": 5635,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5640,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F74206F776E6572206F722074696D656C6F636B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5700,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5717,
											"end": 5735,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5717,
											"end": 5735,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 5396,
											"end": 5741,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1784,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1697,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3944,
											"end": 3959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3944,
											"end": 4010,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3944,
											"end": 4010,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3944,
											"end": 4010,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3944,
											"end": 4010,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3944,
											"end": 4010,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3944,
											"end": 4010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3944,
											"end": 4010,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3944,
											"end": 4010,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3944,
											"end": 4010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3944,
											"end": 4010,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3944,
											"end": 4010,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4075,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "313CE567"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4049,
											"end": 4075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 4049,
											"end": 4073,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4049,
											"end": 4075,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4049,
											"end": 4075,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3944,
											"end": 4010,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4075,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4049,
											"end": 4075,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 4049,
											"end": 4075,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4020,
											"end": 4075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4020,
											"end": 4075,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4020,
											"end": 4046,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4020,
											"end": 4075,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3843,
											"end": 4082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 3177,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2797,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2841,
											"end": 2848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2875,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2886,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2907,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2935,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2935,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2935,
											"end": 2950,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2950,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2950,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2935,
											"end": 2950,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2950,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2950,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2935,
											"end": 2950,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2935,
											"end": 2966,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2966,
											"name": "PUSH",
											"source": 2,
											"value": "FEAF968C"
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2935,
											"end": 2968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2968,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2968,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2968,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2968,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 2996,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2986,
											"end": 2991,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2986,
											"end": 2996,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2986,
											"end": 2996,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3000,
											"end": 3013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3000,
											"end": 3013,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3000,
											"end": 3013,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2986,
											"end": 3043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2986,
											"end": 3043,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2986,
											"end": 3043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2986,
											"end": 3043,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2986,
											"end": 3043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3036,
											"end": 3043,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3017,
											"end": 3043,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3032,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3017,
											"end": 3043,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3043,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3043,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2986,
											"end": 3043,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2986,
											"end": 3043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2978,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2978,
											"end": 3071,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2978,
											"end": 3071,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2978,
											"end": 3071,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2978,
											"end": 3071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2978,
											"end": 3071,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3742,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2978,
											"end": 3071,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2978,
											"end": 3071,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2978,
											"end": 3071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3743,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3779,
											"end": 3781,
											"name": "PUSH",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 3759,
											"end": 3777,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3759,
											"end": 3777,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3759,
											"end": 3777,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420636861696E6C696E6B207072696365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "48"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3798,
											"end": 3816,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3798,
											"end": 3816,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3798,
											"end": 3816,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3844,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3879,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3861,
											"end": 3879,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2978,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3538,
											"end": 3885,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2978,
											"end": 3071,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2978,
											"end": 3071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3143,
											"end": 3169,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3143,
											"end": 3169,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3137,
											"end": 3139,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 3137,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3137,
											"end": 3169,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3137,
											"end": 3169,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3137,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3137,
											"end": 3169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2193,
											"end": 2652,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2193,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2251,
											"end": 2258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2493,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2498,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2488,
											"end": 2533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2521,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2514,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2514,
											"end": 2522,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2533,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2488,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2552,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2555,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2559,
											"end": 2560,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2556,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2555,
											"end": 2560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2560,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2555,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2587,
											"end": 2588,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2582,
											"end": 2583,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2560,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2578,
											"end": 2583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2583,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2578,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2588,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6621,
											"end": 6623,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6603,
											"end": 6624,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6660,
											"end": 6662,
											"name": "PUSH",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 6640,
											"end": 6658,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6640,
											"end": 6658,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6640,
											"end": 6658,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6699,
											"end": 6733,
											"name": "PUSH",
											"source": 4,
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 6679,
											"end": 6697,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 6679,
											"end": 6697,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6679,
											"end": 6697,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6672,
											"end": 6734,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6750,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 6750,
											"end": 6768,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6750,
											"end": 6768,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6743,
											"end": 6774,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6810,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 6791,
											"end": 6810,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2570,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 6419,
											"end": 6816,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3107,
											"end": 3237,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3107,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3195,
											"end": 3196,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3198,
											"end": 3199,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3838,
											"end": 3845,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3931,
											"end": 3936,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 3923,
											"end": 3951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3961,
											"end": 3970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3977,
											"end": 3978,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 3974,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 3973,
											"end": 3978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 3978,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3973,
											"end": 3978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 3978,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 4090,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3752,
											"end": 4090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 343,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 383,
											"end": 637,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 383,
											"end": 637,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 551,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 627,
											"end": 629,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 630,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 612,
											"end": 630,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 612,
											"end": 630,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 612,
											"end": 630,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 599,
											"end": 631,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 599,
											"end": 631,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 383,
											"end": 637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2876,
											"end": 3055,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2876,
											"end": 3055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2954,
											"end": 2967,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2954,
											"end": 2967,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2986,
											"end": 3031,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2986,
											"end": 3031,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2976,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2976,
											"end": 3049,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3046,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3043,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3035,
											"end": 3047,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3060,
											"end": 3533,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3060,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3169,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3171,
											"end": 3177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3179,
											"end": 3185,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3187,
											"end": 3193,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3195,
											"end": 3201,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3251,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 3236,
											"end": 3245,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3234,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3246,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 3269,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 3216,
											"end": 3269,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3265,
											"end": 3266,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3262,
											"end": 3263,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3255,
											"end": 3267,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 3269,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 3216,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3288,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 3317,
											"end": 3326,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3288,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 3288,
											"end": 3327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3288,
											"end": 3327,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 3288,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3278,
											"end": 3327,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3278,
											"end": 3327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3369,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3356,
											"end": 3365,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3352,
											"end": 3370,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3346,
											"end": 3371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3336,
											"end": 3371,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3336,
											"end": 3371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3413,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3400,
											"end": 3409,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3415,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3380,
											"end": 3415,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3380,
											"end": 3415,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3444,
											"end": 3453,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3440,
											"end": 3458,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3434,
											"end": 3459,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3424,
											"end": 3459,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3424,
											"end": 3459,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3478,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 3522,
											"end": 3525,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3511,
											"end": 3520,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3507,
											"end": 3526,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3478,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 3478,
											"end": 3527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3478,
											"end": 3527,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 3478,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3527,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3527,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3060,
											"end": 3533,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3060,
											"end": 3533,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 3060,
											"end": 3533,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3060,
											"end": 3533,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3060,
											"end": 3533,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 3060,
											"end": 3533,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3060,
											"end": 3533,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3060,
											"end": 3533,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3060,
											"end": 3533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3890,
											"end": 4017,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 3890,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3961,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 3946,
											"end": 3949,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3942,
											"end": 3962,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3939,
											"end": 3940,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3932,
											"end": 3963,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3979,
											"end": 3980,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3972,
											"end": 3987,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4006,
											"end": 4010,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4003,
											"end": 4004,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3996,
											"end": 4011,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4022,
											"end": 4444,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4022,
											"end": 4444,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4112,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4154,
											"end": 4159,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4112,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4168,
											"end": 4438,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 4168,
											"end": 4438,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4189,
											"end": 4196,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4187,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4176,
											"end": 4197,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4168,
											"end": 4438,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4168,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 4168,
											"end": 4438,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4248,
											"end": 4252,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4245,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4240,
											"end": 4246,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4236,
											"end": 4253,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4230,
											"end": 4234,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4227,
											"end": 4254,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4277,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 4224,
											"end": 4277,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4257,
											"end": 4275,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 4257,
											"end": 4275,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4257,
											"end": 4275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4257,
											"end": 4275,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 4257,
											"end": 4275,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4307,
											"end": 4314,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4297,
											"end": 4305,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4315,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4290,
											"end": 4345,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4290,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 4290,
											"end": 4345,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4327,
											"end": 4343,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4327,
											"end": 4343,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4327,
											"end": 4343,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4327,
											"end": 4343,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4290,
											"end": 4345,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 4290,
											"end": 4345,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4406,
											"end": 4428,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4406,
											"end": 4428,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4406,
											"end": 4428,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 4406,
											"end": 4428,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4366,
											"end": 4381,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4366,
											"end": 4381,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4366,
											"end": 4381,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4366,
											"end": 4381,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4168,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 4168,
											"end": 4438,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4168,
											"end": 4438,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 4168,
											"end": 4438,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4172,
											"end": 4175,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4022,
											"end": 4444,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4022,
											"end": 4444,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4022,
											"end": 4444,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4022,
											"end": 4444,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4022,
											"end": 4444,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4022,
											"end": 4444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4449,
											"end": 5255,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4449,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4498,
											"end": 4503,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4536,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4518,
											"end": 4598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 4518,
											"end": 4598,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4569,
											"end": 4570,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4583,
											"end": 4588,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 4583,
											"end": 4588,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4518,
											"end": 4598,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 4518,
											"end": 4598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4617,
											"end": 4621,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4607,
											"end": 4683,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 4607,
											"end": 4683,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4654,
											"end": 4655,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4668,
											"end": 4673,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 4668,
											"end": 4673,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4607,
											"end": 4683,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 4607,
											"end": 4683,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4699,
											"end": 4703,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4718,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4712,
											"end": 4771,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4712,
											"end": 4771,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4712,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 4712,
											"end": 4771,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4785,
											"end": 4786,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4780,
											"end": 4910,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4780,
											"end": 4910,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4780,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 4780,
											"end": 4910,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4692,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 4692,
											"end": 4910,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4712,
											"end": 4771,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 4712,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4742,
											"end": 4743,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4733,
											"end": 4743,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4733,
											"end": 4743,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4756,
											"end": 4761,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4756,
											"end": 4761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 4756,
											"end": 4761,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4780,
											"end": 4910,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 4780,
											"end": 4910,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4817,
											"end": 4820,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4807,
											"end": 4815,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4804,
											"end": 4821,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4844,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 4801,
											"end": 4844,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4824,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 4824,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4824,
											"end": 4842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4824,
											"end": 4842,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 4824,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4880,
											"end": 4881,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4866,
											"end": 4882,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4866,
											"end": 4882,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 4895,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 4895,
											"end": 4900,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4692,
											"end": 4910,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 4692,
											"end": 4910,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4692,
											"end": 4910,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4994,
											"end": 4996,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4984,
											"end": 4992,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 4997,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4975,
											"end": 4978,
											"name": "PUSH",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 4969,
											"end": 4973,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4979,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4962,
											"end": 4998,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4956,
											"end": 4958,
											"name": "PUSH",
											"source": 4,
											"value": "4E"
										},
										{
											"begin": 4946,
											"end": 4954,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4943,
											"end": 4959,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 4940,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 4932,
											"end": 4936,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4929,
											"end": 4941,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4925,
											"end": 4960,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4922,
											"end": 4999,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 5078,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 4919,
											"end": 5078,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5031,
											"end": 5050,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5031,
											"end": 5050,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5031,
											"end": 5050,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 5063,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 5063,
											"end": 5068,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 5078,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 4919,
											"end": 5078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5110,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 5135,
											"end": 5143,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5133,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5110,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 5110,
											"end": 5144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5110,
											"end": 5144,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 5110,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5180,
											"end": 5186,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5177,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5172,
											"end": 5178,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5168,
											"end": 5187,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5159,
											"end": 5166,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5188,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5211,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 5153,
											"end": 5211,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 5191,
											"end": 5209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 5191,
											"end": 5209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5209,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 5191,
											"end": 5209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5249,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5249,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4449,
											"end": 5255,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4449,
											"end": 5255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5260,
											"end": 5391,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5260,
											"end": 5391,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5320,
											"end": 5325,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5349,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 5376,
											"end": 5384,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5370,
											"end": 5374,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5349,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 5349,
											"end": 5385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5746,
											"end": 6019,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 5746,
											"end": 6019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5814,
											"end": 5820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5867,
											"end": 5869,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5855,
											"end": 5864,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5846,
											"end": 5853,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5865,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5838,
											"end": 5870,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5887,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 5835,
											"end": 5887,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5883,
											"end": 5884,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5880,
											"end": 5881,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5885,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5887,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 5835,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5915,
											"end": 5924,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5909,
											"end": 5925,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5965,
											"end": 5969,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 5958,
											"end": 5963,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5954,
											"end": 5970,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5947,
											"end": 5952,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5944,
											"end": 5971,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5989,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 5934,
											"end": 5989,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5985,
											"end": 5986,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5982,
											"end": 5983,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5975,
											"end": 5987,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6024,
											"end": 6192,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 6024,
											"end": 6192,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6106,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6106,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 6128,
											"end": 6137,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6128,
											"end": 6137,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6145,
											"end": 6160,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6145,
											"end": 6160,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6145,
											"end": 6160,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 6139,
											"end": 6161,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6139,
											"end": 6161,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6125,
											"end": 6162,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 6115,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 6115,
											"end": 6186,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 6166,
											"end": 6184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6197,
											"end": 6414,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 6197,
											"end": 6414,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6237,
											"end": 6238,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6263,
											"end": 6264,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6253,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 6253,
											"end": 6385,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6317,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 6302,
											"end": 6305,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 6298,
											"end": 6318,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6296,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6319,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6342,
											"end": 6346,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 6339,
											"end": 6340,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6332,
											"end": 6347,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6370,
											"end": 6374,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6367,
											"end": 6368,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6375,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6253,
											"end": 6385,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 6253,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6399,
											"end": 6408,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 6399,
											"end": 6408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6197,
											"end": 6414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6821,
											"end": 7369,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 6821,
											"end": 7369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6933,
											"end": 6937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6962,
											"end": 6964,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6991,
											"end": 6993,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6980,
											"end": 6989,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6973,
											"end": 6994,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7023,
											"end": 7029,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7066,
											"end": 7072,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7063,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7050,
											"end": 7059,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7046,
											"end": 7064,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7039,
											"end": 7073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7091,
											"end": 7092,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7101,
											"end": 7241,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 7101,
											"end": 7241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7115,
											"end": 7121,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7112,
											"end": 7113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7109,
											"end": 7122,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7241,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 7101,
											"end": 7241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7210,
											"end": 7224,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7210,
											"end": 7224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7210,
											"end": 7224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7206,
											"end": 7229,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7206,
											"end": 7229,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7200,
											"end": 7230,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7176,
											"end": 7193,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7176,
											"end": 7193,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7176,
											"end": 7193,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7195,
											"end": 7197,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7172,
											"end": 7198,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7165,
											"end": 7231,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7130,
											"end": 7140,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7130,
											"end": 7140,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 7101,
											"end": 7241,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7241,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 7101,
											"end": 7241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7105,
											"end": 7108,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7290,
											"end": 7291,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7285,
											"end": 7287,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7276,
											"end": 7282,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7265,
											"end": 7274,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7261,
											"end": 7283,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7257,
											"end": 7288,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7250,
											"end": 7292,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7360,
											"end": 7362,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7353,
											"end": 7355,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7349,
											"end": 7356,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 7344,
											"end": 7346,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7336,
											"end": 7342,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7332,
											"end": 7347,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7328,
											"end": 7357,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7317,
											"end": 7326,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7358,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7309,
											"end": 7363,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7301,
											"end": 7363,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7301,
											"end": 7363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7301,
											"end": 7363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7301,
											"end": 7363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6821,
											"end": 7369,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6821,
											"end": 7369,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6821,
											"end": 7369,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6821,
											"end": 7369,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6821,
											"end": 7369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"NewFraxProtocol/contracts/Math/SafeMath.sol",
								"NewFraxProtocol/contracts/Oracle/AggregatorV3Interface.sol",
								"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol",
								"NewFraxProtocol/contracts/Staking/Owned.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"PRICE_PRECISION()": "95082d25",
							"acceptOwnership()": "79ba5097",
							"chainlink_eth_usd_decimals()": "753b5f8a",
							"chainlink_fxs_usd_decimals()": "d6c6c4ac",
							"consult(address,uint256)": "3ddac953",
							"getETHPrice()": "a607a8d9",
							"getFXSPrice()": "88e5a491",
							"nominateNewOwner(address)": "1627540c",
							"nominatedOwner()": "53a47bb7",
							"owner()": "8da5cb5b",
							"setChainlinkETHUSDOracle(address)": "8e409a79",
							"setChainlinkFXSUSDOracle(address)": "a2dcb4f5",
							"timelock_address()": "dc6663c7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creator_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_timelock_address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerNominated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PRICE_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainlink_eth_usd_decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainlink_fxs_usd_decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"consult\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getETHPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFXSPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"nominateNewOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nominatedOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_chainlink_eth_usd_oracle\",\"type\":\"address\"}],\"name\":\"setChainlinkETHUSDOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_chainlink_fxs_usd_oracle\",\"type\":\"address\"}],\"name\":\"setChainlinkFXSUSDOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelock_address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":\"FXSOracleWrapper\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"NewFraxProtocol/contracts/Math/SafeMath.sol\":{\"keccak256\":\"0x43a20f7cf4c4319f81450d53779455e88a7ab80bdfc43925156ed4083b74a180\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85317e177f613c29156ffe0b1c1c29c31fedfea1ffc373c9d7f393ef51372728\",\"dweb:/ipfs/QmckZqe6wjgKWd4BTPUjRY1ofC9CsZKxAgXPFCKBisuJdr\"]},\"NewFraxProtocol/contracts/Oracle/AggregatorV3Interface.sol\":{\"keccak256\":\"0x5e7761d06fea8192b159f3e287600cba23c5bdbe3a1bbe1050cc3ab9ed4273a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b6956df5c8ad84b2aba10e7d07c9f4976ae9ebdd65509729e752900a6f6475d\",\"dweb:/ipfs/QmP2MJZdZsJWRozMHmCtq4SU5ePKEHxCzhyqtBFpAjCDny\"]},\"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol\":{\"keccak256\":\"0x75b58b9b1b3d5abbf80f710db3b30d41cf081a331312185ebb4c34cc9ce9161e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://749139387a09388784f4661a30568e01290efb66992631f8fca9159027ab2880\",\"dweb:/ipfs/QmVoViaqJW2htVpp22Ed5zB4bkW9CLdKJnfW2xYxN2duZc\"]},\"NewFraxProtocol/contracts/Staking/Owned.sol\":{\"keccak256\":\"0x89e1dde7e13d0109febf812e7d97dda7f24feb7cfe90239c0f7585d1143407d1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://917add49808f1df4025a7a33e8444661261ebf3ea9f02bcd44c698b1c1e4e7e6\",\"dweb:/ipfs/QmVSVA3swHsqEy5F2n8YBGB91cL66xVkJCezkjY9VAjnwE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 493,
								"contract": "NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol:FXSOracleWrapper",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 495,
								"contract": "NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol:FXSOracleWrapper",
								"label": "nominatedOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 254,
								"contract": "NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol:FXSOracleWrapper",
								"label": "priceFeedFXSUSD",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(AggregatorV3Interface)241"
							},
							{
								"astId": 257,
								"contract": "NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol:FXSOracleWrapper",
								"label": "priceFeedETHUSD",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(AggregatorV3Interface)241"
							},
							{
								"astId": 259,
								"contract": "NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol:FXSOracleWrapper",
								"label": "chainlink_fxs_usd_decimals",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 261,
								"contract": "NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol:FXSOracleWrapper",
								"label": "chainlink_eth_usd_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 264,
								"contract": "NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol:FXSOracleWrapper",
								"label": "PRICE_PRECISION",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 266,
								"contract": "NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol:FXSOracleWrapper",
								"label": "timelock_address",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(AggregatorV3Interface)241": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"NewFraxProtocol/contracts/Staking/Owned.sol": {
				"Owned": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerNominated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "nominateNewOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nominatedOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":117:1037  contract Owned {... */\n  mstore(0x40, 0x80)\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":200:382  constructor (address _owner) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":254:274  _owner != address(0) */\n  dup2\n  and\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":246:304  require(_owner != address(0), \"Owner address cannot be 0\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":511:513   */\n  0x20\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":246:304  require(_owner != address(0), \"Owner address cannot be 0\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":493:514   */\n  mstore\n    /* \"#utility.yul\":550:552   */\n  0x19\n    /* \"#utility.yul\":530:548   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":523:553   */\n  mstore\n    /* \"#utility.yul\":589:616   */\n  0x4f776e657220616464726573732063616e6e6f74206265203000000000000000\n    /* \"#utility.yul\":569:587   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":562:617   */\n  mstore\n    /* \"#utility.yul\":634:652   */\n  0x64\n  add\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":246:304  require(_owner != address(0), \"Owner address cannot be 0\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":314:319  owner */\n  0x00\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":314:328  owner = _owner */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":343:375  OwnerChanged(address(0), _owner) */\n  0x40\n  dup1\n  mload\n    /* \"#utility.yul\":875:909   */\n  swap3\n  dup4\n  mstore\n    /* \"#utility.yul\":940:942   */\n  0x20\n    /* \"#utility.yul\":925:943   */\n  dup4\n  add\n    /* \"#utility.yul\":918:961   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":343:375  OwnerChanged(address(0), _owner) */\n  0xb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c\n  swap2\n    /* \"#utility.yul\":810:828   */\n  add\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":343:375  OwnerChanged(address(0), _owner) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":200:382  constructor (address _owner) public {... */\n  pop\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":117:1037  contract Owned {... */\n  jump(tag_12)\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_14\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_14:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_15\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_15:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":663:967   */\ntag_12:\n    /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":117:1037  contract Owned {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":117:1037  contract Owned {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1627540c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x53a47bb7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x79ba5097\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":388:526  function nominateNewOwner(address _owner) external onlyOwner {... */\n    tag_3:\n      tag_7\n      tag_8\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      stop\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":164:193  address public nominatedOwner */\n    tag_4:\n      sload(0x01)\n      tag_11\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_11:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":469:501   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":451:502   */\n      dup2\n      mstore\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":164:193  address public nominatedOwner */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":532:798  function acceptOwnership() external {... */\n    tag_5:\n      tag_7\n      tag_16\n      jump\t// in\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":138:158  address public owner */\n    tag_6:\n      sload(0x00)\n      tag_11\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":388:526  function nominateNewOwner(address _owner) external onlyOwner {... */\n    tag_10:\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":855:860  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":841:851  msg.sender */\n      caller\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":841:860  msg.sender == owner */\n      eq\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":833:912  require(msg.sender == owner, \"Only the contract owner may perform this action\") */\n      tag_21\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":715:717   */\n      0x20\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":833:912  require(msg.sender == owner, \"Only the contract owner may perform this action\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":697:718   */\n      mstore\n        /* \"#utility.yul\":754:756   */\n      0x2f\n        /* \"#utility.yul\":734:752   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":727:757   */\n      mstore\n        /* \"#utility.yul\":793:827   */\n      0x4f6e6c792074686520636f6e7472616374206f776e6572206d61792070657266\n        /* \"#utility.yul\":773:791   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":766:828   */\n      mstore\n      shl(0x89, 0x37b936903a3434b99030b1ba34b7b7)\n        /* \"#utility.yul\":844:862   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":837:882   */\n      mstore\n        /* \"#utility.yul\":899:918   */\n      0x84\n      add\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":833:912  require(msg.sender == owner, \"Only the contract owner may perform this action\") */\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_21:\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":459:473  nominatedOwner */\n      0x01\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":459:482  nominatedOwner = _owner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":497:519  OwnerNominated(_owner) */\n      mload(0x40)\n        /* \"#utility.yul\":451:502   */\n      swap1\n      dup2\n      mstore\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":497:519  OwnerNominated(_owner) */\n      0x906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce22\n      swap1\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":497:519  OwnerNominated(_owner) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":388:526  function nominateNewOwner(address _owner) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":532:798  function acceptOwnership() external {... */\n    tag_16:\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":600:614  nominatedOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":586:596  msg.sender */\n      caller\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":586:614  msg.sender == nominatedOwner */\n      eq\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":578:672  require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\") */\n      tag_27\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1131:1133   */\n      0x20\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":578:672  require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1113:1134   */\n      mstore\n        /* \"#utility.yul\":1170:1172   */\n      0x35\n        /* \"#utility.yul\":1150:1168   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1143:1173   */\n      mstore\n        /* \"#utility.yul\":1209:1243   */\n      0x596f75206d757374206265206e6f6d696e61746564206265666f726520796f75\n        /* \"#utility.yul\":1189:1207   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1182:1244   */\n      mstore\n      shl(0x5c, 0x02063616e20616363657074206f776e65727368697)\n        /* \"#utility.yul\":1260:1278   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1253:1304   */\n      mstore\n        /* \"#utility.yul\":1321:1340   */\n      0x84\n      add\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":578:672  require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\") */\n      tag_22\n        /* \"#utility.yul\":929:1346   */\n      jump\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":578:672  require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\") */\n    tag_27:\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":700:705  owner */\n      sload(0x00)\n      0x01\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":707:721  nominatedOwner */\n      sload\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":687:722  OwnerChanged(owner, nominatedOwner) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":700:705  owner */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":1563:1597   */\n      dup2\n      mstore\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":707:721  nominatedOwner */\n      swap3\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1628:1630   */\n      0x20\n        /* \"#utility.yul\":1613:1631   */\n      dup4\n      add\n        /* \"#utility.yul\":1606:1649   */\n      mstore\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":687:722  OwnerChanged(owner, nominatedOwner) */\n      0xb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c\n      swap2\n        /* \"#utility.yul\":1498:1516   */\n      add\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":687:722  OwnerChanged(owner, nominatedOwner) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":740:754  nominatedOwner */\n      0x01\n      dup1\n      sload\n      0x00\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":732:754  owner = nominatedOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":740:754  nominatedOwner */\n      dup5\n      and\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":732:754  owner = nominatedOwner */\n      or\n      swap1\n      swap2\n      sstore\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":764:791  nominatedOwner = address(0) */\n      and\n      swap1\n      sstore\n        /* \"NewFraxProtocol/contracts/Staking/Owned.sol\":532:798  function acceptOwnership() external {... */\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_9:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_34\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_34:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_35\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_35:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208265f7858fc60f8e6942e4dfed19c1c706823449771948b616a6a866ad51e1bd64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_523": {
									"entryPoint": null,
									"id": 523,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cbb17bca9ae641614fb20d9f081dbba535c7a48d3eadd7b25242a97252df8c96__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:969:4",
										"nodeType": "YulBlock",
										"src": "0:969:4",
										"statements": [
											{
												"nativeSrc": "6:3:4",
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:4",
													"nodeType": "YulBlock",
													"src": "95:209:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:4",
																"nodeType": "YulBlock",
																"src": "141:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:4",
																					"nodeType": "YulLiteral",
																					"src": "150:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:4",
																					"nodeType": "YulLiteral",
																					"src": "153:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:4"
																			},
																			"nativeSrc": "143:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:4"
																		},
																		"nativeSrc": "143:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:4"
																		},
																		"nativeSrc": "112:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:4",
																		"nodeType": "YulLiteral",
																		"src": "137:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:4"
																},
																"nativeSrc": "108:32:4",
																"nodeType": "YulFunctionCall",
																"src": "108:32:4"
															},
															"nativeSrc": "105:52:4",
															"nodeType": "YulIf",
															"src": "105:52:4"
														},
														{
															"nativeSrc": "166:29:4",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:4"
																},
																"nativeSrc": "179:16:4",
																"nodeType": "YulFunctionCall",
																"src": "179:16:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:4",
																	"nodeType": "YulTypedName",
																	"src": "170:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:4",
																"nodeType": "YulBlock",
																"src": "258:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:4",
																					"nodeType": "YulLiteral",
																					"src": "267:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:4",
																					"nodeType": "YulLiteral",
																					"src": "270:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:4"
																			},
																			"nativeSrc": "260:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:4"
																		},
																		"nativeSrc": "260:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:4",
																										"nodeType": "YulLiteral",
																										"src": "243:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:4",
																										"nodeType": "YulLiteral",
																										"src": "248:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:4"
																								},
																								"nativeSrc": "239:11:4",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:4"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:4",
																								"nodeType": "YulLiteral",
																								"src": "252:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:4"
																						},
																						"nativeSrc": "235:19:4",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:4"
																				},
																				"nativeSrc": "224:31:4",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:4"
																		},
																		"nativeSrc": "214:42:4",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:4"
																},
																"nativeSrc": "207:50:4",
																"nodeType": "YulFunctionCall",
																"src": "207:50:4"
															},
															"nativeSrc": "204:70:4",
															"nodeType": "YulIf",
															"src": "204:70:4"
														},
														{
															"nativeSrc": "283:15:4",
															"nodeType": "YulAssignment",
															"src": "283:15:4",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:4",
																"nodeType": "YulIdentifier",
																"src": "293:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:4",
														"nodeType": "YulTypedName",
														"src": "61:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:4",
														"nodeType": "YulTypedName",
														"src": "72:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:4",
														"nodeType": "YulTypedName",
														"src": "84:6:4",
														"type": ""
													}
												],
												"src": "14:290:4"
											},
											{
												"body": {
													"nativeSrc": "483:175:4",
													"nodeType": "YulBlock",
													"src": "483:175:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "500:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "500:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "511:2:4",
																		"nodeType": "YulLiteral",
																		"src": "511:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "493:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "493:6:4"
																},
																"nativeSrc": "493:21:4",
																"nodeType": "YulFunctionCall",
																"src": "493:21:4"
															},
															"nativeSrc": "493:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "493:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "534:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "534:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "545:2:4",
																				"nodeType": "YulLiteral",
																				"src": "545:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "530:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "530:3:4"
																		},
																		"nativeSrc": "530:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "530:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "550:2:4",
																		"nodeType": "YulLiteral",
																		"src": "550:2:4",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "523:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "523:6:4"
																},
																"nativeSrc": "523:30:4",
																"nodeType": "YulFunctionCall",
																"src": "523:30:4"
															},
															"nativeSrc": "523:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "523:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "573:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "573:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "584:2:4",
																				"nodeType": "YulLiteral",
																				"src": "584:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "569:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "569:3:4"
																		},
																		"nativeSrc": "569:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "569:18:4"
																	},
																	{
																		"hexValue": "4f776e657220616464726573732063616e6e6f742062652030",
																		"kind": "string",
																		"nativeSrc": "589:27:4",
																		"nodeType": "YulLiteral",
																		"src": "589:27:4",
																		"type": "",
																		"value": "Owner address cannot be 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "562:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:4"
																},
																"nativeSrc": "562:55:4",
																"nodeType": "YulFunctionCall",
																"src": "562:55:4"
															},
															"nativeSrc": "562:55:4",
															"nodeType": "YulExpressionStatement",
															"src": "562:55:4"
														},
														{
															"nativeSrc": "626:26:4",
															"nodeType": "YulAssignment",
															"src": "626:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "638:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "638:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "649:2:4",
																		"nodeType": "YulLiteral",
																		"src": "649:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "634:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "634:3:4"
																},
																"nativeSrc": "634:18:4",
																"nodeType": "YulFunctionCall",
																"src": "634:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "626:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "626:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cbb17bca9ae641614fb20d9f081dbba535c7a48d3eadd7b25242a97252df8c96__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "309:349:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "460:9:4",
														"nodeType": "YulTypedName",
														"src": "460:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "474:4:4",
														"nodeType": "YulTypedName",
														"src": "474:4:4",
														"type": ""
													}
												],
												"src": "309:349:4"
											},
											{
												"body": {
													"nativeSrc": "792:175:4",
													"nodeType": "YulBlock",
													"src": "792:175:4",
													"statements": [
														{
															"nativeSrc": "802:26:4",
															"nodeType": "YulAssignment",
															"src": "802:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "814:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "814:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "825:2:4",
																		"nodeType": "YulLiteral",
																		"src": "825:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "810:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "810:3:4"
																},
																"nativeSrc": "810:18:4",
																"nodeType": "YulFunctionCall",
																"src": "810:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "802:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "802:4:4"
																}
															]
														},
														{
															"nativeSrc": "837:29:4",
															"nodeType": "YulVariableDeclaration",
															"src": "837:29:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "855:3:4",
																				"nodeType": "YulLiteral",
																				"src": "855:3:4",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "860:1:4",
																				"nodeType": "YulLiteral",
																				"src": "860:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "851:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "851:3:4"
																		},
																		"nativeSrc": "851:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "851:11:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "864:1:4",
																		"nodeType": "YulLiteral",
																		"src": "864:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "847:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "847:3:4"
																},
																"nativeSrc": "847:19:4",
																"nodeType": "YulFunctionCall",
																"src": "847:19:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "841:2:4",
																	"nodeType": "YulTypedName",
																	"src": "841:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "882:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "882:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "897:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "897:6:4"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "905:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "905:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "893:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "893:3:4"
																		},
																		"nativeSrc": "893:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "893:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "875:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "875:6:4"
																},
																"nativeSrc": "875:34:4",
																"nodeType": "YulFunctionCall",
																"src": "875:34:4"
															},
															"nativeSrc": "875:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "875:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "929:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "929:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "940:2:4",
																				"nodeType": "YulLiteral",
																				"src": "940:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "925:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "925:3:4"
																		},
																		"nativeSrc": "925:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "925:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "949:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "949:6:4"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "957:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "957:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "945:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "945:3:4"
																		},
																		"nativeSrc": "945:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "945:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "918:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "918:6:4"
																},
																"nativeSrc": "918:43:4",
																"nodeType": "YulFunctionCall",
																"src": "918:43:4"
															},
															"nativeSrc": "918:43:4",
															"nodeType": "YulExpressionStatement",
															"src": "918:43:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "663:304:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "753:9:4",
														"nodeType": "YulTypedName",
														"src": "753:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "764:6:4",
														"nodeType": "YulTypedName",
														"src": "764:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "772:6:4",
														"nodeType": "YulTypedName",
														"src": "772:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "783:4:4",
														"nodeType": "YulTypedName",
														"src": "783:4:4",
														"type": ""
													}
												],
												"src": "663:304:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_cbb17bca9ae641614fb20d9f081dbba535c7a48d3eadd7b25242a97252df8c96__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Owner address cannot be 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516103df3803806103df83398101604081905261002e916100e4565b6001600160a01b0381166100885760405162461bcd60e51b815260206004820152601960248201527f4f776e657220616464726573732063616e6e6f74206265203000000000000000604482015260640160405180910390fd5b5f80546001600160a01b0319166001600160a01b03831690811782556040805192835260208301919091527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a150610111565b5f602082840312156100f4575f80fd5b81516001600160a01b038116811461010a575f80fd5b9392505050565b6102c18061011e5f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c80631627540c1461004e57806353a47bb71461006357806379ba5097146100925780638da5cb5b1461009a575b5f80fd5b61006161005c36600461025e565b6100ac565b005b600154610076906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b610061610176565b5f54610076906001600160a01b031681565b5f546001600160a01b031633146101225760405162461bcd60e51b815260206004820152602f60248201527f4f6e6c792074686520636f6e7472616374206f776e6572206d6179207065726660448201526e37b936903a3434b99030b1ba34b7b760891b60648201526084015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce229060200160405180910390a150565b6001546001600160a01b031633146101ee5760405162461bcd60e51b815260206004820152603560248201527f596f75206d757374206265206e6f6d696e61746564206265666f726520796f7560448201527402063616e20616363657074206f776e65727368697605c1b6064820152608401610119565b5f54600154604080516001600160a01b0393841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a1600180545f80546001600160a01b03199081166001600160a01b03841617909155169055565b5f6020828403121561026e575f80fd5b81356001600160a01b0381168114610284575f80fd5b939250505056fea26469706673582212208265f7858fc60f8e6942e4dfed19c1c706823449771948b616a6a866ad51e1bd64736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3DF CODESIZE SUB DUP1 PUSH2 0x3DF DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xE4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E657220616464726573732063616E6E6F74206265203000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x111 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10A JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2C1 DUP1 PUSH2 0x11E PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1627540C EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x53A47BB7 EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x92 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH2 0x5C CALLDATASIZE PUSH1 0x4 PUSH2 0x25E JUMP JUMPDEST PUSH2 0xAC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x76 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x176 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x76 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x122 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792074686520636F6E7472616374206F776E6572206D61792070657266 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x37B936903A3434B99030B1BA34B7B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206D757374206265206E6F6D696E61746564206265666F726520796F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x2063616E20616363657074206F776E65727368697 PUSH1 0x5C SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x119 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x284 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 PUSH6 0xF7858FC60F8E PUSH10 0x42E4DFED19C1C7068234 0x49 PUSH24 0x1948B616A6A866AD51E1BD64736F6C634300081500330000 ",
							"sourceMap": "117:920:3:-:0;;;200:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;254:20:3;;246:58;;;;-1:-1:-1;;;246:58:3;;511:2:4;246:58:3;;;493:21:4;550:2;530:18;;;523:30;589:27;569:18;;;562:55;634:18;;246:58:3;;;;;;;;314:5;:14;;-1:-1:-1;;;;;;314:14:3;-1:-1:-1;;;;;314:14:3;;;;;;;343:32;;;875:34:4;;;940:2;925:18;;918:43;;;;343:32:3;;810:18:4;343:32:3;;;;;;;200:182;117:920;;14:290:4;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:4;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:4:o;663:304::-;117:920:3;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@acceptOwnership_567": {
									"entryPoint": 374,
									"id": 567,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nominateNewOwner_539": {
									"entryPoint": 172,
									"id": 539,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@nominatedOwner_495": {
									"entryPoint": null,
									"id": 495,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_493": {
									"entryPoint": null,
									"id": 493,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1657:4",
										"nodeType": "YulBlock",
										"src": "0:1657:4",
										"statements": [
											{
												"nativeSrc": "6:3:4",
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:216:4",
													"nodeType": "YulBlock",
													"src": "84:216:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:4",
																"nodeType": "YulBlock",
																"src": "130:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:4",
																					"nodeType": "YulLiteral",
																					"src": "139:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:4",
																					"nodeType": "YulLiteral",
																					"src": "142:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:4"
																			},
																			"nativeSrc": "132:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:4"
																		},
																		"nativeSrc": "132:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:4"
																		},
																		"nativeSrc": "101:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:4",
																		"nodeType": "YulLiteral",
																		"src": "126:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:4"
																},
																"nativeSrc": "97:32:4",
																"nodeType": "YulFunctionCall",
																"src": "97:32:4"
															},
															"nativeSrc": "94:52:4",
															"nodeType": "YulIf",
															"src": "94:52:4"
														},
														{
															"nativeSrc": "155:36:4",
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "181:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "168:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:4"
																},
																"nativeSrc": "168:23:4",
																"nodeType": "YulFunctionCall",
																"src": "168:23:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "159:5:4",
																	"nodeType": "YulTypedName",
																	"src": "159:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "254:16:4",
																"nodeType": "YulBlock",
																"src": "254:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "263:1:4",
																					"nodeType": "YulLiteral",
																					"src": "263:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "266:1:4",
																					"nodeType": "YulLiteral",
																					"src": "266:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "256:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:4"
																			},
																			"nativeSrc": "256:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:4"
																		},
																		"nativeSrc": "256:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "213:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "224:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "239:3:4",
																										"nodeType": "YulLiteral",
																										"src": "239:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "244:1:4",
																										"nodeType": "YulLiteral",
																										"src": "244:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "235:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:4"
																								},
																								"nativeSrc": "235:11:4",
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:4"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "248:1:4",
																								"nodeType": "YulLiteral",
																								"src": "248:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "231:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:4"
																						},
																						"nativeSrc": "231:19:4",
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "220:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:4"
																				},
																				"nativeSrc": "220:31:4",
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "210:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:4"
																		},
																		"nativeSrc": "210:42:4",
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "203:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:4"
																},
																"nativeSrc": "203:50:4",
																"nodeType": "YulFunctionCall",
																"src": "203:50:4"
															},
															"nativeSrc": "200:70:4",
															"nodeType": "YulIf",
															"src": "200:70:4"
														},
														{
															"nativeSrc": "279:15:4",
															"nodeType": "YulAssignment",
															"src": "279:15:4",
															"value": {
																"name": "value",
																"nativeSrc": "289:5:4",
																"nodeType": "YulIdentifier",
																"src": "289:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "279:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "14:286:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:4",
														"nodeType": "YulTypedName",
														"src": "50:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:4",
														"nodeType": "YulTypedName",
														"src": "61:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:4",
														"nodeType": "YulTypedName",
														"src": "73:6:4",
														"type": ""
													}
												],
												"src": "14:286:4"
											},
											{
												"body": {
													"nativeSrc": "406:102:4",
													"nodeType": "YulBlock",
													"src": "406:102:4",
													"statements": [
														{
															"nativeSrc": "416:26:4",
															"nodeType": "YulAssignment",
															"src": "416:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "428:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "428:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "439:2:4",
																		"nodeType": "YulLiteral",
																		"src": "439:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "424:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "424:3:4"
																},
																"nativeSrc": "424:18:4",
																"nodeType": "YulFunctionCall",
																"src": "424:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "416:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "416:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "458:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "458:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "473:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "473:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "489:3:4",
																								"nodeType": "YulLiteral",
																								"src": "489:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "494:1:4",
																								"nodeType": "YulLiteral",
																								"src": "494:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "485:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "485:3:4"
																						},
																						"nativeSrc": "485:11:4",
																						"nodeType": "YulFunctionCall",
																						"src": "485:11:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "498:1:4",
																						"nodeType": "YulLiteral",
																						"src": "498:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "481:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "481:3:4"
																				},
																				"nativeSrc": "481:19:4",
																				"nodeType": "YulFunctionCall",
																				"src": "481:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "469:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "469:3:4"
																		},
																		"nativeSrc": "469:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "469:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "451:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "451:6:4"
																},
																"nativeSrc": "451:51:4",
																"nodeType": "YulFunctionCall",
																"src": "451:51:4"
															},
															"nativeSrc": "451:51:4",
															"nodeType": "YulExpressionStatement",
															"src": "451:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "305:203:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "375:9:4",
														"nodeType": "YulTypedName",
														"src": "375:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "386:6:4",
														"nodeType": "YulTypedName",
														"src": "386:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "397:4:4",
														"nodeType": "YulTypedName",
														"src": "397:4:4",
														"type": ""
													}
												],
												"src": "305:203:4"
											},
											{
												"body": {
													"nativeSrc": "687:237:4",
													"nodeType": "YulBlock",
													"src": "687:237:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "704:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "704:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "715:2:4",
																		"nodeType": "YulLiteral",
																		"src": "715:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "697:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "697:6:4"
																},
																"nativeSrc": "697:21:4",
																"nodeType": "YulFunctionCall",
																"src": "697:21:4"
															},
															"nativeSrc": "697:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "697:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "738:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "738:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "749:2:4",
																				"nodeType": "YulLiteral",
																				"src": "749:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "734:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "734:3:4"
																		},
																		"nativeSrc": "734:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "734:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "754:2:4",
																		"nodeType": "YulLiteral",
																		"src": "754:2:4",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "727:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "727:6:4"
																},
																"nativeSrc": "727:30:4",
																"nodeType": "YulFunctionCall",
																"src": "727:30:4"
															},
															"nativeSrc": "727:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "727:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "777:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "777:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "788:2:4",
																				"nodeType": "YulLiteral",
																				"src": "788:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "773:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:4"
																		},
																		"nativeSrc": "773:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "773:18:4"
																	},
																	{
																		"hexValue": "4f6e6c792074686520636f6e7472616374206f776e6572206d61792070657266",
																		"kind": "string",
																		"nativeSrc": "793:34:4",
																		"nodeType": "YulLiteral",
																		"src": "793:34:4",
																		"type": "",
																		"value": "Only the contract owner may perf"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "766:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "766:6:4"
																},
																"nativeSrc": "766:62:4",
																"nodeType": "YulFunctionCall",
																"src": "766:62:4"
															},
															"nativeSrc": "766:62:4",
															"nodeType": "YulExpressionStatement",
															"src": "766:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "848:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "848:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "859:2:4",
																				"nodeType": "YulLiteral",
																				"src": "859:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "844:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "844:3:4"
																		},
																		"nativeSrc": "844:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "844:18:4"
																	},
																	{
																		"hexValue": "6f726d207468697320616374696f6e",
																		"kind": "string",
																		"nativeSrc": "864:17:4",
																		"nodeType": "YulLiteral",
																		"src": "864:17:4",
																		"type": "",
																		"value": "orm this action"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "837:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "837:6:4"
																},
																"nativeSrc": "837:45:4",
																"nodeType": "YulFunctionCall",
																"src": "837:45:4"
															},
															"nativeSrc": "837:45:4",
															"nodeType": "YulExpressionStatement",
															"src": "837:45:4"
														},
														{
															"nativeSrc": "891:27:4",
															"nodeType": "YulAssignment",
															"src": "891:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "903:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "903:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "914:3:4",
																		"nodeType": "YulLiteral",
																		"src": "914:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "899:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "899:3:4"
																},
																"nativeSrc": "899:19:4",
																"nodeType": "YulFunctionCall",
																"src": "899:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "891:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "891:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "513:411:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "664:9:4",
														"nodeType": "YulTypedName",
														"src": "664:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "678:4:4",
														"nodeType": "YulTypedName",
														"src": "678:4:4",
														"type": ""
													}
												],
												"src": "513:411:4"
											},
											{
												"body": {
													"nativeSrc": "1103:243:4",
													"nodeType": "YulBlock",
													"src": "1103:243:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1120:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1120:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1131:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1131:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1113:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1113:6:4"
																},
																"nativeSrc": "1113:21:4",
																"nodeType": "YulFunctionCall",
																"src": "1113:21:4"
															},
															"nativeSrc": "1113:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "1113:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1154:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1154:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1165:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1165:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1150:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1150:3:4"
																		},
																		"nativeSrc": "1150:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1150:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1170:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1170:2:4",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1143:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1143:6:4"
																},
																"nativeSrc": "1143:30:4",
																"nodeType": "YulFunctionCall",
																"src": "1143:30:4"
															},
															"nativeSrc": "1143:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "1143:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1193:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1193:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1204:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1204:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1189:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1189:3:4"
																		},
																		"nativeSrc": "1189:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1189:18:4"
																	},
																	{
																		"hexValue": "596f75206d757374206265206e6f6d696e61746564206265666f726520796f75",
																		"kind": "string",
																		"nativeSrc": "1209:34:4",
																		"nodeType": "YulLiteral",
																		"src": "1209:34:4",
																		"type": "",
																		"value": "You must be nominated before you"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1182:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1182:6:4"
																},
																"nativeSrc": "1182:62:4",
																"nodeType": "YulFunctionCall",
																"src": "1182:62:4"
															},
															"nativeSrc": "1182:62:4",
															"nodeType": "YulExpressionStatement",
															"src": "1182:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1264:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1264:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1275:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1275:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1260:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1260:3:4"
																		},
																		"nativeSrc": "1260:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1260:18:4"
																	},
																	{
																		"hexValue": "2063616e20616363657074206f776e657273686970",
																		"kind": "string",
																		"nativeSrc": "1280:23:4",
																		"nodeType": "YulLiteral",
																		"src": "1280:23:4",
																		"type": "",
																		"value": " can accept ownership"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1253:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1253:6:4"
																},
																"nativeSrc": "1253:51:4",
																"nodeType": "YulFunctionCall",
																"src": "1253:51:4"
															},
															"nativeSrc": "1253:51:4",
															"nodeType": "YulExpressionStatement",
															"src": "1253:51:4"
														},
														{
															"nativeSrc": "1313:27:4",
															"nodeType": "YulAssignment",
															"src": "1313:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1325:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1325:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1336:3:4",
																		"nodeType": "YulLiteral",
																		"src": "1336:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1321:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1321:3:4"
																},
																"nativeSrc": "1321:19:4",
																"nodeType": "YulFunctionCall",
																"src": "1321:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1313:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1313:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "929:417:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1080:9:4",
														"nodeType": "YulTypedName",
														"src": "1080:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1094:4:4",
														"nodeType": "YulTypedName",
														"src": "1094:4:4",
														"type": ""
													}
												],
												"src": "929:417:4"
											},
											{
												"body": {
													"nativeSrc": "1480:175:4",
													"nodeType": "YulBlock",
													"src": "1480:175:4",
													"statements": [
														{
															"nativeSrc": "1490:26:4",
															"nodeType": "YulAssignment",
															"src": "1490:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1502:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1502:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1513:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1513:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1498:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1498:3:4"
																},
																"nativeSrc": "1498:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1498:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1490:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1490:4:4"
																}
															]
														},
														{
															"nativeSrc": "1525:29:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1525:29:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1543:3:4",
																				"nodeType": "YulLiteral",
																				"src": "1543:3:4",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1548:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1548:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1539:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1539:3:4"
																		},
																		"nativeSrc": "1539:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1539:11:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1535:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1535:3:4"
																},
																"nativeSrc": "1535:19:4",
																"nodeType": "YulFunctionCall",
																"src": "1535:19:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1529:2:4",
																	"nodeType": "YulTypedName",
																	"src": "1529:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1570:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1570:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1585:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1585:6:4"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "1593:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "1593:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1581:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1581:3:4"
																		},
																		"nativeSrc": "1581:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1581:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1563:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1563:6:4"
																},
																"nativeSrc": "1563:34:4",
																"nodeType": "YulFunctionCall",
																"src": "1563:34:4"
															},
															"nativeSrc": "1563:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "1563:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1617:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1617:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1628:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1628:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1613:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1613:3:4"
																		},
																		"nativeSrc": "1613:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1613:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "1637:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1637:6:4"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "1645:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "1645:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1633:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1633:3:4"
																		},
																		"nativeSrc": "1633:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1633:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1606:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1606:6:4"
																},
																"nativeSrc": "1606:43:4",
																"nodeType": "YulFunctionCall",
																"src": "1606:43:4"
															},
															"nativeSrc": "1606:43:4",
															"nodeType": "YulExpressionStatement",
															"src": "1606:43:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "1351:304:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1441:9:4",
														"nodeType": "YulTypedName",
														"src": "1441:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1452:6:4",
														"nodeType": "YulTypedName",
														"src": "1452:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1460:6:4",
														"nodeType": "YulTypedName",
														"src": "1460:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1471:4:4",
														"nodeType": "YulTypedName",
														"src": "1471:4:4",
														"type": ""
													}
												],
												"src": "1351:304:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"Only the contract owner may perf\")\n        mstore(add(headStart, 96), \"orm this action\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"You must be nominated before you\")\n        mstore(add(headStart, 96), \" can accept ownership\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061004a575f3560e01c80631627540c1461004e57806353a47bb71461006357806379ba5097146100925780638da5cb5b1461009a575b5f80fd5b61006161005c36600461025e565b6100ac565b005b600154610076906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b610061610176565b5f54610076906001600160a01b031681565b5f546001600160a01b031633146101225760405162461bcd60e51b815260206004820152602f60248201527f4f6e6c792074686520636f6e7472616374206f776e6572206d6179207065726660448201526e37b936903a3434b99030b1ba34b7b760891b60648201526084015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce229060200160405180910390a150565b6001546001600160a01b031633146101ee5760405162461bcd60e51b815260206004820152603560248201527f596f75206d757374206265206e6f6d696e61746564206265666f726520796f7560448201527402063616e20616363657074206f776e65727368697605c1b6064820152608401610119565b5f54600154604080516001600160a01b0393841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a1600180545f80546001600160a01b03199081166001600160a01b03841617909155169055565b5f6020828403121561026e575f80fd5b81356001600160a01b0381168114610284575f80fd5b939250505056fea26469706673582212208265f7858fc60f8e6942e4dfed19c1c706823449771948b616a6a866ad51e1bd64736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1627540C EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x53A47BB7 EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x92 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH2 0x5C CALLDATASIZE PUSH1 0x4 PUSH2 0x25E JUMP JUMPDEST PUSH2 0xAC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x76 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x176 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x76 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x122 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792074686520636F6E7472616374206F776E6572206D61792070657266 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x37B936903A3434B99030B1BA34B7B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206D757374206265206E6F6D696E61746564206265666F726520796F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x2063616E20616363657074206F776E65727368697 PUSH1 0x5C SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x119 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x284 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 PUSH6 0xF7858FC60F8E PUSH10 0x42E4DFED19C1C7068234 0x49 PUSH24 0x1948B616A6A866AD51E1BD64736F6C634300081500330000 ",
							"sourceMap": "117:920:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;388:138;;;;;;:::i;:::-;;:::i;:::-;;164:29;;;;;-1:-1:-1;;;;;164:29:3;;;;;;-1:-1:-1;;;;;469:32:4;;;451:51;;439:2;424:18;164:29:3;;;;;;;532:266;;;:::i;138:20::-;;;;;-1:-1:-1;;;;;138:20:3;;;388:138;855:5;;-1:-1:-1;;;;;855:5:3;841:10;:19;833:79;;;;-1:-1:-1;;;833:79:3;;715:2:4;833:79:3;;;697:21:4;754:2;734:18;;;727:30;793:34;773:18;;;766:62;-1:-1:-1;;;844:18:4;;;837:45;899:19;;833:79:3;;;;;;;;;459:14:::1;:23:::0;;-1:-1:-1;;;;;;459:23:3::1;-1:-1:-1::0;;;;;459:23:3;::::1;::::0;;::::1;::::0;;;497:22:::1;::::0;451:51:4;;;497:22:3::1;::::0;439:2:4;424:18;497:22:3::1;;;;;;;388:138:::0;:::o;532:266::-;600:14;;-1:-1:-1;;;;;600:14:3;586:10;:28;578:94;;;;-1:-1:-1;;;578:94:3;;1131:2:4;578:94:3;;;1113:21:4;1170:2;1150:18;;;1143:30;1209:34;1189:18;;;1182:62;-1:-1:-1;;;1260:18:4;;;1253:51;1321:19;;578:94:3;929:417:4;578:94:3;700:5;;;707:14;687:35;;;-1:-1:-1;;;;;700:5:3;;;1563:34:4;;707:14:3;;;;1628:2:4;1613:18;;1606:43;687:35:3;;1498:18:4;687:35:3;;;;;;;740:14;;;;732:22;;-1:-1:-1;;;;;;732:22:3;;;-1:-1:-1;;;;;740:14:3;;732:22;;;;764:27;;;532:266::o;14:286:4:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:4;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:4:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "141000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptOwnership()": "56345",
								"nominateNewOwner(address)": "27704",
								"nominatedOwner()": "2324",
								"owner()": "2367"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 117,
									"end": 1037,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 117,
									"end": 1037,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 117,
									"end": 1037,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 200,
									"end": 382,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 382,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 200,
									"end": 382,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 200,
									"end": 382,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 200,
									"end": 382,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 200,
									"end": 382,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 200,
									"end": 382,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 200,
									"end": 382,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 254,
									"end": 274,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 254,
									"end": 274,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 246,
									"end": 304,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 246,
									"end": 304,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 246,
									"end": 304,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 511,
									"end": 513,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 246,
									"end": 304,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 246,
									"end": 304,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 493,
									"end": 514,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 550,
									"end": 552,
									"name": "PUSH",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 530,
									"end": 548,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 530,
									"end": 548,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 530,
									"end": 548,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 523,
									"end": 553,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 589,
									"end": 616,
									"name": "PUSH",
									"source": 4,
									"value": "4F776E657220616464726573732063616E6E6F74206265203000000000000000"
								},
								{
									"begin": 569,
									"end": 587,
									"name": "PUSH",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 569,
									"end": 587,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 569,
									"end": 587,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 562,
									"end": 617,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 634,
									"end": 652,
									"name": "PUSH",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 634,
									"end": 652,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 246,
									"end": 304,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 246,
									"end": 304,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 246,
									"end": 304,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 246,
									"end": 304,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 314,
									"end": 319,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 328,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 314,
									"end": 328,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 314,
									"end": 328,
									"name": "AND",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 314,
									"end": 328,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 314,
									"end": 328,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 314,
									"end": 328,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 314,
									"end": 328,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 314,
									"end": 328,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 314,
									"end": 328,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 314,
									"end": 328,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 343,
									"end": 375,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 343,
									"end": 375,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 343,
									"end": 375,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 875,
									"end": 909,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 875,
									"end": 909,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 875,
									"end": 909,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 940,
									"end": 942,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 925,
									"end": 943,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 925,
									"end": 943,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 918,
									"end": 961,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 918,
									"end": 961,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 918,
									"end": 961,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 918,
									"end": 961,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 343,
									"end": 375,
									"name": "PUSH",
									"source": 3,
									"value": "B532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C"
								},
								{
									"begin": 343,
									"end": 375,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 810,
									"end": 828,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 343,
									"end": 375,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 343,
									"end": 375,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 343,
									"end": 375,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 343,
									"end": 375,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 343,
									"end": 375,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 343,
									"end": 375,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 343,
									"end": 375,
									"name": "LOG1",
									"source": 3
								},
								{
									"begin": 200,
									"end": 382,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 117,
									"end": 1037,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 117,
									"end": 1037,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 663,
									"end": 967,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 663,
									"end": 967,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 117,
									"end": 1037,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 1037,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 117,
									"end": 1037,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 1037,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 1037,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 117,
									"end": 1037,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 1037,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208265f7858fc60f8e6942e4dfed19c1c706823449771948b616a6a866ad51e1bd64736f6c63430008150033",
									".code": [
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "1627540C"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "53A47BB7"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "79BA5097"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 117,
											"end": 1037,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 388,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 388,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 388,
											"end": 526,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 388,
											"end": 526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 388,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 388,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 388,
											"end": 526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 388,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 388,
											"end": 526,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 164,
											"end": 193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 164,
											"end": 193,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 164,
											"end": 193,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 164,
											"end": 193,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 164,
											"end": 193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 164,
											"end": 193,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 469,
											"end": 501,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 469,
											"end": 501,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 469,
											"end": 501,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 451,
											"end": 502,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 451,
											"end": 502,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 164,
											"end": 193,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 164,
											"end": 193,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 164,
											"end": 193,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 532,
											"end": 798,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 532,
											"end": 798,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 532,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 532,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 532,
											"end": 798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 138,
											"end": 158,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 138,
											"end": 158,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 138,
											"end": 158,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 158,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 138,
											"end": 158,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 138,
											"end": 158,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 138,
											"end": 158,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 138,
											"end": 158,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 138,
											"end": 158,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 388,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 388,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 855,
											"end": 860,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 855,
											"end": 860,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 855,
											"end": 860,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 841,
											"end": 851,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 841,
											"end": 860,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 833,
											"end": 912,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 833,
											"end": 912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 833,
											"end": 912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 833,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 833,
											"end": 912,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 697,
											"end": 718,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 754,
											"end": 756,
											"name": "PUSH",
											"source": 4,
											"value": "2F"
										},
										{
											"begin": 734,
											"end": 752,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 734,
											"end": 752,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 734,
											"end": 752,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 727,
											"end": 757,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 793,
											"end": 827,
											"name": "PUSH",
											"source": 4,
											"value": "4F6E6C792074686520636F6E7472616374206F776E6572206D61792070657266"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 773,
											"end": 791,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 766,
											"end": 828,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37B936903A3434B99030B1BA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 844,
											"end": 862,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 844,
											"end": 862,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 844,
											"end": 862,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 837,
											"end": 882,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 899,
											"end": 918,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 899,
											"end": 918,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 833,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 833,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 833,
											"end": 912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 833,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 833,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 459,
											"end": 473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 459,
											"end": 482,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 459,
											"end": 482,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 459,
											"end": 482,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 459,
											"end": 482,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 459,
											"end": 482,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 459,
											"end": 482,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 459,
											"end": 482,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 459,
											"end": 482,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 459,
											"end": 482,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 459,
											"end": 482,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 459,
											"end": 482,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 497,
											"end": 519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 519,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 451,
											"end": 502,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 451,
											"end": 502,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 451,
											"end": 502,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 497,
											"end": 519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22"
										},
										{
											"begin": 497,
											"end": 519,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 497,
											"end": 519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 519,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 497,
											"end": 519,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 497,
											"end": 519,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 497,
											"end": 519,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 497,
											"end": 519,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 497,
											"end": 519,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 388,
											"end": 526,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 388,
											"end": 526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 532,
											"end": 798,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 532,
											"end": 798,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 600,
											"end": 614,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 600,
											"end": 614,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 600,
											"end": 614,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 586,
											"end": 596,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 586,
											"end": 614,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 578,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 578,
											"end": 672,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 578,
											"end": 672,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 578,
											"end": 672,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 578,
											"end": 672,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 578,
											"end": 672,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1133,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 578,
											"end": 672,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 578,
											"end": 672,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 578,
											"end": 672,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1113,
											"end": 1134,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1170,
											"end": 1172,
											"name": "PUSH",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1150,
											"end": 1168,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1150,
											"end": 1168,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1150,
											"end": 1168,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1173,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1243,
											"name": "PUSH",
											"source": 4,
											"value": "596F75206D757374206265206E6F6D696E61746564206265666F726520796F75"
										},
										{
											"begin": 1189,
											"end": 1207,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1189,
											"end": 1207,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1189,
											"end": 1207,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1244,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2063616E20616363657074206F776E65727368697"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1253,
											"end": 1304,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 1340,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1321,
											"end": 1340,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 578,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 929,
											"end": 1346,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 578,
											"end": 672,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 578,
											"end": 672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 700,
											"end": 705,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 700,
											"end": 705,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 700,
											"end": 705,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 707,
											"end": 721,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 687,
											"end": 722,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 687,
											"end": 722,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 687,
											"end": 722,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 700,
											"end": 705,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 700,
											"end": 705,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 700,
											"end": 705,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1597,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1563,
											"end": 1597,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 707,
											"end": 721,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 707,
											"end": 721,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 707,
											"end": 721,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 707,
											"end": 721,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1630,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1613,
											"end": 1631,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 1631,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1649,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 687,
											"end": 722,
											"name": "PUSH",
											"source": 3,
											"value": "B532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C"
										},
										{
											"begin": 687,
											"end": 722,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 687,
											"end": 722,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 687,
											"end": 722,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 687,
											"end": 722,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 687,
											"end": 722,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 687,
											"end": 722,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 687,
											"end": 722,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 687,
											"end": 722,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 740,
											"end": 754,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 740,
											"end": 754,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 740,
											"end": 754,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 740,
											"end": 754,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 754,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 732,
											"end": 754,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 732,
											"end": 754,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 732,
											"end": 754,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 732,
											"end": 754,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 740,
											"end": 754,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 740,
											"end": 754,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 732,
											"end": 754,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 732,
											"end": 754,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 732,
											"end": 754,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 732,
											"end": 754,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 764,
											"end": 791,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 764,
											"end": 791,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 764,
											"end": 791,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 532,
											"end": 798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"NewFraxProtocol/contracts/Math/SafeMath.sol",
								"NewFraxProtocol/contracts/Oracle/AggregatorV3Interface.sol",
								"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol",
								"NewFraxProtocol/contracts/Staking/Owned.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"nominateNewOwner(address)": "1627540c",
							"nominatedOwner()": "53a47bb7",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerNominated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"nominateNewOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nominatedOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NewFraxProtocol/contracts/Staking/Owned.sol\":\"Owned\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"NewFraxProtocol/contracts/Staking/Owned.sol\":{\"keccak256\":\"0x89e1dde7e13d0109febf812e7d97dda7f24feb7cfe90239c0f7585d1143407d1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://917add49808f1df4025a7a33e8444661261ebf3ea9f02bcd44c698b1c1e4e7e6\",\"dweb:/ipfs/QmVSVA3swHsqEy5F2n8YBGB91cL66xVkJCezkjY9VAjnwE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 493,
								"contract": "NewFraxProtocol/contracts/Staking/Owned.sol:Owned",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 495,
								"contract": "NewFraxProtocol/contracts/Staking/Owned.sol:Owned",
								"label": "nominatedOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n --> NewFraxProtocol/contracts/Staking/Owned.sol:9:5:\n  |\n9 |     constructor (address _owner) public {\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 382,
					"file": "NewFraxProtocol/contracts/Staking/Owned.sol",
					"start": 200
				},
				"type": "Warning"
			}
		],
		"sources": {
			"NewFraxProtocol/contracts/Math/SafeMath.sol": {
				"ast": {
					"absolutePath": "NewFraxProtocol/contracts/Math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							195
						]
					},
					"id": 196,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "32:25:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "59:563:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 195,
							"linearizedBaseContracts": [
								195
							],
							"name": "SafeMath",
							"nameLocation": "631:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "935:109:0",
										"statements": [
											{
												"assignments": [
													13
												],
												"declarations": [
													{
														"constant": false,
														"id": 13,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "953:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 27,
														"src": "945:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 12,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "945:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 17,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 14,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "957:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 15,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "961:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "957:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "945:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 19,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "980:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 20,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "985:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "980:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "988:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 18,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "972:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "972:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "972:46:0"
											},
											{
												"expression": {
													"id": 25,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 13,
													"src": "1036:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 11,
												"id": 26,
												"nodeType": "Return",
												"src": "1029:8:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "646:217:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "877:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "889:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "881:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "900:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "892:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "880:22:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "926:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:0"
									},
									"scope": 195,
									"src": "868:176:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "1375:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 39,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "1396:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 40,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "1399:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1402:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 38,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															45,
															73
														],
														"referencedDeclaration": 73,
														"src": "1392:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1392:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 37,
												"id": 43,
												"nodeType": "Return",
												"src": "1385:50:0"
											}
										]
									},
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "1050:253:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 45,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1317:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1329:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1321:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1340:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1332:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1320:22:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1366:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1365:9:0"
									},
									"scope": 195,
									"src": "1308:134:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "1861:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 58,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "1879:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 59,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "1884:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1879:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 61,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "1887:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 57,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1871:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1871:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "1871:29:0"
											},
											{
												"assignments": [
													65
												],
												"declarations": [
													{
														"constant": false,
														"id": 65,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1918:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 72,
														"src": "1910:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 64,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1910:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 69,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 66,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "1922:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 67,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "1926:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1922:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1910:17:0"
											},
											{
												"expression": {
													"id": 70,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 65,
													"src": "1945:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 56,
												"id": 71,
												"nodeType": "Return",
												"src": "1938:8:0"
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1448:313:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow.\n _Available since v2.4.0._"
									},
									"id": 73,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1775:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1787:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1779:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1798:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1790:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1815:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1801:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 51,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1801:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:50:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1852:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1851:9:0"
									},
									"scope": 195,
									"src": "1766:187:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "2260:392:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 83,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "2492:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2497:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2492:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 89,
												"nodeType": "IfStatement",
												"src": "2488:45:0",
												"trueBody": {
													"id": 88,
													"nodeType": "Block",
													"src": "2500:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2521:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 82,
															"id": 87,
															"nodeType": "Return",
															"src": "2514:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													91
												],
												"declarations": [
													{
														"constant": false,
														"id": 91,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2551:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 107,
														"src": "2543:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 90,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2543:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 95,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 92,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "2555:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 93,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 78,
														"src": "2559:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2555:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2543:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 97,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "2578:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 98,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 76,
																	"src": "2582:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2578:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 100,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "2587:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2578:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2590:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 96,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2570:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2570:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2570:56:0"
											},
											{
												"expression": {
													"id": 105,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 91,
													"src": "2644:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 82,
												"id": 106,
												"nodeType": "Return",
												"src": "2637:8:0"
											}
										]
									},
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "1959:229:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "2202:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2214:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "2206:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2225:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "2217:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2217:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2205:22:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "2251:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 80,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2251:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2250:9:0"
									},
									"scope": 195,
									"src": "2193:459:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "3174:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 119,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "3195:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 120,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "3198:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3201:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 118,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															125,
															153
														],
														"referencedDeclaration": 153,
														"src": "3191:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3191:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 117,
												"id": 123,
												"nodeType": "Return",
												"src": "3184:46:0"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "2658:444:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3116:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3128:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "3120:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3120:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3139:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "3131:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3131:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3119:22:0"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "3165:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:9:0"
									},
									"scope": 195,
									"src": "3107:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "3847:243:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 138,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "3931:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3935:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3931:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 141,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "3938:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 137,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3923:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3923:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "3923:28:0"
											},
											{
												"assignments": [
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "3969:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "3961:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 144,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3961:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 149,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 146,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "3973:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 147,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "3977:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3973:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3961:17:0"
											},
											{
												"expression": {
													"id": 150,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 145,
													"src": "4082:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 136,
												"id": 151,
												"nodeType": "Return",
												"src": "4075:8:0"
											}
										]
									},
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "3243:504:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3761:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3773:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3765:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3784:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3776:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3776:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3801:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3787:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 131,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3787:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3764:50:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3838:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3838:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3837:9:0"
									},
									"scope": 195,
									"src": "3752:338:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "4601:61:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 164,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "4622:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 165,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "4625:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4628:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 163,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															170,
															194
														],
														"referencedDeclaration": 194,
														"src": "4618:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 162,
												"id": 168,
												"nodeType": "Return",
												"src": "4611:44:0"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "4096:433:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4543:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4555:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4547:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4566:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4558:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4546:22:0"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4592:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4592:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4591:9:0"
									},
									"scope": 195,
									"src": "4534:128:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "5261:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 183,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 175,
																"src": "5279:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5284:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5279:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 186,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "5287:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 182,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5271:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5271:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5271:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 189,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "5317:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 190,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "5321:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5317:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 181,
												"id": 192,
												"nodeType": "Return",
												"src": "5310:12:0"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "4668:493:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "5175:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5187:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "5179:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5179:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5198:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "5190:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5190:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5215:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "5201:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5201:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5178:50:0"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "5252:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5252:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5251:9:0"
									},
									"scope": 195,
									"src": "5166:163:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 196,
							"src": "623:4708:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:5299:0"
				},
				"id": 0
			},
			"NewFraxProtocol/contracts/Oracle/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "NewFraxProtocol/contracts/Oracle/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							241
						]
					},
					"id": 242,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 197,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 241,
							"linearizedBaseContracts": [
								241
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "68:21:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "104:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "112:2:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "138:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 199,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "138:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "137:7:1"
									},
									"scope": 241,
									"src": "95:50:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "157:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "168:2:1"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "194:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 204,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "194:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "193:15:1"
									},
									"scope": 241,
									"src": "148:61:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "254:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:1"
									},
									"scope": 241,
									"src": "212:51:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "487:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "507:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "500:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 213,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "500:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:17:1"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "566:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "559:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 216,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "559:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "588:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "581:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 218,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "581:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "610:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "602:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "635:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "627:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "659:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "652:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 224,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "652:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "551:129:1"
									},
									"scope": 241,
									"src": "478:203:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 240,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "693:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "708:2:1"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "760:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "753:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 229,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "753:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "782:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "775:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 231,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "775:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "804:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "796:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "829:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "821:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "853:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "846:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 237,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "846:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:129:1"
									},
									"scope": 241,
									"src": "684:191:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 242,
							"src": "58:820:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:846:1"
				},
				"id": 1
			},
			"NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol": {
				"ast": {
					"absolutePath": "NewFraxProtocol/contracts/Oracle/FXSOracleWrapper.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							241
						],
						"FXSOracleWrapper": [
							489
						],
						"Owned": [
							590
						],
						"SafeMath": [
							195
						]
					},
					"id": 490,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 243,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "45:25:2"
						},
						{
							"absolutePath": "NewFraxProtocol/contracts/Math/SafeMath.sol",
							"file": "../Math/SafeMath.sol",
							"id": 244,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 490,
							"sourceUnit": 196,
							"src": "1167:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "NewFraxProtocol/contracts/Oracle/AggregatorV3Interface.sol",
							"file": "./AggregatorV3Interface.sol",
							"id": 245,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 490,
							"sourceUnit": 242,
							"src": "1198:37:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "NewFraxProtocol/contracts/Staking/Owned.sol",
							"file": "../Staking/Owned.sol",
							"id": 246,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 490,
							"sourceUnit": 591,
							"src": "1236:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 247,
										"name": "Owned",
										"nameLocations": [
											"1297:5:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 590,
										"src": "1297:5:2"
									},
									"id": 248,
									"nodeType": "InheritanceSpecifier",
									"src": "1297:5:2"
								}
							],
							"canonicalName": "FXSOracleWrapper",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 489,
							"linearizedBaseContracts": [
								489,
								590
							],
							"name": "FXSOracleWrapper",
							"nameLocation": "1277:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 251,
									"libraryName": {
										"id": 249,
										"name": "SafeMath",
										"nameLocations": [
											"1315:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 195,
										"src": "1315:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "1309:27:2",
									"typeName": {
										"id": 250,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1328:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 254,
									"mutability": "mutable",
									"name": "priceFeedFXSUSD",
									"nameLocation": "1372:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 489,
									"src": "1342:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 253,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 252,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"1342:21:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 241,
											"src": "1342:21:2"
										},
										"referencedDeclaration": 241,
										"src": "1342:21:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 257,
									"mutability": "mutable",
									"name": "priceFeedETHUSD",
									"nameLocation": "1423:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 489,
									"src": "1393:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 256,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 255,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"1393:21:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 241,
											"src": "1393:21:2"
										},
										"referencedDeclaration": 241,
										"src": "1393:21:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "d6c6c4ac",
									"id": 259,
									"mutability": "mutable",
									"name": "chainlink_fxs_usd_decimals",
									"nameLocation": "1460:26:2",
									"nodeType": "VariableDeclaration",
									"scope": 489,
									"src": "1445:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 258,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1445:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "753b5f8a",
									"id": 261,
									"mutability": "mutable",
									"name": "chainlink_eth_usd_decimals",
									"nameLocation": "1507:26:2",
									"nodeType": "VariableDeclaration",
									"scope": 489,
									"src": "1492:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 260,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1492:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "95082d25",
									"id": 264,
									"mutability": "mutable",
									"name": "PRICE_PRECISION",
									"nameLocation": "1555:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 489,
									"src": "1540:36:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 262,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1540:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "316536",
										"id": 263,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1573:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000_by_1",
											"typeString": "int_const 1000000"
										},
										"value": "1e6"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dc6663c7",
									"id": 266,
									"mutability": "mutable",
									"name": "timelock_address",
									"nameLocation": "1597:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 489,
									"src": "1582:31:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 265,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1582:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "1687:115:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 269,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1705:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1709:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1705:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 271,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 493,
																	"src": "1719:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1705:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 273,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1728:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1732:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1728:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 275,
																	"name": "timelock_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "1742:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1728:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1705:53:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206f776e6572206f722074696d656c6f636b",
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1760:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2341f105161714f01185492f4233d98f530a1e8435cfd3bb617e411e8f94580d",
																"typeString": "literal_string \"Not owner or timelock\""
															},
															"value": "Not owner or timelock"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2341f105161714f01185492f4233d98f530a1e8435cfd3bb617e411e8f94580d",
																"typeString": "literal_string \"Not owner or timelock\""
															}
														],
														"id": 268,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1697:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1697:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "1697:87:2"
											},
											{
												"id": 281,
												"nodeType": "PlaceholderStatement",
												"src": "1794:1:2"
											}
										]
									},
									"id": 283,
									"name": "onlyByOwnGov",
									"nameLocation": "1672:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1684:2:2"
									},
									"src": "1663:139:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 321,
										"nodeType": "Block",
										"src": "1965:409:2",
										"statements": [
											{
												"expression": {
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 293,
														"name": "timelock_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "1975:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 294,
														"name": "_timelock_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "1994:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1975:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "1975:36:2"
											},
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 297,
														"name": "priceFeedFXSUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "2041:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307837346443626438623231323834333742373842373764413644333837623841423045356434414362",
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2081:42:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x74dCbd8b2128437B78B77dA6D387b8AB0E5d4ACb"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 298,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "2059:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$241_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 300,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2059:65:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "2041:83:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "2041:83:2"
											},
											{
												"expression": {
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 303,
														"name": "chainlink_fxs_usd_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "2134:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 304,
																"name": "priceFeedFXSUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "2163:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
																	"typeString": "contract AggregatorV3Interface"
																}
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2179:8:2",
															"memberName": "decimals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 202,
															"src": "2163:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																"typeString": "function () view external returns (uint8)"
															}
														},
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2163:26:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "2134:55:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "2134:55:2"
											},
											{
												"expression": {
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 309,
														"name": "priceFeedETHUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "2219:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307863443241313139624431463744463935643730364445364632303537664444343541303530334532",
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2259:42:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0xcD2A119bD1F7DF95d706DE6F2057fDD45A0503E2"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 310,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "2237:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$241_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 312,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2237:65:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "2219:83:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 314,
												"nodeType": "ExpressionStatement",
												"src": "2219:83:2"
											},
											{
												"expression": {
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 315,
														"name": "chainlink_eth_usd_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "2312:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 316,
																"name": "priceFeedETHUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 257,
																"src": "2341:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
																	"typeString": "contract AggregatorV3Interface"
																}
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2357:8:2",
															"memberName": "decimals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 202,
															"src": "2341:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																"typeString": "function () view external returns (uint8)"
															}
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2341:26:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "2312:55:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 320,
												"nodeType": "ExpressionStatement",
												"src": "2312:55:2"
											}
										]
									},
									"id": 322,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 290,
													"name": "_creator_address",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 285,
													"src": "1947:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 291,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 289,
												"name": "Owned",
												"nameLocations": [
													"1941:5:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 590,
												"src": "1941:5:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1941:23:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "_creator_address",
												"nameLocation": "1883:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "1875:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1875:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "_timelock_address",
												"nameLocation": "1917:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "1909:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1909:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1865:75:2"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1965:0:2"
									},
									"scope": 489,
									"src": "1853:521:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "2472:319:2",
										"statements": [
											{
												"assignments": [
													328,
													330,
													null,
													332,
													334
												],
												"declarations": [
													{
														"constant": false,
														"id": 328,
														"mutability": "mutable",
														"name": "roundID",
														"nameLocation": "2490:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 367,
														"src": "2483:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														},
														"typeName": {
															"id": 327,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "2483:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint80",
																"typeString": "uint80"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 330,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "2503:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 367,
														"src": "2499:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 329,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "2499:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													{
														"constant": false,
														"id": 332,
														"mutability": "mutable",
														"name": "updatedAt",
														"nameLocation": "2520:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 367,
														"src": "2512:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 331,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2512:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 334,
														"mutability": "mutable",
														"name": "answeredInRound",
														"nameLocation": "2538:15:2",
														"nodeType": "VariableDeclaration",
														"scope": 367,
														"src": "2531:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														},
														"typeName": {
															"id": 333,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "2531:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint80",
																"typeString": "uint80"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 338,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 335,
															"name": "priceFeedFXSUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "2557:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2573:15:2",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 240,
														"src": "2557:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2557:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2482:108:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 340,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 330,
																		"src": "2608:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2617:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "2608:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 343,
																		"name": "updatedAt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 332,
																		"src": "2622:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2634:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "2622:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2608:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint80",
																	"typeString": "uint80"
																},
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 347,
																	"name": "answeredInRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "2639:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint80",
																		"typeString": "uint80"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 348,
																	"name": "roundID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "2658:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint80",
																		"typeString": "uint80"
																	}
																},
																"src": "2639:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2608:57:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420636861696e6c696e6b207072696365",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2667:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b838eb2b03d57c64344c196649920d623fd5c75f9bcd1c0173705b1e20f4783c",
																"typeString": "literal_string \"Invalid chainlink price\""
															},
															"value": "Invalid chainlink price"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b838eb2b03d57c64344c196649920d623fd5c75f9bcd1c0173705b1e20f4783c",
																"typeString": "literal_string \"Invalid chainlink price\""
															}
														],
														"id": 339,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2600:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2600:93:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "2600:93:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2751:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"id": 363,
																"name": "chainlink_fxs_usd_decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 259,
																"src": "2757:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2751:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 359,
																	"name": "PRICE_PRECISION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 264,
																	"src": "2730:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 356,
																			"name": "price",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 330,
																			"src": "2719:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2711:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 354,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "2711:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2711:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2726:3:2",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 108,
																"src": "2711:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2711:35:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2747:3:2",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 125,
														"src": "2711:39:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2711:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 326,
												"id": 366,
												"nodeType": "Return",
												"src": "2704:80:2"
											}
										]
									},
									"functionSelector": "88e5a491",
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFXSPrice",
									"nameLocation": "2428:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2439:2:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "2463:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2463:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2462:9:2"
									},
									"scope": 489,
									"src": "2419:372:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "2850:327:2",
										"statements": [
											{
												"assignments": [
													374,
													376,
													null,
													378,
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 374,
														"mutability": "mutable",
														"name": "roundID",
														"nameLocation": "2868:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 413,
														"src": "2861:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														},
														"typeName": {
															"id": 373,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "2861:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint80",
																"typeString": "uint80"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "2881:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 413,
														"src": "2877:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 375,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "2877:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													{
														"constant": false,
														"id": 378,
														"mutability": "mutable",
														"name": "updatedAt",
														"nameLocation": "2898:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 413,
														"src": "2890:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 377,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2890:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 380,
														"mutability": "mutable",
														"name": "answeredInRound",
														"nameLocation": "2916:15:2",
														"nodeType": "VariableDeclaration",
														"scope": 413,
														"src": "2909:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														},
														"typeName": {
															"id": 379,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "2909:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint80",
																"typeString": "uint80"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 384,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 381,
															"name": "priceFeedETHUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "2935:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2951:15:2",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 240,
														"src": "2935:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2935:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2860:108:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 386,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "2986:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2995:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "2986:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 389,
																		"name": "updatedAt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "3000:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3012:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "3000:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2986:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint80",
																	"typeString": "uint80"
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 393,
																	"name": "answeredInRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "3017:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint80",
																		"typeString": "uint80"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 394,
																	"name": "roundID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "3036:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint80",
																		"typeString": "uint80"
																	}
																},
																"src": "3017:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2986:57:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420636861696e6c696e6b207072696365",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3045:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b838eb2b03d57c64344c196649920d623fd5c75f9bcd1c0173705b1e20f4783c",
																"typeString": "literal_string \"Invalid chainlink price\""
															},
															"value": "Invalid chainlink price"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b838eb2b03d57c64344c196649920d623fd5c75f9bcd1c0173705b1e20f4783c",
																"typeString": "literal_string \"Invalid chainlink price\""
															}
														],
														"id": 385,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2978:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2978:93:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "2978:93:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3137:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"id": 409,
																"name": "chainlink_eth_usd_decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 261,
																"src": "3143:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3137:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 405,
																	"name": "PRICE_PRECISION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 264,
																	"src": "3116:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 402,
																			"name": "price",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 376,
																			"src": "3105:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3097:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 400,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3097:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3097:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3112:3:2",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 108,
																"src": "3097:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3097:35:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3133:3:2",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 125,
														"src": "3097:39:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3097:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 372,
												"id": 412,
												"nodeType": "Return",
												"src": "3090:80:2"
											}
										]
									},
									"functionSelector": "a607a8d9",
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getETHPrice",
									"nameLocation": "2806:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2817:2:2"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "2841:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2841:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2840:9:2"
									},
									"scope": 489,
									"src": "2797:380:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "3442:341:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 424,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "3533:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "307834323030303030303030303030303030303030303030303030303030303030303030303030303036",
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3542:42:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x4200000000000000000000000000000000000006"
															},
															"src": "3533:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d7573742075736520776574682061646472657373",
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3586:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8f7cea8b044c17561008c31ba3e3f1e1850745f95f81afb164efa71262c8a172",
																"typeString": "literal_string \"must use weth address\""
															},
															"value": "must use weth address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8f7cea8b044c17561008c31ba3e3f1e1850745f95f81afb164efa71262c8a172",
																"typeString": "literal_string \"must use weth address\""
															}
														],
														"id": 423,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3525:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3525:85:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "3525:85:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 431,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "3628:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "316536",
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3640:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000_by_1",
																	"typeString": "int_const 1000000"
																},
																"value": "1e6"
															},
															"src": "3628:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d7573742063616c6c207769746820316536",
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3645:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7cfd4f35ab8fcb6190c3524b53b79ab146a9c0a4fb320fe337eb730f1272bb12",
																"typeString": "literal_string \"must call with 1e6\""
															},
															"value": "must call with 1e6"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7cfd4f35ab8fcb6190c3524b53b79ab146a9c0a4fb320fe337eb730f1272bb12",
																"typeString": "literal_string \"must call with 1e6\""
															}
														],
														"id": 430,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3620:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3620:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "3620:46:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 443,
																"name": "getFXSPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "3762:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3762:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 440,
																	"name": "PRICE_PRECISION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 264,
																	"src": "3741:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 437,
																		"name": "getETHPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 414,
																		"src": "3723:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3723:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3737:3:2",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 108,
																"src": "3723:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3723:34:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3758:3:2",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 125,
														"src": "3723:38:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3723:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 422,
												"id": 446,
												"nodeType": "Return",
												"src": "3716:60:2"
											}
										]
									},
									"functionSelector": "3ddac953",
									"id": 448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "consult",
									"nameLocation": "3365:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3381:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3373:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3373:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3393:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3388:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3388:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3372:30:2"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3431:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3426:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3426:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3425:16:2"
									},
									"scope": 489,
									"src": "3356:427:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "3934:148:2",
										"statements": [
											{
												"expression": {
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 455,
														"name": "priceFeedFXSUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "3944:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 457,
																"name": "_chainlink_fxs_usd_oracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "3984:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 456,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "3962:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$241_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3962:48:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "3944:66:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "3944:66:2"
											},
											{
												"expression": {
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 461,
														"name": "chainlink_fxs_usd_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "4020:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 462,
																"name": "priceFeedFXSUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "4049:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
																	"typeString": "contract AggregatorV3Interface"
																}
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4065:8:2",
															"memberName": "decimals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 202,
															"src": "4049:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																"typeString": "function () view external returns (uint8)"
															}
														},
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4049:26:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4020:55:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "4020:55:2"
											}
										]
									},
									"functionSelector": "a2dcb4f5",
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 453,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 452,
												"name": "onlyByOwnGov",
												"nameLocations": [
													"3921:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 283,
												"src": "3921:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3921:12:2"
										}
									],
									"name": "setChainlinkFXSUSDOracle",
									"nameLocation": "3852:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "_chainlink_fxs_usd_oracle",
												"nameLocation": "3885:25:2",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "3877:33:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3877:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3876:35:2"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3934:0:2"
									},
									"scope": 489,
									"src": "3843:239:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "4179:148:2",
										"statements": [
											{
												"expression": {
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 475,
														"name": "priceFeedETHUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "4189:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 477,
																"name": "_chainlink_eth_usd_oracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 470,
																"src": "4229:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 476,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "4207:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$241_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4207:48:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "4189:66:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "4189:66:2"
											},
											{
												"expression": {
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 481,
														"name": "chainlink_eth_usd_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "4265:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 482,
																"name": "priceFeedETHUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 257,
																"src": "4294:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AggregatorV3Interface_$241",
																	"typeString": "contract AggregatorV3Interface"
																}
															},
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4310:8:2",
															"memberName": "decimals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 202,
															"src": "4294:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																"typeString": "function () view external returns (uint8)"
															}
														},
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4294:26:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4265:55:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 486,
												"nodeType": "ExpressionStatement",
												"src": "4265:55:2"
											}
										]
									},
									"functionSelector": "8e409a79",
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 473,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 472,
												"name": "onlyByOwnGov",
												"nameLocations": [
													"4166:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 283,
												"src": "4166:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4166:12:2"
										}
									],
									"name": "setChainlinkETHUSDOracle",
									"nameLocation": "4097:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "_chainlink_eth_usd_oracle",
												"nameLocation": "4130:25:2",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "4122:33:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4122:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4121:35:2"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4179:0:2"
									},
									"scope": 489,
									"src": "4088:239:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 490,
							"src": "1268:3061:2",
							"usedErrors": [],
							"usedEvents": [
								583,
								589
							]
						}
					],
					"src": "45:4284:2"
				},
				"id": 2
			},
			"NewFraxProtocol/contracts/Staking/Owned.sol": {
				"ast": {
					"absolutePath": "NewFraxProtocol/contracts/Staking/Owned.sol",
					"exportedSymbols": {
						"Owned": [
							590
						]
					},
					"id": 591,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 491,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "45:25:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Owned",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 590,
							"linearizedBaseContracts": [
								590
							],
							"name": "Owned",
							"nameLocation": "126:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 493,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "153:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 590,
									"src": "138:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 492,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "138:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "53a47bb7",
									"id": 495,
									"mutability": "mutable",
									"name": "nominatedOwner",
									"nameLocation": "179:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 590,
									"src": "164:29:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 494,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "164:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "236:146:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 501,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "254:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "272:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "264:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 502,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "264:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "264:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "254:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e657220616464726573732063616e6e6f742062652030",
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "276:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cbb17bca9ae641614fb20d9f081dbba535c7a48d3eadd7b25242a97252df8c96",
																"typeString": "literal_string \"Owner address cannot be 0\""
															},
															"value": "Owner address cannot be 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cbb17bca9ae641614fb20d9f081dbba535c7a48d3eadd7b25242a97252df8c96",
																"typeString": "literal_string \"Owner address cannot be 0\""
															}
														],
														"id": 500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "246:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "246:58:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "246:58:3"
											},
											{
												"expression": {
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 510,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "314:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 511,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "322:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "314:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "314:14:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "364:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "356:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 515,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "356:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "356:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 519,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "368:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 514,
														"name": "OwnerChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "343:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "343:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "EmitStatement",
												"src": "338:37:3"
											}
										]
									},
									"id": 523,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "221:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "213:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "213:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "212:16:3"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "236:0:3"
									},
									"scope": 590,
									"src": "200:182:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "449:77:3",
										"statements": [
											{
												"expression": {
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 530,
														"name": "nominatedOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "459:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 531,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "476:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "459:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "459:23:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 535,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "512:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 534,
														"name": "OwnerNominated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "497:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "497:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "EmitStatement",
												"src": "492:27:3"
											}
										]
									},
									"functionSelector": "1627540c",
									"id": 539,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 528,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 527,
												"name": "onlyOwner",
												"nameLocations": [
													"439:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 579,
												"src": "439:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "439:9:3"
										}
									],
									"name": "nominateNewOwner",
									"nameLocation": "397:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "422:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "414:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:16:3"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "449:0:3"
									},
									"scope": 590,
									"src": "388:138:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "568:230:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 543,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "586:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "590:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "586:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 545,
																"name": "nominatedOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "600:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "586:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75206d757374206265206e6f6d696e61746564206265666f726520796f752063616e20616363657074206f776e657273686970",
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "616:55:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b",
																"typeString": "literal_string \"You must be nominated before you can accept ownership\""
															},
															"value": "You must be nominated before you can accept ownership"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b",
																"typeString": "literal_string \"You must be nominated before you can accept ownership\""
															}
														],
														"id": 542,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "578:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "578:94:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "578:94:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 551,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "700:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 552,
															"name": "nominatedOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "707:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 550,
														"name": "OwnerChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "687:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "687:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "EmitStatement",
												"src": "682:40:3"
											},
											{
												"expression": {
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 555,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "732:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 556,
														"name": "nominatedOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "740:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "732:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "732:22:3"
											},
											{
												"expression": {
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 559,
														"name": "nominatedOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "764:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "789:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "781:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 560,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "781:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 563,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "781:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "764:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "764:27:3"
											}
										]
									},
									"functionSelector": "79ba5097",
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "acceptOwnership",
									"nameLocation": "541:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "556:2:3"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "568:0:3"
									},
									"scope": 590,
									"src": "532:266:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "823:107:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 570,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "841:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "845:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "841:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 572,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "855:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "841:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792074686520636f6e7472616374206f776e6572206d617920706572666f726d207468697320616374696f6e",
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "862:49:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a",
																"typeString": "literal_string \"Only the contract owner may perform this action\""
															},
															"value": "Only the contract owner may perform this action"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a",
																"typeString": "literal_string \"Only the contract owner may perform this action\""
															}
														],
														"id": 569,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "833:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "833:79:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "ExpressionStatement",
												"src": "833:79:3"
											},
											{
												"id": 577,
												"nodeType": "PlaceholderStatement",
												"src": "922:1:3"
											}
										]
									},
									"id": 579,
									"name": "onlyOwner",
									"nameLocation": "813:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "823:0:3"
									},
									"src": "804:126:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce22",
									"id": 583,
									"name": "OwnerNominated",
									"nameLocation": "942:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"indexed": false,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "965:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "957:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "957:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "956:18:3"
									},
									"src": "936:39:3"
								},
								{
									"anonymous": false,
									"eventSelector": "b532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c",
									"id": 589,
									"name": "OwnerChanged",
									"nameLocation": "986:12:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldOwner",
												"nameLocation": "1007:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "999:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "999:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"indexed": false,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1025:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "1017:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1017:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "998:36:3"
									},
									"src": "980:55:3"
								}
							],
							"scope": 591,
							"src": "117:920:3",
							"usedErrors": [],
							"usedEvents": [
								583,
								589
							]
						}
					],
					"src": "45:992:3"
				},
				"id": 3
			}
		}
	}
}